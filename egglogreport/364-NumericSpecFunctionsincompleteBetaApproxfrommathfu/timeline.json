[{"compiler":[[20,10]],"method":["search"],"sampling":[[12,0.842438422027044,0.1565852538915351,0.0009763240814208984],[11,0.7941457736305892,0.20487790228798985,0.0009763240814208984],[10,0.7004873040132225,0.29853637190535665,0.0009763240814208984],[9,0.616584924980998,0.38243875093758106,0.0009763240814208984],[8,0.46048747561872005,0.538536200299859,0.0009763240814208984],[7,0.32780464366078377,0.6712190322577953,0.0009763240814208984],[6,0.12487795948982239,0.8741457164287567,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":47.18896484375,"type":"analyze"},{"outcomes":[["body",256,"valid",350.125,8256]],"time":357.601806640625,"type":"sample"},{"compiler":[[19,9]],"inputs":[["0","1"],["(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))","(/.f64 (*.f64 y x) (*.f64 (*.f64 (+.f64 y x) (+.f64 y x)) (+.f64 (+.f64 y x) 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))","(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","(/.f64 (*.f64 y x) (*.f64 (*.f64 (+.f64 y x) (+.f64 y x)) (+.f64 (+.f64 y x) 1)))","(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))"]],"symmetry":[[]],"time":62.0341796875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))","(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))"]],"time":20.89990234375,"type":"simplify"},{"compiler":[[34,15]],"time":0.385986328125,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","next",17.450408799674324],["(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))","fresh",20.747113564854292]],"compiler":[[17,10],[19,9],[17,10],[19,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[17.375526279912666],"time":1.324951171875,"type":"prune"},{"compiler":[[46,19]],"locations":[["(pow.f64 (+.f64 x y) -2)",0.01953125,true],["(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))",8.830127377964596,true],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))",10.62483824757239,true]],"time":8.944091796875,"type":"localize"},{"count":[[3,72]],"series":[["(pow.f64 (+.f64 x y) -2)","y","-inf",0.26904296875],["(pow.f64 (+.f64 x y) -2)","y","inf",0.373046875],["(pow.f64 (+.f64 x y) -2)","y","0",0.383056640625],["(pow.f64 (+.f64 x y) -2)","x","-inf",0.26708984375],["(pow.f64 (+.f64 x y) -2)","x","inf",0.949951171875],["(pow.f64 (+.f64 x y) -2)","x","0",0.406982421875],["(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))","y","-inf",0.281005859375],["(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))","y","inf",0.3349609375],["(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))","y","0",0.41015625],["(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))","x","-inf",0.2861328125],["(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))","x","inf",0.31787109375],["(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))","x","0",0.416015625],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","y","-inf",1.27197265625],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","y","inf",0.9521484375],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","y","0",1.802978515625],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","x","-inf",1.14892578125],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","x","inf",1.5771484375],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","x","0",1.758056640625]],"time":13.697021484375,"type":"series"},{"count":[[3,154]],"inputs":[["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","(/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))","(pow.f64 (+.f64 x y) -2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 0) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 2)) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (pow.f64 (+.f64 x y) -2)) (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (/.f64 1 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2)) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 (pow.f64 (+.f64 x y) -2) (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (-.f64 -1 (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x y) -2) (+.f64 1 (+.f64 x y))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2)) (*.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (+.f64 x y))) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (*.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2)) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 x y))) (/.f64 -1 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 x y))) (-.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (+.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 2)) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) -1) (-.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (*.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (+.f64 x y) -2)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 2))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (-.f64 -1 (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 x y))) 1) (-.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 x y))) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 x y))) 1) (-.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) -1) (-.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (+.f64 (pow.f64 (+.f64 x y) 3) 1)) (/.f64 1 (+.f64 1 (*.f64 (+.f64 x y) (+.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (+.f64 x y) -2)) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (-.f64 -1 (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 x y)) (/.f64 (pow.f64 (+.f64 x y) -2) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (/.f64 -1 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) (neg.f64 (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) (*.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 0) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) (*.f64 0 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (+.f64 x y))) (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x y)) (/.f64 -1 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 y (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 1 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (+.f64 x y))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (+.f64 x y)))) (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 (+.f64 x y))) (neg.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 1 (+.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))) (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (+.f64 1 (+.f64 x y))) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))) (/.f64 x (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (+.f64 x y))) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))) (cbrt.f64 (/.f64 1 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (-.f64 -1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) x) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (cbrt.f64 (pow.f64 (*.f64 x y) 2))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (+.f64 x y)))) (*.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (cbrt.f64 (neg.f64 (*.f64 x y)))) (cbrt.f64 (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2)) (cbrt.f64 (*.f64 x y))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 (+.f64 x y)))) y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 y (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2))) (cbrt.f64 (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 2))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (+.f64 (pow.f64 (+.f64 x y) 3) 1)) (/.f64 1 (+.f64 1 (*.f64 (+.f64 x y) (+.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 -1 (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 x y)) (/.f64 1 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (+.f64 1 (+.f64 x y))) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 x) (/.f64 y (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 y) (/.f64 x (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 1 (+.f64 x y))) (neg.f64 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (pow.f64 (+.f64 x y) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) 0) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x y) -2) (*.f64 0 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 x y) -2)) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2)) (cbrt.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 x y) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 x y) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x y) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x y) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (+.f64 x y) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 3))))))"]],"rules":[["egg-rr",22],["egg-rr",64],["egg-rr",68]],"time":36.39990234375,"type":"rewrite"},{"count":[[226,243]],"inputs":[["(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 4))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2))))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (pow.f64 y 4))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(/.f64 x (pow.f64 y 2))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (+.f64 (*.f64 2 x) (+.f64 1 x)))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4))))))","(/.f64 x (pow.f64 y 2))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)))) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x)))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4))))))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(/.f64 (*.f64 y x) (+.f64 1 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(/.f64 1 (pow.f64 y 2))","(+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -2 (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 y 3))) (*.f64 3 (/.f64 (pow.f64 x 2) (pow.f64 y 4)))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5))) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 y 3))) (*.f64 3 (/.f64 (pow.f64 x 2) (pow.f64 y 4))))))","(/.f64 1 (pow.f64 x 2))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (/.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))))))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 -4 (/.f64 (pow.f64 y 3) (pow.f64 x 5)))))))","(/.f64 1 (pow.f64 x 2))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (/.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))))))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 -4 (/.f64 (pow.f64 y 3) (pow.f64 x 5)))))))","(/.f64 1 (pow.f64 x 2))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (/.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 (pow.f64 y 2) (pow.f64 x 4)))))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 (pow.f64 y 2) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 3) (pow.f64 x 5))))))","(/.f64 1 (pow.f64 y 2))","(+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -2 (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3))))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3)))))))","(/.f64 1 (pow.f64 y 2))","(+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -2 (/.f64 x (pow.f64 y 3))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3))))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3)))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(-.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y)) (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(-.f64 (-.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y)) (*.f64 x x))) (*.f64 (fma.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) -2) (-.f64 (/.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y 3)) (*.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y))) (/.f64 (pow.f64 y -2) (+.f64 1 y))))) (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 4))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 (fma.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) -2) (-.f64 (/.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y 3)) (*.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y))) (/.f64 (pow.f64 y -2) (+.f64 1 y))))) (pow.f64 x 3))) (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y 3)) (neg.f64 (*.f64 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (+.f64 (*.f64 (fma.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) -2) (-.f64 (/.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y 3)) (*.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y))) (/.f64 (pow.f64 y -2) (+.f64 1 y))))) (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y)))) (*.f64 (+.f64 1 (*.f64 3 y)) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y))))))) (pow.f64 x 4))) (*.f64 (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y)) (*.f64 x x)))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(-.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 y)) y) (pow.f64 x 3)))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))","(-.f64 (-.f64 (/.f64 y (*.f64 x x)) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) y) (*.f64 y (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))) (pow.f64 x 4))) (/.f64 (*.f64 (+.f64 1 (*.f64 3 y)) y) (pow.f64 x 3)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 y (*.f64 x x)) (/.f64 (-.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) y) (*.f64 y (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))) (pow.f64 x 4))) (/.f64 (*.f64 (+.f64 1 (*.f64 3 y)) y) (pow.f64 x 3))) (/.f64 (-.f64 (fma.f64 (pow.f64 y 3) (+.f64 1 y) (*.f64 (neg.f64 (+.f64 1 (*.f64 3 y))) (-.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) y) (*.f64 y (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))))) (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) (*.f64 (+.f64 1 (*.f64 3 y)) y))) (pow.f64 x 5)))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(-.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 y)) y) (pow.f64 x 3)))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(+.f64 (-.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 y)) y) (pow.f64 x 3))) (/.f64 (*.f64 y (+.f64 (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y)) (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))) (pow.f64 x 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))))","(-.f64 (+.f64 (-.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 y)) y) (pow.f64 x 3))) (/.f64 (*.f64 y (+.f64 (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y)) (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))) (pow.f64 x 4))) (/.f64 (fma.f64 (*.f64 y (+.f64 (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y)) (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))) (+.f64 1 (*.f64 3 y)) (fma.f64 (pow.f64 y 3) (+.f64 1 y) (*.f64 (*.f64 (+.f64 1 (*.f64 3 y)) y) (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y))))) (pow.f64 x 5)))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(-.f64 (-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (pow.f64 (+.f64 1 x) -2) (pow.f64 x 3)) (fma.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) -2) (*.f64 (*.f64 (neg.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))) (/.f64 (pow.f64 x -2) (+.f64 1 x))))))) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2))))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (pow.f64 y 4))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(-.f64 (-.f64 (-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 1 x) -2) (pow.f64 x 3)) (neg.f64 (*.f64 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (+.f64 (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) (+.f64 (/.f64 (pow.f64 (+.f64 1 x) -2) (pow.f64 x 3)) (fma.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) -2) (*.f64 (*.f64 (neg.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))) (/.f64 (pow.f64 x -2) (+.f64 1 x)))))) (*.f64 (+.f64 1 (*.f64 3 x)) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))))) (pow.f64 y 4))) (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (pow.f64 (+.f64 1 x) -2) (pow.f64 x 3)) (fma.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) -2) (*.f64 (*.f64 (neg.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))) (/.f64 (pow.f64 x -2) (+.f64 1 x))))))) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(-.f64 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y 3)))","(+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4)))))","(-.f64 (-.f64 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y 3))) (/.f64 (-.f64 (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) x) (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 (+.f64 1 (*.f64 3 x)) x))) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (+.f64 (*.f64 2 x) (+.f64 1 x)))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4))))))","(-.f64 (-.f64 (-.f64 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y 3))) (/.f64 (-.f64 (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) x) (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 (+.f64 1 (*.f64 3 x)) x))) (pow.f64 y 4))) (/.f64 (-.f64 (fma.f64 (+.f64 1 x) (pow.f64 x 3) (*.f64 (neg.f64 (+.f64 1 (*.f64 3 x))) (-.f64 (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) x) (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 (+.f64 1 (*.f64 3 x)) x))))) (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) x))) (pow.f64 y 5)))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(-.f64 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y 3)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)))))","(+.f64 (+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 (+.f64 1 (*.f64 3 x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y 3)))) (/.f64 (*.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x) (pow.f64 y 4)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)))) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x)))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4))))))","(+.f64 (/.f64 (*.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x) (pow.f64 y 4)) (-.f64 (+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 (+.f64 1 (*.f64 3 x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y 3)))) (/.f64 (fma.f64 (+.f64 1 x) (pow.f64 x 3) (fma.f64 (+.f64 1 (*.f64 3 x)) (*.f64 x (+.f64 (*.f64 (+.f64 1 (*.f64 3 x)) (+.f64 1 (*.f64 3 x))) (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))))) (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x)))) (pow.f64 y 5))))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(-.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) -2)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (-.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) -2))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (-.f64 (-.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) -2))) (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(-.f64 y (/.f64 (*.f64 y (+.f64 1 y)) x))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 (-.f64 y (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(+.f64 (-.f64 y (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (-.f64 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)) (/.f64 (*.f64 y (+.f64 1 y)) x)))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(-.f64 y (/.f64 (*.f64 y (+.f64 1 y)) x))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 (-.f64 y (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(+.f64 (-.f64 y (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (-.f64 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)) (/.f64 (*.f64 y (+.f64 1 y)) x)))","(/.f64 (*.f64 y x) (+.f64 1 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(-.f64 (/.f64 (*.f64 y x) (+.f64 1 x)) (*.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))) (*.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","(-.f64 (-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))) (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (*.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) -2)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(-.f64 x (/.f64 (*.f64 (+.f64 1 x) x) y))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (-.f64 x (/.f64 (*.f64 (+.f64 1 x) x) y)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (-.f64 (-.f64 x (/.f64 (*.f64 (+.f64 1 x) x) y)) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(-.f64 x (/.f64 (*.f64 (+.f64 1 x) x) y))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (-.f64 x (/.f64 (*.f64 (+.f64 1 x) x) y)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (-.f64 (-.f64 x (/.f64 (*.f64 (+.f64 1 x) x) y)) (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))))","(/.f64 1 (pow.f64 y 2))","(pow.f64 y -2)","(+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -2 (/.f64 x (pow.f64 y 3))))","(+.f64 (pow.f64 y -2) (/.f64 (*.f64 -2 x) (pow.f64 y 3)))","(+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 y 3))) (*.f64 3 (/.f64 (pow.f64 x 2) (pow.f64 y 4)))))","(+.f64 (pow.f64 y -2) (fma.f64 -2 (/.f64 x (pow.f64 y 3)) (*.f64 3 (pow.f64 (/.f64 x (*.f64 y y)) 2))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5))) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 y 3))) (*.f64 3 (/.f64 (pow.f64 x 2) (pow.f64 y 4))))))","(fma.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5)) (+.f64 (pow.f64 y -2) (fma.f64 -2 (/.f64 x (pow.f64 y 3)) (*.f64 3 (pow.f64 (/.f64 x (*.f64 y y)) 2)))))","(/.f64 1 (pow.f64 x 2))","(pow.f64 x -2)","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (/.f64 1 (pow.f64 x 2)))","(fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))))))","(+.f64 (fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2)) (*.f64 3 (pow.f64 (/.f64 y (*.f64 x x)) 2)))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 -4 (/.f64 (pow.f64 y 3) (pow.f64 x 5)))))))","(+.f64 (fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2)) (fma.f64 3 (pow.f64 (/.f64 y (*.f64 x x)) 2) (/.f64 (*.f64 -4 (pow.f64 y 3)) (pow.f64 x 5))))","(/.f64 1 (pow.f64 x 2))","(pow.f64 x -2)","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (/.f64 1 (pow.f64 x 2)))","(fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))))))","(+.f64 (fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2)) (*.f64 3 (pow.f64 (/.f64 y (*.f64 x x)) 2)))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 4)) (*.f64 -4 (/.f64 (pow.f64 y 3) (pow.f64 x 5)))))))","(+.f64 (fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2)) (fma.f64 3 (pow.f64 (/.f64 y (*.f64 x x)) 2) (/.f64 (*.f64 -4 (pow.f64 y 3)) (pow.f64 x 5))))","(/.f64 1 (pow.f64 x 2))","(pow.f64 x -2)","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (/.f64 1 (pow.f64 x 2)))","(fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 (pow.f64 y 2) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2)) (*.f64 3 (pow.f64 (/.f64 y (*.f64 x x)) 2)))","(+.f64 (*.f64 -2 (/.f64 y (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 (pow.f64 y 2) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 3) (pow.f64 x 5))))))","(+.f64 (fma.f64 -2 (/.f64 y (pow.f64 x 3)) (pow.f64 x -2)) (fma.f64 3 (pow.f64 (/.f64 y (*.f64 x x)) 2) (/.f64 (*.f64 -4 (pow.f64 y 3)) (pow.f64 x 5))))","(/.f64 1 (pow.f64 y 2))","(pow.f64 y -2)","(+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -2 (/.f64 x (pow.f64 y 3))))","(+.f64 (pow.f64 y -2) (/.f64 (*.f64 -2 x) (pow.f64 y 3)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3))))))","(+.f64 (+.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (pow.f64 y -2)) (fma.f64 2 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 (*.f64 -2 x) (pow.f64 y 3))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3)))))))","(fma.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5)) (+.f64 (+.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (pow.f64 y -2)) (fma.f64 2 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 (*.f64 -2 x) (pow.f64 y 3)))))","(/.f64 1 (pow.f64 y 2))","(pow.f64 y -2)","(+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -2 (/.f64 x (pow.f64 y 3))))","(+.f64 (pow.f64 y -2) (/.f64 (*.f64 -2 x) (pow.f64 y 3)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3))))))","(+.f64 (+.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (pow.f64 y -2)) (fma.f64 2 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 (*.f64 -2 x) (pow.f64 y 3))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 4)) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 4))) (*.f64 -2 (/.f64 x (pow.f64 y 3)))))))","(fma.f64 -4 (/.f64 (pow.f64 x 3) (pow.f64 y 5)) (+.f64 (+.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (pow.f64 y -2)) (fma.f64 2 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 (*.f64 -2 x) (pow.f64 y 3)))))"]],"time":362.194091796875,"type":"simplify"},{"compiler":[[8012,4880]],"time":75.5419921875,"type":"eval"},{"alts":[["(/.f64 y (*.f64 (+.f64 1 x) x))","fresh",30.93937198591253],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","fresh",17.560817121256296],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","done",17.450408799674324],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","fresh",10.984266388236394],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","next",10.975790118699509],["(-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","fresh",37.547045016098146],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) 3)","fresh",17.59568070236005],["(/.f64 x (*.f64 y (+.f64 1 y)))","fresh",32.78662425251465]],"compiler":[[9,6],[27,17],[17,10],[27,17],[27,17],[30,21],[20,13],[9,6],[9,6],[27,17],[27,17],[27,17],[30,21],[20,13],[9,6]],"count":[[245,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[243,7],"picked":[1,1]}],"min-error":[4.851250607460832],"time":75.759033203125,"type":"prune"},{"compiler":[[103,57]],"locations":[["(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))",0.203125,true],["(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))",6.123709110110978,true],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))",10.62483824757239,true],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))",27.881882084719976,true]],"time":22.828857421875,"type":"localize"},{"count":[[4,64]],"series":[["(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","-inf",1.691162109375],["(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","inf",0.892822265625],["(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","0",1.166015625],["(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","-inf",0.60791015625],["(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","inf",0.800048828125],["(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","0",2.885986328125],["(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","x","-inf",0.243896484375],["(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","x","inf",0.232177734375],["(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","x","0",0.297119140625],["(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","y","-inf",0.244873046875],["(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","y","inf",0.257080078125],["(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","y","0",0.30712890625],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","y","-inf",0.677001953125],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","y","inf",0.64208984375],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","y","0",0.9560546875],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","x","-inf",0.656005859375],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","x","inf",0.629150390625],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","x","0",0.970947265625],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))","y","-inf",0.305908203125],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))","y","inf",0.318115234375],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))","y","0",1.15283203125],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))","x","-inf",0.321044921875],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))","x","inf",0.555908203125],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))","x","0",1.803955078125]],"time":19.1181640625,"type":"series"},{"count":[[4,168]],"inputs":[["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))","(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","(*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","(/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3) 0) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3) (*.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3) (*.f64 0 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1)) (cbrt.f64 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 4) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 4) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (-.f64 (+.f64 x y) -1) (+.f64 1 (pow.f64 (+.f64 x y) 3)))) (cbrt.f64 (fma.f64 (+.f64 x y) (-.f64 (+.f64 x y) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 1 (pow.f64 (+.f64 x y) 3)) 2)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x y) (-.f64 (+.f64 x y) 1) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 0) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))) (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (*.f64 (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 2/3) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) (*.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)) (/.f64 1 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))) (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))) (pow.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) x) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (neg.f64 x)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (pow.f64 (-.f64 (+.f64 x y) -1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) x) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2)) (-.f64 (+.f64 x y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (neg.f64 x)) (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (cbrt.f64 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2))) (neg.f64 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (neg.f64 x))) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))) (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))) (*.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (pow.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (/.f64 x (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 0) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) (*.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) (*.f64 0 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (*.f64 (pow.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) 2/3) (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (/.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (/.f64 x (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x y)) (/.f64 1 (neg.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 2/3) (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))))) (pow.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))) (pow.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (*.f64 (pow.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 2/3) (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (pow.f64 (-.f64 (+.f64 x y) -1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -1/3) (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -2)) (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 1 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))) (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (neg.f64 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))) (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))) (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) (/.f64 x (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x y) (neg.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (+.f64 x y) -1))) (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)) (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 0) (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) (*.f64 0 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))) (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -1/3)) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (/.f64 (pow.f64 y 2/3) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (pow.f64 (-.f64 (+.f64 x y) -1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (pow.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 2/3) (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -1/3) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (-.f64 (+.f64 x y) -1))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 (+.f64 x y) -1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (-.f64 (+.f64 x y) -1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (+.f64 x y) -1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 y (cbrt.f64 (neg.f64 (-.f64 (+.f64 x y) -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (-.f64 (+.f64 x y) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (/.f64 (pow.f64 y 3) (-.f64 (+.f64 x y) -1)) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",55],["egg-rr",45],["egg-rr",30]],"time":41.474853515625,"type":"rewrite"},{"count":[[232,268]],"inputs":[["(pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 (+.f64 2 (*.f64 2 y)) x))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 y) 2) 2)))) (pow.f64 x 2)))) (+.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 (+.f64 2 (*.f64 2 y)) x)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 y) 2) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 y) 2) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 10)) 1/9) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 2 (*.f64 2 y)) 2)))) (+.f64 (*.f64 2 y) 2))))) (pow.f64 x 3)))) (+.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 (+.f64 2 (*.f64 2 y)) x))))))","(pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 2 (*.f64 2 x)) y) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9))) (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 2 (*.f64 2 x)) y) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 y 2)))) (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 2 (*.f64 2 x)) y) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 10)) 1/9) (*.f64 (+.f64 (*.f64 2 x) 2) (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 x) 2) 3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 y 2)))) (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3))))","(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y))))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))))) (pow.f64 x 4))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 y) y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))))))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(/.f64 x (pow.f64 y 2))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (+.f64 1 (+.f64 (*.f64 2 x) x)))))) (pow.f64 y 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4))))))","(/.f64 x (pow.f64 y 2))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (+.f64 1 (+.f64 (*.f64 2 x) x))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4))))))","(/.f64 (*.f64 y x) (+.f64 1 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 y 3)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 y 3)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 4) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 13)) 1/9)))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/3)))) (pow.f64 x 3))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3)","(cbrt.f64 (pow.f64 (+.f64 1 y) 2))","(+.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 (+.f64 2 (*.f64 2 y)) x))))","(+.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 2)) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 4)) 1/9) (*.f64 (fma.f64 2 y 2) x))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 y) 2) 2)))) (pow.f64 x 2)))) (+.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 (+.f64 2 (*.f64 2 y)) x)))))","(fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 4))) (-.f64 1 (*.f64 (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 2)) 1/9)) (pow.f64 (fma.f64 2 y 2) 2)))) (*.f64 x x)) (+.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 2)) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 4)) 1/9) (*.f64 (fma.f64 2 y 2) x)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 y) 2) 2)))) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 y) 2) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 10)) 1/9) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 2 (*.f64 2 y)) 2)))) (+.f64 (*.f64 2 y) 2))))) (pow.f64 x 3)))) (+.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 (+.f64 2 (*.f64 2 y)) x))))))","(fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 4))) (-.f64 1 (*.f64 (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 2)) 1/9)) (pow.f64 (fma.f64 2 y 2) 2)))) (*.f64 x x)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 4))) (*.f64 (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 4))) (pow.f64 (fma.f64 2 y 2) 3)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 10)) 1/9) (*.f64 (-.f64 1 (*.f64 (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 2)) 1/9)) (pow.f64 (fma.f64 2 y 2) 2))) (fma.f64 2 y 2))))) (pow.f64 x 3))) (+.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 2)) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 4)) 1/9) (*.f64 (fma.f64 2 y 2) x))))))","(pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3)","(cbrt.f64 (pow.f64 (+.f64 1 x) 2))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 2 (*.f64 2 x)) y) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9))) (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 (fma.f64 2 x 2) y) (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) 1/9)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 2 (*.f64 2 x)) y) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 y 2)))) (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3)))","(fma.f64 1/3 (*.f64 (*.f64 (fma.f64 2 x 2) y) (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) 1/9)) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 4))) (*.f64 (-.f64 1 (*.f64 (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) 1/9)) (pow.f64 (fma.f64 2 x 2) 2))) (*.f64 y y))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 2 (*.f64 2 x)) y) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 10)) 1/9) (*.f64 (+.f64 (*.f64 2 x) 2) (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 x) 2) 3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (-.f64 1 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)))) (pow.f64 y 2)))) (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/3))))","(fma.f64 1/3 (*.f64 (*.f64 (fma.f64 2 x 2) y) (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) 1/9)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 4))) (*.f64 (pow.f64 y 3) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 10)) 1/9) (*.f64 (fma.f64 2 x 2) (-.f64 1 (*.f64 (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) 1/9)) (pow.f64 (fma.f64 2 x 2) 2))))) (*.f64 (*.f64 1/27 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)))) (pow.f64 (fma.f64 2 x 2) 3))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 4))) (*.f64 (-.f64 1 (*.f64 (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) 1/9)) (pow.f64 (fma.f64 2 x 2) 2))) (*.f64 y y))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))","(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (*.f64 x x))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (*.f64 x x))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (neg.f64 (*.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (*.f64 y y) (+.f64 1 y))))) (/.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) 2))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y))))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))))) (pow.f64 x 4))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (*.f64 x x))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (+.f64 (neg.f64 (*.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (*.f64 y y) (+.f64 1 y))))) (/.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) 2)))) (*.f64 (*.f64 y y) (+.f64 1 y)))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (+.f64 1 (fma.f64 2 y y))) (*.f64 (*.f64 y y) (+.f64 1 y)))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))))) (pow.f64 x 4))) (neg.f64 (*.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (*.f64 y y) (+.f64 1 y))))) (/.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) 2))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(+.f64 (/.f64 y (*.f64 x x)) (neg.f64 (/.f64 (*.f64 y (+.f64 1 (fma.f64 2 y y))) (pow.f64 x 3))))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y))))) (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (neg.f64 (/.f64 (*.f64 y (+.f64 1 (fma.f64 2 y y))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 y) y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (+.f64 1 (fma.f64 2 y y)) (+.f64 (neg.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y))))) (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))) (fma.f64 (pow.f64 y 3) (+.f64 1 y) (neg.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 (fma.f64 2 y (+.f64 1 y)) y))))) (pow.f64 x 5))) (+.f64 (/.f64 y (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y))))) (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (neg.f64 (/.f64 (*.f64 y (+.f64 1 (fma.f64 2 y y))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 y (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(+.f64 (/.f64 (*.f64 y (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) y) (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 y (*.f64 (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y)))) (+.f64 1 (fma.f64 2 y y))) (fma.f64 (pow.f64 y 3) (+.f64 1 y) (*.f64 (fma.f64 2 y (+.f64 1 y)) (*.f64 y (+.f64 (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y)))) (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (*.f64 x x)) (+.f64 (/.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y)))) (pow.f64 x 4)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) y) (pow.f64 x 3)))))))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 (neg.f64 (*.f64 y y)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 (neg.f64 (*.f64 y y)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (+.f64 (neg.f64 (*.f64 (pow.f64 y 3) (+.f64 (+.f64 (/.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) 2)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x))))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))))))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(+.f64 (*.f64 (neg.f64 (*.f64 y y)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (+.f64 (neg.f64 (*.f64 (pow.f64 y 3) (+.f64 (+.f64 (/.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) 2)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x))))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3))))) (+.f64 (neg.f64 (*.f64 (pow.f64 y 4) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x)))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (+.f64 (/.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) 2)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x))))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3))) (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x))) (*.f64 (+.f64 1 x) (*.f64 x x)))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3)))))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) x) (pow.f64 y 3))) (/.f64 x (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (*.f64 y y)) (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (*.f64 (fma.f64 2 x (+.f64 1 x)) x))) (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) x)) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (+.f64 1 (+.f64 (*.f64 2 x) x)))))) (pow.f64 y 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x))) x)) (fma.f64 (+.f64 1 x) (pow.f64 x 3) (neg.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) (*.f64 (+.f64 1 (fma.f64 2 x x)) x))) (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) x)) (+.f64 1 (fma.f64 2 x x)))))) (pow.f64 y 5))) (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (*.f64 (fma.f64 2 x (+.f64 1 x)) x))) (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) x)) (pow.f64 y 4))))))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) x) (pow.f64 y 3))) (/.f64 x (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (fma.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x (*.f64 (fma.f64 2 x (+.f64 1 x)) (*.f64 (+.f64 1 (fma.f64 2 x x)) x))) (pow.f64 y 4))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (+.f64 1 (+.f64 (*.f64 2 x) x))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) x) (pow.f64 y 3))) (+.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) (*.f64 (fma.f64 2 x (+.f64 1 x)) x) (fma.f64 (+.f64 1 x) (pow.f64 x 3) (*.f64 (fma.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x (*.f64 (fma.f64 2 x (+.f64 1 x)) (*.f64 (+.f64 1 (fma.f64 2 x x)) x))) (+.f64 1 (fma.f64 2 x x))))) (pow.f64 y 5))) (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (+.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (*.f64 (fma.f64 2 x (+.f64 1 x)) x)) (*.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x)) (pow.f64 y 4)))))","(/.f64 (*.f64 y x) (+.f64 1 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (neg.f64 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) y)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 16)) 1/9) (*.f64 y y)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) y))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 y 3)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y)))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 16)) 1/9) (*.f64 y y)) (fma.f64 1/3 (*.f64 (*.f64 (-.f64 (pow.f64 (+.f64 1 x) (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 35)) 1/9))) (pow.f64 y 3)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) y)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 y 3)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 (pow.f64 y 4) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 13)) 1/9)))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) y))))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 16)) 1/9) (*.f64 y y)) (fma.f64 1/3 (*.f64 (*.f64 (-.f64 (pow.f64 (+.f64 1 x) (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 35)) 1/9))) (pow.f64 y 3)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (*.f64 (pow.f64 y 4) (+.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) (fma.f64 -1/27 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 16))) (*.f64 -2/3 (*.f64 (-.f64 (pow.f64 (+.f64 1 x) (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 35)) 1/9))) (pow.f64 (pow.f64 (+.f64 1 x) (neg.f64 13)) 1/9))))))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) y))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) y)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 16)) 1/9) (*.f64 y x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y)))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 2)) (*.f64 (-.f64 (pow.f64 (+.f64 1 y) (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 35)) 1/9))) (*.f64 y (*.f64 x x)))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 16)) 1/9) (*.f64 y x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) y)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/3)))) (pow.f64 x 3))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) y))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 2)) (*.f64 y (*.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 13)) 1/9) (-.f64 (pow.f64 (+.f64 1 y) (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 35)) 1/9)))) (+.f64 (pow.f64 (+.f64 1 y) (neg.f64 4)) (*.f64 -1/27 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 16)))))) (pow.f64 x 3)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 2)) (*.f64 (-.f64 (pow.f64 (+.f64 1 y) (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 35)) 1/9))) (*.f64 y (*.f64 x x)))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) (neg.f64 16)) 1/9) (*.f64 y x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) y))))"]],"time":213.191162109375,"type":"simplify"},{"compiler":[[10910,7113]],"time":108.794921875,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","done",17.450408799674324],["(/.f64 y (*.f64 (+.f64 1 x) x))","fresh",30.93937198591253],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","next",10.984266388236394],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","done",10.975790118699509],["(-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","fresh",37.547045016098146],["(/.f64 x (*.f64 y (+.f64 1 y)))","fresh",32.78662425251465],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","fresh",17.560817121256296],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) 3)","fresh",17.59568070236005],["(*.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (*.f64 (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 2/3) (pow.f64 (+.f64 x y) -2)))","fresh",40.2968899898109],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))","fresh",19.016616864665664]],"compiler":[[17,10],[9,6],[27,17],[27,17],[30,21],[9,6],[27,17],[20,13],[30,17],[26,16],[9,6],[27,17],[30,21],[9,6],[27,17],[20,13],[30,17],[26,16]],"count":[[276,10]],"kept":[{"done":[1,1],"fresh":[6,4],"new":[268,4],"picked":[1,1]}],"min-error":[4.851183077979604],"time":88.06201171875,"type":"prune"},{"compiler":[[107,60]],"locations":[["(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))",2.589081212145984,true],["(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))",3.776687477289484,true],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))",10.62483824757239,true],["(cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))",27.881882084719976,false]],"time":23.9208984375,"type":"localize"},{"count":[[3,56]],"series":[["(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","-inf",0.18115234375],["(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","inf",0.18115234375],["(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","0",0.218017578125],["(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","-inf",0.183837890625],["(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","inf",0.2041015625],["(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","0",0.2099609375],["(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","x","-inf",2.656005859375],["(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","x","inf",2.613037109375],["(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","x","0",3.98291015625],["(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","y","-inf",2.175048828125],["(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","y","inf",2.490966796875],["(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","y","0",3.927001953125],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","y","-inf",0.338134765625],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","y","inf",0.3359375],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","y","0",0.4140625],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","x","-inf",0.324951171875],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","x","inf",0.35107421875],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","x","0",0.52099609375]],"time":21.80712890625,"type":"series"},{"count":[[3,219]],"inputs":[["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","(*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))","(/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 0) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (*.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (pow.f64 (+.f64 (+.f64 1 y) x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 y x))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 y x))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (+.f64 (+.f64 1 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 2/3) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) -1) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (*.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (pow.f64 (+.f64 x y) -2))) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (*.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (pow.f64 (+.f64 x y) -2))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 y x))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 1) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y x) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) (pow.f64 (+.f64 x y) -2)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (+.f64 x y) -2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y x) (pow.f64 (+.f64 x y) -2)) (+.f64 (+.f64 1 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) -1) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 y x))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (*.f64 y x))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 1) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) 1) (+.f64 (+.f64 1 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) -1) (neg.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (neg.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 0) (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (*.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (*.f64 0 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (/.f64 x (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3) (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (pow.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (cbrt.f64 y)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (*.f64 (pow.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (*.f64 (pow.f64 y 2/3) x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 x (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (neg.f64 (pow.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y x)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y x)) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (*.f64 y x))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3) (cbrt.f64 (*.f64 y x))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y x) -1) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) x) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) 1) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 x (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y x)) (pow.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) y) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3) y)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (pow.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3) y)) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y x)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y x)) 1) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) (cbrt.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) -1) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) 1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 y x) 3) (pow.f64 (+.f64 (+.f64 1 y) x) -2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 y x) 3) (pow.f64 (+.f64 (+.f64 1 y) x) -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 0) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) (*.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) (*.f64 0 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x)))) (neg.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (/.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (/.f64 y (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (/.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (pow.f64 (+.f64 (+.f64 1 y) x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3) (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (/.f64 y (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) (/.f64 1 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (*.f64 y x))) (*.f64 (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (*.f64 (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (*.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (*.f64 y x)) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (neg.f64 (*.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) 1) (*.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3))) (*.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) -1) (*.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) 1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4) (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) -1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (cbrt.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3) (neg.f64 (*.f64 y x))) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3) (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3) (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) y) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (pow.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y x)) (/.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 2/3) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (/.f64 y (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 y (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (/.f64 y (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 y (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) 1) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (+.f64 1 (pow.f64 (+.f64 x y) 3))) (/.f64 1 (fma.f64 (+.f64 x y) (-.f64 (+.f64 x y) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) -1) (neg.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) -1) (cbrt.f64 (neg.f64 (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (*.f64 y x)) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x)))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) 1) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x))) -1) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y x)) (neg.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3)) (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) 1) (neg.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 1 y) x) -1/3))) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y x) -1) (neg.f64 (+.f64 (+.f64 1 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y x) (cbrt.f64 (+.f64 (+.f64 1 y) x)))) (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 y x) (pow.f64 (+.f64 (+.f64 1 y) x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 1 y) x))))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (neg.f64 (pow.f64 (+.f64 (+.f64 1 y) x) 2/3))) (/.f64 y (cbrt.f64 (+.f64 (+.f64 1 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)) 3))))))"]],"rules":[["egg-rr",93],["egg-rr",60],["egg-rr",66]],"time":46.73486328125,"type":"rewrite"},{"count":[[275,303]],"inputs":[["(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 4))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2))))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (pow.f64 y 4))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(/.f64 x (pow.f64 y 2))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (+.f64 (*.f64 2 x) (+.f64 1 x)))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4))))))","(/.f64 x (pow.f64 y 2))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)))) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x)))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) x)))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x)) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 2))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4))))) (pow.f64 (+.f64 1 x) 2))))) (*.f64 (pow.f64 y 3) x)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (pow.f64 y 4) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (+.f64 (*.f64 2 x) 2)) (pow.f64 (+.f64 1 x) 2))))) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (pow.f64 (+.f64 1 x) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 10)) 1/9) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 2))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (+.f64 (*.f64 2 x) 2)) (pow.f64 (+.f64 1 x) 2))))))))))) x)))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 2))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4))))) (pow.f64 (+.f64 1 x) 2))))) (*.f64 (pow.f64 y 3) x)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 y (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 y (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 2))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 y)) (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4))))) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 3)))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 y (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 10)) 1/9) (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (+.f64 (*.f64 2 y) 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (+.f64 (*.f64 2 y) 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 (+.f64 1 y) 2)))))) (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 y)) (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4))))) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 3))))))))","(/.f64 (*.f64 y x) (+.f64 1 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (*.f64 x x))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (*.f64 x x))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (neg.f64 (*.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (*.f64 y y) (+.f64 1 y))))) (/.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) 2))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 4))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (*.f64 x x))) (+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (*.f64 y y) (+.f64 1 y))))) (/.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) 2))) (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y))))) (*.f64 (*.f64 y y) (+.f64 1 y)))) (neg.f64 (/.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (*.f64 y y) (+.f64 1 y)))))) (pow.f64 x 4))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (neg.f64 (*.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (neg.f64 (/.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 2 (*.f64 (*.f64 y y) (+.f64 1 y))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (*.f64 y y) (+.f64 1 y))))) (/.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) 2))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 y (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))","(+.f64 (/.f64 y (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y))))) (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (neg.f64 (/.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) y) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 y (+.f64 1 (fma.f64 2 y y))))) (fma.f64 (pow.f64 y 3) (+.f64 1 y) (neg.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 (neg.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y))))) (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))))) (pow.f64 x 5))) (+.f64 (/.f64 y (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y))))) (*.f64 (+.f64 (*.f64 y y) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (neg.f64 (/.f64 (*.f64 (fma.f64 2 y (+.f64 1 y)) y) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(+.f64 (/.f64 y (*.f64 x x)) (neg.f64 (/.f64 (*.f64 y (+.f64 1 (fma.f64 2 y y))) (pow.f64 x 3))))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(+.f64 (/.f64 (*.f64 y (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (*.f64 x x)) (+.f64 (/.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y)))) (pow.f64 x 4)) (neg.f64 (/.f64 (*.f64 y (+.f64 1 (fma.f64 2 y y))) (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 y (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y)))) (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y))))) (+.f64 1 (fma.f64 2 y y)) (fma.f64 (pow.f64 y 3) (+.f64 1 y) (*.f64 (fma.f64 2 y (+.f64 1 y)) (*.f64 y (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (neg.f64 (*.f64 y y)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 y (*.f64 (fma.f64 2 y (+.f64 1 y)) (+.f64 1 (fma.f64 2 y y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (*.f64 x x)) (neg.f64 (/.f64 (*.f64 y (+.f64 1 (fma.f64 2 y y))) (pow.f64 x 3)))))))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 (neg.f64 (*.f64 y y)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 (neg.f64 (*.f64 y y)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (+.f64 (neg.f64 (*.f64 (pow.f64 y 3) (+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x)))) (/.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) 2))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2))))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (pow.f64 y 4))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(+.f64 (*.f64 (neg.f64 (*.f64 y y)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (+.f64 (neg.f64 (*.f64 (pow.f64 y 3) (+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x)))) (/.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) 2))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3))))) (+.f64 (neg.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) (+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x)))) (/.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) 2))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) (pow.f64 x 3)))) (*.f64 (+.f64 1 x) (*.f64 x x)))) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) (+.f64 (/.f64 2 (*.f64 (+.f64 1 x) (*.f64 x x))) (/.f64 (pow.f64 (+.f64 1 x) (neg.f64 2)) x))) (*.f64 (+.f64 1 x) (*.f64 x x)))))) (pow.f64 y 4))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 x (*.f64 y y)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4)))))","(+.f64 (/.f64 x (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) x) (pow.f64 y 3))) (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) (*.f64 (+.f64 1 (fma.f64 2 x x)) x))) (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) x)) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (+.f64 (*.f64 2 x) (+.f64 1 x)))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (pow.f64 y 4))))))","(+.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x))) x)) (fma.f64 (+.f64 1 x) (pow.f64 x 3) (neg.f64 (*.f64 (+.f64 (neg.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (*.f64 (fma.f64 2 x (+.f64 1 x)) x))) (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) x)) (fma.f64 2 x (+.f64 1 x)))))) (pow.f64 y 5))) (+.f64 (/.f64 x (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) x) (pow.f64 y 3))) (neg.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) (*.f64 (+.f64 1 (fma.f64 2 x x)) x))) (*.f64 (fma.f64 2 (*.f64 (+.f64 1 x) x) (*.f64 x x)) x)) (pow.f64 y 4))))))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 x (*.f64 y y)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)))))","(+.f64 (/.f64 (*.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x) (pow.f64 y 4)) (+.f64 (/.f64 x (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) (*.f64 (+.f64 1 (fma.f64 2 x x)) x)) (pow.f64 y 4)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (pow.f64 y 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)))) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x)))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4))))))","(+.f64 (/.f64 (*.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x) (pow.f64 y 4)) (+.f64 (neg.f64 (/.f64 (fma.f64 (+.f64 1 x) (pow.f64 x 3) (fma.f64 (fma.f64 2 x (+.f64 1 x)) (fma.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) x (*.f64 (fma.f64 2 x (+.f64 1 x)) (*.f64 (+.f64 1 (fma.f64 2 x x)) x))) (*.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x)))) x))) (pow.f64 y 5))) (+.f64 (/.f64 x (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x (+.f64 1 x)) x) (pow.f64 y 3))) (/.f64 (*.f64 (+.f64 1 (fma.f64 2 x x)) (*.f64 (fma.f64 2 x (+.f64 1 x)) x)) (pow.f64 y 4))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x))","(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 2))) (*.f64 y x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) x)))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x)))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 4) 1/9) (*.f64 y y)) (*.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 2))) (*.f64 y x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x)) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 2))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4))))) (pow.f64 (+.f64 1 x) 2))))) (*.f64 (pow.f64 y 3) x)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3)))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 4) 1/9) (*.f64 y y)) (*.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) x)) (fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 2))) (*.f64 y x) (*.f64 (*.f64 -1/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/9) (pow.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) 2)) (+.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x 2) (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4))))) (pow.f64 (+.f64 1 x) 2))))) (*.f64 (pow.f64 y 3) x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 4)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/9) (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 y x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (*.f64 (pow.f64 y 4) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (+.f64 (*.f64 2 x) 2)) (pow.f64 (+.f64 1 x) 2))))) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (pow.f64 (+.f64 1 x) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 10)) 1/9) (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 2))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) (+.f64 (*.f64 2 x) 2)) (pow.f64 (+.f64 1 x) 2))))))))))) x)))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4)))) 2))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 2 (/.f64 x (pow.f64 (+.f64 1 x) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 x) 4))))) (pow.f64 (+.f64 1 x) 2))))) (*.f64 (pow.f64 y 3) x)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3))))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 4) 1/9) (*.f64 y y)) (*.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) x)) (fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) (neg.f64 2))) (*.f64 y x) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 4)) (pow.f64 y 4)) (*.f64 (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 4)) (pow.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x 2) (+.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x 2) (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4))))) (pow.f64 (+.f64 1 x) 2))))) (pow.f64 (+.f64 1 x) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) (pow.f64 (+.f64 1 x) 2))) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 10) 1/9) (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4))))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/9) (pow.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) 2)) (+.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x 2) (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4))))) (pow.f64 (+.f64 1 x) 2)))))))))) x)) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) 2) 1/9) (pow.f64 (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4)))) 2)) (+.f64 (pow.f64 (+.f64 1 x) (neg.f64 4)) (neg.f64 (/.f64 (*.f64 (fma.f64 2 x 2) (*.f64 2 (+.f64 (/.f64 x (pow.f64 (+.f64 1 x) 4)) (pow.f64 (+.f64 1 x) (neg.f64 4))))) (pow.f64 (+.f64 1 x) 2))))) (*.f64 (*.f64 (pow.f64 y 3) x) (cbrt.f64 (pow.f64 (+.f64 1 x) 4))))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x))","(*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 2))) (*.f64 y x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 y (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x)))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) 4) 1/9) (*.f64 y (*.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) (*.f64 x x)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 2))) (*.f64 y x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 y (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 2))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 y)) (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4))))) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 3)))))))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) 4) 1/9) (*.f64 y (*.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) (*.f64 x x)))) (fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 2))) (*.f64 y x) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (+.f64 1 y) 4))) (*.f64 y (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/9) (pow.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) 2)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y 2) (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4))))) (pow.f64 (+.f64 1 y) 2))) (pow.f64 (+.f64 1 y) (neg.f64 4)))) (pow.f64 x 3))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/9) (*.f64 y (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 2))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 10)) 1/9) (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (+.f64 (*.f64 2 y) 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (+.f64 (*.f64 2 y) 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 (+.f64 1 y) 2)))))) (pow.f64 x 4))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 y x)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (*.f64 y (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/9) (pow.f64 (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 2 (*.f64 2 y)) (+.f64 (*.f64 2 (/.f64 y (pow.f64 (+.f64 1 y) 4))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 y) 4))))) (pow.f64 (+.f64 1 y) 2))) (/.f64 1 (pow.f64 (+.f64 1 y) 4)))) (pow.f64 x 3))))))))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) 4) 1/9) (*.f64 y (*.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) (*.f64 x x)))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 4)) y) (*.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) 10) 1/9) (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4))))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/9) (pow.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) 2)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y 2) (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4))))) (pow.f64 (+.f64 1 y) 2))) (pow.f64 (+.f64 1 y) (neg.f64 4))))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 4)) (pow.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y 2) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y 2) (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4))))) (pow.f64 (+.f64 1 y) 2))) (pow.f64 (+.f64 1 y) (neg.f64 4)))) (pow.f64 (+.f64 1 y) 2))) (neg.f64 (/.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) (pow.f64 (+.f64 1 y) 2)))))) (pow.f64 x 4))) (fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) (neg.f64 2))) (*.f64 y x) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (+.f64 1 y) 4))) (*.f64 y (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) 2) 1/9) (pow.f64 (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4)))) 2)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y 2) (*.f64 2 (+.f64 (/.f64 y (pow.f64 (+.f64 1 y) 4)) (pow.f64 (+.f64 1 y) (neg.f64 4))))) (pow.f64 (+.f64 1 y) 2))) (pow.f64 (+.f64 1 y) (neg.f64 4)))) (pow.f64 x 3)))))))","(/.f64 (*.f64 y x) (+.f64 1 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) 2))) (/.f64 (*.f64 y x) (+.f64 1 x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (+.f64 1 x) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 (+.f64 1 x) 4))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (+.f64 1 x) 3)) (/.f64 (*.f64 y x) (+.f64 1 x)))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 2) x) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 x) 3) x) (pow.f64 y 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (+.f64 1 x) x) y)) x)))","(/.f64 (*.f64 y x) (+.f64 1 y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y)))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) 2))) (/.f64 (*.f64 y x) (+.f64 1 y))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 2)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","(+.f64 (/.f64 (*.f64 y (pow.f64 x 3)) (pow.f64 (+.f64 1 y) 3)) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 x x)) (pow.f64 (+.f64 1 y) 2))) (+.f64 (/.f64 (*.f64 y x) (+.f64 1 y)) (neg.f64 (/.f64 (*.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 1 y) 4))))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)))))","y","(+.f64 y (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x))))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (pow.f64 x 2)))))","(+.f64 y (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 1 y)) x)) (/.f64 (*.f64 y (pow.f64 (+.f64 1 y) 2)) (*.f64 x x)))))"]],"time":198.7822265625,"type":"simplify"},{"compiler":[[14957,10075]],"time":148.305908203125,"type":"eval"},{"alts":[["(/.f64 x (*.f64 y (+.f64 1 y)))","fresh",32.78662425251465],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) 3)","fresh",17.59568070236005],["(/.f64 y (*.f64 (+.f64 1 x) x))","fresh",30.93937198591253],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","done",17.450408799674324],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","done",10.984266388236394],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","done",10.975790118699509],["(-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","fresh",37.547045016098146],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","next",17.560817121256296],["(*.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (*.f64 (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 2/3) (pow.f64 (+.f64 x y) -2)))","fresh",40.2968899898109],["(*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))","fresh",19.016616864665664]],"compiler":[[9,6],[20,14],[9,6],[17,10],[27,17],[27,17],[30,21],[27,17],[30,17],[26,16],[9,6],[20,14],[9,6],[30,21],[27,17],[30,17],[26,16]],"count":[[359,10]],"kept":[{"done":[2,2],"fresh":[7,5],"new":[349,2],"picked":[1,1]}],"min-error":[4.851183077979604],"time":121.947021484375,"type":"prune"},{"compiler":[[86,41]],"locations":[["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))",0.09994125976844202,true],["(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))",0.1484375,true],["(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)",0.43853383791597816,true],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))",24.460734336127327,true]],"time":17.034912109375,"type":"localize"},{"count":[[4,64]],"series":[["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","y","-inf",0.3388671875],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","y","inf",0.31201171875],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","y","0",0.44189453125],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","x","-inf",0.41796875],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","x","inf",0.333984375],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","x","0",0.464111328125],["(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","-inf",1.176025390625],["(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","inf",4.41796875],["(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))","y","0",1.64892578125],["(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","-inf",1.29296875],["(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","inf",1.23779296875],["(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))","x","0",1.0400390625],["(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)","y","-inf",0.345947265625],["(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)","y","inf",0.367919921875],["(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)","y","0",1.3779296875],["(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)","x","-inf",0.35400390625],["(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)","x","inf",0.5771484375],["(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)","x","0",4.744140625],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))","y","-inf",0.379150390625],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))","y","inf",0.429931640625],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))","y","0",0.33984375],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))","x","-inf",0.39599609375],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))","x","inf",0.405029296875],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))","x","0",0.444091796875]],"time":23.85693359375,"type":"series"},{"count":[[4,166]],"inputs":[["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))","(pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)","(/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))","(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 0) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (*.f64 0 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x y)) (*.f64 (pow.f64 (*.f64 x y) 2/3) (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (pow.f64 (+.f64 x y) -2) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (cbrt.f64 y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (*.f64 x y))) (pow.f64 (*.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 x y) -2))) (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 y (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) (neg.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x y) -2)) (neg.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 x y) -2)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x y)) (neg.f64 (pow.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 0) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (*.f64 0 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)) (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 0) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (*.f64 0 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 2/3) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)) (neg.f64 (pow.f64 (+.f64 1 (+.f64 x y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (/.f64 y (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (+.f64 1 (+.f64 x y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (+.f64 x y)) -1/3) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) -1/3)) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) 1) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 2/3)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (*.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)))) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) -1/3)) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (pow.f64 (+.f64 x y) -2)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x y) (/.f64 (pow.f64 (+.f64 x y) -2) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (/.f64 y (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) -1) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 3) (+.f64 1 (+.f64 x y))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) 3) (+.f64 1 (+.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 0) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) (*.f64 0 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 2/3) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))))) (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y))))) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (pow.f64 (+.f64 1 (+.f64 x y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) (neg.f64 (pow.f64 (+.f64 1 (+.f64 x y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) 1) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (+.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) -1) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y))) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) 2/3) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) 1) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) -1) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) 1) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (neg.f64 y))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (cbrt.f64 (+.f64 1 (+.f64 x y)))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2) (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) x) (*.f64 y (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))) (cbrt.f64 (neg.f64 (+.f64 1 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) (+.f64 -1 -2))) 3))))))"]],"rules":[["egg-rr",55],["egg-rr",56],["egg-rr",20],["egg-rr",35]],"time":43.817138671875,"type":"rewrite"},{"count":[[230,263]],"inputs":[["(/.f64 x y)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y)))","(+.f64 (*.f64 3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -4 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))))) (*.f64 -2 (pow.f64 y 4))) (pow.f64 x 4))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3))) (*.f64 2 (/.f64 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3)))) (pow.f64 x 4)))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(/.f64 x y)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) x))) (pow.f64 y 4))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3))))))","(/.f64 x y)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) x) (pow.f64 y 4))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3))) (*.f64 2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))))","(pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 11)) 1/9) x)))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9))) (pow.f64 x 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 11)) 1/9) x))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 y) 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 y) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))))))))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 7)) 1/3)))) (pow.f64 x 3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 11)) 1/9) x)))))","(pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 11)) 1/9) y)))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 11)) 1/9) y))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9))) (pow.f64 y 2)) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 11)) 1/9) y)) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 7)) 1/3))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 x) 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 x) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))))))))))))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 y))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 y))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) y) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))))) (pow.f64 x 3)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/3)))) y))) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 4)))) (*.f64 -2/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) (pow.f64 y 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3)))))) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 y))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) y) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))))) (pow.f64 x 3)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y)))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x))","(+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 x)))) (pow.f64 y 2)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 (pow.f64 x 2))))))) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 x)))) (pow.f64 y 2)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 (pow.f64 x 2))))))) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 x)))) (pow.f64 y 2)) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 13)) 1/9))))) x))) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 4)))) (*.f64 -2/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 x 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x)))))","(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y))))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))))) (pow.f64 x 4))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 y) y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(/.f64 y (pow.f64 x 2))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))))))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(/.f64 x (pow.f64 y 2))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (+.f64 1 (+.f64 (*.f64 2 x) x)))))) (pow.f64 y 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4))))))","(/.f64 x (pow.f64 y 2))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (+.f64 1 (+.f64 (*.f64 2 x) x))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x y)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y))","(+.f64 (*.f64 3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y)))","(fma.f64 3 (*.f64 (pow.f64 x 3) (pow.f64 y -3)) (fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y)))","(+.f64 (*.f64 3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -4 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 3 (*.f64 (pow.f64 x 3) (pow.f64 y -3)) (fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y))) (*.f64 (*.f64 -4 (pow.f64 x 4)) (pow.f64 y -4)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (*.f64 -2 (pow.f64 (/.f64 y x) 2)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (*.f64 (*.f64 -3 (neg.f64 (pow.f64 y 3))) (pow.f64 x -3))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))))) (*.f64 -2 (pow.f64 y 4))) (pow.f64 x 4))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3))))))","(+.f64 (/.f64 y x) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (-.f64 (*.f64 (*.f64 -2 (+.f64 (*.f64 y (*.f64 -3 (pow.f64 y 3))) (pow.f64 y 4))) (neg.f64 (pow.f64 x -4))) (/.f64 (*.f64 -3 (pow.f64 y 3)) (pow.f64 x 3)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (*.f64 -2 (pow.f64 (/.f64 y x) 2)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (*.f64 (*.f64 -3 (neg.f64 (pow.f64 y 3))) (pow.f64 x -3))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3))) (pow.f64 x 3))) (*.f64 2 (/.f64 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 -4 (pow.f64 y 3)))) (pow.f64 x 4)))))))","(+.f64 (/.f64 y x) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (fma.f64 2 (*.f64 (pow.f64 y 4) (pow.f64 x -4)) (-.f64 (*.f64 2 (/.f64 (*.f64 y (*.f64 -3 (pow.f64 y 3))) (pow.f64 x 4))) (/.f64 (*.f64 -3 (pow.f64 y 3)) (pow.f64 x 3))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (*.f64 -2 (pow.f64 (/.f64 y x) 2)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (*.f64 (*.f64 3 (pow.f64 y 3)) (pow.f64 x -3))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (/.f64 y x) (fma.f64 -2 (pow.f64 (/.f64 y x) 2) (fma.f64 3 (*.f64 (pow.f64 y 3) (pow.f64 x -3)) (/.f64 (*.f64 -4 (pow.f64 y 4)) (pow.f64 x 4)))))","(/.f64 x y)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3)))))","(-.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y)) (*.f64 (*.f64 -3 (pow.f64 x 3)) (pow.f64 y -3)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) x))) (pow.f64 y 4))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3))))))","(fma.f64 -2 (pow.f64 (/.f64 x y) 2) (-.f64 (-.f64 (/.f64 x y) (*.f64 (*.f64 -3 (pow.f64 x 3)) (pow.f64 y -3))) (*.f64 (*.f64 -2 (+.f64 (pow.f64 x 4) (*.f64 (*.f64 -3 (pow.f64 x 3)) x))) (pow.f64 y -4))))","(/.f64 x y)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3)))))","(-.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y)) (*.f64 (*.f64 -3 (pow.f64 x 3)) (pow.f64 y -3)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) x) (pow.f64 y 4))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 y 3))) (*.f64 2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))))","(fma.f64 -2 (pow.f64 (/.f64 x y) 2) (fma.f64 2 (/.f64 (*.f64 (*.f64 -3 (pow.f64 x 3)) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (-.f64 (*.f64 (*.f64 2 (pow.f64 x 4)) (pow.f64 y -4)) (*.f64 (*.f64 -3 (pow.f64 x 3)) (pow.f64 y -3))))))","(pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3)","(cbrt.f64 (pow.f64 (+.f64 1 y) -2))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 11)) 1/9) x)))","(+.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) -2)) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 (+.f64 1 y) -11) 1/9)) x))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9))) (pow.f64 x 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 11)) 1/9) x))))","(+.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) -2)) (fma.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) 5/9) (*.f64 x x) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 (+.f64 1 y) -11) 1/9)) x)))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 y) 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 y) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))))))))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 7)) 1/3)))) (pow.f64 x 3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 11)) 1/9) x)))))","(+.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) -2)) (fma.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) 5/9) (*.f64 x x) (fma.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (+.f64 (*.f64 (pow.f64 (+.f64 1 y) -2) (+.f64 2/27 1/27)) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (+.f64 1 y) -4))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) -2)) (+.f64 1/27 -2/9))))) (*.f64 -4/27 (cbrt.f64 (pow.f64 (+.f64 1 y) -7)))) (pow.f64 x 3) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 (+.f64 1 y) -11) 1/9)) x))))","(pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3)","(cbrt.f64 (pow.f64 (+.f64 1 x) -2))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 11)) 1/9) y)))","(+.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 (+.f64 1 x) -11) 1/9)) y))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 11)) 1/9) y))))","(+.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (fma.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9) 5/9) (*.f64 y y) (*.f64 (*.f64 -2/3 (pow.f64 (pow.f64 (+.f64 1 x) -11) 1/9)) y)))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9))) (pow.f64 y 2)) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 11)) 1/9) y)) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 7)) 1/3))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 x) 2)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (+.f64 1 x) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))))))))))))))","(+.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (fma.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9) 5/9) (*.f64 y y) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -11) 1/9) y) (*.f64 (pow.f64 y 3) (fma.f64 -4/27 (cbrt.f64 (pow.f64 (+.f64 1 x) -7)) (*.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 (+.f64 1 x)))) (+.f64 (*.f64 (pow.f64 (+.f64 1 x) -2) (+.f64 2/27 1/27)) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (+.f64 1 x) -4))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (+.f64 -2/9 1/27))))))))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y))","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (/.f64 x y))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 y))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y)))","(fma.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) y) (*.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 (+.f64 1 y)))) (pow.f64 y -2))) (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 y))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) y) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))))) (pow.f64 x 3)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y))))","(fma.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) y) (*.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 (+.f64 1 y)))) (pow.f64 y -2))) (*.f64 x x) (fma.f64 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) (pow.f64 y -2)) (fma.f64 3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (pow.f64 y -3)) (/.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 y) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 y) -35) 1/9))) (cbrt.f64 (pow.f64 (+.f64 1 y) 2))) 1/3) y))) (pow.f64 x 3) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3) (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 4)) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/3)))) y))) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 4)))) (*.f64 -2/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) (pow.f64 y 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3)))))) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 y))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 16)) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 1 (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 y) 35)) 1/9))) y) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 y) 2)) 1/3))))) (pow.f64 x 3)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 y)) 1/3) (/.f64 x y)))))","(fma.f64 (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 y) 2)) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) -13) 1/9) (+.f64 (pow.f64 (+.f64 1 y) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 y) -35) 1/9)))) (+.f64 (pow.f64 (+.f64 1 y) -4) (*.f64 -1/27 (cbrt.f64 (pow.f64 (+.f64 1 y) -16)))))) y) (fma.f64 -4 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (pow.f64 y -4)) (/.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 y) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 y) -35) 1/9))) (cbrt.f64 (pow.f64 (+.f64 1 y) 2))) -2/3) (*.f64 y y)))) (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) (pow.f64 y -3))) (pow.f64 x 4) (fma.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) y) (*.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 (+.f64 1 y)))) (pow.f64 y -2))) (*.f64 x x) (fma.f64 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 1 y) -16) 1/9) (pow.f64 y -2)) (fma.f64 3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (pow.f64 y -3)) (/.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 y) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 y) -35) 1/9))) (cbrt.f64 (pow.f64 (+.f64 1 y) 2))) 1/3) y))) (pow.f64 x 3) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (/.f64 x y)))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x))","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x))","(+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 x)))) (pow.f64 y 2)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x)))","(fma.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 x -2)) (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9) -1/3) x)) (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 (pow.f64 x 2))))))) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 x)))) (pow.f64 y 2)) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x))))","(fma.f64 (pow.f64 y 3) (fma.f64 3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 x -3)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 x) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 x) -35) 1/9))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) x) (*.f64 (*.f64 2/3 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9)) (pow.f64 x -2)))) (fma.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 x -2)) (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9) -1/3) x)) (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 3 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 (pow.f64 x 2))))))) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 x)))) (pow.f64 y 2)) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/9) (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 16)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 13)) 1/9))))) x))) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 1 (pow.f64 x 4)))) (*.f64 -2/3 (*.f64 (/.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 x) 35)) 1/9))) (pow.f64 x 2)) (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 x) 2)) 1/3))))))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 x)) 1/3) (/.f64 y x)))))","(fma.f64 (pow.f64 y 3) (fma.f64 3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 x -3)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 x) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 x) -35) 1/9))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) x) (*.f64 (*.f64 2/3 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9)) (pow.f64 x -2)))) (fma.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 x -2)) (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9) -1/3) x)) (*.f64 y y) (fma.f64 (pow.f64 y 4) (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 (pow.f64 (+.f64 1 x) -4) (fma.f64 -1/27 (cbrt.f64 (pow.f64 (+.f64 1 x) -16)) (*.f64 -2/3 (*.f64 (+.f64 (pow.f64 (+.f64 1 x) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 x) -35) 1/9))) (pow.f64 (pow.f64 (+.f64 1 x) -13) 1/9)))))) x) (fma.f64 -4 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 x -4)) (/.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (+.f64 1 x) -3) (*.f64 -1/3 (pow.f64 (pow.f64 (+.f64 1 x) -35) 1/9))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) -2/3) (*.f64 x x)))) (*.f64 (pow.f64 (pow.f64 (+.f64 1 x) -16) 1/9) (pow.f64 x -3))) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x)))))","(/.f64 x (*.f64 y (+.f64 1 y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (/.f64 x (*.f64 y (+.f64 1 y))))","(-.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y)) (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3)))))","(-.f64 (-.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y)) (*.f64 x x))) (*.f64 (fma.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) -2) (-.f64 (*.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y -3)) (*.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y))) (/.f64 (pow.f64 y -2) (+.f64 1 y))))) (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2)))) (pow.f64 x 2))) (+.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))))) (*.f64 (pow.f64 y 2) (+.f64 1 y))))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y))))) (+.f64 1 (+.f64 (*.f64 2 y) y))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))) (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))))) (pow.f64 x 4))) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 y) 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 y) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 (+.f64 1 y) 2))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (*.f64 (pow.f64 y 2) (+.f64 1 y)))))) (pow.f64 x 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 x (*.f64 y (+.f64 1 y))) (*.f64 (+.f64 (/.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y)))) (fma.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) -2) (-.f64 (*.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y -3)) (*.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y))) (/.f64 (pow.f64 y -2) (+.f64 1 y)))))) (*.f64 (neg.f64 (+.f64 1 (*.f64 3 y))) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y)))) (+.f64 (*.f64 y y) (pow.f64 y 3))) (*.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y -3))) (pow.f64 x 4))) (*.f64 (fma.f64 3 (pow.f64 (*.f64 y (+.f64 1 y)) -2) (-.f64 (*.f64 (pow.f64 (+.f64 1 y) -2) (pow.f64 y -3)) (*.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y))) (/.f64 (pow.f64 y -2) (+.f64 1 y))))) (pow.f64 x 3))) (*.f64 (fma.f64 2 (/.f64 (pow.f64 y -2) (+.f64 1 y)) (/.f64 (pow.f64 (+.f64 1 y) -2) y)) (*.f64 x x)))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))","(-.f64 (/.f64 y (*.f64 x x)) (*.f64 (*.f64 y (+.f64 1 (*.f64 3 y))) (pow.f64 x -3)))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3)))))","(-.f64 (-.f64 (/.f64 y (*.f64 x x)) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) y) (*.f64 (+.f64 1 (*.f64 3 y)) (*.f64 y (+.f64 1 (*.f64 3 y))))) (pow.f64 x -4))) (*.f64 (*.f64 y (+.f64 1 (*.f64 3 y))) (pow.f64 x -3)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 y) y)) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 -1 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y))))) (pow.f64 x 5))) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y))))) (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (*.f64 y (+.f64 1 y)))) y)) (pow.f64 x 4))) (*.f64 -1 (/.f64 (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y))) (pow.f64 x 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 y (*.f64 x x)) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) y) (*.f64 (+.f64 1 (*.f64 3 y)) (*.f64 y (+.f64 1 (*.f64 3 y))))) (pow.f64 x -4))) (*.f64 (*.f64 y (+.f64 1 (*.f64 3 y))) (pow.f64 x -3))) (/.f64 (-.f64 (fma.f64 (pow.f64 y 3) (+.f64 1 y) (*.f64 (*.f64 (neg.f64 y) (+.f64 1 (*.f64 3 y))) (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))))) (*.f64 (+.f64 1 (*.f64 3 y)) (-.f64 (*.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 2 y) (+.f64 1 y))) y) (*.f64 (+.f64 1 (*.f64 3 y)) (*.f64 y (+.f64 1 (*.f64 3 y))))))) (pow.f64 x 5)))","(/.f64 y (pow.f64 x 2))","(/.f64 y (*.f64 x x))","(+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))","(-.f64 (/.f64 y (*.f64 x x)) (*.f64 (*.f64 y (+.f64 1 (*.f64 3 y))) (pow.f64 x -3)))","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (*.f64 y (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3))))))","(+.f64 (/.f64 (*.f64 y (+.f64 (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y)) (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))) (pow.f64 x 4)) (-.f64 (/.f64 y (*.f64 x x)) (*.f64 (*.f64 y (+.f64 1 (*.f64 3 y))) (pow.f64 x -3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y)))) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 y)) (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 -2 (*.f64 y (+.f64 1 y))))) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) (+.f64 1 (+.f64 (*.f64 2 y) y)))) (pow.f64 x 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 y) (+.f64 1 y)) y) (pow.f64 x 3)))))))","(-.f64 (+.f64 (/.f64 (*.f64 y (+.f64 (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y)) (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y))))) (pow.f64 x 4)) (-.f64 (/.f64 y (*.f64 x x)) (*.f64 (*.f64 y (+.f64 1 (*.f64 3 y))) (pow.f64 x -3)))) (/.f64 (fma.f64 y (*.f64 (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y)) (+.f64 1 (*.f64 3 y))) (fma.f64 (pow.f64 y 3) (+.f64 1 y) (*.f64 (+.f64 1 (*.f64 3 y)) (*.f64 y (+.f64 (-.f64 (*.f64 (*.f64 -2 y) (+.f64 1 y)) (*.f64 y y)) (*.f64 (+.f64 1 (*.f64 3 y)) (+.f64 1 (*.f64 3 y)))))))) (pow.f64 x 5)))","(/.f64 y (*.f64 (+.f64 1 x) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (/.f64 y (*.f64 (+.f64 1 x) x)))","(-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (/.f64 y (*.f64 (+.f64 1 x) x))))","(-.f64 (-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -2)) (fma.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) -2) (*.f64 (*.f64 (neg.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))) (/.f64 (pow.f64 x -2) (+.f64 1 x))))))) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)) (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))) (+.f64 (*.f64 3 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))))) (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x)))) (*.f64 (+.f64 1 x) (pow.f64 x 2)))) (/.f64 1 (*.f64 (pow.f64 (+.f64 1 x) 2) (pow.f64 x 3))))))) (/.f64 y (*.f64 (+.f64 1 x) x)))))","(-.f64 (-.f64 (-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (pow.f64 y 4) (+.f64 (/.f64 (+.f64 (*.f64 (neg.f64 (+.f64 1 (*.f64 3 x))) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))) (*.f64 (neg.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) (+.f64 (*.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -2)) (fma.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) -2) (*.f64 (*.f64 (neg.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))) (/.f64 (pow.f64 x -2) (+.f64 1 x))))))) (*.f64 (+.f64 1 x) (*.f64 x x))) (*.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -2))))) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -2)) (fma.f64 3 (pow.f64 (*.f64 (+.f64 1 x) x) -2) (*.f64 (*.f64 (neg.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))) (/.f64 (pow.f64 x -2) (+.f64 1 x))))))) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(-.f64 (/.f64 x (*.f64 y y)) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y -3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4)))))","(-.f64 (-.f64 (/.f64 x (*.f64 y y)) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y -3))) (*.f64 (-.f64 (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) x) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) (+.f64 1 (*.f64 3 x))) x)) (pow.f64 y -4)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x))) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (*.f64 (+.f64 (pow.f64 x 2) (*.f64 2 (*.f64 (+.f64 1 x) x))) x)) (+.f64 1 (+.f64 (*.f64 2 x) x)))))) (pow.f64 y 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x))) (*.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 1 x) x)) (pow.f64 x 2)) x)) (pow.f64 y 4))))))","(-.f64 (-.f64 (-.f64 (/.f64 x (*.f64 y y)) (/.f64 (-.f64 (fma.f64 (+.f64 1 x) (pow.f64 x 3) (*.f64 (neg.f64 (+.f64 1 (*.f64 3 x))) (-.f64 (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) x) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) (+.f64 1 (*.f64 3 x))) x)))) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x))) x)) (pow.f64 y 5))) (*.f64 (-.f64 (*.f64 (*.f64 x (+.f64 (*.f64 2 (+.f64 1 x)) x)) x) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) (+.f64 1 (*.f64 3 x))) x)) (pow.f64 y -4))) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y -3)))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (/.f64 x (pow.f64 y 2)))","(-.f64 (/.f64 x (*.f64 y y)) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y -3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4)))))","(+.f64 (-.f64 (/.f64 x (*.f64 y y)) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y -3))) (/.f64 (*.f64 x (+.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) (*.f64 (+.f64 1 (*.f64 3 x)) (+.f64 1 (*.f64 3 x))))) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (+.f64 (*.f64 (+.f64 1 x) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -2 (*.f64 (+.f64 1 x) x))) x) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) x))) (+.f64 1 (+.f64 (*.f64 2 x) x))))) (pow.f64 y 5))) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (+.f64 1 (+.f64 (*.f64 2 x) x)) (*.f64 (+.f64 (*.f64 2 x) (+.f64 1 x)) x)) (pow.f64 y 4)) (/.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 1 x) x)) (*.f64 -1 (pow.f64 x 2))) x) (pow.f64 y 4))))))","(-.f64 (-.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (*.f64 x (+.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) (*.f64 (+.f64 1 (*.f64 3 x)) (+.f64 1 (*.f64 3 x))))) (pow.f64 y 4))) (/.f64 (fma.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) (*.f64 (+.f64 1 (*.f64 3 x)) x) (fma.f64 (+.f64 1 x) (pow.f64 x 3) (*.f64 (*.f64 x (+.f64 (fma.f64 -2 (*.f64 (+.f64 1 x) x) (neg.f64 (*.f64 x x))) (*.f64 (+.f64 1 (*.f64 3 x)) (+.f64 1 (*.f64 3 x))))) (+.f64 1 (*.f64 3 x))))) (pow.f64 y 5))) (*.f64 (*.f64 (+.f64 1 (*.f64 3 x)) x) (pow.f64 y -3)))"]],"time":293.93896484375,"type":"simplify"},{"compiler":[[12299,8219]],"time":124.486083984375,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","done",10.984266388236394],["(/.f64 y (*.f64 (+.f64 1 x) x))","fresh",30.93937198591253],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) 3)","fresh",17.59568070236005],["(*.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (/.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","fresh",32.44426111460283],["(*.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","fresh",31.08233621561488],["(*.f64 (/.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","fresh",32.72309049415467],["(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","done",17.450408799674324],["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","done",10.975790118699509],["(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","done",17.560817121256296],["(*.f64 (/.f64 (+.f64 (/.f64 y x) (*.f64 -2 (pow.f64 (/.f64 y x) 2))) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","fresh",31.44569692855913]],"compiler":[[27,17],[9,6],[20,14],[21,16],[21,16],[28,18],[17,10],[27,17],[27,17],[29,19]],"count":[[273,10]],"kept":[{"done":[3,3],"fresh":[6,1],"new":[263,5],"picked":[1,1]}],"min-error":[0.524227093052443],"time":79.101806640625,"type":"prune"},{"accuracy":[7.393278531124039],"baseline":[10.975790118699509],"branch":[["x",7.393278531124039,4],["y",7.429304169061286,3],["(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))",10.97579011869951,1]],"compiler":[[3,2],[3,2],[19,9],[358,199]],"count":[[20,4]],"inputs":[["(/.f64 y (*.f64 (+.f64 1 x) x))","(*.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 y))) (/.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","(*.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","(*.f64 (/.f64 (fma.f64 -2 (pow.f64 (/.f64 x y) 2) (/.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","(*.f64 (/.f64 (+.f64 (/.f64 y x) (*.f64 -2 (pow.f64 (/.f64 y x) 2))) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y x) (+.f64 (+.f64 1 y) x)))) 3)","(/.f64 y (*.f64 (+.f64 1 x) x))","(/.f64 y (*.f64 (+.f64 1 x) x))","(/.f64 x (*.f64 y (+.f64 1 y)))","(*.f64 (cbrt.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (*.f64 (pow.f64 (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)) 2/3) (pow.f64 (+.f64 x y) -2)))","(*.f64 (cbrt.f64 (pow.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (pow.f64 (+.f64 x y) -2) 2/3) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))))","(/.f64 y (*.f64 (+.f64 1 x) x))","(*.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 x y)) (cbrt.f64 (+.f64 1 (+.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))","(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))) (cbrt.f64 (+.f64 1 (+.f64 x y)))))","(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","(-.f64 (/.f64 y (*.f64 (+.f64 1 x) x)) (*.f64 (*.f64 y y) (fma.f64 2 (/.f64 (pow.f64 x -2) (+.f64 1 x)) (/.f64 (pow.f64 (+.f64 1 x) -2) x))))","(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (+.f64 1 (+.f64 x y))))) 3)","(/.f64 x (*.f64 y (+.f64 1 y)))","(*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1)))","(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))"]],"link":["."],"name":["Numeric.SpecFunctions:incompleteBetaApprox from math-functions-0.1.5.2, A"],"oracle":[63.84580612863787],"outputs":[["(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","(/.f64 x (*.f64 y (+.f64 1 y)))","(*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2)))))","(*.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2))"]],"time":54.211181640625,"times":[["x",23.616943359375],["y",18.2001953125],["(/.f64 (*.f64 x y) (*.f64 (*.f64 (+.f64 x y) (+.f64 x y)) (+.f64 (+.f64 x y) 1)))",6.78515625]],"type":"regimes"},{"bstep":[[4.3646095585197394e+169,1.2122854212829072e+172,9.5771484375],[1.4610749151403416e-142,1.5314082249968444e-139,9.4580078125],[-5.557255440701011e-146,-2.7131095839704447e-149,9.819091796875]],"compiler":[[21,11],[3,2]],"method":["binary-search","binary-search","binary-search"],"time":29.071044921875,"type":"bsearch"},{"compiler":[[90,57]],"inputs":[["(if (<=.f64 x -3125201645246251/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))) (if (<=.f64 x 8023986926984757/54918381281044877719855206392651145738155482401146443275155707673484345467181248416980477125291636439818370491131846864296975903997733150500592226328920457216) (/.f64 x (*.f64 y (+.f64 1 y))) (if (<=.f64 x 43646095585197394402269961227916817674366863743845643011882345067995414666073453536035751432454764736401384897624339020291174205786673214871976174529147688816350163107840) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 x -3125201645246251/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))) (if (<=.f64 x 8023986926984757/54918381281044877719855206392651145738155482401146443275155707673484345467181248416980477125291636439818370491131846864296975903997733150500592226328920457216) (/.f64 x (*.f64 y (+.f64 1 y))) (if (<=.f64 x 43646095585197394402269961227916817674366863743845643011882345067995414666073453536035751432454764736401384897624339020291174205786673214871976174529147688816350163107840) (*.f64 (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 y (cbrt.f64 (+.f64 1 (+.f64 x y)))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 x y)) 2))))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 y x)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 x y))) -2)))))","(if (<=.f64 x -3125201645246251/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (if (<=.f64 x 8023986926984757/54918381281044877719855206392651145738155482401146443275155707673484345467181248416980477125291636439818370491131846864296975903997733150500592226328920457216) (/.f64 x (fma.f64 y y y)) (if (<=.f64 x 43646095585197394402269961227916817674366863743845643011882345067995414666073453536035751432454764736401384897624339020291174205786673214871976174529147688816350163107840) (*.f64 (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (-.f64 (+.f64 x y) -1))) (/.f64 (*.f64 (/.f64 y x) (cbrt.f64 (pow.f64 (-.f64 (+.f64 x y) -1) -2))) (cbrt.f64 (+.f64 1 x))))))"]],"stop":[["fuel",1]],"time":28.4169921875,"type":"simplify"},{"time":0.02685546875,"type":"soundness"},{"compiler":[[90,57]],"remove-preprocessing":[[]],"time":26.446044921875,"type":"end"}]