[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.8697554756654426,0.12926820025313646,0.0009763240814208984],[11,0.8321945269126445,0.1668291490059346,0.0009763240814208984],[10,0.7473165388219059,0.25170713709667325,0.0009763240814208984],[9,0.6751214684918523,0.3239022074267268,0.0009763240814208984],[8,0.5229264553636312,0.47609722055494785,0.0009763240814208984],[7,0.39024362340569496,0.6087800525128841,0.0009763240814208984],[6,0.2809754088521004,0.7180482670664787,0.0009763240814208984],[5,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":32.7490234375,"type":"analyze"},{"outcomes":[["body",256,"valid",297.722900390625,8256]],"time":306.02099609375,"type":"sample"},{"compiler":[[11,7]],"inputs":[["0","1"],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","(/.f64 (-.f64 y x) (-.f64 2 (+.f64 y x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","(/.f64 (-.f64 y x) (-.f64 2 (+.f64 y x)))","(/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))"]],"symmetry":[[]],"time":59.64404296875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))"]],"time":20.078857421875,"type":"simplify"},{"compiler":[[20,11]],"time":0.39013671875,"type":"eval"},{"alts":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","next",0.03125]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.03125],"time":0.97705078125,"type":"prune"},{"compiler":[[25,10]],"locations":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))",0.03125,true]],"time":5.156982421875,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","x","-inf",0.590087890625],["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","x","inf",0.418212890625],["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","x","0",0.569091796875],["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","y","-inf",0.4169921875],["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","y","inf",0.526123046875],["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","y","0",1.6669921875]],"time":4.31884765625,"type":"series"},{"count":[[1,74]],"inputs":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 2 (+.f64 x y))) (neg.f64 x)) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (*.f64 (/.f64 -1 (-.f64 2 (+.f64 x y))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) (*.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 0) (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) (*.f64 0 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (*.f64 (/.f64 x (-.f64 2 (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (/.f64 x (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 y (+.f64 (+.f64 x y) -2)) (pow.f64 (+.f64 (+.f64 x y) -2) 2)) (/.f64 (*.f64 (+.f64 (+.f64 x y) -2) x) (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 (+.f64 x y) -2)) (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 2 (+.f64 x y))) (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 2 (+.f64 x y)))) (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 -1 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 2 (+.f64 x y))) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (+.f64 (+.f64 x y) -2)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))) (cbrt.f64 (/.f64 -1 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 2 (+.f64 x y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 (+.f64 x y) -2))) (pow.f64 (cbrt.f64 (+.f64 (+.f64 x y) -2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (+.f64 (+.f64 x y) -2) (neg.f64 (*.f64 (+.f64 (+.f64 x y) -2) x))) (/.f64 1 (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 (+.f64 x y) -2))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 x y) -2))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (+.f64 x y) -2))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))) (*.f64 (+.f64 (+.f64 x y) -2) (/.f64 x (cbrt.f64 (+.f64 (+.f64 x y) -2))))) (*.f64 (+.f64 (+.f64 x y) -2) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (-.f64 2 (+.f64 x y))) (*.f64 (+.f64 (+.f64 x y) -2) (neg.f64 x))) (*.f64 (+.f64 (+.f64 x y) -2) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (+.f64 (+.f64 x y) -2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)) (/.f64 x (cbrt.f64 (+.f64 (+.f64 x y) -2))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (+.f64 (+.f64 x y) -2))) (+.f64 (+.f64 x y) -2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (+.f64 (+.f64 x y) -2))) (-.f64 2 (+.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))) (*.f64 (-.f64 2 (+.f64 x y)) (/.f64 x (cbrt.f64 (+.f64 (+.f64 x y) -2))))) (*.f64 (-.f64 2 (+.f64 x y)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (+.f64 (+.f64 x y) -2)) (*.f64 (-.f64 2 (+.f64 x y)) x)) (*.f64 (-.f64 2 (+.f64 x y)) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (-.f64 2 (+.f64 x y))) (*.f64 (-.f64 2 (+.f64 x y)) (neg.f64 x))) (*.f64 (-.f64 2 (+.f64 x y)) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 y (+.f64 (+.f64 x y) -2) (neg.f64 (*.f64 (+.f64 (+.f64 x y) -2) x)))) (neg.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 (+.f64 x y) -2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (+.f64 (+.f64 x y) -2) (neg.f64 (*.f64 (+.f64 (+.f64 x y) -2) x))) (pow.f64 (+.f64 (+.f64 x y) -2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 2 (+.f64 x y)))) (-.f64 y x)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 y x) 2))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 (+.f64 x y) -2))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (+.f64 (+.f64 x y) -2) (neg.f64 (*.f64 (+.f64 (+.f64 x y) -2) x))) 1) (pow.f64 (+.f64 (+.f64 x y) -2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 (+.f64 x y) -2))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 (+.f64 x y) -2))) 1) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (+.f64 (+.f64 x y) -2) (neg.f64 (*.f64 (+.f64 (+.f64 x y) -2) x))) (+.f64 (+.f64 x y) -2)) (+.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (+.f64 (pow.f64 (+.f64 x y) 3) -8)) (/.f64 1 (+.f64 4 (*.f64 (+.f64 x y) (+.f64 (+.f64 x y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) -1) (-.f64 2 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 y x) (cbrt.f64 (+.f64 (+.f64 x y) -2)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (+.f64 (+.f64 x y) -2)) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 2 (+.f64 x y)))) (/.f64 y (cbrt.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (+.f64 (+.f64 x y) -2))) (cbrt.f64 (pow.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) 2)) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 -1 (-.f64 2 (+.f64 x y))) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (+.f64 (+.f64 x y) -2)) (/.f64 x (-.f64 2 (+.f64 x y))))))))"]],"rules":[["egg-rr",74]],"time":25.52001953125,"type":"rewrite"},{"count":[[98,107]],"inputs":[["(*.f64 -1 (/.f64 x (-.f64 x 2)))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (-.f64 x 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 2))))) (*.f64 -1 (/.f64 x (-.f64 x 2))))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (-.f64 x 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 2))))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 x 2))) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 3))) (/.f64 1 (pow.f64 (-.f64 x 2) 2))))))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (-.f64 x 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 2))))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 x 2))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 (-.f64 x 2) 3)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 4))))) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 3))) (/.f64 1 (pow.f64 (-.f64 x 2) 2)))))))","1","(-.f64 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 1 (*.f64 -1 (/.f64 x y)))) (/.f64 x y))","(-.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (pow.f64 (-.f64 x 2) 2)) (pow.f64 y 3)) (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2))))))) (/.f64 x y))","1","(-.f64 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 1 (*.f64 -1 (/.f64 x y)))) (/.f64 x y))","(-.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2)))))) (/.f64 x y))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (pow.f64 (-.f64 x 2) 2)) (pow.f64 y 3)) (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2))))))) (/.f64 x y))","(/.f64 y (-.f64 y 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) x)) (/.f64 y (-.f64 y 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) (pow.f64 x 2)) (-.f64 y 2)) (/.f64 y (-.f64 y 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) x)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 4)) (/.f64 1 (pow.f64 (-.f64 y 2) 3))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) (pow.f64 x 2)) (-.f64 y 2)) (/.f64 y (-.f64 y 2)))))","-1","(-.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 y 2) x))))","(-.f64 (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 (-.f64 y 2) (-.f64 y (*.f64 -1 (-.f64 y 2)))) (pow.f64 x 2)))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 y 2) x))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (-.f64 y 2) 2) (-.f64 y (*.f64 -1 (-.f64 y 2)))) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 (-.f64 y 2) (-.f64 y (*.f64 -1 (-.f64 y 2)))) (pow.f64 x 2))))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 y 2) x))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) x)) (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) (-.f64 y 2)) (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) x)) (+.f64 (/.f64 (*.f64 (-.f64 y 2) (-.f64 (+.f64 2 (*.f64 -1 y)) y)) (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) (pow.f64 (-.f64 y 2) 2)) (pow.f64 x 3))))) 1)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 x (-.f64 x 2)))","(/.f64 x (-.f64 2 x))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (-.f64 x 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 2))))) (*.f64 -1 (/.f64 x (-.f64 x 2))))","(fma.f64 y (+.f64 (/.f64 1 (+.f64 x -2)) (*.f64 x (pow.f64 (+.f64 x -2) -2))) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (-.f64 x 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 2))))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 x 2))) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 3))) (/.f64 1 (pow.f64 (-.f64 x 2) 2))))))","(fma.f64 y (+.f64 (/.f64 1 (+.f64 x -2)) (*.f64 x (pow.f64 (+.f64 x -2) -2))) (fma.f64 (*.f64 y y) (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (pow.f64 (+.f64 x -2) -2)) (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (-.f64 x 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 2))))) (+.f64 (*.f64 -1 (/.f64 x (-.f64 x 2))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 (-.f64 x 2) 3)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 4))))) (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 x 2) 3))) (/.f64 1 (pow.f64 (-.f64 x 2) 2)))))))","(+.f64 (fma.f64 y (+.f64 (/.f64 1 (+.f64 x -2)) (*.f64 x (pow.f64 (+.f64 x -2) -2))) (/.f64 x (-.f64 2 x))) (fma.f64 (pow.f64 y 3) (+.f64 (pow.f64 (+.f64 x -2) -3) (/.f64 x (pow.f64 (+.f64 x -2) 4))) (*.f64 (*.f64 y y) (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (pow.f64 (+.f64 x -2) -2)))))","1","(-.f64 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 1 (*.f64 -1 (/.f64 x y)))) (/.f64 x y))","(-.f64 (+.f64 1 (/.f64 (-.f64 2 x) y)) (/.f64 x y))","(-.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2)))))) (/.f64 x y))","(+.f64 (+.f64 (/.f64 (-.f64 2 x) y) (*.f64 (*.f64 (+.f64 x (+.f64 x -2)) (+.f64 x -2)) (pow.f64 y -2))) (-.f64 1 (/.f64 x y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (pow.f64 (-.f64 x 2) 2)) (pow.f64 y 3)) (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2))))))) (/.f64 x y))","(+.f64 (fma.f64 (*.f64 (-.f64 (-.f64 2 x) x) (pow.f64 (+.f64 x -2) 2)) (pow.f64 y -3) (+.f64 (/.f64 (-.f64 2 x) y) (*.f64 (*.f64 (+.f64 x (+.f64 x -2)) (+.f64 x -2)) (pow.f64 y -2)))) (-.f64 1 (/.f64 x y)))","1","(-.f64 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 1 (*.f64 -1 (/.f64 x y)))) (/.f64 x y))","(-.f64 (+.f64 1 (/.f64 (-.f64 2 x) y)) (/.f64 x y))","(-.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2)))))) (/.f64 x y))","(+.f64 (+.f64 (/.f64 (-.f64 2 x) y) (*.f64 (*.f64 (+.f64 x (+.f64 x -2)) (+.f64 x -2)) (pow.f64 y -2))) (-.f64 1 (/.f64 x y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (pow.f64 (-.f64 x 2) 2)) (pow.f64 y 3)) (+.f64 (*.f64 2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 x)) x) (-.f64 x 2)) (pow.f64 y 2))))))) (/.f64 x y))","(+.f64 (fma.f64 (*.f64 (-.f64 (-.f64 2 x) x) (pow.f64 (+.f64 x -2) 2)) (pow.f64 y -3) (+.f64 (/.f64 (-.f64 2 x) y) (*.f64 (*.f64 (+.f64 x (+.f64 x -2)) (+.f64 x -2)) (pow.f64 y -2)))) (-.f64 1 (/.f64 x y)))","(/.f64 y (-.f64 y 2))","(/.f64 y (+.f64 y -2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) x)) (/.f64 y (-.f64 y 2)))","(fma.f64 (neg.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y)))) x (/.f64 y (+.f64 y -2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) (pow.f64 x 2)) (-.f64 y 2)) (/.f64 y (-.f64 y 2))))","(fma.f64 (neg.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y)))) x (/.f64 (fma.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y))) (*.f64 x x) y) (+.f64 y -2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) x)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 4)) (/.f64 1 (pow.f64 (-.f64 y 2) 3))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 y (pow.f64 (-.f64 y 2) 2)) (/.f64 1 (-.f64 y 2))) (pow.f64 x 2)) (-.f64 y 2)) (/.f64 y (-.f64 y 2)))))","(-.f64 (fma.f64 (neg.f64 (fma.f64 y (pow.f64 (+.f64 y -2) (neg.f64 4)) (pow.f64 (+.f64 y -2) -3))) (pow.f64 x 3) (/.f64 (fma.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y))) (*.f64 x x) y) (+.f64 y -2))) (*.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y))) x))","-1","(-.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 y 2) x))))","(+.f64 (/.f64 (+.f64 (+.f64 y -2) y) x) -1)","(-.f64 (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 (-.f64 y 2) (-.f64 y (*.f64 -1 (-.f64 y 2)))) (pow.f64 x 2)))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 y 2) x))))","(+.f64 (fma.f64 (*.f64 (-.f64 2 y) (+.f64 (+.f64 y -2) y)) (pow.f64 x -2) (/.f64 (+.f64 (+.f64 y -2) y) x)) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (-.f64 y 2) 2) (-.f64 y (*.f64 -1 (-.f64 y 2)))) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 (-.f64 y 2) (-.f64 y (*.f64 -1 (-.f64 y 2)))) (pow.f64 x 2))))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 y 2) x))))","(fma.f64 (*.f64 (pow.f64 (+.f64 y -2) 2) (+.f64 (+.f64 y -2) y)) (pow.f64 x -3) (+.f64 (fma.f64 (*.f64 (-.f64 2 y) (+.f64 (+.f64 y -2) y)) (pow.f64 x -2) (/.f64 (+.f64 (+.f64 y -2) y) x)) -1))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) x)) 1)","(+.f64 (/.f64 (+.f64 (+.f64 y -2) y) x) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) x)) (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) (-.f64 y 2)) (pow.f64 x 2))) 1)","(+.f64 (fma.f64 (*.f64 (-.f64 2 y) (+.f64 (+.f64 y -2) y)) (pow.f64 x -2) (/.f64 (+.f64 (+.f64 y -2) y) x)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) x)) (+.f64 (/.f64 (*.f64 (-.f64 y 2) (-.f64 (+.f64 2 (*.f64 -1 y)) y)) (pow.f64 x 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (+.f64 2 (*.f64 -1 y)) y) (pow.f64 (-.f64 y 2) 2)) (pow.f64 x 3))))) 1)","(fma.f64 (*.f64 (pow.f64 (+.f64 y -2) 2) (+.f64 (+.f64 y -2) y)) (pow.f64 x -3) (+.f64 (fma.f64 (*.f64 (-.f64 2 y) (+.f64 (+.f64 y -2) y)) (pow.f64 x -2) (/.f64 (+.f64 (+.f64 y -2) y) x)) -1))"]],"time":95.343017578125,"type":"simplify"},{"compiler":[[2447,1461]],"time":25.865966796875,"type":"eval"},{"alts":[["(fma.f64 (neg.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y)))) x (/.f64 (fma.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y))) (*.f64 x x) y) (+.f64 y -2)))","fresh",25.788195103136157],["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","done",0.03125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","next",0.20482260745286213],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))","fresh",2.444947018165757]],"compiler":[[38,27],[11,7],[14,10],[26,16],[38,27],[14,10],[26,16]],"count":[[108,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[107,3],"picked":[1,1]}],"min-error":[0],"time":25.201171875,"type":"prune"},{"compiler":[[48,21]],"locations":[["(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))",0.01953125,true],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",0.03125,true],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)",0.18492128907376806,true]],"time":9.2578125,"type":"localize"},{"count":[[3,72]],"series":[["(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))","y","-inf",0.405029296875],["(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))","y","inf",0.4970703125],["(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))","y","0",0.763916015625],["(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))","x","-inf",0.416015625],["(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))","x","inf",0.552001953125],["(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))","x","0",0.988037109375],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","y","-inf",0.27490234375],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","y","inf",0.2939453125],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","y","0",0.343994140625],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","x","-inf",0.25390625],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","x","inf",0.259033203125],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","x","0",0.346923828125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","y","-inf",2.470947265625],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","y","inf",2.738037109375],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","y","0",5.473876953125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","x","-inf",2.1259765625],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","x","inf",3.2080078125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","x","0",5.281005859375]],"time":27.35205078125,"type":"series"},{"count":[[3,217]],"inputs":[["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","(cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 0) (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (*.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 (+.f64 x y) -2)) (neg.f64 y)) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (*.f64 (/.f64 -1 (+.f64 (+.f64 x y) -2)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (*.f64 0 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (*.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x (-.f64 2 (+.f64 x y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2)) (/.f64 (*.f64 (-.f64 2 (+.f64 x y)) y) (pow.f64 (-.f64 2 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 (+.f64 x y) -2)) (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (/.f64 x (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 2 (+.f64 x y))) (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 -1 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 (+.f64 x y) -2)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3) (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (+.f64 x y) -2)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 2 (+.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (pow.f64 (-.f64 2 (+.f64 x y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) (/.f64 1 (pow.f64 (-.f64 2 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (-.f64 2 (+.f64 x y))) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) y)) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (/.f64 y (cbrt.f64 (-.f64 2 (+.f64 x y)))))) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (+.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (neg.f64 y))) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 (-.f64 2 (+.f64 x y)) (/.f64 y (cbrt.f64 (-.f64 2 (+.f64 x y)))))) (*.f64 (-.f64 2 (+.f64 x y)) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (+.f64 (+.f64 x y) -2)) (*.f64 (-.f64 2 (+.f64 x y)) (neg.f64 y))) (*.f64 (-.f64 2 (+.f64 x y)) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (-.f64 2 (+.f64 x y))) (*.f64 (+.f64 (+.f64 x y) -2) y)) (*.f64 (+.f64 (+.f64 x y) -2) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 (+.f64 (+.f64 x y) -2) (/.f64 y (cbrt.f64 (-.f64 2 (+.f64 x y)))))) (*.f64 (+.f64 (+.f64 x y) -2) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y)))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3) (-.f64 x y)) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 1) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 1) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) 1) (pow.f64 (-.f64 2 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 1) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))))) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 1) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) (-.f64 2 (+.f64 x y))) (-.f64 2 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (/.f64 1 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) -1) (+.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (+.f64 (+.f64 x y) -2)) (*.f64 (+.f64 (+.f64 x y) -2) (neg.f64 y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 y x))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (-.f64 2 (+.f64 x y))) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3) (/.f64 x (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 2 (+.f64 x y))) 2)) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (+.f64 (+.f64 x y) -2)) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (+.f64 (+.f64 x y) -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 0) (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (*.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 (+.f64 x y) -2)) (neg.f64 y)) (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (*.f64 (/.f64 -1 (+.f64 (+.f64 x y) -2)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (*.f64 0 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (*.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x (-.f64 2 (+.f64 x y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2)) (/.f64 (*.f64 (-.f64 2 (+.f64 x y)) y) (pow.f64 (-.f64 2 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 (+.f64 x y) -2)) (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (+.f64 (+.f64 x y) -2)) (/.f64 x (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 2 (+.f64 x y))) (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 -1 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 (+.f64 x y) -2)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3) (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (+.f64 x y) -2)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 2 (+.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (pow.f64 (-.f64 2 (+.f64 x y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) (/.f64 1 (pow.f64 (-.f64 2 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (-.f64 2 (+.f64 x y))) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) y)) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (/.f64 y (cbrt.f64 (-.f64 2 (+.f64 x y)))))) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (+.f64 (+.f64 x y) -2)) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (neg.f64 y))) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 (-.f64 2 (+.f64 x y)) (/.f64 y (cbrt.f64 (-.f64 2 (+.f64 x y)))))) (*.f64 (-.f64 2 (+.f64 x y)) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (+.f64 (+.f64 x y) -2)) (*.f64 (-.f64 2 (+.f64 x y)) (neg.f64 y))) (*.f64 (-.f64 2 (+.f64 x y)) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (-.f64 2 (+.f64 x y))) (*.f64 (+.f64 (+.f64 x y) -2) y)) (*.f64 (+.f64 (+.f64 x y) -2) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 (+.f64 (+.f64 x y) -2) (/.f64 y (cbrt.f64 (-.f64 2 (+.f64 x y)))))) (*.f64 (+.f64 (+.f64 x y) -2) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y)))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3) (-.f64 x y)) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 1) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 1) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) 1) (pow.f64 (-.f64 2 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 1) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))))) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 1) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y))) (-.f64 2 (+.f64 x y))) (-.f64 2 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (/.f64 1 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) -1) (+.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (+.f64 (+.f64 x y) -2)) (*.f64 (+.f64 (+.f64 x y) -2) (neg.f64 y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 y x))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (-.f64 2 (+.f64 x y))) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3) (/.f64 x (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 2 (+.f64 x y))) 2)) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (+.f64 (+.f64 x y) -2)) (/.f64 y (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (+.f64 (+.f64 x y) -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 0) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (*.f64 0 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (-.f64 2 (+.f64 x y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/3)) (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) 1) (*.f64 (cbrt.f64 (+.f64 (+.f64 x y) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) 1) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))))) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y))))) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 x (-.f64 2 (+.f64 x y)) (neg.f64 (*.f64 (-.f64 2 (+.f64 x y)) y)))) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))))"]],"rules":[["egg-rr",35],["egg-rr",91],["egg-rr",91]],"time":42.174072265625,"type":"rewrite"},{"count":[[289,238]],"inputs":[["(*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (+.f64 (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (cbrt.f64 -1)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 8) (pow.f64 1 4)) (pow.f64 y 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1)))))))))))) (pow.f64 x 3)))))","-1","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) 1)","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) 1)","(-.f64 (+.f64 (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))))) (pow.f64 x 3)))))))))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)))))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3))))) (+.f64 (*.f64 2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)))) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2))))))) 1)","(*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3)))))))) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 8)) (pow.f64 x 8)) 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))","(+.f64 1 (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)) (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))))))))","1","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (-.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))))))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)))))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)))))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))))))","(*.f64 -1 (/.f64 y (-.f64 2 y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y))))","(+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 3)) (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y)))))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(/.f64 x (-.f64 2 x))","(+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (/.f64 1 (pow.f64 (-.f64 2 x) 3))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (-.f64 2 x)) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (cbrt.f64 -1)) (pow.f64 x 3))))))","(pow.f64 (/.f64 x (-.f64 2 x)) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (pow.f64 (/.f64 x (-.f64 2 x)) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) 1)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))","(/.f64 y (+.f64 -2 y))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))))","(fma.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 (-.f64 2 y) -4)) 1/9) (*.f64 1 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))))) x (/.f64 y (+.f64 -2 y)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))))","(fma.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 (-.f64 2 y) -4)) 1/9) (*.f64 1 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))))) x (fma.f64 (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (*.f64 (cbrt.f64 (/.f64 y (+.f64 -2 y))) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y -4)) 1/9) (/.f64 1 1)) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2)) (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3)))))) -2/3) (cbrt.f64 -1)))))) (*.f64 x x) (/.f64 y (+.f64 -2 y))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (+.f64 (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (cbrt.f64 -1)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 8) (pow.f64 1 4)) (pow.f64 y 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1)))))))))))) (pow.f64 x 3)))))","(fma.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 (-.f64 2 y) -4)) 1/9) (*.f64 1 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))))) x (+.f64 (fma.f64 (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (*.f64 (cbrt.f64 (/.f64 y (+.f64 -2 y))) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y -4)) 1/9) (/.f64 1 1)) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2)) (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3)))))) -2/3) (cbrt.f64 -1)))))) (*.f64 x x) (/.f64 y (+.f64 -2 y))) (*.f64 (fma.f64 -1/3 (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 3)) 1) (fma.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y -5)) 1/9) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))))))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) (-.f64 -1 2)) (*.f64 y (pow.f64 (-.f64 2 y) -4)))))) (fma.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y -5)) 1/9) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))))))) (+.f64 (*.f64 (cbrt.f64 (/.f64 y (+.f64 -2 y))) (fma.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 3)) 1) (fma.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y -5)) 1/9) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))))))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) (-.f64 -1 2)) (*.f64 y (pow.f64 (-.f64 2 y) -4))))))) (cbrt.f64 -1)) (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 8) (pow.f64 y -8)) 1/9) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -8)) (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3)))))))))) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (*.f64 (/.f64 1 1) (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y -4)) 1/9) (/.f64 1 1)) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2)) (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3)))))) -2/3) (cbrt.f64 -1)))))))) (pow.f64 x 3))))","-1","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) 1)","(+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) 1) x) -1)","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) 1) x) (+.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 1)) (/.f64 (*.f64 -2/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (cbrt.f64 -1)))) (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2))))) (*.f64 x x)) (*.f64 2/9 (*.f64 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (pow.f64 x -2))))) 1)","(-.f64 (+.f64 (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))))) (pow.f64 x 3)))))))))) 1)","(+.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (pow.f64 x -2)) (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (pow.f64 x -3)) (fma.f64 -1/3 (*.f64 (-.f64 (fma.f64 -2/3 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (/.f64 (pow.f64 (fma.f64 2 y -2) 3) (/.f64 1 1/27))) (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (pow.f64 x -3)) (+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) 1) x) (fma.f64 1/3 (*.f64 (/.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 1)) (/.f64 (*.f64 -2/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (cbrt.f64 -1)))) x) (pow.f64 x -2)) (+.f64 (/.f64 (+.f64 (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (*.f64 (cbrt.f64 -1) (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 1)) (/.f64 (*.f64 -2/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (cbrt.f64 -1))))) (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 -1) (fma.f64 -2/9 (*.f64 (fma.f64 2 y -2) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -8)))) (/.f64 (*.f64 -2/3 (-.f64 (fma.f64 -2/3 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (/.f64 (pow.f64 (fma.f64 2 y -2) 3) (/.f64 1 1/27))) (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2)))) (cbrt.f64 -1)))) (pow.f64 x -3)))))))) -1)","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) 1)","(+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) 1) x) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)))))) 1)","(+.f64 (+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) 1) x) (+.f64 (*.f64 (*.f64 (fma.f64 -2/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y))) 1) (*.f64 (*.f64 1/9 (pow.f64 (fma.f64 2 y -2) 2)) 1)) (cbrt.f64 -1)) (pow.f64 x -2)) (/.f64 (+.f64 (*.f64 1/3 (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 -2/9 (pow.f64 (fma.f64 2 y -2) 2))) (*.f64 x x)))) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3))))) (+.f64 (*.f64 2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)))) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2))))))) 1)","(+.f64 (+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) 1) x) (*.f64 (*.f64 (fma.f64 -2/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y))) 1) (*.f64 (*.f64 1/9 (pow.f64 (fma.f64 2 y -2) 2)) 1)) (cbrt.f64 -1)) (pow.f64 x -2))) (-.f64 (-.f64 (/.f64 (+.f64 (*.f64 1/3 (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 -2/9 (pow.f64 (fma.f64 2 y -2) 2))) (*.f64 x x)) (*.f64 (fma.f64 1/3 (fma.f64 -2/3 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (-.f64 (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3)) (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2)))) (fma.f64 2/9 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (fma.f64 1/3 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 -2/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y))) 1) (*.f64 (*.f64 1/9 (pow.f64 (fma.f64 2 y -2) 2)) 1))) (cbrt.f64 -1)) (*.f64 (cbrt.f64 -1) (fma.f64 -2/3 (*.f64 (-.f64 (fma.f64 -2/3 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3))) (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) 1) (*.f64 -2/9 (*.f64 (*.f64 (fma.f64 2 y -2) 1) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))))))))) (pow.f64 x -3))) 1))","(*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x)))","(/.f64 x (-.f64 2 x))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))))","(fma.f64 y (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (pow.f64 (*.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) -4)) 1/9)) -1) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))))","(+.f64 (fma.f64 y (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (pow.f64 (*.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) -4)) 1/9)) -1) (/.f64 x (-.f64 2 x))) (*.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x -4)) 1/9)))) (fma.f64 2/9 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3)))))))))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3)))))))) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 8)) (pow.f64 x 8)) 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))))))))","(fma.f64 y (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (pow.f64 (*.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) -4)) 1/9)) -1) (fma.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x -4)) 1/9))))) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9)) (fma.f64 2/3 (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x -5)) 1/9)) (+.f64 (-.f64 (pow.f64 (-.f64 2 x) -3) (*.f64 x (pow.f64 (-.f64 2 x) -4))) (*.f64 -1/27 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 3) (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2))))))))) (fma.f64 2/9 (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x -5)) 1/9)) (*.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 2/9 (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 8) (pow.f64 x -8)) 1/9)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 2/3 (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x -5)) 1/9)) (+.f64 (-.f64 (pow.f64 (-.f64 2 x) -3) (*.f64 x (pow.f64 (-.f64 2 x) -4))) (*.f64 -1/27 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 3) (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2))))))))))))) (pow.f64 y 3) (+.f64 (/.f64 x (-.f64 2 x)) (*.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x -4)) 1/9)))) (fma.f64 2/9 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3)))))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y))))","(+.f64 (fma.f64 1/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) 1) (*.f64 2/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))","(+.f64 (fma.f64 1/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) 1) (fma.f64 1/9 (*.f64 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2) (pow.f64 y -2)) (fma.f64 2/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (pow.f64 y -2)) (/.f64 (+.f64 (*.f64 2/9 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2)) (*.f64 -2/3 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))))) (*.f64 y y))))))","(+.f64 1 (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)) (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))))))))","(+.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (neg.f64 (+.f64 x (+.f64 -2 x))))) (*.f64 -2/3 (+.f64 (*.f64 2 (*.f64 (neg.f64 (*.f64 -1/3 (+.f64 x (+.f64 -2 x)))) (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))))) (fma.f64 1/27 (neg.f64 (pow.f64 (+.f64 x (+.f64 -2 x)) 3)) (*.f64 (+.f64 x (+.f64 -2 x)) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3)) (fma.f64 1/9 (*.f64 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2) (pow.f64 y -2)) (fma.f64 -2/9 (*.f64 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (neg.f64 (+.f64 x (+.f64 -2 x)))) (pow.f64 y -3)) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (pow.f64 y -2)) (+.f64 (*.f64 1/3 (+.f64 (*.f64 (*.f64 (fma.f64 1/9 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2) (*.f64 -2/3 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))))) (neg.f64 (+.f64 x (+.f64 -2 x)))) (pow.f64 y -3)) (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)))) (+.f64 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (neg.f64 (+.f64 x (+.f64 -2 x))))) (*.f64 -1/3 (fma.f64 1/27 (neg.f64 (pow.f64 (+.f64 x (+.f64 -2 x)) 3)) (+.f64 (*.f64 2 (*.f64 (neg.f64 (*.f64 -1/3 (+.f64 x (+.f64 -2 x)))) (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))))) (*.f64 (+.f64 x (+.f64 -2 x)) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3)) (fma.f64 2/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) (/.f64 (+.f64 (*.f64 2/9 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2)) (*.f64 -2/3 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))))) (*.f64 y y))))))))))","1","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) 1)","(-.f64 1 (/.f64 (fma.f64 2 x -2) y))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))))","(-.f64 (fma.f64 2/9 (pow.f64 (/.f64 (*.f64 2 (-.f64 1 x)) y) 2) (+.f64 1 (fma.f64 1/9 (pow.f64 (/.f64 (*.f64 2 (-.f64 1 x)) y) 2) (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2)) -1)))) (/.f64 (fma.f64 2 x -2) y))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (-.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))))))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)))))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)))))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))))))","(-.f64 (fma.f64 2/9 (pow.f64 (/.f64 (*.f64 2 (-.f64 1 x)) y) 2) (-.f64 (-.f64 (fma.f64 1/9 (pow.f64 (/.f64 (*.f64 2 (-.f64 1 x)) y) 2) (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2)) -1)) (*.f64 (+.f64 (*.f64 (fma.f64 2 x -2) (+.f64 (*.f64 -1/9 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x)))) (*.f64 1/3 (fma.f64 1/9 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 -2/3 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x)))))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 -1/3 (fma.f64 2 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))))) (*.f64 1/27 (pow.f64 (fma.f64 2 x -2) 3))) (*.f64 (fma.f64 2 x -2) (pow.f64 (-.f64 2 x) 2))) -1) (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (fma.f64 2 x -2)) (+.f64 -1/9 -2/9)))) (pow.f64 y -3))) -1)) (/.f64 (fma.f64 2 x -2) y))","(*.f64 -1 (/.f64 y (-.f64 2 y)))","(/.f64 y (+.f64 -2 y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))","(+.f64 (/.f64 y (+.f64 -2 y)) (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y))))","(+.f64 (/.f64 y (+.f64 -2 y)) (fma.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) x (*.f64 (/.f64 (*.f64 x x) 1) (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))))))","(+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 3)) (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y)))))","(+.f64 (*.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))) (/.f64 (pow.f64 x 3) (-.f64 2 y))) (+.f64 (/.f64 y (+.f64 -2 y)) (fma.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) x (*.f64 (/.f64 (*.f64 x x) 1) (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3)))))))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 (fma.f64 2 y -2) x) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)) (pow.f64 x -2)) (-.f64 (/.f64 (fma.f64 2 y -2) x) 1))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)) (pow.f64 x -2)) (+.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x -3)) (-.f64 (/.f64 (fma.f64 2 y -2) x) 1)))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 (fma.f64 2 y -2) x) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)) (pow.f64 x -2)) (-.f64 (/.f64 (fma.f64 2 y -2) x) 1))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)) (pow.f64 x -2)) (+.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x -3)) (-.f64 (/.f64 (fma.f64 2 y -2) x) 1)))","(/.f64 x (-.f64 2 x))","(+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))","(-.f64 (/.f64 x (-.f64 2 x)) (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y))))","(-.f64 (-.f64 (/.f64 x (-.f64 2 x)) (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) y)) (*.f64 (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))) (*.f64 y y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (/.f64 1 (pow.f64 (-.f64 2 x) 3))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))))","(-.f64 (-.f64 (-.f64 (/.f64 x (-.f64 2 x)) (*.f64 (pow.f64 y 3) (-.f64 (pow.f64 (-.f64 2 x) -3) (*.f64 x (pow.f64 (-.f64 2 x) -4))))) (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) y)) (*.f64 (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))) (*.f64 y y)))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(+.f64 1 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (-.f64 2 x)) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(+.f64 1 (+.f64 (*.f64 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) (/.f64 (-.f64 2 x) y)) (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(+.f64 (*.f64 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) (/.f64 (-.f64 2 x) y)) (+.f64 (+.f64 (-.f64 1 (/.f64 x y)) (*.f64 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) (pow.f64 (/.f64 (+.f64 -2 x) y) 2))) (/.f64 (-.f64 2 x) y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(-.f64 1 (/.f64 (fma.f64 2 x -2) y))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2)))))","(-.f64 (-.f64 (/.f64 (*.f64 (+.f64 -2 x) (fma.f64 2 x -2)) (*.f64 y y)) (/.f64 (fma.f64 2 x -2) y)) -1)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (+.f64 -2 x) (fma.f64 2 x -2)) (*.f64 y y)) (/.f64 (fma.f64 2 x -2) y)) -1) (/.f64 (*.f64 (fma.f64 2 x -2) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3)))","(*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 y (+.f64 -2 y)))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))","(+.f64 (cbrt.f64 (/.f64 y (+.f64 -2 y))) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (/.f64 1 1) (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) x))))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))))))","(+.f64 (cbrt.f64 (/.f64 y (+.f64 -2 y))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (/.f64 (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3)))))) 1)) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (/.f64 1 1) (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (/.f64 (*.f64 (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 3)) 1) (fma.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y -5)) 1/9) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3))))))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) (-.f64 -1 2)) (*.f64 y (pow.f64 (-.f64 2 y) -4)))))) (pow.f64 x 3)) 1)) (+.f64 (cbrt.f64 (/.f64 y (+.f64 -2 y))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (/.f64 (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (-.f64 (pow.f64 (-.f64 2 y) -2) (/.f64 y (pow.f64 (-.f64 2 y) 3)))))) 1)) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (/.f64 1 1) (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) x))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (/.f64 (fma.f64 2 y -2) x)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(fma.f64 -1/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2))) (pow.f64 x -2)) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (/.f64 (fma.f64 2 y -2) x))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (-.f64 (fma.f64 -2/3 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2)))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (/.f64 (pow.f64 (fma.f64 2 y -2) 3) (/.f64 1 1/27))) (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (pow.f64 x -3)) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (/.f64 1 (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (+.f64 -2 y) (fma.f64 2 y -2))) (pow.f64 x -2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (/.f64 (fma.f64 2 y -2) x))))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (cbrt.f64 -1))","(fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) x) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) x) (*.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 x -2)))) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (cbrt.f64 -1)) (pow.f64 x 3))))))","(+.f64 (*.f64 -1/3 (+.f64 (/.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) x) (*.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 x -2)))) (+.f64 (cbrt.f64 -1) (/.f64 (*.f64 (*.f64 (-.f64 (fma.f64 -2/3 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3))) (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (cbrt.f64 -1)) (pow.f64 x -3)) 3)))","(pow.f64 (/.f64 x (-.f64 2 x)) 1/3)","(cbrt.f64 (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (pow.f64 (/.f64 x (-.f64 2 x)) 1/3))","(fma.f64 -1/3 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (*.f64 y (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9))) (cbrt.f64 (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))","(+.f64 (fma.f64 -1/3 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (*.f64 y (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9))) (cbrt.f64 (/.f64 x (-.f64 2 x)))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2))) (*.f64 y y)) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3)))))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))","(+.f64 (fma.f64 -1/3 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (*.f64 y (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9))) (cbrt.f64 (/.f64 x (-.f64 2 x)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)))) (+.f64 (*.f64 (pow.f64 y 3) (fma.f64 2/3 (*.f64 (*.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x -5)) 1/9)) (+.f64 (-.f64 (pow.f64 (-.f64 2 x) -3) (*.f64 x (pow.f64 (-.f64 2 x) -4))) (*.f64 -1/27 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 3) (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)))))))) (*.f64 (*.f64 y y) (fma.f64 1/3 (*.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 -2 x)) (*.f64 x (pow.f64 (-.f64 2 x) -2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (-.f64 (pow.f64 (-.f64 2 x) -2) (*.f64 x (pow.f64 (-.f64 2 x) -3))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) 1)","(fma.f64 1/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) 1)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))","(+.f64 (fma.f64 1/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) 1) (*.f64 (*.f64 -1/3 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2)))) (pow.f64 y -2)))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))))))","(+.f64 (fma.f64 1/3 (neg.f64 (/.f64 (+.f64 x (+.f64 -2 x)) y)) 1) (*.f64 -1/3 (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (pow.f64 y -2)) (*.f64 (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (neg.f64 (+.f64 x (+.f64 -2 x)))) (fma.f64 1/27 (neg.f64 (pow.f64 (+.f64 x (+.f64 -2 x)) 3)) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (+.f64 x (+.f64 -2 x)) (-.f64 2 x)) (*.f64 1/3 (pow.f64 (neg.f64 (+.f64 x (+.f64 -2 x))) 2))) (neg.f64 (+.f64 x (+.f64 -2 x)))) (*.f64 (+.f64 x (+.f64 -2 x)) (pow.f64 (-.f64 2 x) 2))))) (pow.f64 y -3)))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(+.f64 1 (/.f64 (*.f64 -1/3 (fma.f64 2 x -2)) y))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))","(+.f64 1 (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 2 x -2) y) (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 -1/3 (fma.f64 2 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))))) (*.f64 1/27 (pow.f64 (fma.f64 2 x -2) 3))) (*.f64 (fma.f64 2 x -2) (pow.f64 (-.f64 2 x) 2))) (pow.f64 y -3)) (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 2 x -2) y) (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2))))))"]],"time":424.68701171875,"type":"simplify"},{"compiler":[[15330,11959]],"time":177.260009765625,"type":"eval"},{"alts":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","done",0.03125],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","next",0.2587826902310537],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","done",0.20482260745286213],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))","fresh",2.444947018165757]],"compiler":[[11,7],[15,11],[14,10],[26,16],[15,11],[26,16]],"count":[[242,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[238,1],"picked":[1,1]}],"min-error":[0],"time":64.260009765625,"type":"prune"},{"compiler":[[51,22]],"locations":[["(cbrt.f64 (-.f64 2 (+.f64 x y)))",0.078125,true],["(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))",0.08041000976844202,true],["(cbrt.f64 (-.f64 x y))",0.0859375,true],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)",0.18492128907376806,true]],"time":10.33984375,"type":"localize"},{"count":[[4,64]],"series":[["(cbrt.f64 (-.f64 2 (+.f64 x y)))","y","-inf",0.18798828125],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","y","inf",0.205078125],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","y","0",0.669189453125],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","x","-inf",0.26611328125],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","x","inf",0.18798828125],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","x","0",0.701171875],["(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","-inf",0.259033203125],["(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","inf",0.30908203125],["(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","0",0.412841796875],["(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","-inf",0.238037109375],["(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","inf",0.2978515625],["(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","0",0.485107421875],["(cbrt.f64 (-.f64 x y))","y","-inf",2.010986328125],["(cbrt.f64 (-.f64 x y))","y","inf",0.281005859375],["(cbrt.f64 (-.f64 x y))","y","0",0.630859375],["(cbrt.f64 (-.f64 x y))","x","-inf",0.385009765625],["(cbrt.f64 (-.f64 x y))","x","inf",0.3779296875],["(cbrt.f64 (-.f64 x y))","x","0",1.095947265625],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","y","-inf",0.5009765625],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","y","inf",0.656982421875],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","y","0",0.943115234375],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","x","-inf",0.4990234375],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","x","inf",0.623046875],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","x","0",1.197998046875]],"time":14.197998046875,"type":"series"},{"count":[[4,205]],"inputs":[["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","(cbrt.f64 (-.f64 x y))","(/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y))))","(cbrt.f64 (-.f64 2 (+.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) (*.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 0) (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) (*.f64 0 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 (-.f64 2 x) y)) (neg.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 (-.f64 2 x) y)) (/.f64 y (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (+.f64 y (+.f64 x -2))) (/.f64 x (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (-.f64 2 x) y)) (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (pow.f64 (-.f64 (-.f64 2 x) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 -1 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3) (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 (-.f64 2 x) y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 y (+.f64 x -2))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 (-.f64 2 x) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (pow.f64 (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2)))) (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (cbrt.f64 (+.f64 y (+.f64 x -2))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (-.f64 y x))) (*.f64 (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (+.f64 y (+.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)) (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (-.f64 x y) 2/3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (pow.f64 (-.f64 x y) 2/3)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (+.f64 y (+.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (+.f64 y (+.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2))))) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (-.f64 x y) 2/3))) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3) (-.f64 x y)) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3) (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) -1) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) 1) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2)))) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 y (+.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 1) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) 1) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)) (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) 1) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) -1) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 y (+.f64 x -2))))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) -1) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) 1) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) -1) (+.f64 y (+.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (/.f64 1 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 4)) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 3) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (-.f64 y x))) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2)))) (cbrt.f64 (-.f64 x y))) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2)))) (cbrt.f64 (-.f64 y x))) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2))))) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (+.f64 y (+.f64 x -2))))) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (-.f64 (-.f64 2 x) y)) (*.f64 (-.f64 (-.f64 2 x) y) y)) (pow.f64 (-.f64 (-.f64 2 x) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3) (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (cbrt.f64 (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (-.f64 x y)) 0) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 x y)) (*.f64 0 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 y x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (-.f64 x y)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (-.f64 x y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) 0) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (*.f64 0 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (+.f64 y (+.f64 x -2)))) (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (-.f64 (-.f64 2 x) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)) (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 (-.f64 2 x) y))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) -1/3)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y x)))) (cbrt.f64 (cbrt.f64 (+.f64 y (+.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 y (+.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 1) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 1) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (-.f64 x y)) -1) (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 y (+.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) (*.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 0) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) (*.f64 0 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 y (+.f64 x -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 y (+.f64 x -2)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3))) (/.f64 1 (cbrt.f64 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3))) (cbrt.f64 (/.f64 1 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (pow.f64 (-.f64 (-.f64 2 x) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3))) (cbrt.f64 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3))) 1) (cbrt.f64 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 y (+.f64 x -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3))) 1) (*.f64 (cbrt.f64 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3)))) (neg.f64 (cbrt.f64 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3))) (cbrt.f64 (+.f64 4 (*.f64 (neg.f64 (+.f64 x y)) (-.f64 (neg.f64 (+.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x y) 3) 8)) (cbrt.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 (+.f64 2 x) y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (-.f64 2 x) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (+.f64 y (+.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (-.f64 (-.f64 2 x) y))))))"]],"rules":[["egg-rr",30],["egg-rr",49],["egg-rr",23],["egg-rr",103]],"time":44.1640625,"type":"rewrite"},{"count":[[269,320]],"inputs":[["(*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (+.f64 (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (cbrt.f64 -1)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 8) (pow.f64 1 4)) (pow.f64 y 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1)))))))))))) (pow.f64 x 3)))))","-1","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) 1)","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) 1)","(-.f64 (+.f64 (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))))) (pow.f64 x 3)))))))))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)))))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3))))) (+.f64 (*.f64 2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)))) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2))))))) 1)","(*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3)))))))) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 8)) (pow.f64 x 8)) 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))","(+.f64 1 (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)) (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))))))))","1","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (-.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))))))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)))))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)))))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))))))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))))","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2)))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (cbrt.f64 -1)) (pow.f64 x 3))))))","(pow.f64 (/.f64 x (-.f64 2 x)) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (pow.f64 (/.f64 x (-.f64 2 x)) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) 1)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))","(pow.f64 (-.f64 2 y) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))))","(pow.f64 (-.f64 2 x) 1/3)","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)))))) (+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))","(neg.f64 (/.f64 y (-.f64 2 y)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 4) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))))) 1) x (neg.f64 (/.f64 y (-.f64 2 y))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3)))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 4) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))))) 1) x (fma.f64 (+.f64 (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 2 y))) (*.f64 (cbrt.f64 -1) (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -4)) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))) (cbrt.f64 -1)))))))) (*.f64 x x) (neg.f64 (/.f64 y (-.f64 2 y)))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 4)) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))))))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1))))))))) (pow.f64 x 2)) (+.f64 (*.f64 -1 (*.f64 (/.f64 y (-.f64 2 y)) (pow.f64 1 1/3))) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (cbrt.f64 -1)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 8) (pow.f64 1 4)) (pow.f64 y 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 1 4)) (pow.f64 y 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) 1) y) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))) (cbrt.f64 -1)))))))))))) (pow.f64 x 3)))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 4) (pow.f64 (-.f64 2 y) 4)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))))) 1) x (+.f64 (fma.f64 (+.f64 (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 2 y))) (*.f64 (cbrt.f64 -1) (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -4)) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))) (cbrt.f64 -1)))))))) (*.f64 x x) (neg.f64 (/.f64 y (-.f64 2 y)))) (*.f64 (+.f64 (*.f64 -1/3 (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 3)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y 5)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))))) (neg.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (pow.f64 (-.f64 2 y) -2)))))) (fma.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y 5)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))))) (fma.f64 (cbrt.f64 (/.f64 y (-.f64 2 y))) (*.f64 (cbrt.f64 -1) (fma.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 3)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y 5)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))))) (neg.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (pow.f64 (-.f64 2 y) -2)))))) (cbrt.f64 -1)) (*.f64 (*.f64 -2/9 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 8) (pow.f64 y 8)) 1/9)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -8)) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))))))) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2)) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -4)) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 y) y)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))) (cbrt.f64 -1)))))))))) (pow.f64 x 3))))","-1","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) 1)","(+.f64 (*.f64 (*.f64 (/.f64 (fma.f64 2 y -2) x) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) -1)","(-.f64 (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) 1)","(+.f64 (+.f64 (*.f64 (*.f64 (/.f64 (fma.f64 2 y -2) x) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) (+.f64 (*.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -4))) (/.f64 (*.f64 -2/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y))))) (cbrt.f64 -1)))) (pow.f64 x -2)) (fma.f64 -1/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 x -2)) (*.f64 (*.f64 2/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (pow.f64 x -2))) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))) -1)","(-.f64 (+.f64 (*.f64 2/9 (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 2/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 2)) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))))) (pow.f64 x 3)))))))))) 1)","(+.f64 (fma.f64 2/9 (/.f64 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (fma.f64 -2/9 (/.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y))))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (pow.f64 x 3)) (fma.f64 -1/3 (/.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (fma.f64 -2/3 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y))))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (/.f64 (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3)) (pow.f64 (cbrt.f64 -1) 2)))) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 (/.f64 (fma.f64 2 y -2) x) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) (fma.f64 1/3 (/.f64 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -4))) (/.f64 (*.f64 -2/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y))))) (cbrt.f64 -1)))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2))) (pow.f64 x 3)) (fma.f64 -1/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 x -2)) (+.f64 (*.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -4))) (/.f64 (*.f64 -2/3 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y))))) (cbrt.f64 -1)))) (pow.f64 x -2)) (/.f64 (*.f64 (cbrt.f64 -1) (fma.f64 -2/9 (*.f64 (fma.f64 2 y -2) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -8)))) (/.f64 (*.f64 -2/3 (+.f64 (neg.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (fma.f64 -2/3 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y))))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (/.f64 (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3)) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1)))) (pow.f64 x 3))))))))) -1)","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y -2) -1) x)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2)))))) 1)","(+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y -2) -1) x)) (+.f64 (*.f64 (*.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 1/9 (pow.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) 2))) (cbrt.f64 -1)) (pow.f64 x -2)) (fma.f64 1/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y))) (pow.f64 x -2)) (*.f64 -2/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (pow.f64 x -2)))))) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (-.f64 (*.f64 2 y) 2)) (*.f64 -2/3 (-.f64 (*.f64 2 y) 2))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3))))) (+.f64 (*.f64 2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/9 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)))) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 y) 2) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 x 2))))))) 1)","(+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 y -2) -1) x)) (+.f64 (*.f64 (*.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 1/9 (pow.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) 2))) (cbrt.f64 -1)) (pow.f64 x -2)) (+.f64 (neg.f64 (/.f64 (fma.f64 1/3 (fma.f64 -2/3 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (+.f64 (neg.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3)))) (fma.f64 2/9 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (fma.f64 1/3 (*.f64 (fma.f64 2 y -2) (*.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 1/9 (pow.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) 2))) (cbrt.f64 -1))) (*.f64 (cbrt.f64 -1) (fma.f64 -2/3 (*.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (fma.f64 -2/3 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3)))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (*.f64 -2/9 (fma.f64 2 y -2)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))))))))) (pow.f64 x 3))) (fma.f64 1/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y))) (pow.f64 x -2)) (*.f64 -2/9 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (pow.f64 x -2))))))) -1)","(*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x)))","(/.f64 x (-.f64 2 x))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))))","(fma.f64 y (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 4)) 1/9)) -1) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))))","(+.f64 (fma.f64 y (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 4)) 1/9)) -1) (/.f64 x (-.f64 2 x))) (*.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/9)))) (fma.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3)))))))))","(+.f64 (*.f64 y (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))) (*.f64 -2/3 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 4)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3)))))))) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 8)) (pow.f64 x 8)) 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (-.f64 2 x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))))))))","(fma.f64 y (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 4)) 1/9)) -1) (fma.f64 (fma.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/9))))) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9)) (+.f64 (*.f64 -1/3 (fma.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x 5)) 1/9)) (+.f64 (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 4)) (+.f64 (pow.f64 (-.f64 2 x) -3) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 3) (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2))))))))) (fma.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x 5)) 1/9)) (*.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 2/9 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 8) (pow.f64 x 8)) 1/9)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x 5)) 1/9)) (+.f64 (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 4)) (+.f64 (pow.f64 (-.f64 2 x) -3) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 3) (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2))))))))))))))) (pow.f64 y 3) (+.f64 (/.f64 x (-.f64 2 x)) (*.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 2 x) x)) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (*.f64 1/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/9)))) (fma.f64 2/9 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3)))))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y))))","(+.f64 (fma.f64 1/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) 1) (/.f64 (*.f64 2/3 (+.f64 (neg.f64 x) (-.f64 2 x))) y))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))","(+.f64 (fma.f64 1/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) 1) (fma.f64 1/9 (*.f64 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2) (pow.f64 y -2)) (fma.f64 2/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (pow.f64 y -2)) (fma.f64 2/9 (*.f64 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2) (pow.f64 y -2)) (/.f64 (*.f64 -2/3 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2)))) (*.f64 y y)))))))","(+.f64 1 (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)) (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2)))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2) (pow.f64 y 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))))))))))))","(+.f64 1 (fma.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (pow.f64 y 3)) (fma.f64 -2/3 (/.f64 (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (fma.f64 1/27 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 3) (neg.f64 (*.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3)) (fma.f64 1/9 (*.f64 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2) (pow.f64 y -2)) (fma.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (pow.f64 y 3)) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (pow.f64 y -2)) (fma.f64 1/3 (/.f64 (*.f64 (fma.f64 1/9 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2) (*.f64 -2/3 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))))) (+.f64 (neg.f64 x) (-.f64 2 x))) (pow.f64 y 3)) (fma.f64 1/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) (fma.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (fma.f64 1/27 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 3) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (neg.f64 (*.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3)) (fma.f64 2/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) (fma.f64 2/9 (*.f64 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2) (pow.f64 y -2)) (/.f64 (*.f64 -2/3 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2)))) (*.f64 y y))))))))))))))","1","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x -2) 1) y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x -2) 1) y)) (fma.f64 2/9 (*.f64 (pow.f64 (fma.f64 2 x -2) 2) (pow.f64 y -2)) (+.f64 1 (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 x -2) 2) (pow.f64 y -2)) (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2)) -1)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 2 x) 2)) (*.f64 1/3 (-.f64 (*.f64 2 x) 2))) y)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 -2/3 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (-.f64 (*.f64 2 x) 2))) (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))))))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)))))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)))))))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (-.f64 (*.f64 2 x) 2) 2) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 x -2) 1) y)) (fma.f64 2/9 (*.f64 (pow.f64 (fma.f64 2 x -2) 2) (pow.f64 y -2)) (+.f64 1 (+.f64 (neg.f64 (/.f64 (fma.f64 -1/9 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (fma.f64 2 x -2)) (fma.f64 1/3 (*.f64 (fma.f64 1/9 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 -2/3 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))))) (fma.f64 2 x -2)) (fma.f64 -2/3 (+.f64 (neg.f64 (*.f64 (fma.f64 2 x -2) (pow.f64 (-.f64 2 x) 2))) (fma.f64 -1/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (fma.f64 2 x -2)) (fma.f64 1/27 (pow.f64 (fma.f64 2 x -2) 3) (*.f64 (*.f64 -1/3 (fma.f64 2 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))))))) (fma.f64 -1/3 (+.f64 (neg.f64 (*.f64 (fma.f64 2 x -2) (pow.f64 (-.f64 2 x) 2))) (fma.f64 -1/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (fma.f64 2 x -2)) (fma.f64 1/27 (pow.f64 (fma.f64 2 x -2) 3) (*.f64 (*.f64 -1/3 (fma.f64 2 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))))))) (fma.f64 -1/9 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (fma.f64 2 x -2)) (*.f64 (*.f64 -2/9 (fma.f64 2 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))))))))) (pow.f64 y 3))) (fma.f64 -2/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2)) (fma.f64 1/9 (*.f64 (pow.f64 (fma.f64 2 x -2) 2) (pow.f64 y -2)) (*.f64 -1/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2)))))))))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 y) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2))) x) (*.f64 (cbrt.f64 y) (cbrt.f64 -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2))) x) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -7)) (*.f64 x x))) (*.f64 (cbrt.f64 y) (cbrt.f64 -1))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2))) x) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -7)) (*.f64 x x))) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 y -2)) (*.f64 (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 (cbrt.f64 -1) -2)) (*.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 (cbrt.f64 -1) -2)))) (pow.f64 x 3))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (cbrt.f64 y) (cbrt.f64 -1)))))","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)))","(+.f64 (cbrt.f64 x) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 x -2) 1/9) y)))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2)))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 x -2) 1/9) y) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x -7) 1/9) (*.f64 y y)))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2))))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (+.f64 (*.f64 2/9 (cbrt.f64 (pow.f64 x -2))) (*.f64 -1/27 (cbrt.f64 (pow.f64 x -2)))) (pow.f64 y 3))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 x -2) 1/9) y) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x -7) 1/9) (*.f64 y y))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (/.f64 y (-.f64 2 y))) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))","(fma.f64 (cbrt.f64 (/.f64 y (-.f64 2 y))) (cbrt.f64 -1) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2)) (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) x)))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))))))","(fma.f64 (cbrt.f64 (/.f64 y (-.f64 2 y))) (cbrt.f64 -1) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y)))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2)) (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 1 4)) (pow.f64 y 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)))))))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) (-.f64 2 y)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 2 y) (pow.f64 1 4)) y) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) 2)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y))))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 1 4)) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x)))))))","(fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (*.f64 (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 3)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 5) (pow.f64 y 5)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5)) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y))))))) (neg.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (pow.f64 (-.f64 2 y) -2))))) (pow.f64 x 3))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 (cbrt.f64 (/.f64 y (-.f64 2 y))) (cbrt.f64 -1) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2))) (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (-.f64 2 y) y) 1/9) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) 2))) (neg.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2))) (-.f64 2 y)))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 y -2)) 1/9)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2)) (-.f64 (/.f64 1 (-.f64 2 y)) (*.f64 y (pow.f64 (-.f64 2 y) -2)))) x)))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (fma.f64 2 y -2) x) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 (*.f64 (cbrt.f64 -1) x) 2)) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (fma.f64 2 y -2) x) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2))))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (*.f64 2 y) 2) 2) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 2 y) 2) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(fma.f64 -1/3 (/.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (fma.f64 -2/3 (*.f64 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y))))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -5))) (/.f64 (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3))) (fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (pow.f64 (fma.f64 2 y -2) 2) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (neg.f64 (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 (*.f64 (cbrt.f64 -1) x) 2)) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (/.f64 (fma.f64 2 y -2) x) (cbrt.f64 (pow.f64 (cbrt.f64 -1) -2)))))))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (cbrt.f64 -1))","(fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) x) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (cbrt.f64 -1)))","(fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) x) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 x -2)) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 -2/3 (*.f64 (-.f64 (*.f64 2 y) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 2) 2)) (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y))))) (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 2) 3)))) (cbrt.f64 -1)) (pow.f64 x 3))))))","(fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 2 y -2) (cbrt.f64 -1)) x) (+.f64 (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (pow.f64 x -2)) (cbrt.f64 -1)) (/.f64 (*.f64 1/3 (*.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 y -2) (pow.f64 (-.f64 2 y) 2))) (fma.f64 -2/3 (*.f64 (fma.f64 2 y -2) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -2) 2) (*.f64 (fma.f64 2 y -2) (-.f64 2 y)))) (*.f64 1/27 (pow.f64 (fma.f64 2 y -2) 3)))) (cbrt.f64 -1))) (pow.f64 x 3))))","(pow.f64 (/.f64 x (-.f64 2 x)) 1/3)","(cbrt.f64 (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (pow.f64 (/.f64 x (-.f64 2 x)) 1/3))","(fma.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) y) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9)) (cbrt.f64 (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))))))))))","(+.f64 (fma.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) y) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9)) (cbrt.f64 (/.f64 x (-.f64 2 x)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)))) (*.f64 (*.f64 y y) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3)))))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 2) (pow.f64 (/.f64 (*.f64 1 (-.f64 2 x)) x) 1/9))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 5)) (pow.f64 x 5)) 1/9))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3))))))))))))","(+.f64 (fma.f64 -1/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) y) (pow.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)) 1/9)) (cbrt.f64 (/.f64 x (-.f64 2 x)))) (*.f64 -1/3 (+.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2))) (*.f64 (*.f64 y y) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3)))))) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2))) (*.f64 (pow.f64 y 3) (fma.f64 2/3 (*.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) (fma.f64 1/3 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 2) (pow.f64 (/.f64 (-.f64 2 x) x) 1/9)) (+.f64 (pow.f64 (-.f64 2 x) -2) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 5) (pow.f64 x 5)) 1/9)) (+.f64 (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 4)) (+.f64 (pow.f64 (-.f64 2 x) -3) (*.f64 -1/27 (*.f64 (pow.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))) 3) (cbrt.f64 (*.f64 (pow.f64 (-.f64 2 x) 2) (pow.f64 x -2)))))))))))))","1","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) 1)","(fma.f64 1/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) 1)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2)))))","(+.f64 (fma.f64 1/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) 1) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (pow.f64 y -2))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) y)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 3)) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) 2))) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))))) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))))))","(+.f64 (fma.f64 1/3 (/.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) y) 1) (*.f64 -1/3 (+.f64 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (pow.f64 y -2)) (/.f64 (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (fma.f64 1/27 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 3) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 (neg.f64 (-.f64 2 x)) (+.f64 (neg.f64 x) (-.f64 2 x))) (*.f64 1/3 (pow.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) 2))) (+.f64 (neg.f64 x) (-.f64 2 x))) (neg.f64 (*.f64 (+.f64 (neg.f64 x) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(+.f64 1 (/.f64 (*.f64 -1/3 (fma.f64 2 x -2)) y))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2)))))","(+.f64 1 (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 2 x -2) y) (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 2 x) 2) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 x) 2) 3)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (-.f64 (*.f64 2 x) 2)))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 x) 2) 2)) (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x))) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 1/3 (/.f64 (+.f64 (neg.f64 (*.f64 (fma.f64 2 x -2) (pow.f64 (-.f64 2 x) 2))) (fma.f64 -1/3 (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (fma.f64 2 x -2)) (fma.f64 1/27 (pow.f64 (fma.f64 2 x -2) 3) (*.f64 (*.f64 -1/3 (fma.f64 2 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))))))) (pow.f64 y 3)) (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 2 x -2) y) (*.f64 (fma.f64 1/3 (pow.f64 (fma.f64 2 x -2) 2) (*.f64 (fma.f64 2 x -2) (-.f64 2 x))) (pow.f64 y -2))))))","(pow.f64 (-.f64 2 y) 1/3)","(cbrt.f64 (-.f64 2 y))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) -2) 1/9) x) (cbrt.f64 (-.f64 2 y)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3)))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) -7) 1/9) (*.f64 x x)) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) -2) 1/9) x) (cbrt.f64 (-.f64 2 y))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) -7) 1/9) (*.f64 x x)) (fma.f64 -1/3 (*.f64 (*.f64 (fma.f64 -1/27 (cbrt.f64 (pow.f64 (-.f64 2 y) -2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) -2)) 1) 2/9)) (pow.f64 x 3)) (cbrt.f64 (pow.f64 (-.f64 2 y) -2))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) -2) 1/9) x) (cbrt.f64 (-.f64 2 y)))))","(pow.f64 (-.f64 2 x) 1/3)","(cbrt.f64 (-.f64 2 x))","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))","(+.f64 (cbrt.f64 (-.f64 2 x)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) -2) 1/9) y)))","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y))))","(+.f64 (cbrt.f64 (-.f64 2 x)) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) -7) 1/9) (*.f64 y y)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) -2) 1/9) y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)))))) (+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) -2)) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (cbrt.f64 (pow.f64 (-.f64 2 x) -2))) (*.f64 -1/27 (cbrt.f64 (pow.f64 (-.f64 2 x) -2)))))) (+.f64 (cbrt.f64 (-.f64 2 x)) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) -7) 1/9) (*.f64 y y)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) -2) 1/9) y)))))"]],"time":241.388916015625,"type":"simplify"},{"compiler":[[17914,13881]],"time":204.0380859375,"type":"eval"},{"alts":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","done",0.03125],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","done",0.2587826902310537],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","done",0.20482260745286213],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))","next",2.444947018165757]],"compiler":[[11,7],[15,11],[14,10],[26,16],[26,16]],"count":[[324,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[320,0],"picked":[1,1]}],"min-error":[0],"time":93.251953125,"type":"prune"},{"compiler":[[99,43]],"locations":[["(cbrt.f64 (-.f64 2 (+.f64 x y)))",0.078125,false],["(cbrt.f64 (-.f64 x y))",0.0859375,false],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))",0.08984375,true],["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))",2.389185247421207,true]],"time":18.134033203125,"type":"localize"},{"count":[[2,32]],"series":[["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))","y","-inf",2.93798828125],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))","y","inf",2.2958984375],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))","y","0",1.340087890625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))","x","-inf",3.01513671875],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))","x","inf",2.27197265625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))","x","0",1.3369140625],["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))","y","-inf",0.97900390625],["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))","y","inf",1.242919921875],["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))","y","0",2.572998046875],["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))","x","-inf",0.974853515625],["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))","x","inf",2.988037109375],["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))","x","0",2.576171875]],"time":24.93212890625,"type":"series"},{"count":[[2,75]],"inputs":[["(cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (*.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) 0) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (*.f64 0 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 4))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (*.f64 -1 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) -1) (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2) (-.f64 2 (+.f64 x y)))) (pow.f64 (-.f64 2 (+.f64 x y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 4)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 x y) 2/3) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 x y) 2/3)) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2) (+.f64 (+.f64 x y) -2))) (cbrt.f64 (+.f64 (+.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 (+.f64 x y) -2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2) (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 0) (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (*.f64 0 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (/.f64 y (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) (/.f64 (-.f64 y x) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 x y) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 4)) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (pow.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 2/3) (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (neg.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (+.f64 (+.f64 x y) -2) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (-.f64 2 (+.f64 x y)) 2/3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (+.f64 (+.f64 x y) -2) 2)))))))"]],"rules":[["egg-rr",34],["egg-rr",41]],"time":30.08984375,"type":"rewrite"},{"count":[[107,132]],"inputs":[["(pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))))","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)))) (-.f64 2 y))) (+.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 10) 1) (pow.f64 y 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3))))))))))) (pow.f64 x 3)))) (+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 3)) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (pow.f64 (-.f64 2 y) 2))))) (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2)) (pow.f64 (-.f64 2 y) 2)))) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))))))) (pow.f64 x 3))) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2))))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 y) 4) x)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 y) 4) x))))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (pow.f64 (-.f64 2 y) 2)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 y) 4) 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (-.f64 (*.f64 4 y) 4))) (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 4 y) 4))))) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 y) 4) x)))))","(pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x))))) (-.f64 2 x))) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))))))))))) (pow.f64 y 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 3)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))))) (*.f64 -2 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2))) (-.f64 2 x))))))) (pow.f64 y 3))))))","1","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) 1)","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) 1))","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) (+.f64 1 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 x) 4) 3)) (+.f64 (*.f64 (-.f64 4 (*.f64 2 x)) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))))) (*.f64 (-.f64 (*.f64 4 x) 4) (pow.f64 (-.f64 2 x) 2))))) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y))","(+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9) y))) x) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (*.f64 y (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9)))))) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9) y))) x) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (*.f64 y (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9)))))) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9) y))) x) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (*.f64 y (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (-.f64 2 y) 5))) (+.f64 (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/3)) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 17)) 1/9) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9))))))))))) (pow.f64 x 3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y)))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x) (*.f64 y (+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9) x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9) x)))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3))) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9))) (pow.f64 y 2))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (-.f64 2 x) 5))) (+.f64 (*.f64 4/3 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 17)) 1/9))) (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/3)))) x) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3)))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9) x)))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3))) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9))) (pow.f64 y 2)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2)))","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/9) (*.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) x))))","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3)))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/3 (+.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/9) (*.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) x)) (*.f64 (-.f64 (pow.f64 (-.f64 2 y) (neg.f64 2)) (+.f64 (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/9)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 2)))) (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)))) (-.f64 2 y))) (+.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 10) 1) (pow.f64 y 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3))))))))))) (pow.f64 x 3)))) (+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))) (*.f64 (-.f64 (/.f64 (*.f64 -2 (*.f64 y y)) (pow.f64 (-.f64 2 y) 5)) (fma.f64 -2 (/.f64 (-.f64 (pow.f64 (-.f64 2 y) (neg.f64 2)) (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4)))) (-.f64 2 y)) (fma.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4)) (fma.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 10) (pow.f64 y 10)) 1/9) (*.f64 (-.f64 (pow.f64 (-.f64 2 y) (neg.f64 2)) (+.f64 (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/9)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 2)))) (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3))))))))))) (pow.f64 x 3))) (+.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/3 (+.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/9) (*.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) x)) (*.f64 (-.f64 (pow.f64 (-.f64 2 y) (neg.f64 2)) (+.f64 (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/9)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 2)))) (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)))))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)))","(+.f64 1 (*.f64 1/3 (/.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) x)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2)))))","(+.f64 1 (*.f64 1/3 (+.f64 (/.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) x) (/.f64 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2)))) (*.f64 x x)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 3)) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (pow.f64 (-.f64 2 y) 2))))) (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2)) (pow.f64 (-.f64 2 y) 2)))) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))))))) (pow.f64 x 3))) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2))))))","(+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) x) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -2 (-.f64 y (-.f64 2 y))) (fma.f64 1/27 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 3) (fma.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (pow.f64 (-.f64 2 y) 2)))) (*.f64 2/3 (*.f64 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2)))) (*.f64 -2 (-.f64 y (-.f64 2 y)))))))) (pow.f64 x 3)) (/.f64 (*.f64 1/3 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2))))) (*.f64 x x)))))","1","(+.f64 1 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 y) 4) x)))","(+.f64 1 (/.f64 (*.f64 -1/3 (fma.f64 4 y (neg.f64 4))) x))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 y) 4) x))))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 y y) (+.f64 (fma.f64 (-.f64 4 (*.f64 2 y)) (fma.f64 4 y (neg.f64 4)) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 4 y (neg.f64 4)) 2)))) (*.f64 x x)) (/.f64 (*.f64 -1/3 (fma.f64 4 y (neg.f64 4))) x)))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (pow.f64 (-.f64 2 y) 2)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 y) 4) 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (-.f64 (*.f64 4 y) 4))) (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 4 y) 4))))) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 y) 4) x)))))","(fma.f64 1/3 (/.f64 (fma.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 y y) (fma.f64 (-.f64 4 (*.f64 2 y)) (fma.f64 4 y (neg.f64 4)) (pow.f64 (-.f64 2 y) 2))) (fma.f64 1/27 (pow.f64 (fma.f64 4 y (neg.f64 4)) 3) (fma.f64 2/3 (*.f64 (-.f64 (*.f64 y y) (+.f64 (fma.f64 (-.f64 4 (*.f64 2 y)) (fma.f64 4 y (neg.f64 4)) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 4 y (neg.f64 4)) 2)))) (fma.f64 4 y (neg.f64 4))) (*.f64 (pow.f64 (-.f64 2 y) 2) (fma.f64 4 y (neg.f64 4)))))) (pow.f64 x 3)) (+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 y y) (+.f64 (fma.f64 (-.f64 4 (*.f64 2 y)) (fma.f64 4 y (neg.f64 4)) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 4 y (neg.f64 4)) 2)))) (*.f64 x x)) (/.f64 (*.f64 -1/3 (fma.f64 4 y (neg.f64 4))) x))))","(pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2)))","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))) (*.f64 1/3 (*.f64 (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/9))))","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3)))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/9)) (*.f64 (-.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)) (+.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/9) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))))))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x))))) (-.f64 2 x))) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))))))))))) (pow.f64 y 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))))))","(fma.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 (*.f64 -2 (*.f64 x x)) (pow.f64 (-.f64 2 x) 5)) (fma.f64 -2 (/.f64 (-.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)) (+.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x))))) (-.f64 2 x)) (fma.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 4)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)) (+.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/9) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))))) (fma.f64 1/27 (*.f64 (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 3) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)) (+.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/9) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))))))))))) (pow.f64 y 3)) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)))) (+.f64 (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/9)) (*.f64 (-.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)) (+.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/9) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)))))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)))","(+.f64 1 (*.f64 1/3 (/.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y))))","(+.f64 1 (*.f64 1/3 (+.f64 (/.f64 (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2)))) (*.f64 y y)) (/.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 3)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))))) (*.f64 -2 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2))) (-.f64 2 x))))))) (pow.f64 y 3))))))","(+.f64 1 (+.f64 (*.f64 1/3 (+.f64 (/.f64 (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2)))) (*.f64 y y)) (/.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) y))) (/.f64 (*.f64 -1/3 (fma.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2) (fma.f64 1/27 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 3) (fma.f64 1/3 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2))))) (fma.f64 1/3 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2))))) (*.f64 -2 (*.f64 (-.f64 (*.f64 x x) (fma.f64 -2 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2))) (-.f64 2 x)))))))) (pow.f64 y 3))))","1","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) 1)","(fma.f64 -1/3 (/.f64 (fma.f64 4 x (neg.f64 4)) y) 1)","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) 1))","(fma.f64 -1/3 (/.f64 (fma.f64 4 x (neg.f64 4)) y) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x (neg.f64 4)) (-.f64 4 (*.f64 2 x)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x (neg.f64 4)) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) 1))","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) (+.f64 1 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 x) 4) 3)) (+.f64 (*.f64 (-.f64 4 (*.f64 2 x)) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))))) (*.f64 (-.f64 (*.f64 4 x) 4) (pow.f64 (-.f64 2 x) 2))))) (pow.f64 y 3))))))","(fma.f64 -1/3 (/.f64 (fma.f64 4 x (neg.f64 4)) y) (+.f64 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x (neg.f64 4)) (-.f64 4 (*.f64 2 x)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x (neg.f64 4)) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) 1) (/.f64 (*.f64 1/3 (fma.f64 1/27 (pow.f64 (fma.f64 4 x (neg.f64 4)) 3) (fma.f64 (-.f64 4 (*.f64 2 x)) (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x (neg.f64 4)) (-.f64 4 (*.f64 2 x)) (pow.f64 (-.f64 2 x) 2))) (fma.f64 2/3 (*.f64 (fma.f64 4 x (neg.f64 4)) (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x (neg.f64 4)) (-.f64 4 (*.f64 2 x)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x (neg.f64 4)) 2) (pow.f64 (-.f64 2 x) 2))))) (*.f64 (fma.f64 4 x (neg.f64 4)) (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 y 3))))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y))","(neg.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 2))) y))","(+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9) y))) x) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y)))","(fma.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 2))) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 23)) 1/9) y))) x (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 2))) y)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (*.f64 y (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9)))))) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9) y))) x) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y))))","(fma.f64 (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 4)) y) (-.f64 (/.f64 3 (pow.f64 (-.f64 2 y) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 52)) 1/9)))) (*.f64 2/3 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 23)) 1/9))) (*.f64 x x) (fma.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 2))) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 23)) 1/9) y))) x (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 2))) y))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (*.f64 y (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9)))))) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/9) y))) x) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) 1/3) (*.f64 y (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (-.f64 2 y) 5))) (+.f64 (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 23)) 1/3)) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 17)) 1/9) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 y) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 52)) 1/9))))))))))) (pow.f64 x 3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) y)))))","(fma.f64 (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 4)) y) (-.f64 (/.f64 3 (pow.f64 (-.f64 2 y) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 52)) 1/9)))) (*.f64 2/3 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 23)) 1/9))) (*.f64 x x) (fma.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 2))) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 23)) 1/9) y))) x (fma.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 4)) (-.f64 (/.f64 3 (pow.f64 (-.f64 2 y) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 52)) 1/9)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (-.f64 2 y) 4))) (*.f64 y (-.f64 (/.f64 4 (pow.f64 (-.f64 2 y) 5)) (fma.f64 8/27 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 23))) (*.f64 4/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 17)) 1/9) (-.f64 (/.f64 3 (pow.f64 (-.f64 2 y) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 y) (neg.f64 52)) 1/9)))))))))) (pow.f64 x 3) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) (neg.f64 2))) y)))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 2))) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x) (*.f64 y (+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9) x)))))","(fma.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 2))) x (*.f64 y (+.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)))) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 23)) 1/9) x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9) x)))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3))) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9))) (pow.f64 y 2))))","(fma.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 2))) x (fma.f64 y (+.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)))) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 23)) 1/9) x))) (*.f64 (fma.f64 1/3 (*.f64 (-.f64 (/.f64 3 (pow.f64 (-.f64 2 x) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 52)) 1/9))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 2 x) 4)))) (*.f64 -2/3 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 23)) 1/9))) (*.f64 y y))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (-.f64 2 x) 5))) (+.f64 (*.f64 4/3 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 17)) 1/9))) (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/3)))) x) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3)))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) x) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9) x)))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 52)) 1/9))) x) (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3))) (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 23)) 1/9))) (pow.f64 y 2)))))","(fma.f64 (fma.f64 -1/3 (*.f64 (-.f64 (/.f64 3 (pow.f64 (-.f64 2 x) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 52)) 1/9))) (cbrt.f64 (pow.f64 (-.f64 2 x) 4))) (*.f64 (*.f64 1/3 (*.f64 (-.f64 (/.f64 4 (pow.f64 (-.f64 2 x) 5)) (fma.f64 4/3 (*.f64 (-.f64 (/.f64 3 (pow.f64 (-.f64 2 x) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 52)) 1/9))) (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 17)) 1/9)) (*.f64 8/27 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 23)))))) x)) (cbrt.f64 (pow.f64 (-.f64 2 x) 4)))) (pow.f64 y 3) (fma.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 2))) x (fma.f64 y (+.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) (neg.f64 2)))) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 23)) 1/9) x))) (*.f64 (fma.f64 1/3 (*.f64 (-.f64 (/.f64 3 (pow.f64 (-.f64 2 x) 4)) (*.f64 4/3 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 52)) 1/9))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 2 x) 4)))) (*.f64 -2/3 (pow.f64 (pow.f64 (-.f64 2 x) (neg.f64 23)) 1/9))) (*.f64 y y)))))"]],"time":117.580078125,"type":"simplify"},{"compiler":[[11727,7970]],"time":118.10888671875,"type":"eval"},{"alts":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","done",0.03125],["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","done",0.2587826902310537],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","done",0.20482260745286213],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))","done",2.444947018165757]],"compiler":[[11,7],[15,11],[14,10],[26,16]],"count":[[221,4]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[217,0],"picked":[1,1]}],"min-error":[0],"time":56.60498046875,"type":"prune"},{"accuracy":[0.03125],"baseline":[0.03125],"branch":[["x",0.03125,1],["y",0.03125,1],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",0.03125,1],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",0.03125,1]],"compiler":[[3,2],[3,2],[11,7],[11,7],[105,60]],"count":[[6,1]],"inputs":[["(pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))) 3)","(fma.f64 (neg.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y)))) x (/.f64 (fma.f64 (fma.f64 y (pow.f64 (+.f64 y -2) -2) (/.f64 -1 (-.f64 2 y))) (*.f64 x x) y) (+.f64 y -2)))","(pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))","(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))"]],"link":["."],"name":["Data.Colour.RGB:hslsv from colour-2.3.3, C"],"oracle":[28.32431977014387],"outputs":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))"]],"time":13.701171875,"times":[["x",3.535888671875],["y",3.4580078125],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",2.489013671875],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",2.338134765625]],"type":"regimes"},{"compiler":[[11,7]],"inputs":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 y x) (+.f64 (+.f64 x y) -2))","(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))"]],"stop":[["done",1]],"time":20.0830078125,"type":"simplify"},{"time":0.016845703125,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.011962890625,"type":"end"}]