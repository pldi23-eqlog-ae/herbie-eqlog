[{"compiler":[[13,10]],"method":["search"],"sampling":[[12,0.6804873183136806,0.09170725150033832,0.2278054301859811],[11,0.6429263695608824,0.13658526819199324,0.22048836224712431],[10,0.6146337068639696,0.17951206676661968,0.20585422636941075],[9,0.542438636533916,0.2653656639158726,0.19219569955021143],[8,0.49170696549117565,0.34341438859701157,0.16487864591181278],[7,0.35902413353323936,0.49951183795928955,0.14146402850747108],[6,0.2809754088521004,0.6243897974491119,0.09463479369878769],[5,0.062438979744911194,0.8741457164287567,0.06341530382633209],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":34.7861328125,"type":"analyze"},{"outcomes":[["body",256,"invalid",11.01025390625,262],["body",4096,"valid",6.743896484375,9],["body",1024,"valid",377.67333984375,1795],["body",512,"valid",142.401123046875,1163],["body",2048,"valid",564.552001953125,1492],["body",256,"valid",204.524169921875,3797]],"time":1315.936767578125,"type":"sample"},{"compiler":[[12,9]],"inputs":[["0","1"],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 (*.f64 y 1) (log.f64 (-.f64 1 (/.f64 x y))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","(*.f64 (*.f64 y 1) (log.f64 (-.f64 1 (/.f64 x y))))","(*.f64 y (log1p.f64 (neg.f64 (/.f64 x y))))"]],"symmetry":[[]],"time":58.97607421875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))"]],"time":17.922119140625,"type":"simplify"},{"compiler":[[19,12]],"time":0.342041015625,"type":"eval"},{"alts":[["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","next",15.343120206248795]],"compiler":[[9,6],[9,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[15.343120206248795],"time":0.8408203125,"type":"prune"},{"compiler":[[23,6]],"locations":[["(log1p.f64 (neg.f64 (/.f64 y x)))",4.381832495438947,true],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))",10.854838956248791,true]],"time":6.06396484375,"type":"localize"},{"count":[[2,48]],"series":[["(log1p.f64 (neg.f64 (/.f64 y x)))","x","-inf",0.218994140625],["(log1p.f64 (neg.f64 (/.f64 y x)))","x","inf",0.208984375],["(log1p.f64 (neg.f64 (/.f64 y x)))","x","0",0.243896484375],["(log1p.f64 (neg.f64 (/.f64 y x)))","y","-inf",0.222900390625],["(log1p.f64 (neg.f64 (/.f64 y x)))","y","inf",0.2861328125],["(log1p.f64 (neg.f64 (/.f64 y x)))","y","0",0.277099609375],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","y","-inf",0.567138671875],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","y","inf",0.546875],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","y","0",0.448974609375],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","x","-inf",0.39794921875],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","x","inf",0.591064453125],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","x","0",0.842041015625]],"time":5.071044921875,"type":"series"},{"count":[[2,44]],"inputs":[["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","(log1p.f64 (neg.f64 (/.f64 y x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3) (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 (/.f64 y x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (log1p.f64 (neg.f64 (/.f64 y x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (-.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (neg.f64 (/.f64 y x)))))))"]],"rules":[["egg-rr",18],["egg-rr",26]],"time":44.625,"type":"rewrite"},{"count":[[92,108]],"inputs":[["(*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 -1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))","(+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))))))","(*.f64 -1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(*.f64 -1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x)","(*.f64 (log.f64 (neg.f64 (/.f64 y x))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 (log.f64 (neg.f64 (/.f64 y x))) x (neg.f64 (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 -1/2 (/.f64 (/.f64 (pow.f64 x 3) y) y) (fma.f64 (log.f64 (neg.f64 (/.f64 y x))) x (neg.f64 (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (/.f64 (pow.f64 x 3) y) y) (fma.f64 (log.f64 (neg.f64 (/.f64 y x))) x (neg.f64 (/.f64 (*.f64 x x) y)))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 (/.f64 (*.f64 y y) x) -1/2 (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) -1/3 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 (/.f64 (*.f64 y y) x) -1/2 (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) -1/3 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 (/.f64 (*.f64 y y) x) -1/2 (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) -1/3 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)","(*.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 (/.f64 (/.f64 (pow.f64 x 3) y) y) -1/2 (fma.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x (neg.f64 (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 (/.f64 (/.f64 (pow.f64 x 3) y) y) -1/2 (fma.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(*.f64 x (-.f64 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y)))))","(+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 x (-.f64 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y)))) (neg.f64 (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 (/.f64 (/.f64 (pow.f64 x 3) y) y) -1/2 (fma.f64 x (-.f64 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y)))) (neg.f64 (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 (/.f64 (/.f64 (pow.f64 x 3) y) y) -1/2 (fma.f64 x (-.f64 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y)))) (neg.f64 (/.f64 (*.f64 x x) y)))))","(*.f64 -1 (/.f64 y x))","(neg.f64 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(fma.f64 (pow.f64 (/.f64 y x) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(fma.f64 (pow.f64 (/.f64 y x) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (neg.f64 (/.f64 y x)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))","(+.f64 (log.f64 y) (log.f64 (/.f64 -1 x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) (/.f64 x y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (-.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) (/.f64 x y)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))))","(fma.f64 (pow.f64 (/.f64 x y) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (-.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) (/.f64 x y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))","(-.f64 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (/.f64 x y)) (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (neg.f64 (/.f64 x y))) (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))))","(-.f64 (-.f64 (fma.f64 (pow.f64 (/.f64 x y) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (neg.f64 (/.f64 x y)))) (log.f64 x)) (neg.f64 (log.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))","(log.f64 (neg.f64 (/.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))))","(-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x)))))","(fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))))))","(fma.f64 (pow.f64 (/.f64 x y) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 x y) 2) (-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y))))","(*.f64 -1 (/.f64 y x))","(neg.f64 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(fma.f64 (pow.f64 (/.f64 y x) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(fma.f64 (pow.f64 (/.f64 y x) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (neg.f64 (/.f64 y x)))))","(*.f64 -1 (/.f64 y x))","(neg.f64 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(fma.f64 (pow.f64 (/.f64 y x) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (neg.f64 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(fma.f64 (pow.f64 (/.f64 y x) 3) -1/3 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 2) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (neg.f64 (/.f64 y x)))))"]],"time":156.549072265625,"type":"simplify"},{"compiler":[[1801,892]],"time":18.802978515625,"type":"eval"},{"alts":[["(*.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x)","fresh",52.164551345343945],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","done",15.343120206248795],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","fresh",23.4344746280622],["(*.f64 x (-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y)))","fresh",47.71126884977376],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","fresh",15.818584268838947],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","next",15.753434950045516],["(*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x))","fresh",30.635576542810316],["(*.f64 x (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))))","fresh",55.364761361496726],["(*.f64 (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))","fresh",30.65393994378812]],"compiler":[[11,8],[9,6],[11,7],[13,8],[12,9],[12,9],[18,10],[12,9],[18,10],[11,8],[11,7],[13,8],[12,9],[12,9],[18,10],[12,9],[18,10]],"count":[[109,9]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[108,8],"picked":[1,1]}],"min-error":[0.05859375],"time":18.83203125,"type":"prune"},{"compiler":[[42,10]],"locations":[["(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))",0.0703125,true],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)",0.6970864746741666,true],["(log1p.f64 (neg.f64 (/.f64 y x)))",4.381832495438947,false],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))",10.854838956248791,false]],"time":7.682861328125,"type":"localize"},{"count":[[2,32]],"series":[["(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))","y","-inf",0.781982421875],["(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))","y","inf",0.758056640625],["(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))","y","0",0.359130859375],["(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))","x","-inf",0.469970703125],["(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))","x","inf",0.60693359375],["(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))","x","0",0.364990234375],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","y","-inf",3.912109375],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","y","inf",5.39697265625],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","y","0",2.8701171875],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","x","-inf",2.285888671875],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","x","inf",3.807861328125],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","x","0",2.524169921875]],"time":24.6171875,"type":"series"},{"count":[[2,60]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","(cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 0) (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 0 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3) (cbrt.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 4/3) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 (/.f64 y x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3) (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 7/3) (cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3)) (pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (log1p.f64 (neg.f64 (/.f64 y x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) (*.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 0) (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) (*.f64 0 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))) (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3) (cbrt.f64 x))) (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (*.f64 (pow.f64 x 2/3) (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (cbrt.f64 (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))) (cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (cbrt.f64 x))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))))"]],"rules":[["egg-rr",26],["egg-rr",34]],"time":26.919921875,"type":"rewrite"},{"count":[[92,120]],"inputs":[["(*.f64 -1 (*.f64 (pow.f64 1 1/3) y))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 1/18 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 32)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2)))))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 32)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/18 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))) (cbrt.f64 -1)))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 32)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (cbrt.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2)))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 3))))))))))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9)) (*.f64 1/6 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9))) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9) (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 y) 1/3))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9)) (*.f64 1/6 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9))) x))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9) (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 -1/3 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9))))))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (*.f64 1 (pow.f64 y 10)) 1/9))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 -1/3 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9))))))))) (cbrt.f64 -1)) (pow.f64 (*.f64 1 y) 1/3)) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 y) 1/3)))))))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 y) 1/3))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9)) (*.f64 1/6 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9))) x)))))))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9))) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 1 (pow.f64 y 2)))))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 10)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 8)) 1/9)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))))) (pow.f64 y 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9))) (pow.f64 y 3)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 1 1/3))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9))) (pow.f64 y 2))))))))))))","(*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9))) y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9))) y)) (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9)))))) (pow.f64 y 2)))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3)))))) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 10)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 8)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3))))))) (pow.f64 (*.f64 1 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) 1/3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))))))))) (pow.f64 y 3))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9))) y)) (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9)))))) (pow.f64 y 2))))))))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (/.f64 (cbrt.f64 -1) x))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (/.f64 (cbrt.f64 -1) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (cbrt.f64 -1)) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (/.f64 (cbrt.f64 -1) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 -1/3 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9)))))) (pow.f64 x 3)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (cbrt.f64 -1)) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3))))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 1 y))) (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 1 y))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2) (pow.f64 x 2))) 1/3)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 1 y))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))))) (pow.f64 y 3)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2) (pow.f64 x 2))) 1/3))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2) (pow.f64 x 2))) 1/3))))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3)","(+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 1 y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 x 2) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2))) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 1 y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 x 2) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2))) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 x 2) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2))) 1/3) (/.f64 (-.f64 (*.f64 1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3)))) (pow.f64 y 3)))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 1 y))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (pow.f64 1 1/3) y))","(neg.f64 y)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x))))))","(fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) x)) (+.f64 (neg.f64 y) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) x)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 1/18 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 32)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2)))))))))","(fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) x)) (fma.f64 1/18 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (/.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (*.f64 x x))) (+.f64 (neg.f64 y) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) x)) (fma.f64 (cbrt.f64 y) (/.f64 (*.f64 (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 y 32) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 4)))) (*.f64 2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))))) (cbrt.f64 -1)))) (cbrt.f64 -1)) (*.f64 x x)) (*.f64 1/3 (/.f64 (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))) (*.f64 x x))))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 22)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (/.f64 1 x)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 32)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/18 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 x 2))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))) (cbrt.f64 -1)))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 32)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))))) (cbrt.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2)))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 3))))))))))))))","(fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) x)) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)) x)) (fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (/.f64 (*.f64 (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 y 32) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 4)))) (*.f64 2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))))) (cbrt.f64 -1)))) (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2)))) (pow.f64 x 3))) (+.f64 (neg.f64 y) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (fma.f64 -1/216 (/.f64 (cbrt.f64 (pow.f64 y 16)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y 13) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 5))) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))))))))) (pow.f64 x 3)) (fma.f64 1/18 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (/.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (*.f64 x x))) (fma.f64 (cbrt.f64 y) (/.f64 (*.f64 (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y 10) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 8))) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))))) (*.f64 2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (fma.f64 -1/216 (/.f64 (cbrt.f64 (pow.f64 y 16)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y 13) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 5))) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))))))))) (cbrt.f64 -1))))) (pow.f64 x 3)) (fma.f64 (cbrt.f64 y) (/.f64 (*.f64 (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 y 32) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 4)))) (*.f64 2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))))) (cbrt.f64 -1)))) (cbrt.f64 -1)) (*.f64 x x)) (fma.f64 1/3 (/.f64 (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))) (*.f64 x x)) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y 13) 1/9) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 5))) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))))) (pow.f64 x 3)))))))))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) y))","(neg.f64 y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9)) (*.f64 1/6 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9))) x)))","(+.f64 (neg.f64 y) (neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (+.f64 1/3 1/6)) x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9) (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 y) 1/3))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9)) (*.f64 1/6 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9))) x))))))","(+.f64 (neg.f64 y) (fma.f64 -1/3 (/.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (*.f64 x x)) (fma.f64 -1/18 (/.f64 (pow.f64 (pow.f64 y 35) 1/9) (*.f64 x x)) (fma.f64 (cbrt.f64 y) (/.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 y 32) 1/9) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/3 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 1 y)))))) (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (+.f64 1/3 1/6)) x))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) y)) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 x 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9) (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 -1/3 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9))))))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (*.f64 1 (pow.f64 y 10)) 1/9))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 -1/3 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9))))))))) (cbrt.f64 -1)) (pow.f64 (*.f64 1 y) 1/3)) (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 y) 1/3)))))))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/36 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 y) 1/3))))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9)) (*.f64 1/6 (pow.f64 (*.f64 1 (pow.f64 y 22)) 1/9))) x)))))))","(+.f64 (neg.f64 y) (fma.f64 -1/3 (/.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (*.f64 x x)) (fma.f64 -1/18 (/.f64 (pow.f64 (pow.f64 y 35) 1/9) (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (fma.f64 1/9 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (pow.f64 y 13) 1/9)) (fma.f64 -1/3 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (fma.f64 -1/216 (cbrt.f64 (pow.f64 y 16)) (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (pow.f64 y 13) 1/9)) -1/3))) (fma.f64 (*.f64 (fma.f64 -1/9 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (pow.f64 y 10) 1/9)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (fma.f64 -1/216 (cbrt.f64 (pow.f64 y 16)) (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (pow.f64 y 13) 1/9)) -1/3))))))) (cbrt.f64 -1)) (cbrt.f64 y) (*.f64 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (*.f64 (cbrt.f64 -1) (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 y 32) 1/9) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/3 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 1 y))))))) -1/6)))) (pow.f64 x 3))) (fma.f64 (cbrt.f64 y) (/.f64 (*.f64 (cbrt.f64 -1) (fma.f64 1/36 (*.f64 (pow.f64 (pow.f64 y 32) 1/9) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/3 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 1 y)))))) (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 y 22) 1/9) (+.f64 1/3 1/6)) x)))))))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x))","(*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x))))","(fma.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) (pow.f64 x 22)) 1/9) y) (fma.f64 -2/3 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) (pow.f64 x 22)) 1/9) y) (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9))) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 1 (pow.f64 y 2)))))))))","(fma.f64 -2/3 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) (pow.f64 x 22)) 1/9) y) (fma.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) (pow.f64 x 22)) 1/9) y) (fma.f64 1/3 (/.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (*.f64 y y)) (fma.f64 (cbrt.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)) (/.f64 (fma.f64 2/3 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)))) (*.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 32) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4)) 1/9))) (*.f64 y y)) (+.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x) (*.f64 2/9 (/.f64 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 y y))))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4) (pow.f64 x 22))) 1/9) (/.f64 1 y))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 -2/9 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 10)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 8)) 1/9)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))))) (pow.f64 y 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9))) (pow.f64 y 3)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 1 1/3))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3) (/.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)) 1/3))) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9))) (pow.f64 y 2))))))))))))","(fma.f64 -2/3 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) (pow.f64 x 22)) 1/9) y) (fma.f64 -1/3 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) (pow.f64 x 22)) 1/9) y) (fma.f64 (cbrt.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)) (/.f64 (fma.f64 2/3 (*.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 2))) (*.f64 -2/3 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 5)) 1/9))))) (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)))) (*.f64 -2/9 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (pow.f64 (/.f64 (pow.f64 x 10) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 8)) 1/9)))) (pow.f64 y 3)) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 2))) (*.f64 -2/3 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 5)) 1/9))))) (pow.f64 y 3)) (fma.f64 -2/9 (/.f64 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 5)) 1/9)) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 2)) 1/9) (fma.f64 2/3 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)))) (*.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 32) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4)) 1/9)))) (pow.f64 y 3)) (+.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x) (fma.f64 2/9 (/.f64 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 y y)) (fma.f64 1/3 (/.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (*.f64 y y)) (/.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)) (fma.f64 2/3 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)))) (*.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 32) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4)) 1/9)))) (*.f64 y y)))))))))))","(*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))))","(*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9))) y)))","(+.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4)) 1/9) (+.f64 1/3 2/3)) y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9))) y)) (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9)))))) (pow.f64 y 2)))))))","(+.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (fma.f64 2/9 (/.f64 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 y y)) (fma.f64 1/3 (/.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9)))) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4)) 1/9) (+.f64 1/3 2/3)) y)) (/.f64 (*.f64 (cbrt.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 32) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))))) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9)))))))) (*.f64 y y))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3)))))) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 10)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 8)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3))))))) (pow.f64 (*.f64 1 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) 1/3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))))))))) (pow.f64 y 3))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4))) 1/9))) y)) (*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 32)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x)) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9)))))) (pow.f64 y 2))))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 5)) 1/9) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9))))) (fma.f64 1/3 (-.f64 (*.f64 1/3 (pow.f64 x 4)) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 5)) 1/9) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9))))) (*.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 2)))))) (fma.f64 (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 10) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 8)) 1/9) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))))) (-.f64 (*.f64 1/3 (pow.f64 x 4)) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 5)) 1/9) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9))))) (*.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 2))))))))) (cbrt.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 2)) 1/9) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 32) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))))) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9)))))))))))) (pow.f64 y 3))) (+.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (fma.f64 1/3 (/.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9)))) (*.f64 y y)) (fma.f64 2/9 (/.f64 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 y y)) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 22) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4)) 1/9) (+.f64 1/3 2/3)) y)) (/.f64 (*.f64 (cbrt.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 32) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4)) 1/9) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))))) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9)))))))) (*.f64 y y)))))))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 y) (cbrt.f64 -1))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) x)) (*.f64 (cbrt.f64 y) (cbrt.f64 -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 y (neg.f64 2))) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))))) (pow.f64 (*.f64 (cbrt.f64 -1) x) 2)) (fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) x)) (*.f64 (cbrt.f64 y) (cbrt.f64 -1))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 y 3)) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2))))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 x)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 y (neg.f64 2))) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (fma.f64 -1/216 (/.f64 (cbrt.f64 (pow.f64 y 16)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y 13) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 5))) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))))))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3))) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 y (neg.f64 2))) (fma.f64 -1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (*.f64 (pow.f64 (pow.f64 y 35) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))))) (pow.f64 (*.f64 (cbrt.f64 -1) x) 2)) (fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) x)) (*.f64 (cbrt.f64 y) (cbrt.f64 -1)))))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 y) (cbrt.f64 -1))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (/.f64 (cbrt.f64 -1) x))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (cbrt.f64 -1)) x) (*.f64 (cbrt.f64 y) (cbrt.f64 -1)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (/.f64 (cbrt.f64 -1) x))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (cbrt.f64 -1)) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)))))","(fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (cbrt.f64 -1)) x) (fma.f64 (cbrt.f64 y) (cbrt.f64 -1) (*.f64 1/3 (/.f64 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (cbrt.f64 -1)) (cbrt.f64 (pow.f64 y (neg.f64 2)))) (*.f64 x x)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9) (/.f64 (cbrt.f64 -1) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (+.f64 (*.f64 -1/216 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 -1/3 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (pow.f64 (*.f64 1 (pow.f64 y 13)) 1/9)))))) (pow.f64 x 3)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (pow.f64 y 3)) (*.f64 1/12 (pow.f64 (*.f64 1 (pow.f64 y 35)) 1/9))) (cbrt.f64 -1)) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3))))))","(fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (pow.f64 y 16) 1/9) (cbrt.f64 -1)) x) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 y (neg.f64 2))) (*.f64 (cbrt.f64 -1) (-.f64 (*.f64 -1/4 (pow.f64 y 4)) (fma.f64 -1/216 (cbrt.f64 (pow.f64 y 16)) (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (pow.f64 (pow.f64 y 13) 1/9)) -1/3))))) (pow.f64 x 3)) (fma.f64 (cbrt.f64 y) (cbrt.f64 -1) (*.f64 1/3 (/.f64 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 y 3) (neg.f64 (*.f64 1/12 (pow.f64 (pow.f64 y 35) 1/9)))) (cbrt.f64 -1)) (cbrt.f64 (pow.f64 y (neg.f64 2)))) (*.f64 x x))))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3)","(cbrt.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 1 y))) (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3))","(fma.f64 -1/3 (/.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 2)) 1/9) y) (cbrt.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 1 y))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2) (pow.f64 x 2))) 1/3)))))","(+.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 2)) 1/9) y) (cbrt.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x))) (*.f64 1/3 (/.f64 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x) 2)))) (*.f64 y y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 1 y))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9))))) (pow.f64 y 3)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2) (pow.f64 x 2))) 1/3))) (*.f64 1/3 (*.f64 (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2) (pow.f64 x 2))) 1/3))))))","(+.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 2)) 1/9) y) (cbrt.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x))) (*.f64 1/3 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 4)) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 2))) (*.f64 -2/3 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 5)) 1/9))))) (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x) 2)))) (pow.f64 y 3)) (/.f64 (*.f64 (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9)))) (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x) 2)))) (*.f64 y y)))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3)","(cbrt.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))))","(+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 1 y))))","(+.f64 (cbrt.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (*.f64 -1/3 (/.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 2)) 1/9) y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 x 2) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2))) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 1 y)))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 2))) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9))))) (*.f64 y y)) (+.f64 (cbrt.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (*.f64 -1/3 (/.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 2)) 1/9) y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 x 2) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2))) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 x 2) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2))) 1/3) (/.f64 (-.f64 (*.f64 1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (-.f64 (*.f64 -1/2 (pow.f64 x 3)) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 35)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3)))) (pow.f64 y 3)))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 16)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 1 y))))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 2))) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9))))) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 2))) (-.f64 (*.f64 1/3 (pow.f64 x 4)) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 5)) 1/9) (fma.f64 -1/2 (pow.f64 x 3) (neg.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 35) (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9))))) (*.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 2))))))) (pow.f64 y 3)) (+.f64 (cbrt.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (*.f64 -1/3 (/.f64 (pow.f64 (/.f64 (pow.f64 x 16) (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 2)) 1/9) y)))))"]],"time":132.166015625,"type":"simplify"},{"compiler":[[10980,7946]],"time":128.826904296875,"type":"eval"},{"alts":[["(*.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x)","fresh",52.164551345343945],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","done",15.343120206248795],["(*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))","fresh",30.65393994378812],["(*.f64 x (-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y)))","fresh",47.71126884977376],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","fresh",23.4344746280622],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","next",15.818584268838947],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","done",15.753434950045516],["(*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x))","fresh",30.635576542810316],["(*.f64 x (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))))","fresh",55.364761361496726],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))))) 3)","fresh",52.2140116664228]],"compiler":[[11,8],[9,6],[18,10],[13,8],[11,7],[12,9],[12,9],[18,10],[12,9],[14,11],[11,8],[18,10],[13,8],[11,7],[12,9],[18,10],[12,9],[14,11]],"count":[[237,10]],"kept":[{"done":[1,1],"fresh":[7,6],"new":[228,2],"picked":[1,1]}],"min-error":[0.046875],"time":40.2890625,"type":"prune"},{"compiler":[[41,12]],"locations":[["(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)",0.6418115723585869,true],["(log1p.f64 (neg.f64 (/.f64 y x)))",4.381832495438947,false],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))",10.854838956248791,true],["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))",11.05277078772693,true]],"time":8.20703125,"type":"localize"},{"count":[[3,48]],"series":[["(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)","x","-inf",1.303955078125],["(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)","x","inf",6.05908203125],["(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)","x","0",3.54296875],["(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)","y","-inf",3.4140625],["(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)","y","inf",3.489013671875],["(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)","y","0",1.303955078125],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","y","-inf",0.251220703125],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","y","inf",0.27294921875],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","y","0",0.245849609375],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","x","-inf",0.239990234375],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","x","inf",0.262939453125],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","x","0",0.260009765625],["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))","x","-inf",0.625],["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))","x","inf",0.8779296875],["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))","x","0",1.72802734375],["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))","y","-inf",3.181884765625],["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))","y","inf",1.699951171875],["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))","y","0",0.697021484375]],"time":30.027099609375,"type":"series"},{"count":[[3,66]],"inputs":[["(cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))","(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","(pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 0) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 0 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)) (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 0) (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 0 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 x (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 2/3) (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 (/.f64 y x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (log1p.f64 (neg.f64 (/.f64 y x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 0) (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 (/.f64 y x))) (*.f64 0 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (neg.f64 (/.f64 y x)))) (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 4/3) 2) (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 7/3) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)) (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (neg.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (-.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (neg.f64 (/.f64 y x)))))))"]],"rules":[["egg-rr",22],["egg-rr",26],["egg-rr",18]],"time":27.98583984375,"type":"rewrite"},{"count":[[114,146]],"inputs":[["(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 x y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 x y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 x y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (pow.f64 x 3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x)))))) (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3))))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3)","(+.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 x y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 x y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 x y))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))))))))) (pow.f64 y 3)))))))","(pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 x y))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 x y))) (+.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) (pow.f64 x 2))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 x y))) (+.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2)) 1/3) (/.f64 1 (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 y 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 8)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))) y) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3)))))) (pow.f64 x 3)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) (pow.f64 x 2)))))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2))))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 8)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (pow.f64 x 3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x)))))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 8)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (/.f64 (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) x) (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (pow.f64 x 3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x)))))) (pow.f64 y 3)))))))))))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x))) y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x))) y)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2)))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))))))))))) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 8)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))))))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 8)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))))) (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3))))) (pow.f64 y 3))) (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x))) y)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3)","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4) 1) 1/9) (/.f64 1 y))) (*.f64 -2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/9) (/.f64 1 y))))) x) (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4) 1) 1/9) (/.f64 1 y))) (*.f64 -2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/9) (/.f64 1 y))))) x) (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))))))) (pow.f64 x 2))))","(+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x)))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))) y)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2)) 1/9) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3)))))))) y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 8)) 1/9) (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) y)))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (/.f64 1 (pow.f64 y 3)))) (*.f64 1/3 (/.f64 1 (pow.f64 y 3))))))) (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2)) 1/3) (/.f64 1 (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 y 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 8)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))) y) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3)))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 8)) 1/9) (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) y)))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4) 1) 1/9) (/.f64 1 y))) (*.f64 -2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/9) (/.f64 1 y))))) x) (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))))))) (pow.f64 x 2)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3)","(cbrt.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 x y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2) 1/9) (/.f64 x y)) (cbrt.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 x y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3)))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2) 1/9) (/.f64 x y)) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2)) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))) (*.f64 y y)) (cbrt.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 x y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (pow.f64 x 3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x)))))) (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3))))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2) 1/9) (/.f64 x y)) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2)) (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -5) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2)) (pow.f64 x 3)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -5) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))))))))) (pow.f64 y 3)) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2)) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))) (*.f64 y y)) (cbrt.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))))))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3)","(cbrt.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))","(+.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 x y))))","(+.f64 (cbrt.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2) 1/9) (/.f64 x y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 x y)))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2)) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x)))))) (*.f64 y y)) (+.f64 (cbrt.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2) 1/9) (/.f64 x y)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (/.f64 x y))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))))))))) (pow.f64 y 3)))))))","(fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2)) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x)))))) (*.f64 y y)) (+.f64 (cbrt.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2) 1/9) (/.f64 x y)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2)) (-.f64 (*.f64 1/3 (pow.f64 x 3)) (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2)) (pow.f64 x 3)) (*.f64 1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -5) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x)) (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -5) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x))))))) (pow.f64 y 3))))))","(pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3)","(cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 x y))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2) 1/9) (/.f64 x y)) (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 x y))) (+.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) (pow.f64 x 2))))))","(+.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2) 1/9) (/.f64 x y)) (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2))) (*.f64 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))) (*.f64 x x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 x y))) (+.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2)) 1/3) (/.f64 1 (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 y 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 8)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))) y) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3)))))) (pow.f64 x 3)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) (pow.f64 x 2)))))))","(+.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2) 1/9) (/.f64 x y)) (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)) (fma.f64 2/3 (*.f64 (*.f64 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))) (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -8) 1/9)) (/.f64 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))) y)) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)) (pow.f64 y -3)) (*.f64 1/3 (pow.f64 y -3))))) (pow.f64 x 3)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)) (*.f64 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))) (*.f64 x x))))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x)","(*.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 -1/2 (*.f64 (pow.f64 x 3) (pow.f64 y -2)) (fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (*.f64 (pow.f64 x 4) (pow.f64 y -3)) (fma.f64 -1/2 (*.f64 (pow.f64 x 3) (pow.f64 y -2)) (fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)","(*.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 -1/2 (*.f64 (pow.f64 x 3) (pow.f64 y -2)) (fma.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x (neg.f64 (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (*.f64 (pow.f64 x 4) (pow.f64 y -3)) (fma.f64 -1/2 (*.f64 (pow.f64 x 3) (pow.f64 y -2)) (fma.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))","(+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 -1/2 (*.f64 (pow.f64 x 3) (pow.f64 y -2)) (fma.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (*.f64 (pow.f64 x 4) (pow.f64 y -3)) (fma.f64 -1/2 (*.f64 (pow.f64 x 3) (pow.f64 y -2)) (fma.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 x x) y)))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","(+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))))","(fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) 1/9) (/.f64 x y)) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) 1/9) (/.f64 x y)) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2))))))))","(fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) 1/9) (/.f64 x y)) (+.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) 1/9) (/.f64 x y)) (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) (fma.f64 1/3 (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))) (pow.f64 y -2)) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (/.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (cbrt.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -4) 1/9) (*.f64 x x)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))))) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))))) (pow.f64 y -2)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 8)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (pow.f64 x 3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x)))))))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 8)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x))))) (pow.f64 y 3))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (/.f64 x y))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (/.f64 (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/9) (/.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) x) (pow.f64 y 3)))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 2)) 1/3) (pow.f64 x 3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) 1/9) (pow.f64 x 2)))) x)))))) (pow.f64 y 3)))))))))))))","(fma.f64 (cbrt.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) (*.f64 (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -8) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))))) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))))) (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -5) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2)) (pow.f64 x 3)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -5) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))))))))) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -8) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))))))) (pow.f64 y -3)) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) 1/9) (/.f64 x y)) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) 4) 1/9) (/.f64 x y)) (fma.f64 (cbrt.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -4) 1/9) (*.f64 x x)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))))) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))))) (pow.f64 y -2)) (+.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 1/3 (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))) (pow.f64 y -2)) (fma.f64 -2/9 (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -5) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))))) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2) 1/9) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -4) 1/9) (*.f64 x x)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))))) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x)))))))) x)) (pow.f64 y 3)) (*.f64 1/3 (*.f64 (-.f64 (*.f64 -1/3 (pow.f64 x 3)) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -5) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -2)) (pow.f64 x 3)) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x))) -5) 1/9) (*.f64 x (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (neg.f64 (log.f64 y))) (log.f64 (/.f64 -1 x)))) 1/9) (*.f64 x x))))))))))) (pow.f64 y -3))))))))))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x))) y)))","(+.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4) 1/9) x) 1) y)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x))) y)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2)))))))","(+.f64 (+.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4) 1/9) x) 1) y))) (fma.f64 (cbrt.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -4) 1/9) (*.f64 x x)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x)))))))) (pow.f64 y -2)) (fma.f64 1/3 (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) (pow.f64 y -2)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (/.f64 (*.f64 x x) (*.f64 y y)))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))))))))))) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 8)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 2)) 1/3) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 5)) 1/9) (*.f64 x (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))))))))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 8)) 1/9) (*.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) x))))) (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3))))) (pow.f64 y 3))) (+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) x))) y)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))) 4)) 1/9) (pow.f64 x 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/3) (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2))))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (pow.f64 x 2)))) (pow.f64 y 2)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) 1/9) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(+.f64 (neg.f64 (*.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -5) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x)) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2) 1/9) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -4) 1/9) (*.f64 x x)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x)))))))) x)) (fma.f64 1/3 (-.f64 (*.f64 1/3 (pow.f64 x 3)) (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2)) (pow.f64 x 3)) (*.f64 1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -5) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x)) (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -5) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x)))))) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -8) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x)) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (-.f64 (*.f64 1/3 (pow.f64 x 3)) (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -2)) (pow.f64 x 3)) (*.f64 1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -5) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x)) (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -5) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x))))))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -8) 1/9) (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) x))))) (cbrt.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))))))) (pow.f64 y -3))) (+.f64 (+.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) 4) 1/9) x) 1) y))) (fma.f64 (cbrt.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))) -4) 1/9) (*.f64 x x)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x))))) (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x)))))))) (pow.f64 y -2)) (fma.f64 1/3 (*.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (*.f64 x x))))) (pow.f64 y -2)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (neg.f64 (log.f64 x)))) 1/9) (/.f64 (*.f64 x x) (*.f64 y y))))))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4) 1) 1/9) (/.f64 1 y))) (*.f64 -2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/9) (/.f64 1 y))))) x) (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3))","(fma.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 4) 1/9) y) (*.f64 (*.f64 -2/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (/.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 1/9) y))) x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4) 1) 1/9) (/.f64 1 y))) (*.f64 -2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/9) (/.f64 1 y))))) x) (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))))))) (pow.f64 x 2))))","(+.f64 (fma.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 4) 1/9) y) (*.f64 (*.f64 -2/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (/.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 1/9) y))) x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))))) (*.f64 (fma.f64 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)) (*.f64 (*.f64 -2/3 (cbrt.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)))) (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))))) (fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)) 1/9) (pow.f64 y -2)) (*.f64 -1/3 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2))))))) (*.f64 x x)))","(+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x)))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))) y)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2)) 1/9) (/.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3)))))))) y))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 8)) 1/9) (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) y)))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (/.f64 1 (pow.f64 y 3)))) (*.f64 1/3 (/.f64 1 (pow.f64 y 3))))))) (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2)) 1/3) (/.f64 1 (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 y 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 8)) 1/9) (*.f64 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))) y) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3)))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 8)) 1/9) (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))) y)))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4) 1) 1/9) (/.f64 1 y))) (*.f64 -2/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/9) (/.f64 1 y))))) x) (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 2) (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y)))) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 4)) 1/9) (*.f64 (/.f64 1 (pow.f64 y 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 1/3))))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 2)) 1/9) (/.f64 1 (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (*.f64 -1 (log.f64 x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))) 4)) 1/9) (/.f64 1 (pow.f64 y 2)))))))))) (pow.f64 x 2)))))","(fma.f64 (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2) 1/9) (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2))))) y)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2) 1/9) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)) (*.f64 (*.f64 -2/3 (cbrt.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)))) (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2))))))) y) (fma.f64 -1/3 (fma.f64 2/3 (*.f64 (*.f64 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))) (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -8) 1/9)) (/.f64 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))) y)) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)) (pow.f64 y -3)) (*.f64 1/3 (pow.f64 y -3)))) (*.f64 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2))) (fma.f64 2/3 (*.f64 (*.f64 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))) (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -8) 1/9)) (/.f64 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))) y)) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)) (pow.f64 y -3)) (*.f64 1/3 (pow.f64 y -3))))) (*.f64 (*.f64 2/9 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -8) 1/9)) (/.f64 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))) y))))))) (pow.f64 x 3) (+.f64 (fma.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 4) 1/9) y) (*.f64 (*.f64 -2/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (/.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 1/9) y))) x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))))) (*.f64 (fma.f64 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)) (*.f64 (*.f64 -2/3 (cbrt.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)))) (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2)))))) (fma.f64 2/9 (*.f64 (pow.f64 (*.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -2)) 1/9) (pow.f64 y -2)) (*.f64 -1/3 (fma.f64 1/2 (pow.f64 y -2) (*.f64 (*.f64 1/3 (cbrt.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))) (*.f64 (pow.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) -4) 1/9) (pow.f64 y -2))))))) (*.f64 x x))))"]],"time":184.8291015625,"type":"simplify"},{"compiler":[[10621,6837]],"time":104.5,"type":"eval"},{"alts":[["(*.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x)","fresh",52.164551345343945],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","done",15.343120206248795],["(*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))","fresh",30.65393994378812],["(*.f64 x (-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y)))","fresh",47.71126884977376],["(*.f64 (*.f64 x (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))","fresh",30.635576542810316],["(*.f64 x (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3) 3))","fresh",52.576480975504154],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","done",15.753434950045516],["(*.f64 x (*.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 4/3) 2)))","fresh",30.810868191863584],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","done",15.818584268838947],["(*.f64 x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))))","fresh",55.360855111496726],["(*.f64 x (*.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 7/3) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))","fresh",30.67191679883678],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","next",23.4344746280622],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))))) 3)","fresh",52.2140116664228]],"compiler":[[11,8],[9,6],[18,10],[13,8],[18,10],[20,17],[12,9],[22,13],[12,9],[22,12],[21,13],[11,7],[14,11],[11,8],[18,10],[13,8],[18,10],[20,17],[22,13],[22,12],[21,13],[11,7],[14,11]],"count":[[206,13]],"kept":[{"done":[2,2],"fresh":[7,4],"new":[196,6],"picked":[1,1]}],"min-error":[0.03515625],"time":40.267822265625,"type":"prune"},{"compiler":[[24,8]],"locations":[["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))",0.00390625,true],["(/.f64 (*.f64 y y) x)",7.106052359730376,true]],"time":5.105224609375,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","x","-inf",0.265869140625],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","x","inf",0.2119140625],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","x","0",0.260009765625],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","y","-inf",0.18798828125],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","y","inf",0.31787109375],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","y","0",0.27392578125],["(/.f64 (*.f64 y y) x)","x","-inf",0.285888671875],["(/.f64 (*.f64 y y) x)","x","inf",0.3310546875],["(/.f64 (*.f64 y y) x)","x","0",0.450927734375],["(/.f64 (*.f64 y y) x)","y","-inf",0.1748046875],["(/.f64 (*.f64 y y) x)","y","inf",0.47998046875],["(/.f64 (*.f64 y y) x)","y","0",0.505126953125]],"time":3.890869140625,"type":"series"},{"count":[[2,111]],"inputs":[["(/.f64 (*.f64 y y) x)","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y y) x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 y y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 x)) (*.f64 y (pow.f64 x -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (pow.f64 x -2/3)) (/.f64 y (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y y) x)) (pow.f64 (/.f64 (*.f64 y y) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (cbrt.f64 (/.f64 (*.f64 y y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y y)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/3) (*.f64 (*.f64 y y) (pow.f64 x -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) (pow.f64 x -2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) (cbrt.f64 x)) (pow.f64 x -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 y y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 y y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (pow.f64 y 6) x) (pow.f64 x 2/3))) (/.f64 1 (cbrt.f64 (pow.f64 (pow.f64 x 2/3) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x -1/3) (*.f64 y y)) (pow.f64 x -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) x)) (pow.f64 y 4/3)) (pow.f64 x -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (cbrt.f64 x)) y) (pow.f64 x -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 2/3) (pow.f64 (/.f64 (*.f64 y y) x) 2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (pow.f64 y 2/3)) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (*.f64 y (pow.f64 x -2/3))) (pow.f64 x -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (*.f64 y y)) (cbrt.f64 x)) (neg.f64 (pow.f64 x -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 y 2/3)) (pow.f64 (/.f64 (*.f64 y y) x) 2/3)) (neg.f64 (pow.f64 x -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (neg.f64 (pow.f64 y 2/3))) (neg.f64 (pow.f64 x -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (*.f64 0 (cbrt.f64 (neg.f64 (/.f64 (*.f64 y y) x)))))) (cbrt.f64 (/.f64 (*.f64 y y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (/.f64 (pow.f64 y 4/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 4/3) x) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (/.f64 (pow.f64 y 6) x) (pow.f64 x 2/3)))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 x 2/3) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 x -1/3) (*.f64 y y))) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) x)) (pow.f64 y 4/3))) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 y y)) (cbrt.f64 x)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) y)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 y 2/3) (pow.f64 (/.f64 (*.f64 y y) x) 2/3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 y y) (pow.f64 x -2/3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (pow.f64 y 2/3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (*.f64 y (pow.f64 x -2/3)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2) (neg.f64 (*.f64 y y)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2) (/.f64 (*.f64 y y) (cbrt.f64 x)))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 y y)) (pow.f64 (/.f64 (*.f64 y y) x) 2))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (/.f64 (*.f64 y y) (cbrt.f64 x)) (pow.f64 (/.f64 (*.f64 y y) x) 2))) (cbrt.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) y) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/3) (*.f64 y y)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) x)) (pow.f64 y 4/3)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 (pow.f64 y 6) x) (pow.f64 x 2/3))) (cbrt.f64 (pow.f64 (pow.f64 x 2/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (neg.f64 (pow.f64 y 2/3))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (pow.f64 y 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y y) (pow.f64 x -2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 y (pow.f64 x -2/3))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 y 2/3)) (pow.f64 (/.f64 (*.f64 y y) x) 2/3)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 2/3) (pow.f64 (/.f64 (*.f64 y y) x) 2/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (neg.f64 (pow.f64 y 2/3)) (pow.f64 (/.f64 (*.f64 y y) x) 2/3))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (neg.f64 (pow.f64 y 2/3)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y y) x) 2) (*.f64 y y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (*.f64 y y) (pow.f64 (/.f64 (*.f64 y y) x) 2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (/.f64 (*.f64 y y) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 y y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y y) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 y) (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 y) (neg.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 y (/.f64 (*.f64 -1/2 (*.f64 y y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))) (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 2/3) (cbrt.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 y (/.f64 (*.f64 -1/2 (*.f64 y y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y (/.f64 (*.f64 -1/2 (*.f64 y y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 y 2/3) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) 2)) (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (+.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 2/3) (*.f64 0 (cbrt.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)))))) (+.f64 0 (cbrt.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) 2)) (-.f64 (pow.f64 y 2/3) (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x)) (cbrt.f64 (neg.f64 y))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x)) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) 2)) (+.f64 (pow.f64 y 2/3) (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x)) (cbrt.f64 y)))) (-.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y (/.f64 (*.f64 -1/2 (*.f64 y y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 y (/.f64 (*.f64 -1/2 (*.f64 y y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 1/4) (/.f64 (*.f64 y y) x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) 2)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (cbrt.f64 (/.f64 (*.f64 y y) x))) (pow.f64 (/.f64 (*.f64 y y) x) 2/3) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (*.f64 y y)) (/.f64 1 x) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y y) x) -1/2 (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y -1 (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 y (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (neg.f64 (pow.f64 y 2/3)) (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 y)) (pow.f64 y 2/3) (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y 2/3) (cbrt.f64 (neg.f64 y)) (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 y) (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) 1 (/.f64 (*.f64 -1/2 (*.f64 y y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) 1 (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 -1/2 (*.f64 y y)) x) (neg.f64 y))))))"]],"rules":[["egg-rr",40],["egg-rr",71]],"time":47.696044921875,"type":"rewrite"},{"count":[[159,117]],"inputs":[["(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(/.f64 (*.f64 -1/2 (*.f64 y y)) x)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(/.f64 (*.f64 -1/2 (*.f64 y y)) x)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(/.f64 (*.f64 -1/2 (*.f64 y y)) x)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))"]],"time":142.60400390625,"type":"simplify"},{"compiler":[[1759,808]],"time":20.171875,"type":"eval"},{"alts":[["(*.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x)","fresh",52.164551345343945],["(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","done",15.343120206248795],["(*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))","fresh",30.65393994378812],["(*.f64 x (-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y)))","fresh",47.71126884977376],["(*.f64 (*.f64 x (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))","fresh",30.635576542810316],["(*.f64 x (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3) 3))","fresh",52.576480975504154],["(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","done",15.753434950045516],["(*.f64 x (*.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 4/3) 2)))","fresh",30.810868191863584],["(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","done",15.818584268838947],["(*.f64 x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))))","fresh",55.360855111496726],["(*.f64 x (*.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 7/3) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))","fresh",30.67191679883678],["(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","done",23.4344746280622],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))))) 3)","fresh",52.2140116664228]],"compiler":[[11,8],[9,6],[18,10],[13,8],[18,10],[20,17],[12,9],[22,13],[12,9],[22,12],[21,13],[11,7],[14,11]],"count":[[130,13]],"kept":[{"done":[3,3],"fresh":[9,9],"new":[117,0],"picked":[1,1]}],"min-error":[0.03515625],"time":23.734130859375,"type":"prune"},{"accuracy":[3.0436633696952615],"baseline":[15.343120206248795],"branch":[["x",7.891051544851299,7],["y",5.19906249435228,4],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))",3.0436633696952615,4]],"compiler":[[3,2],[3,2],[12,9],[240,101]],"count":[[18,4]],"inputs":[["(*.f64 (*.f64 x (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3)) (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))))","(*.f64 x (pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) 1/3) 3))","(*.f64 x (*.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 4/3) 2)))","(*.f64 x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))))","(*.f64 x (*.f64 (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 7/3) (cbrt.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))))","(pow.f64 (cbrt.f64 (*.f64 x (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))))) 3)","(*.f64 (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))) x)","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 x (-.f64 (log.f64 (neg.f64 (/.f64 y x))) (/.f64 x y)))","(*.f64 x (pow.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) 3))","(pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))) 3)","(*.f64 (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x)))) (*.f64 (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3) x))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 x)) (log.f64 (neg.f64 y))))","(*.f64 (*.f64 x (cbrt.f64 (log1p.f64 (neg.f64 (/.f64 y x))))) (pow.f64 (log1p.f64 (neg.f64 (/.f64 y x))) 2/3))","(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))"]],"link":["."],"name":["Data.HyperLogLog.Type:size from hyperloglog-0.3.4, A"],"oracle":[64.0],"outputs":[["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))))) 3)","(*.f64 x (log1p.f64 (neg.f64 (/.f64 y x))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(*.f64 x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))))"]],"time":76.430908203125,"times":[["x",38.057861328125],["y",22.68701171875],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))",11.846923828125]],"type":"regimes"},{"bstep":[[1.2536871204372171e-290,2.9202899423875612e-261,0.030029296875],[-2.5349617211351917e-289,0.0,0.078125],[{"type":"real","value":"-inf"},-3.545048353122891e+207,0.030029296875]],"compiler":[[5,4],[12,9]],"method":["left-value","left-value","left-value"],"time":0.316162109375,"type":"bsearch"},{"compiler":[[89,56]],"inputs":[["(if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -inf.0) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))))) 3) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -4388899255034951/21944496275174754733023745004748837080297570543729328280448007953824789527038691788660702798145451174453138901351488446979832735450978591612896414872982681198457994802840025058142360791167736098566050165049439180766375815715632675961171034001565824849041810386302038359368560295224574744242597208206082048) (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) 3511119404027961/175555970201398037864189960037990696642380564349834626243584063630598316216309534309285622385163609395625111210811907575838661883607828732903171318983861449587663958422720200465138886329341888788528401320395513446131006525725061407689368272012526598792334483090416306874948482361796597953940777665648656384) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) (*.f64 x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -inf.0) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 (log.f64 y) (log.f64 (/.f64 -1 x))))) 3) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -4388899255034951/21944496275174754733023745004748837080297570543729328280448007953824789527038691788660702798145451174453138901351488446979832735450978591612896414872982681198457994802840025058142360791167736098566050165049439180766375815715632675961171034001565824849041810386302038359368560295224574744242597208206082048) (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) 3511119404027961/175555970201398037864189960037990696642380564349834626243584063630598316216309534309285622385163609395625111210811907575838661883607828732903171318983861449587663958422720200465138886329341888788528401320395513446131006525725061407689368272012526598792334483090416306874948482361796597953940777665648656384) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) (*.f64 x (cbrt.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) 2) (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x)))))))))","(if (<=.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) -inf.0) (*.f64 x (log.f64 (neg.f64 (/.f64 y x)))) (if (<=.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) -4388899255034951/21944496275174754733023745004748837080297570543729328280448007953824789527038691788660702798145451174453138901351488446979832735450978591612896414872982681198457994802840025058142360791167736098566050165049439180766375815715632675961171034001565824849041810386302038359368560295224574744242597208206082048) (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) (if (<=.f64 (*.f64 x (log1p.f64 (neg.f64 (/.f64 y x)))) 3511119404027961/175555970201398037864189960037990696642380564349834626243584063630598316216309534309285622385163609395625111210811907575838661883607828732903171318983861449587663958422720200465138886329341888788528401320395513446131006525725061407689368272012526598792334483090416306874948482361796597953940777665648656384) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y)) (*.f64 x (log.f64 (neg.f64 (/.f64 y x)))))))"]],"stop":[["fuel",1]],"time":28.534912109375,"type":"simplify"},{"time":0.032958984375,"type":"soundness"},{"compiler":[[89,56]],"remove-preprocessing":[[]],"time":26.779052734375,"type":"end"}]