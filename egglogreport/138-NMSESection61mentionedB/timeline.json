[{"compiler":[[24,18]],"method":["search"],"sampling":[[12,0.7414628844708204,0.1619511037133634,0.09658601181581616],[11,0.7180482670664787,0.20292668417096138,0.07902504876255989],[10,0.6458531967364252,0.30439002625644207,0.04975677700713277],[9,0.5775605626404285,0.39804849587380886,0.024390941485762596],[8,0.46829234808683395,0.5307313278317451,0.0009763240814208984],[7,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[6,0.15609744936227798,0.8429262265563011,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":66.22900390625,"type":"analyze"},{"outcomes":[["body",256,"invalid",39.498291015625,675],["body",256,"valid",480.55078125,8256]],"time":528.281982421875,"type":"sample"},{"compiler":[[23,17]],"inputs":[["0","1"],["(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))","(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 a a) (*.f64 b b)))) (-.f64 (/.f64 1 b) (/.f64 1 a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))","(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)) (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (*.f64 b a)))","(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 a a) (*.f64 b b)))) (-.f64 (/.f64 1 b) (/.f64 1 a)))","(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)) (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (*.f64 b a)))"]],"symmetry":[[]],"time":66.072998046875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))","(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))"]],"time":22.958984375,"type":"simplify"},{"compiler":[[42,26]],"time":0.508056640625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","next",13.821241562250902],["(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))","fresh",14.71463498957843]],"compiler":[[21,12],[23,17],[21,12],[23,17]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[8.867936210273102],"time":2.7529296875,"type":"prune"},{"compiler":[[62,18]],"locations":[["(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))",0.26953125,true],["(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))",2.2230541212796533,true],["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))",11.490685521520195,true]],"time":10.6630859375,"type":"localize"},{"count":[[3,72]],"series":[["(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))","a","-inf",0.280029296875],["(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))","a","inf",0.72998046875],["(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))","a","0",0.3330078125],["(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))","b","-inf",0.302978515625],["(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))","b","inf",0.35888671875],["(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))","b","0",0.35498046875],["(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))","b","-inf",0.347900390625],["(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))","b","inf",0.41796875],["(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))","b","0",0.35498046875],["(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))","a","-inf",0.31787109375],["(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))","a","inf",0.56201171875],["(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))","a","0",0.39990234375],["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","a","-inf",0.424072265625],["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","a","inf",0.468994140625],["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","a","0",0.402099609375],["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","b","-inf",0.501953125],["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","b","inf",0.613037109375],["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","b","0",0.705078125]],"time":8.178955078125,"type":"series"},{"count":[[3,302]],"inputs":[["(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","(*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))","(*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 b (*.f64 (PI.f64) 1/2))) (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 (neg.f64 a) (*.f64 (PI.f64) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 (*.f64 (PI.f64) 1/2) b)) (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 (*.f64 (PI.f64) 1/2) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 0) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (*.f64 (PI.f64) 1/2)) (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))) (*.f64 (*.f64 (neg.f64 a) (*.f64 (PI.f64) 1/2)) (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))) (*.f64 (*.f64 (*.f64 (PI.f64) 1/2) (neg.f64 a)) (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a)))) (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) a) (/.f64 -1 (*.f64 (*.f64 (-.f64 a b) (+.f64 a b)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (+.f64 a b)) (/.f64 1 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (-.f64 b a)) (/.f64 1 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2)) (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 1/2 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (/.f64 1/2 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b a) (PI.f64)) (/.f64 1/2 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) a) (/.f64 -1/2 (*.f64 (*.f64 (-.f64 a b) (+.f64 a b)) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 a b)) (/.f64 -1/2 (*.f64 (-.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))) (/.f64 1/2 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2) (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) a) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 a b)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 (*.f64 a b) (+.f64 a b))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (/.f64 (-.f64 b a) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) (/.f64 (-.f64 b a) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a b) 2)) (/.f64 (-.f64 b a) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 (PI.f64) (*.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b a) (/.f64 (PI.f64) (*.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) a) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (+.f64 a b))) (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2) (/.f64 1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 a b)) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 a b) (+.f64 a b))) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 a b) (PI.f64)) (*.f64 (*.f64 a b) 2)) (/.f64 -1 (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 1 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) a) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (-.f64 b a)) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) a) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2))) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 (-.f64 b a) (cbrt.f64 (*.f64 a b)))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (-.f64 a b)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))) (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))) (*.f64 (-.f64 b a) (PI.f64))) (*.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (*.f64 a b)))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) 1/2) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)))) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (-.f64 b a)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (*.f64 (PI.f64) 1/2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) (-.f64 b a)) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (*.f64 -1/2 (PI.f64))) (*.f64 (-.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (PI.f64)) (*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) a) 1/2) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (-.f64 b a))) (*.f64 (*.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))) (*.f64 (*.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (cbrt.f64 (*.f64 a b))) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a)))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 a b) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a)))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2) (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b)))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (+.f64 a b) (-.f64 b a))) (*.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (*.f64 a b))) (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b)))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2) (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2))) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (-.f64 b a)) (*.f64 (*.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a)))) (/.f64 (-.f64 b a) (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) 1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (-.f64 b a)) 1) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) a) 1) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a)))) 1) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 a b) (PI.f64)) (*.f64 (*.f64 a b) 2)) 1) (*.f64 (-.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (/.f64 1/2 (-.f64 b a))) (*.f64 (*.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (/.f64 (*.f64 (*.f64 a b) (+.f64 a b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 a b) (PI.f64)) (*.f64 (*.f64 a b) 2)) (*.f64 (-.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (*.f64 (+.f64 a b) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (+.f64 a b) (-.f64 b a)))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) a)) (*.f64 (*.f64 (-.f64 a b) (+.f64 a b)) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (-.f64 b a))) (neg.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2) (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (+.f64 a b)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 (+.f64 a b) (-.f64 b a))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) (-.f64 b a)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 (-.f64 b a) a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (-.f64 b a)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 (-.f64 b a) b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 a b)) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 (+.f64 a b) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a b) 2)) (-.f64 b a)) (*.f64 (+.f64 a b) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 (+.f64 a b) (-.f64 b a))) (*.f64 (PI.f64) 1/2)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b))) (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 a b)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2))) (*.f64 (+.f64 a b) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 a b) (+.f64 a b))) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2)) (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2))) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2)) (cbrt.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2))) (cbrt.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (+.f64 a b))) (*.f64 (PI.f64) 1/2)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))) 1/2) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 a b))) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (+.f64 a b) (-.f64 b a))) 1/2) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 (*.f64 a b) (+.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2))) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) a) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) b) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) (*.f64 (+.f64 a b) (-.f64 b a)))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) a) (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) b) (/.f64 -1 (*.f64 (-.f64 a b) (+.f64 a b)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2) (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2))) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2) (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))) (cbrt.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 2))) (cbrt.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (/.f64 -1/2 (*.f64 (-.f64 a b) (+.f64 a b)))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (/.f64 1/2 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (*.f64 (+.f64 a b) (-.f64 b a)))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (/.f64 -1/2 (*.f64 (*.f64 (-.f64 a b) (+.f64 a b)) b))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 a b)) (/.f64 (-.f64 b a) (*.f64 a b))) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (+.f64 a b)) 1) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (+.f64 a b) (-.f64 b a))) 1) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 a b) (PI.f64)) (/.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (neg.f64 (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 a b) (PI.f64)) (neg.f64 (*.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (+.f64 a b))) (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 a b) (/.f64 (PI.f64) (*.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 a b) (*.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) (/.f64 1/2 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2) (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (+.f64 a b) (-.f64 b a))) (/.f64 (-.f64 a b) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (*.f64 (-.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (*.f64 (*.f64 a b) (+.f64 a b)) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) b) (neg.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (*.f64 (*.f64 a b) (+.f64 a b))) (neg.f64 (*.f64 a (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) a)) (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 a (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 b (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b a) (*.f64 (*.f64 a b) a)) (*.f64 (-.f64 b a) (*.f64 (*.f64 a b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b a) (*.f64 a (*.f64 a b))) (*.f64 (-.f64 b a) (*.f64 b (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b a) (*.f64 b (*.f64 a b))) (*.f64 (-.f64 b a) (*.f64 a (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b a) (*.f64 (*.f64 a b) b)) (*.f64 (-.f64 b a) (*.f64 (*.f64 a b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 a (-.f64 b a))) (*.f64 (*.f64 a b) (*.f64 b (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 b (-.f64 b a))) (*.f64 (*.f64 a b) (*.f64 a (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) b)) (*.f64 (*.f64 a b) (neg.f64 (*.f64 (+.f64 a b) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) a)) (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) b)) (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) b)) (*.f64 1 (neg.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 b (*.f64 (*.f64 a b) (+.f64 a b)))) (*.f64 1 (neg.f64 (*.f64 a (*.f64 (*.f64 a b) (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) (*.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 0) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a b) (-.f64 b a)) a) (*.f64 (*.f64 (*.f64 a b) (-.f64 b a)) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a b) (-.f64 b a)) b) (*.f64 (*.f64 (*.f64 a b) (-.f64 b a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a b) a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 a b) b) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (*.f64 a b)) (-.f64 b a)) (*.f64 (*.f64 b (*.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (*.f64 a b)) (-.f64 b a)) (*.f64 (*.f64 a (*.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a b) b) (-.f64 b a)) (*.f64 (*.f64 (*.f64 a b) a) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (-.f64 b a)) (*.f64 a b)) (*.f64 (*.f64 b (-.f64 b a)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (-.f64 b a)) (*.f64 a b)) (*.f64 (*.f64 a (-.f64 b a)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 a b) b) (*.f64 a b)) (*.f64 (neg.f64 (*.f64 (+.f64 a b) a)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b a) a) (*.f64 a b)) (*.f64 (*.f64 (-.f64 b a) b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 a b)) (*.f64 (*.f64 (-.f64 b a) a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (+.f64 a b)) (*.f64 a b)) (*.f64 (neg.f64 (*.f64 a (+.f64 a b))) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) b) 1) (*.f64 (neg.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (*.f64 (*.f64 a b) (+.f64 a b))) 1) (*.f64 (neg.f64 (*.f64 a (*.f64 (*.f64 a b) (+.f64 a b)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) (*.f64 0 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (*.f64 (*.f64 a b) (-.f64 b a))) (*.f64 b (*.f64 (*.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (*.f64 (*.f64 a b) (-.f64 b a))) (*.f64 a (*.f64 (*.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a b) (*.f64 b (+.f64 a b))) (*.f64 (*.f64 a b) (neg.f64 (*.f64 a (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 a b) (-.f64 b a)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) (+.f64 a b)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2)) (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b a) (*.f64 (*.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) (-.f64 b a)) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) (cbrt.f64 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) (cbrt.f64 (-.f64 b a))) (cbrt.f64 (pow.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 b (+.f64 a b)) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 a b) (*.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 a b) (-.f64 b a))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (*.f64 a (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a b)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a) (*.f64 (*.f64 (-.f64 a b) (+.f64 a b)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a b)) (*.f64 (-.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 a b) (+.f64 a b)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 a b) (+.f64 a b))) (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 a b) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (*.f64 (*.f64 a b) (+.f64 a b)) (neg.f64 (*.f64 a (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a b) (+.f64 a b)) b (neg.f64 (*.f64 (*.f64 (*.f64 a b) (+.f64 a b)) a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) 1/2) b) (*.f64 (*.f64 (PI.f64) 1/2) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (*.f64 (PI.f64) 1/2)) (*.f64 (neg.f64 a) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 a) (*.f64 (PI.f64) 1/2)) (*.f64 b (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) 1/2) (neg.f64 a)) (*.f64 (*.f64 (PI.f64) 1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 b (*.f64 (PI.f64) 1/2))) (*.f64 1 (*.f64 (neg.f64 a) (*.f64 (PI.f64) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (PI.f64) 1/2) b)) (*.f64 1 (*.f64 (*.f64 (PI.f64) 1/2) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 0) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (*.f64 (PI.f64) 1/2)) 1) (*.f64 (*.f64 (neg.f64 a) (*.f64 (PI.f64) 1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (PI.f64) 1/2) b) 1) (*.f64 (*.f64 (*.f64 (PI.f64) 1/2) (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 0 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2)) (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b a) 1/2) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b a) (cbrt.f64 (*.f64 (PI.f64) 1/2))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (cbrt.f64 1/2)) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (sqrt.f64 1/2)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (-.f64 b a))) (cbrt.f64 (pow.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 (-.f64 b a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b a)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 b a) 2)) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (PI.f64)) (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 a b) (*.f64 -1/2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2)) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b a) (PI.f64)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (-.f64 b a) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (PI.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (*.f64 (PI.f64) 1/2) (*.f64 (neg.f64 a) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) 1/2) b (*.f64 (*.f64 (PI.f64) 1/2) (neg.f64 a)))))))"]],"rules":[["egg-rr",48],["egg-rr",76],["egg-rr",178]],"time":51.3740234375,"type":"rewrite"},{"count":[[374,336]],"inputs":[["(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 a (pow.f64 b 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(*.f64 -1 (*.f64 (pow.f64 a 3) b))","(+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(*.f64 -1 (*.f64 (pow.f64 a 3) b))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2)))) (*.f64 -1 (*.f64 (pow.f64 a 3) b)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2)))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2)))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(*.f64 -1 (*.f64 (pow.f64 a 3) b))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 a (pow.f64 b 2)))))","(*.f64 a (pow.f64 b 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(*.f64 a (pow.f64 b 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(*.f64 -1/2 (*.f64 a (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 1/2 (*.f64 b (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 1/2 (*.f64 b (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 1/2 (*.f64 b (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 -1/2 (*.f64 a (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 -1/2 (*.f64 a (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 a (pow.f64 b 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))))","(fma.f64 a (pow.f64 b 3) 0)","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(*.f64 -1 (*.f64 (pow.f64 a 3) b))","(*.f64 (neg.f64 b) (pow.f64 a 3))","(+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b)))","(*.f64 (neg.f64 b) (pow.f64 a 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(*.f64 -1 (*.f64 (pow.f64 a 3) b))","(*.f64 (neg.f64 b) (pow.f64 a 3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2)))) (*.f64 -1 (*.f64 (pow.f64 a 3) b)))","(*.f64 (neg.f64 b) (pow.f64 a 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2)))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (pow.f64 b 2)) (pow.f64 b 2)))) (*.f64 -1 (*.f64 (pow.f64 a 3) b))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(*.f64 -1 (*.f64 (pow.f64 a 3) b))","(*.f64 (neg.f64 b) (pow.f64 a 3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 a (pow.f64 b 2))))","(*.f64 (neg.f64 b) (pow.f64 a 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 a (pow.f64 b 2)))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 a (pow.f64 b 2)))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(*.f64 a (pow.f64 b 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2))))","(fma.f64 a (pow.f64 b 3) 0)","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(*.f64 a (pow.f64 b 3))","(+.f64 (*.f64 a (pow.f64 b 3)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2))))","(fma.f64 a (pow.f64 b 3) 0)","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(+.f64 (*.f64 a (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) b)) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 a 2)))))","(fma.f64 a (pow.f64 b 3) (*.f64 (neg.f64 b) (pow.f64 a 3)))","(*.f64 -1/2 (*.f64 a (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(*.f64 1/2 (*.f64 b (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(*.f64 1/2 (*.f64 b (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(*.f64 1/2 (*.f64 b (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(*.f64 -1/2 (*.f64 a (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(*.f64 -1/2 (*.f64 a (PI.f64)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))","(+.f64 (*.f64 -1/2 (*.f64 a (PI.f64))) (*.f64 1/2 (*.f64 b (PI.f64))))","(*.f64 (PI.f64) (+.f64 (*.f64 1/2 b) (*.f64 -1/2 a)))"]],"time":217.698974609375,"type":"simplify"},{"compiler":[[8154,2535]],"time":52.3740234375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (+.f64 a b))) (*.f64 (PI.f64) 1/2)) (-.f64 b a))","fresh",0.8033521793919784],["(*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))","fresh",13.78741285132467],["(/.f64 (PI.f64) (/.f64 (*.f64 (*.f64 a b) (+.f64 a b)) 1/2))","fresh",0.7749745914760001],["(/.f64 (*.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (sqrt.f64 1/2)) (sqrt.f64 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","fresh",14.20508789989193],["(/.f64 (*.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))) 1/2) (-.f64 b a))","fresh",1.0946996891604204],["(*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (+.f64 a b)) (/.f64 1 (-.f64 b a)))","fresh",0.5736313476844201],["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","next",0.2910538086106521],["(/.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2))","fresh",8.97473249934687]],"compiler":[[21,12],[21,12],[13,9],[25,16],[21,12],[23,15],[21,12],[21,12],[21,12],[21,12],[13,9],[25,16],[21,12],[23,15],[21,12],[21,12]],"count":[[338,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[336,8],"picked":[1,0]}],"min-error":[0.00390625],"time":135.872802734375,"type":"prune"},{"compiler":[[66,22]],"locations":[["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))",0.158535009768442,true],["(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))",0.3046875,true],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))",0.3203125,true],["(/.f64 (-.f64 b a) (*.f64 a b))",8.737063142372582,true]],"time":11.76416015625,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","a","-inf",0.704833984375],["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","a","inf",0.22998046875],["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","a","0",0.2060546875],["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","b","-inf",0.23095703125],["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","b","inf",0.2119140625],["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","b","0",0.22998046875],["(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))","a","-inf",0.27197265625],["(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))","a","inf",0.308837890625],["(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))","a","0",0.304931640625],["(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))","b","-inf",0.2880859375],["(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))","b","inf",0.375],["(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))","b","0",0.508056640625],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))","a","-inf",0.272216796875],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))","a","inf",0.40087890625],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))","a","0",0.52490234375],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))","b","-inf",0.2900390625],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))","b","inf",0.471923828125],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))","b","0",0.541015625],["(/.f64 (-.f64 b a) (*.f64 a b))","a","-inf",0.432861328125],["(/.f64 (-.f64 b a) (*.f64 a b))","a","inf",0.361083984375],["(/.f64 (-.f64 b a) (*.f64 a b))","a","0",0.394775390625],["(/.f64 (-.f64 b a) (*.f64 a b))","b","-inf",0.35595703125],["(/.f64 (-.f64 b a) (*.f64 a b))","b","inf",0.34912109375],["(/.f64 (-.f64 b a) (*.f64 a b))","b","0",0.4208984375]],"time":9.06787109375,"type":"series"},{"count":[[4,305]],"inputs":[["(/.f64 (-.f64 b a) (*.f64 a b))","(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b)))","(/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))","(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 0) (/.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 b) a) b) (*.f64 (/.f64 (/.f64 1 b) a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 b) a) (neg.f64 a)) (*.f64 (/.f64 (/.f64 1 b) a) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 b a) (*.f64 a b))) (/.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (*.f64 0 (/.f64 (-.f64 b a) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 a) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 b) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 a b))) (/.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 b) (/.f64 b (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 a) 1) (/.f64 (/.f64 1 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b (*.f64 a b)) (pow.f64 (*.f64 a b) 2)) (/.f64 (*.f64 (*.f64 a b) a) (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 a b)) (/.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 a) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b a)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 b a) 2)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 a b) (/.f64 -1 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 b a) 2) (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 b a)) b) (/.f64 (cbrt.f64 (pow.f64 (-.f64 b a) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 b a)) a) (/.f64 (cbrt.f64 (pow.f64 (-.f64 b a) 2)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b a) (/.f64 (/.f64 1 b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 b) a) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 2)) (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) a) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 b) a)) (/.f64 (-.f64 b a) (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (/.f64 (-.f64 b a) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 b a) a) (cbrt.f64 b)) (/.f64 1 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b (*.f64 a b) (neg.f64 (*.f64 (*.f64 a b) a))) (/.f64 1 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (cbrt.f64 (*.f64 a b))) (pow.f64 (cbrt.f64 (*.f64 a b)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 a b) a) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (/.f64 (-.f64 b a) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) b) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b a) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 a b) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b a) (cbrt.f64 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b a) b) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 b a) a) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b (*.f64 a b) (neg.f64 (*.f64 (*.f64 a b) a))) (pow.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b a) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 a b) a) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 b) (neg.f64 (*.f64 a b))) (*.f64 (neg.f64 (*.f64 a b)) (neg.f64 a))) (*.f64 (neg.f64 (*.f64 a b)) (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 b) b) (neg.f64 (*.f64 a b))) (*.f64 (neg.f64 (*.f64 a b)) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (*.f64 a b)) (*.f64 (neg.f64 (*.f64 a b)) (/.f64 a b))) (*.f64 (neg.f64 (*.f64 a b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (*.f64 (neg.f64 (*.f64 a b)) (/.f64 a (cbrt.f64 (*.f64 a b))))) (*.f64 (neg.f64 (*.f64 a b)) (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 b) (*.f64 a b)) (*.f64 (neg.f64 (*.f64 a b)) a)) (*.f64 (neg.f64 (*.f64 a b)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b (neg.f64 (*.f64 a b))) (*.f64 (*.f64 a b) (neg.f64 a))) (*.f64 (*.f64 a b) (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (-.f64 b a)) (*.f64 (*.f64 a b) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 a b) (*.f64 (*.f64 a b) (/.f64 a b))) (*.f64 (*.f64 a b) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (*.f64 (*.f64 a b) (/.f64 a (cbrt.f64 (*.f64 a b))))) (*.f64 (*.f64 a b) (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b a) (neg.f64 (*.f64 a b))) (neg.f64 (*.f64 a b))) (*.f64 b (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b a) b) b) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b a) a) (*.f64 b (/.f64 a b))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b a) (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (*.f64 b (/.f64 a (cbrt.f64 (*.f64 a b))))) (*.f64 b (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b a) (*.f64 a b)) (*.f64 a b)) (*.f64 b (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 a b))) (neg.f64 (*.f64 a b))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (neg.f64 a))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 a b))) b) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) 1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 a b))) a) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (/.f64 a b))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (/.f64 a (cbrt.f64 (*.f64 a b))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 a b))) (*.f64 a b)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) a)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (*.f64 a b)) (*.f64 a (neg.f64 a))) (*.f64 a (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 a (*.f64 a (/.f64 a b))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2)) (*.f64 a (/.f64 a (cbrt.f64 (*.f64 a b))))) (*.f64 a (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 a b) (*.f64 a a)) (*.f64 a (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 a b) (*.f64 a b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (-.f64 b a) a) (cbrt.f64 b))) (neg.f64 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 b (*.f64 a b) (neg.f64 (*.f64 (*.f64 a b) a)))) (neg.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 b a) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 b a) (cbrt.f64 (*.f64 a b)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (-.f64 a b) (*.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (cbrt.f64 (/.f64 (*.f64 b b) (pow.f64 (*.f64 a b) 2))) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (pow.f64 (cbrt.f64 (/.f64 1 a)) 2) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 b) a) (/.f64 (cbrt.f64 (*.f64 b b)) b) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 (/.f64 1 b) a) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 b) b) (/.f64 (cbrt.f64 (*.f64 b b)) a) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 b) (/.f64 b a) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 1 b) a)) (/.f64 b (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (/.f64 (cbrt.f64 (*.f64 b b)) (*.f64 a b)) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) 1 (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 a) (/.f64 -1 b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 0) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (*.f64 (/.f64 -1 b) (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) a) (*.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (/.f64 -1 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 2)) (/.f64 (-.f64 b a) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (/.f64 1 (*.f64 (-.f64 b a) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (-.f64 b a))) (/.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (cbrt.f64 (pow.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (cbrt.f64 (*.f64 a b))) (/.f64 (-.f64 b a) (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) b) (/.f64 (-.f64 b a) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) a) (/.f64 (-.f64 b a) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (/.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 2)) (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 1 b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (/.f64 1 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)))) (cbrt.f64 (pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b a) (*.f64 a b))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 b a) (*.f64 a b)) 2)) (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b a) (*.f64 (/.f64 (/.f64 1 b) a) (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (*.f64 (/.f64 1 (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (-.f64 b a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (-.f64 a b)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 a b) (*.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)) (/.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) a)) (/.f64 1 (*.f64 (*.f64 (-.f64 b a) 2) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) a)) (/.f64 1 (*.f64 (-.f64 b a) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 b a) a) (PI.f64)) (/.f64 1 (*.f64 b (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (*.f64 (PI.f64) (-.f64 b a))) (/.f64 1 (*.f64 (-.f64 a b) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (/.f64 1/2 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (/.f64 1 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b a) (PI.f64)) (/.f64 1 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 b a) a) (*.f64 (PI.f64) 1/2)) (/.f64 1 (*.f64 b (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (*.f64 a b))) (pow.f64 (cbrt.f64 (*.f64 a b)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (cbrt.f64 (-.f64 b a))) (pow.f64 (cbrt.f64 (-.f64 b a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (-.f64 b a) a)) (/.f64 1 (*.f64 (-.f64 a b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 b a) a) (*.f64 -1/2 (PI.f64))) (/.f64 1 (*.f64 b (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (-.f64 b a)) (/.f64 1 (*.f64 (*.f64 (-.f64 b a) 2) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 a b) (PI.f64)) (/.f64 1 (neg.f64 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (-.f64 a b)) (/.f64 1 (neg.f64 (*.f64 (*.f64 (-.f64 b a) 2) (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (PI.f64)) (/.f64 -1 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (*.f64 (-.f64 b a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (cbrt.f64 (-.f64 b a))) (cbrt.f64 (pow.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (-.f64 a b)) (neg.f64 (*.f64 (*.f64 (-.f64 b a) 2) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (-.f64 b a)) (*.f64 (*.f64 (-.f64 b a) 2) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) a)) (*.f64 (*.f64 (-.f64 b a) 2) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) a)) (*.f64 (-.f64 b a) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (-.f64 b a) a)) (*.f64 (-.f64 a b) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) a) (PI.f64)) (*.f64 b (*.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) a) (*.f64 (PI.f64) 1/2)) (*.f64 b (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) a) (*.f64 -1/2 (PI.f64))) (*.f64 b (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 a b) (PI.f64)) (neg.f64 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) a)) (*.f64 1 (*.f64 (*.f64 (-.f64 b a) 2) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) a)) (*.f64 1 (*.f64 (-.f64 b a) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 b a) a) (PI.f64)) (*.f64 1 (*.f64 b (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 1 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (-.f64 b a) a)) (*.f64 1 (*.f64 (-.f64 a b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (-.f64 b a)) (*.f64 1 (*.f64 (*.f64 (-.f64 b a) 2) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 a b) (PI.f64)) (*.f64 1 (neg.f64 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (-.f64 a b)) (*.f64 1 (neg.f64 (*.f64 (*.f64 (-.f64 b a) 2) (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) a))) (neg.f64 (*.f64 (*.f64 (-.f64 b a) 2) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (-.f64 b a) a) (PI.f64))) (neg.f64 (*.f64 b (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b)))) (*.f64 (-.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (*.f64 a b)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (cbrt.f64 (-.f64 b a)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) a)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (-.f64 b a) a))) (*.f64 (-.f64 b a) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (-.f64 b a) a) (*.f64 -1/2 (PI.f64)))) (*.f64 b (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b a) (PI.f64)) (neg.f64 (neg.f64 (*.f64 (*.f64 a b) (*.f64 (-.f64 b a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (-.f64 b a)) (neg.f64 (neg.f64 (*.f64 (*.f64 (-.f64 b a) 2) (*.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 0) (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (*.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (*.f64 0 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (cbrt.f64 (-.f64 b a))) (/.f64 1/2 (cbrt.f64 (pow.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (/.f64 1/2 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/8 (-.f64 b a))) (/.f64 (PI.f64) (cbrt.f64 (pow.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (PI.f64) (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (cbrt.f64 (/.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))) (pow.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (cbrt.f64 (pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 b a)) (*.f64 (PI.f64) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 2)) (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 b a))) (/.f64 (PI.f64) (*.f64 (cbrt.f64 (pow.f64 (-.f64 b a) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (-.f64 b a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (-.f64 a b)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (/.f64 1 (*.f64 (-.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (-.f64 b a))) (pow.f64 (cbrt.f64 (-.f64 b a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (PI.f64)) (/.f64 1 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (*.f64 (-.f64 b a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (-.f64 b a))) (cbrt.f64 (pow.f64 (-.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (PI.f64)) (*.f64 (-.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) (-.f64 b a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (/.f64 (*.f64 (-.f64 b a) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (-.f64 b a)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) 3) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 0) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 b a))) (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 2)) (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 2) (pow.f64 (+.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (cbrt.f64 (+.f64 b a))) (/.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (cbrt.f64 (+.f64 b a))) (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (cbrt.f64 (pow.f64 (+.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 b a))) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (/.f64 (/.f64 1 b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (+.f64 b a)) (/.f64 1 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (cbrt.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (+.f64 b a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (/.f64 -1 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) 2)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (/.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (/.f64 1 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 b a)) (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (+.f64 b a)) (/.f64 1 (*.f64 (-.f64 b a) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (/.f64 1 (*.f64 (*.f64 (-.f64 b a) (*.f64 a b)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (*.f64 (*.f64 a b) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (/.f64 1 (*.f64 (-.f64 b a) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (+.f64 b a))) (*.f64 (-.f64 a b) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (neg.f64 (*.f64 (-.f64 b a) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (cbrt.f64 (+.f64 b a)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 b a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 (*.f64 (-.f64 b a) (*.f64 a b)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (neg.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (+.f64 b a)) (*.f64 (-.f64 b a) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b)) (cbrt.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (+.f64 b a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (*.f64 (-.f64 b a) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (+.f64 b a)) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 1/2) (/.f64 (*.f64 (*.f64 a b) (+.f64 b a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (/.f64 (*.f64 (*.f64 (-.f64 b a) (*.f64 a b)) (+.f64 b a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (/.f64 (*.f64 (-.f64 b a) (+.f64 b a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (*.f64 (PI.f64) (-.f64 b a))) (neg.f64 (*.f64 (*.f64 (-.f64 b a) (*.f64 a b)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (neg.f64 (*.f64 (*.f64 a b) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (+.f64 b a))) (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 a b) (*.f64 a b)) (/.f64 (/.f64 (PI.f64) (*.f64 (-.f64 b a) 2)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 a b)) (/.f64 (/.f64 (-.f64 b a) (*.f64 a b)) (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (+.f64 b a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 b a))) 3))))))"]],"rules":[["egg-rr",63],["egg-rr",45],["egg-rr",104],["egg-rr",93]],"time":49.295166015625,"type":"rewrite"},{"count":[[401,342]],"inputs":[["(/.f64 -1 b)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 1 a)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 1 a)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 1 a)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 -1 b)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 -1 b)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 -1/2 (/.f64 (PI.f64) a))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a 4))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))))","(*.f64 1/2 (/.f64 (PI.f64) b))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (*.f64 1/2 (/.f64 (PI.f64) b)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3))))))","(*.f64 1/2 (/.f64 (PI.f64) b))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (*.f64 1/2 (/.f64 (PI.f64) b)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3))))))","(*.f64 1/2 (/.f64 (PI.f64) b))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (*.f64 1/2 (/.f64 (PI.f64) b)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3))))))","(*.f64 -1/2 (/.f64 (PI.f64) a))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a 4))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))))","(*.f64 -1/2 (/.f64 (PI.f64) a))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a 4))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -1 b)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(/.f64 1 a)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(/.f64 1 a)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(/.f64 1 a)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(/.f64 -1 b)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(/.f64 -1 b)","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(-.f64 (/.f64 1 a) (/.f64 1 b))","(/.f64 (-.f64 b a) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 b a))","(*.f64 -1/2 (/.f64 (PI.f64) a))","(/.f64 (*.f64 -1/2 (PI.f64)) a)","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))","(*.f64 -1/2 (+.f64 (/.f64 (PI.f64) a) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2)))))","(*.f64 -1/2 (+.f64 (fma.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a (neg.f64 3)) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))) (/.f64 (PI.f64) a)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a 4))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) a) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 3)) (fma.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a (neg.f64 4)) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))))))","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (*.f64 1/2 (/.f64 (PI.f64) b)))","(*.f64 1/2 (+.f64 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (/.f64 (PI.f64) b)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3)))))","(*.f64 1/2 (+.f64 (+.f64 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (/.f64 (PI.f64) b)) (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3))))))","(fma.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (*.f64 1/2 (+.f64 (+.f64 (/.f64 (PI.f64) b) (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 3))) (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4)))))","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (*.f64 1/2 (/.f64 (PI.f64) b)))","(*.f64 1/2 (+.f64 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (/.f64 (PI.f64) b)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3)))))","(*.f64 1/2 (+.f64 (+.f64 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (/.f64 (PI.f64) b)) (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3))))))","(fma.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (*.f64 1/2 (+.f64 (+.f64 (/.f64 (PI.f64) b) (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 3))) (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4)))))","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (*.f64 1/2 (/.f64 (PI.f64) b)))","(*.f64 1/2 (+.f64 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (/.f64 (PI.f64) b)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3)))))","(*.f64 1/2 (+.f64 (+.f64 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (/.f64 (PI.f64) b)) (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) b)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 3))))))","(fma.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (*.f64 b b)) (*.f64 1/2 (+.f64 (+.f64 (/.f64 (PI.f64) b) (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 3))) (/.f64 (*.f64 (pow.f64 a 3) (PI.f64)) (pow.f64 b 4)))))","(*.f64 -1/2 (/.f64 (PI.f64) a))","(/.f64 (*.f64 -1/2 (PI.f64)) a)","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))","(*.f64 -1/2 (+.f64 (/.f64 (PI.f64) a) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2)))))","(*.f64 -1/2 (+.f64 (fma.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a (neg.f64 3)) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))) (/.f64 (PI.f64) a)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a 4))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) a) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 3)) (fma.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a (neg.f64 4)) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))))))","(*.f64 -1/2 (/.f64 (PI.f64) a))","(/.f64 (*.f64 -1/2 (PI.f64)) a)","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))","(*.f64 -1/2 (+.f64 (/.f64 (PI.f64) a) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2)))))","(*.f64 -1/2 (+.f64 (fma.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a (neg.f64 3)) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))) (/.f64 (PI.f64) a)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) a)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a 4))) (*.f64 -1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) a) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 3)) (fma.f64 (*.f64 (pow.f64 b 3) (PI.f64)) (pow.f64 a (neg.f64 4)) (/.f64 (*.f64 b (PI.f64)) (*.f64 a a))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b)))) (/.f64 (*.f64 -1/2 (PI.f64)) (pow.f64 b 3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b)))) (/.f64 (*.f64 -1/2 (PI.f64)) (pow.f64 b 3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b)))) (/.f64 (*.f64 -1/2 (PI.f64)) (pow.f64 b 3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))"]],"time":294.77001953125,"type":"simplify"},{"compiler":[[7685,2940]],"time":57.8818359375,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","next",0.21550751953688402],["(/.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (+.f64 b a)) (-.f64 b a))","fresh",0.5596275879159781],["(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 1 b) a)) (+.f64 a b))","fresh",0.2653312988422101],["(/.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2))","fresh",8.97473249934687],["(*.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (*.f64 (*.f64 a b) (+.f64 b a))))","fresh",0.7951696110128841],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (/.f64 (/.f64 1 b) a))","fresh",0.2926750488422101],["(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (/.f64 (-.f64 b a) b) a)) (+.f64 a b))","fresh",9.715507519536885],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (*.f64 a b))","fresh",0.23894501953688402],["(*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))","fresh",13.78741285132467]],"compiler":[[13,9],[21,12],[15,11],[21,12],[15,11],[15,11],[21,12],[13,9],[21,12],[13,9],[21,12],[15,11],[21,12],[15,11],[15,11],[21,12],[13,9],[21,12]],"count":[[350,9]],"kept":[{"done":[0,0],"fresh":[7,2],"new":[342,7],"picked":[1,0]}],"min-error":[0],"time":157.211181640625,"type":"prune"},{"compiler":[[35,19]],"locations":[["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))",0.158535009768442,true],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)",0.22265625,true],["(/.f64 (*.f64 (PI.f64) 1/2) b)",0.30859375,true]],"time":8.69384765625,"type":"localize"},{"count":[[3,60]],"series":[["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","a","-inf",0.200927734375],["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","a","inf",0.218017578125],["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","a","0",0.201171875],["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","b","-inf",0.219970703125],["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","b","inf",0.201171875],["(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","b","0",0.203125],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)","a","-inf",0.176025390625],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)","a","inf",0.160888671875],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)","a","0",0.1708984375],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)","b","-inf",0.162109375],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)","b","inf",0.1630859375],["(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)","b","0",0.183837890625],["(/.f64 (*.f64 (PI.f64) 1/2) b)","b","-inf",1.373046875],["(/.f64 (*.f64 (PI.f64) 1/2) b)","b","inf",0.314208984375],["(/.f64 (*.f64 (PI.f64) 1/2) b)","b","0",0.501953125]],"time":4.659912109375,"type":"series"},{"count":[[3,246]],"inputs":[["(/.f64 (*.f64 (PI.f64) 1/2) b)","(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)","(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 0) (/.f64 (*.f64 (PI.f64) 1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (PI.f64) 1/2) b)) (/.f64 (*.f64 (PI.f64) 1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -1/2 (PI.f64)) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 b)) (/.f64 (*.f64 -1/2 (PI.f64)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (/.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (PI.f64)) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (cbrt.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/8 b)) (/.f64 (PI.f64) (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (PI.f64) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (cbrt.f64 b)) (cbrt.f64 (/.f64 1/8 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (/.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (*.f64 (PI.f64) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 b)) (/.f64 (PI.f64) (cbrt.f64 (/.f64 (*.f64 b b) 1/8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (PI.f64) 1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -1/2 (PI.f64)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) b) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 b) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (cbrt.f64 (*.f64 b b))) (cbrt.f64 (/.f64 1/8 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4)) b) (cbrt.f64 (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4) (*.f64 b b))) (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 b) (*.f64 -1/2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (cbrt.f64 (/.f64 (*.f64 b b) 1/8))) (cbrt.f64 (/.f64 1 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/8 (*.f64 b b))) (/.f64 (PI.f64) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (neg.f64 b)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 b)) (pow.f64 (cbrt.f64 b) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (/.f64 1 (*.f64 b -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 1/2) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (+.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (PI.f64)) (*.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) (cbrt.f64 (*.f64 -1/2 (PI.f64)))) (cbrt.f64 (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) (cbrt.f64 (*.f64 (PI.f64) 1/2))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) (cbrt.f64 (PI.f64))) (cbrt.f64 (+.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 b)) (*.f64 (PI.f64) 1/2)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) b) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/8 b)) (PI.f64)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) (cbrt.f64 b)) 1/2) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 b)) 1) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (/.f64 (PI.f64) (cbrt.f64 (*.f64 b b)))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (PI.f64))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2))) (cbrt.f64 (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (PI.f64))) (cbrt.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4) (*.f64 b b)))) (cbrt.f64 (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (cbrt.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4) (*.f64 b b)))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2))) (cbrt.f64 (+.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4) (*.f64 b b)))) (cbrt.f64 (+.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) (cbrt.f64 (/.f64 (*.f64 b b) 1/8))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) b) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (cbrt.f64 (/.f64 1/8 (*.f64 b b)))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 b))) (neg.f64 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (*.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 0) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (*.f64 0 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 1 b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 a)) (/.f64 (/.f64 1 b) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (/.f64 (*.f64 (PI.f64) 1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2) (*.f64 a a))) (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 b) (cbrt.f64 (*.f64 a a))) (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 b) a) (*.f64 (PI.f64) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) a) (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 (*.f64 a a))) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (/.f64 (*.f64 -1/2 (PI.f64)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) a) (neg.f64 b)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) a) b) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) a) (/.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (/.f64 1 (*.f64 (+.f64 b b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (PI.f64)) (/.f64 1 (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) a) (+.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (*.f64 (+.f64 b b) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 1/2) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 a)) (/.f64 1 b)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (neg.f64 (PI.f64))) (*.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)) (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)) (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (/.f64 (*.f64 (PI.f64) 1/2) b)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (PI.f64)) (/.f64 1 a)) (*.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 b)) (/.f64 1 a)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) a) 1) (+.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) 1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) a)) (cbrt.f64 (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) a)) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (PI.f64)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2)) a)) (cbrt.f64 (+.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (PI.f64)) (/.f64 -1 a)) (+.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 -1 a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 -1 a)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2) (*.f64 a a)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) 2) (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 1 b) (cbrt.f64 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) b) (/.f64 a 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (/.f64 (*.f64 (+.f64 b b) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (neg.f64 (*.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (PI.f64) a)) (*.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (PI.f64)) (neg.f64 (*.f64 (+.f64 b b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) (*.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 0) (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) (*.f64 0 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))) (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 a b))) (/.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 2)) (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (/.f64 -1 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2) (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 (+.f64 a b))) (/.f64 (/.f64 1 a) (cbrt.f64 (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 (/.f64 1 a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (/.f64 1 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 a b)) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 a b))) (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (cbrt.f64 (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (pow.f64 (+.f64 a b) 2))) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 a) (+.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (cbrt.f64 (pow.f64 (+.f64 a b) 2))) (cbrt.f64 (/.f64 1 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (+.f64 a b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2) (pow.f64 (+.f64 a b) 2))) (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 a b)) (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)) (+.f64 a b)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 1 (*.f64 a (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (cbrt.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (+.f64 a b)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (+.f64 a b)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (+.f64 a b)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (/.f64 1 (neg.f64 (*.f64 a (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (neg.f64 (neg.f64 (*.f64 a (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (neg.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (+.f64 a b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (+.f64 a b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (cbrt.f64 (+.f64 a b))) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (*.f64 a (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (neg.f64 (*.f64 a (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 a b))) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2))) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (*.f64 -1/2 (PI.f64))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (PI.f64) a)) (+.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (*.f64 (PI.f64) 1/2)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (*.f64 -1/2 (PI.f64)) a)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (*.f64 (PI.f64) 1/2) a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (PI.f64)) (*.f64 (+.f64 b b) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a))) (cbrt.f64 (neg.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 (+.f64 a b))) (/.f64 1 a)) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (/.f64 -1 (+.f64 a b))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 -1 (+.f64 a b))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 (/.f64 1 a) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 1 a) (+.f64 a b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (PI.f64)) (/.f64 (/.f64 1 a) (+.f64 a b))) (*.f64 b -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 (/.f64 1 a) (+.f64 a b))) (+.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (/.f64 1 a) (+.f64 a b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 b)) (/.f64 (/.f64 1 a) (+.f64 a b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 1 (+.f64 a b))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) a) (/.f64 1 (+.f64 a b))) (+.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (+.f64 a b))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (/.f64 1 (+.f64 a b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) a) (/.f64 1 (+.f64 a b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 1 (+.f64 a b))) (*.f64 (+.f64 b b) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (cbrt.f64 a)) (/.f64 1 (+.f64 a b))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (cbrt.f64 (pow.f64 (+.f64 a b) 2))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)) (+.f64 a b))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (PI.f64) 1/2) b)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2)) (+.f64 a b))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 2))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2) (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 2))) (cbrt.f64 (neg.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) 2) (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (neg.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (+.f64 a b)) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (cbrt.f64 (+.f64 a b))) 1) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (+.f64 a b)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) b) (/.f64 (*.f64 a (+.f64 a b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (/.f64 (neg.f64 (*.f64 a (+.f64 a b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) (/.f64 (*.f64 a (+.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (cbrt.f64 (+.f64 a b)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) (/.f64 (/.f64 1 a) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (/.f64 1 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a) (+.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (/.f64 (*.f64 -1/2 (PI.f64)) b) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b)) 3))))))"]],"rules":[["egg-rr",92],["egg-rr",86],["egg-rr",68]],"time":39.3330078125,"type":"rewrite"},{"count":[[306,265]],"inputs":[["(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) b))","(/.f64 (*.f64 1/2 (PI.f64)) b)","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b)))) (/.f64 (*.f64 -1/2 (PI.f64)) (pow.f64 b 3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b)))) (/.f64 (*.f64 -1/2 (PI.f64)) (pow.f64 b 3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b)))) (/.f64 (*.f64 -1/2 (PI.f64)) (pow.f64 b 3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))"]],"time":180.8681640625,"type":"simplify"},{"compiler":[[4519,2322]],"time":45.137939453125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (PI.f64) b) (/.f64 (*.f64 a (+.f64 a b)) 1/2))","fresh",4.767539576201751],["(/.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (/.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4)) b)) a) (+.f64 a b))","fresh",0.24742128907376806],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (/.f64 (/.f64 1 b) a))","fresh",0.2926750488422101],["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","next",0.23570253907376804],["(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (+.f64 a b))) (*.f64 a b))","fresh",0.25685502930532605],["(/.f64 (/.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 -1 a)) b) (+.f64 a b))","fresh",0.25132753907376804],["(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 1 b) a)) (+.f64 a b))","fresh",0.2653312988422101]],"compiler":[[13,9],[21,15],[15,11],[13,9],[15,11],[15,11],[15,11],[13,9],[21,15],[15,11],[13,9],[15,11],[15,11],[15,11]],"count":[[274,7]],"kept":[{"done":[0,0],"fresh":[8,2],"new":[265,5],"picked":[1,0]}],"min-error":[0],"time":109.498046875,"type":"prune"},{"compiler":[[33,15]],"locations":[["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))",0.158535009768442,true],["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))",0.3425147497717231,true]],"time":7.498046875,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","b","-inf",0.2060546875],["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","b","inf",0.218017578125],["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","b","0",0.203125],["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","a","-inf",0.224853515625],["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","a","inf",0.2099609375],["(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","a","0",0.23388671875],["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","b","-inf",0.163818359375],["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","b","inf",0.1630859375],["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","b","0",0.189208984375],["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","a","-inf",0.18505859375],["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","a","inf",0.175048828125],["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","a","0",0.2158203125]],"time":2.5888671875,"type":"series"},{"count":[[2,213]],"inputs":[["(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 0) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (*.f64 0 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 a b))) (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (/.f64 -1 a) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/8 (*.f64 a b))) (/.f64 (PI.f64) (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 b) (/.f64 (PI.f64) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (/.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))) (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) a) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) b) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (/.f64 1/2 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (cbrt.f64 (*.f64 a b))) (/.f64 1/2 (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) a) (/.f64 1/2 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (PI.f64)) (/.f64 1 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (/.f64 (PI.f64) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) b) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 a b)) (*.f64 1/2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (*.f64 a b))) (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (/.f64 (*.f64 1/2 (PI.f64)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (/.f64 (*.f64 1/2 (PI.f64)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (/.f64 (PI.f64) (cbrt.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))) (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 a b)) (cbrt.f64 (*.f64 1/2 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) b) (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 1 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 a) b) (*.f64 -1/2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (/.f64 1/8 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) a) (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) b) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (*.f64 a b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 (*.f64 a b)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/2 a) (neg.f64 (/.f64 (PI.f64) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (*.f64 a b))) (pow.f64 (cbrt.f64 (*.f64 a b)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (/.f64 -1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (cbrt.f64 b)) (/.f64 1 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) b) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (*.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (*.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) (cbrt.f64 (*.f64 a b))) 1/2) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 a b))) (*.f64 1/2 (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 -1/2 (PI.f64)) a)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/8 (*.f64 a b))) (PI.f64)) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) a) (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) a))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (cbrt.f64 (*.f64 1/2 (PI.f64)))) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (cbrt.f64 (*.f64 -1/2 (PI.f64)))) (cbrt.f64 (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) b) (cbrt.f64 (/.f64 1/8 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) b) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) b) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 b) (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 b) (*.f64 1/2 (PI.f64))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 b) (*.f64 -1/2 (PI.f64))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1/2 b) (PI.f64)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1/2 a) (neg.f64 (PI.f64))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1/2 a) (/.f64 (PI.f64) (cbrt.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) b) (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/8 a)) (/.f64 (PI.f64) b)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (/.f64 (PI.f64) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 a)) (/.f64 1 b)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 1 b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (PI.f64) (*.f64 a b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 1/2 b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) b) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (cbrt.f64 b)) 1) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) 1) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (*.f64 a b))) 1) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (/.f64 (PI.f64) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (pow.f64 (*.f64 a b) 2))) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (PI.f64) (cbrt.f64 b)) (/.f64 1/2 a)) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 1/2 (cbrt.f64 (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) a)) (cbrt.f64 (/.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))) (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2))) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (cbrt.f64 (/.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))) (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (PI.f64))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2))) (cbrt.f64 (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (PI.f64))) (cbrt.f64 (/.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64))) (pow.f64 (*.f64 a b) 2)))) (cbrt.f64 (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (PI.f64)) (/.f64 (neg.f64 (*.f64 a b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (/.f64 (*.f64 (*.f64 a b) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (*.f64 a b)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (PI.f64)) (neg.f64 (*.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (cbrt.f64 b))) (neg.f64 (cbrt.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 1/2 (PI.f64)) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) (*.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 0) (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) (*.f64 0 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))) (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (+.f64 a b))) (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (/.f64 -1 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (+.f64 a b))) (/.f64 (/.f64 1 (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (PI.f64)) (/.f64 (/.f64 1 (+.f64 a b)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1/2 a) (cbrt.f64 (+.f64 a b))) (/.f64 (/.f64 (PI.f64) b) (cbrt.f64 (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (/.f64 (/.f64 (PI.f64) b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2) (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (/.f64 1 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 a b)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 a b))) (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (+.f64 a b)) (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) b) (+.f64 a b)) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (+.f64 a b)) (*.f64 a b)) (*.f64 1/2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (PI.f64) b) (cbrt.f64 (pow.f64 (+.f64 a b) 2))) (/.f64 (/.f64 1/2 a) (cbrt.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2))) (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2))) (cbrt.f64 (/.f64 1 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 a b)) (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2) (pow.f64 (+.f64 a b) 2))) (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (/.f64 1 (*.f64 b (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (cbrt.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (+.f64 a b)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (PI.f64)) (/.f64 1 (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (PI.f64)) (+.f64 a b)) (/.f64 1 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (+.f64 a b)) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (+.f64 a b)) (/.f64 (/.f64 -1 a) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (PI.f64)) (/.f64 1 (neg.f64 (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (neg.f64 (*.f64 b (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (+.f64 a b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (PI.f64)) (neg.f64 (neg.f64 (*.f64 (*.f64 a b) (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (neg.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) (+.f64 a b)) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (+.f64 a b)) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (+.f64 a b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (cbrt.f64 (+.f64 a b))) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (neg.f64 (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (*.f64 b (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 2)) (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)))) (cbrt.f64 (neg.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 2)) (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2))) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1/2 a) (cbrt.f64 (+.f64 a b))) (/.f64 (PI.f64) b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (+.f64 a b))) (/.f64 1 (*.f64 a b))) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 a b))) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (*.f64 1/2 (PI.f64)) b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (cbrt.f64 b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (*.f64 -1/2 (PI.f64)) a)) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (*.f64 a b)))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 a b)) (PI.f64)) (*.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1/2 a) (/.f64 (/.f64 (PI.f64) b) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/8 a)) (/.f64 (/.f64 (PI.f64) b) (+.f64 a b))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (/.f64 (/.f64 (PI.f64) b) (+.f64 a b))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (/.f64 (/.f64 (PI.f64) b) (+.f64 a b))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (PI.f64) b) (+.f64 a b)) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2) (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (neg.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 2))) (cbrt.f64 (neg.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2) (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 2))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) b) (/.f64 1 (+.f64 a b))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (cbrt.f64 b)) (/.f64 1 (+.f64 a b))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (/.f64 1 (+.f64 a b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) (cbrt.f64 (*.f64 a b))) (/.f64 1 (+.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (/.f64 1 (+.f64 a b))) (*.f64 (*.f64 a b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 1/2 (PI.f64)) (/.f64 -1 (+.f64 a b))) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) a) (/.f64 -1 (+.f64 a b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 -1 (+.f64 a b))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 1/2 (PI.f64)) (/.f64 (/.f64 1 (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 (PI.f64)) a)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (+.f64 a b))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (+.f64 a b))) (cbrt.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) 2)) (+.f64 a b))) (cbrt.f64 (neg.f64 (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (+.f64 a b)) 1) b)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (cbrt.f64 (+.f64 a b))) 1) (cbrt.f64 (pow.f64 (+.f64 a b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (+.f64 a b)) 1) (neg.f64 (*.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 1/2 (PI.f64)) (+.f64 a b)) 1) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (cbrt.f64 (pow.f64 (+.f64 a b) 2))) (cbrt.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (/.f64 (*.f64 (*.f64 a b) (+.f64 a b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (PI.f64)) a) (/.f64 (*.f64 b (+.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (neg.f64 (*.f64 (*.f64 a b) (+.f64 a b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (PI.f64)) (/.f64 (*.f64 (*.f64 a b) (+.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (cbrt.f64 (+.f64 a b)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (+.f64 a b))) (*.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b)) (/.f64 1 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 a b)) (/.f64 (*.f64 -1/2 (PI.f64)) (*.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b)) 3))))))"]],"rules":[["egg-rr",103],["egg-rr",110]],"time":35.675048828125,"type":"rewrite"},{"count":[[261,229]],"inputs":[["(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b)))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 (*.f64 a a) b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3)) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 b 2) (PI.f64)) (pow.f64 a 5))) (+.f64 (*.f64 1/2 (/.f64 (PI.f64) (*.f64 (pow.f64 a 2) b))) (*.f64 1/2 (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (PI.f64) (pow.f64 a 3)) (/.f64 (*.f64 (*.f64 b b) (PI.f64)) (pow.f64 a 5)))) (*.f64 1/2 (+.f64 (/.f64 (PI.f64) (*.f64 (*.f64 a a) b)) (/.f64 (*.f64 b (PI.f64)) (pow.f64 a 4)))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))","(/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b)))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a (*.f64 b b))))","(+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2))))))","(fma.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3)) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 2) (PI.f64)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 (PI.f64) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (PI.f64)) (pow.f64 b 4))) (*.f64 1/2 (/.f64 (PI.f64) (*.f64 a (pow.f64 b 2)))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 a a) (PI.f64)) (pow.f64 b 5)) (/.f64 (PI.f64) (pow.f64 b 3)))) (*.f64 1/2 (fma.f64 (*.f64 a (PI.f64)) (pow.f64 b (neg.f64 4)) (/.f64 (PI.f64) (*.f64 a (*.f64 b b))))))"]],"time":147.39501953125,"type":"simplify"},{"compiler":[[3940,1869]],"time":36.782958984375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) b) (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) a)) (+.f64 a b))","fresh",0.2324600586106521],["(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (+.f64 a b))) (*.f64 a b))","fresh",0.25685502930532605],["(/.f64 (/.f64 (PI.f64) b) (/.f64 (*.f64 a (+.f64 a b)) 1/2))","fresh",4.767539576201751],["(/.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 a b))) (+.f64 a b))","fresh",0.21388627930532603],["(/.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (/.f64 -1 a) b)) (+.f64 a b))","fresh",0.22560502930532605],["(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (/.f64 (/.f64 1 b) a))","fresh",0.2926750488422101]],"compiler":[[21,15],[15,11],[13,9],[21,15],[15,11],[15,11]],"count":[[236,6]],"kept":[{"done":[0,0],"fresh":[6,3],"new":[229,3],"picked":[1,0]}],"min-error":[0],"time":88.282958984375,"type":"prune"},{"accuracy":[0.21388627930532603],"baseline":[0.21388627930532603],"branch":[["a",0.21388627930532605,1],["b",0.21388627930532603,1],["(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))",0.21388627930532603,1]],"compiler":[[3,2],[3,2],[23,17],[409,172]],"count":[[25,1]],"inputs":[["(/.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) b) (/.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) a)) (+.f64 a b))","(/.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 a b))) (+.f64 a b))","(/.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 (/.f64 -1 a) b)) (+.f64 a b))","(/.f64 (/.f64 (PI.f64) b) (/.f64 (*.f64 a (+.f64 a b)) 1/2))","(/.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (/.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/4)) b)) a) (+.f64 a b))","(/.f64 (/.f64 (*.f64 1/2 (PI.f64)) (*.f64 a b)) (+.f64 a b))","(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (+.f64 a b))) (*.f64 a b))","(/.f64 (/.f64 (*.f64 (*.f64 -1/2 (PI.f64)) (/.f64 -1 a)) b) (+.f64 a b))","(/.f64 (/.f64 (/.f64 (*.f64 (PI.f64) 1/2) b) a) (+.f64 a b))","(/.f64 (/.f64 (/.f64 (*.f64 1/2 (*.f64 (PI.f64) (-.f64 b a))) (*.f64 a b)) (+.f64 b a)) (-.f64 b a))","(/.f64 (*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (/.f64 1 b) a)) (+.f64 a b))","(*.f64 (*.f64 (PI.f64) 1/2) (/.f64 1 (*.f64 (*.f64 a b) (+.f64 b a))))","(*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (/.f64 (/.f64 1 b) a))","(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (/.f64 (-.f64 b a) b) a)) (+.f64 a b))","(/.f64 (/.f64 (*.f64 (PI.f64) 1/2) (+.f64 b a)) (*.f64 a b))","(/.f64 (*.f64 (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (+.f64 a b))) (*.f64 (PI.f64) 1/2)) (-.f64 b a))","(*.f64 (*.f64 (PI.f64) 1/2) (/.f64 (-.f64 b a) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a)))))","(/.f64 (PI.f64) (/.f64 (*.f64 (*.f64 a b) (+.f64 a b)) 1/2))","(/.f64 (*.f64 (*.f64 (*.f64 (-.f64 b a) (PI.f64)) (sqrt.f64 1/2)) (sqrt.f64 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","(/.f64 (*.f64 (/.f64 (*.f64 (-.f64 b a) (PI.f64)) (*.f64 (*.f64 a b) (+.f64 a b))) 1/2) (-.f64 b a))","(*.f64 (/.f64 (/.f64 (*.f64 (*.f64 (-.f64 a b) (PI.f64)) -1/2) (*.f64 a b)) (+.f64 a b)) (/.f64 1 (-.f64 b a)))","(/.f64 (*.f64 (/.f64 (*.f64 (PI.f64) 1/2) (-.f64 b a)) (/.f64 (-.f64 b a) (*.f64 a b))) (+.f64 a b))","(/.f64 (*.f64 (PI.f64) (/.f64 (-.f64 b a) (*.f64 a b))) (*.f64 (*.f64 (+.f64 a b) (-.f64 b a)) 2))","(/.f64 (*.f64 (-.f64 b a) (*.f64 (PI.f64) 1/2)) (*.f64 (*.f64 a b) (*.f64 (+.f64 a b) (-.f64 b a))))","(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))"]],"link":["."],"name":["NMSE Section 6.1 mentioned, B"],"oracle":[25.459710679730467],"outputs":[["(/.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 a b))) (+.f64 a b))"]],"time":27.12109375,"times":[["a",8.06787109375],["b",7.901123046875],["(*.f64 (*.f64 (/.f64 (PI.f64) 2) (/.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))) (-.f64 (/.f64 1 a) (/.f64 1 b)))",5.804931640625]],"type":"regimes"},{"compiler":[[21,15]],"inputs":[["(/.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 a b))) (+.f64 a b))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (PI.f64))) (/.f64 (cbrt.f64 (*.f64 1/4 (*.f64 (PI.f64) (PI.f64)))) (*.f64 a b))) (+.f64 a b))","(/.f64 (*.f64 (PI.f64) 1/2) (*.f64 (*.f64 a b) (+.f64 a b)))"]],"stop":[["fuel",1]],"time":21.76904296875,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[21,15]],"remove-preprocessing":[[]],"time":10.571044921875,"type":"end"}]