[{"compiler":[[41,27]],"method":["search"],"sampling":[[12,0.0007892705887556076,2.5460341572761527e-5,0.9991852690696716],[11,0.0007892705887556076,2.5460341572761527e-5,0.9991852690696716],[10,0.0007638102471828461,5.092068314552307e-5,0.9991852690696716],[9,0.0007638102471828461,5.092068314552307e-5,0.9991852690696716],[8,0.000712889564037323,0.00010184136629104614,0.9991852690696715],[7,0.000712889564037323,0.00010184136629104614,0.9991852690696715],[6,0.0006110481977462768,0.0002036827325820923,0.9991852690696716],[5,0.0006110481977462768,0.0002036827325820923,0.9991852690696716],[4,0.0004073654651641846,0.0004073654651641846,0.9991852690696716],[3,0.0004073654651641846,0.0004073654651641846,0.9991852690696716],[2,0.0,0.0008147309303283692,0.9991852690696716],[1,0.0,0.0008147309303283692,0.9991852690696716],[0,0.0,0.0008147309303283692,0.9991852690696716]],"time":16.208984375,"type":"analyze"},{"outcomes":[["body",256,"valid",607.18310546875,8256]],"time":615.39990234375,"type":"sample"},{"compiler":[[26,16]],"inputs":[["0","1"],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 cosTheta cosTheta))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) alpha) alpha))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","(/.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 cosTheta cosTheta))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) alpha) alpha))))","(/.f64 (fma.f64 cosTheta cosTheta -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 cosTheta cosTheta))) (fma.f64 (fma.f64 cosTheta cosTheta -1) (*.f64 alpha alpha) 1)))"]],"symmetry":[[]],"time":67.067138671875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))"]],"time":22.635009765625,"type":"simplify"},{"compiler":[[47,25]],"time":0.578857421875,"type":"eval"},{"alts":[["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","fresh",0.4891563301640355],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","next",0.44664003907376815]],"compiler":[[23,15],[26,16],[23,15],[26,16]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.44273378907376815],"time":1.714111328125,"type":"prune"},{"compiler":[[93,39]],"locations":[["(log.f64 (*.f64 alpha alpha))",0.11748756092597981,true],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)",0.23046875,true],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))",0.30859375,true],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))",0.35546875,true]],"time":17.546875,"type":"localize"},{"count":[[4,72]],"series":[["(log.f64 (*.f64 alpha alpha))","alpha","-inf",0.176025390625],["(log.f64 (*.f64 alpha alpha))","alpha","inf",0.14892578125],["(log.f64 (*.f64 alpha alpha))","alpha","0",0.14501953125],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","cosTheta","-inf",0.301025390625],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","cosTheta","inf",0.326171875],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","cosTheta","0",0.4248046875],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","alpha","-inf",0.1669921875],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","alpha","inf",0.282958984375],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","alpha","0",0.260986328125],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","-inf",0.37109375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","inf",0.840087890625],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","0",1.119140625],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","-inf",0.802978515625],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","inf",1.2470703125],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","0",1.243896484375],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","alpha","-inf",0.2080078125],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","alpha","inf",5.376220703125],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","alpha","0",14.14404296875]],"time":27.93310546875,"type":"series"},{"count":[[4,275]],"inputs":[["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","(log.f64 (*.f64 alpha alpha))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 0) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) 0) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 0 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2)) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) -1) (*.f64 (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 alpha alpha)) (*.f64 (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (*.f64 (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (pow.f64 alpha 6) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 1 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (*.f64 alpha alpha) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 alpha 1) (/.f64 (/.f64 (+.f64 -1 alpha) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (/.f64 1 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (+.f64 -1 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (+.f64 -1 alpha) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (+.f64 -1 alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (PI.f64)) (/.f64 (+.f64 -1 alpha) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (PI.f64)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (/.f64 1 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 1 (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (+.f64 -1 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (PI.f64)) (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2))) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (PI.f64))) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (-.f64 1 (*.f64 alpha alpha))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 (*.f64 alpha alpha)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (PI.f64)) (fma.f64 alpha alpha -1)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (PI.f64)) (+.f64 -1 alpha)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (*.f64 alpha alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 alpha 1) (/.f64 (+.f64 -1 alpha) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) 1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) 1) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (PI.f64)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 1 (PI.f64)))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (PI.f64)))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) 1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) -1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (/.f64 1 (PI.f64)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (PI.f64)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (/.f64 1 (PI.f64)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1))) (neg.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64))) (neg.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (+.f64 -1 alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (cbrt.f64 (-.f64 1 (*.f64 alpha alpha)))) (cbrt.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (cbrt.f64 (fma.f64 alpha alpha -1))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (-.f64 1 (pow.f64 alpha 6))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)) (fma.f64 alpha alpha -1)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 -1 alpha)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 alpha 1) (/.f64 (+.f64 -1 alpha) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 alpha 6)) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 alpha 6) -1)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))) (cbrt.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (cbrt.f64 (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) 1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 alpha 1) (/.f64 (+.f64 -1 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 3) 1) (/.f64 (/.f64 (+.f64 -1 alpha) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (fma.f64 alpha alpha (-.f64 1 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 alpha 6)) (neg.f64 (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (+.f64 (pow.f64 alpha 6) -1)) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 alpha 6)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 alpha alpha)) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (PI.f64)) (/.f64 (*.f64 alpha alpha) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (PI.f64)) (/.f64 alpha (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 alpha alpha)) (PI.f64)) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 1/3)) (/.f64 (*.f64 alpha alpha) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 alpha (/.f64 alpha (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (/.f64 (pow.f64 alpha 4) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 2) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 alpha (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 alpha (cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 alpha alpha) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 cosTheta (*.f64 alpha alpha)) (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 alpha alpha) cosTheta) (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 cosTheta) (*.f64 cosTheta (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 cosTheta) (*.f64 (*.f64 alpha alpha) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 0) (*.f64 (fma.f64 alpha alpha -1) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) (*.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 cosTheta (+.f64 alpha 1)) alpha) (*.f64 (*.f64 cosTheta (+.f64 alpha 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 alpha alpha) cosTheta)) (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) (*.f64 (fma.f64 alpha alpha -1) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) (*.f64 0 (*.f64 (fma.f64 alpha alpha -1) cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 alpha (*.f64 cosTheta (+.f64 alpha 1))) (*.f64 -1 (*.f64 cosTheta (+.f64 alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 cosTheta (*.f64 alpha alpha))) (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 cosTheta (*.f64 alpha alpha)) 1) (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 alpha alpha) cosTheta) 1) (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 1 (*.f64 alpha alpha)) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 cosTheta) (*.f64 (cbrt.f64 (*.f64 cosTheta cosTheta)) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 alpha alpha -1) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 alpha 1) (*.f64 (+.f64 -1 alpha) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 cosTheta)) (cbrt.f64 (*.f64 cosTheta cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 cosTheta (cbrt.f64 (fma.f64 alpha alpha -1))) (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) cosTheta)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 cosTheta (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 cosTheta (+.f64 alpha 1)) (+.f64 -1 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 1 (*.f64 alpha alpha)) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 cosTheta) (-.f64 1 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 alpha alpha)) (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 cosTheta (+.f64 (pow.f64 alpha 6) -1)) (/.f64 1 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 cosTheta (+.f64 alpha 1)) (+.f64 (pow.f64 alpha 3) -1)) (fma.f64 alpha alpha (+.f64 alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cosTheta (-.f64 1 (pow.f64 alpha 6))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 alpha 6)) cosTheta) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 alpha 6) -1)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 alpha alpha -1) 2)) cosTheta)) (cbrt.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 3) 1) (*.f64 (+.f64 -1 alpha) cosTheta)) (fma.f64 alpha alpha (-.f64 1 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 cosTheta (+.f64 (pow.f64 alpha 6) -1))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cosTheta (+.f64 (pow.f64 alpha 6) -1)) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 cosTheta (+.f64 (pow.f64 alpha 6) -1))) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 cosTheta (+.f64 (pow.f64 alpha 6) -1)) 1) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 1 (*.f64 alpha alpha)) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 alpha alpha) cosTheta (neg.f64 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 cosTheta (*.f64 alpha alpha) (neg.f64 cosTheta))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) 0) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (log.f64 (*.f64 alpha alpha)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log.f64 (*.f64 alpha alpha))) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 0 (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 alpha alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)) (cbrt.f64 (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (*.f64 alpha alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (*.f64 alpha alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 alpha alpha))))))"]],"rules":[["egg-rr",20],["egg-rr",50],["egg-rr",179],["egg-rr",26]],"time":64.761962890625,"type":"rewrite"},{"count":[[347,331]],"inputs":[["(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(*.f64 -1 cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 cosTheta (pow.f64 alpha 2))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 cosTheta (pow.f64 alpha 2))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 (*.f64 (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)) (fma.f64 (/.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))) -1/2 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (+.f64 (fma.f64 (*.f64 alpha alpha) (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (/.f64 (*.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (*.f64 (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)) (fma.f64 (/.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))) -1/2 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (*.f64 alpha cosTheta) 2) (PI.f64)))) (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))) (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (PI.f64))) (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))) (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (fma.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 cosTheta 4)) (/.f64 (+.f64 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha))) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (pow.f64 alpha 6)) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (PI.f64))))) (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(/.f64 (/.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta (neg.f64 2)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha)))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 (/.f64 1/2 (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 cosTheta 4)) (/.f64 (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta (neg.f64 2)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha))))))) (pow.f64 alpha 6)) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta (neg.f64 2)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha)))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)))) (-.f64 (/.f64 1/2 (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha))))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4))) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (-.f64 (/.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 alpha alpha -1) 4)) (pow.f64 cosTheta 6)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4))) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))) (/.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))))","(*.f64 -1 cosTheta)","(neg.f64 cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 cosTheta (pow.f64 alpha 2))","(*.f64 cosTheta (*.f64 alpha alpha))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 cosTheta (pow.f64 alpha 2))","(*.f64 cosTheta (*.f64 alpha alpha))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (fma.f64 alpha alpha -1) cosTheta)","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(neg.f64 (*.f64 (log.f64 alpha) -2))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(neg.f64 (*.f64 (log.f64 alpha) -2))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(neg.f64 (*.f64 (log.f64 alpha) -2))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(neg.f64 (*.f64 (log.f64 alpha) -2))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (neg.f64 (log.f64 (neg.f64 alpha))))"]],"time":283.673095703125,"type":"simplify"},{"compiler":[[13320,6449]],"time":113.614013671875,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64))","fresh",0.46903131808026577],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.4541588379159782],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","fresh",0.47152127870766913],["(-.f64 (/.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))","fresh",0.48792390115728573],["(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","fresh",0.5439985341171091],["(fma.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","fresh",0.502291369536632],["(/.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2)))","fresh",0.528013879305074],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)) (PI.f64))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5840989258319564],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","next",0.4277725586106521],["(/.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","fresh",0.48371759023130595]],"compiler":[[23,15],[32,20],[23,15],[77,35],[172,136],[42,23],[36,22],[35,21],[32,20],[76,35],[23,15],[32,20],[23,15],[77,35],[172,136],[42,23],[36,22],[35,21],[32,20],[76,35]],"count":[[333,10]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[331,10],"picked":[1,0]}],"min-error":[0.010097509768442016],"time":121.093994140625,"type":"prune"},{"compiler":[[129,43]],"locations":[["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)",0.23046875,false],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))",0.30859375,true],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))",0.41796875,true],["(*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha))))",0.4902725586106522,true]],"time":21.969970703125,"type":"localize"},{"count":[[3,48]],"series":[["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","-inf",0.2880859375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","inf",0.384033203125],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","0",0.705078125],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","-inf",0.447021484375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","inf",0.590087890625],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","0",0.652099609375],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))","alpha","-inf",0.218017578125],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))","alpha","inf",0.363037109375],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))","alpha","0",1.447998046875],["(*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha))))","alpha","-inf",0.1669921875],["(*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha))))","alpha","inf",0.348876953125],["(*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha))))","alpha","0",1.401123046875]],"time":7.56396484375,"type":"series"},{"count":[[3,239]],"inputs":[["(*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha))))","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) 0) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 0) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 0 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))) (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (log.f64 (*.f64 alpha alpha)))) (pow.f64 (log.f64 (*.f64 alpha alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (PI.f64))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2/3) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 0) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (*.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 alpha alpha)) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (cbrt.f64 (log.f64 (*.f64 alpha alpha)))) (pow.f64 (log.f64 (*.f64 alpha alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2/3) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 (PI.f64)))) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (cbrt.f64 (pow.f64 (PI.f64) 2/3))) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 3) (*.f64 (PI.f64) (PI.f64))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 3) (*.f64 (PI.f64) (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 alpha alpha)) (*.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1) (*.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (*.f64 (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (pow.f64 alpha 6) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 1 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 alpha 1) (/.f64 (+.f64 -1 alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3) (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) (/.f64 1 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (cbrt.f64 (PI.f64))) (/.f64 (+.f64 -1 alpha) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (+.f64 -1 alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (+.f64 -1 alpha) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (+.f64 -1 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (/.f64 1 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 1 (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (+.f64 -1 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (-.f64 1 (*.f64 alpha alpha))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (PI.f64))) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (cbrt.f64 (PI.f64))) (+.f64 -1 alpha)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (+.f64 -1 alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 alpha 1) (/.f64 (+.f64 -1 alpha) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) 1) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) 1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) 1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 alpha 1) (/.f64 (+.f64 -1 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (PI.f64) -1/3))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1)) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (PI.f64) -1/3))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (pow.f64 (PI.f64) -1/3))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (pow.f64 (PI.f64) -1/3))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1)) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (PI.f64) -1/3))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) 1)) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) -1)) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (pow.f64 (PI.f64) -1/3))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 alpha 6) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1))) (neg.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64)))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 alpha 6)) (neg.f64 (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (fma.f64 alpha alpha -1))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (-.f64 1 (*.f64 alpha alpha)))) (cbrt.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 alpha 1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 -1 alpha)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3) (fma.f64 alpha alpha -1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (-.f64 1 (pow.f64 alpha 6))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 alpha 6) -1)) (/.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (*.f64 (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 alpha 1) (/.f64 (+.f64 -1 alpha) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 3) 1) (/.f64 (+.f64 -1 alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (fma.f64 alpha alpha (-.f64 1 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 alpha 6)) (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 (*.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (+.f64 (pow.f64 alpha 6) -1)) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 alpha 6)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (pow.f64 alpha 6) -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 alpha alpha) (/.f64 1 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (cbrt.f64 (PI.f64))) (/.f64 alpha (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (cbrt.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 alpha (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 alpha 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) -1/3) (/.f64 (*.f64 alpha alpha) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 alpha (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 alpha 2/3) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 alpha 2/3) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 2) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 alpha (/.f64 alpha (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))))))"]],"rules":[["egg-rr",181],["egg-rr",27],["egg-rr",31]],"time":61.304931640625,"type":"rewrite"},{"count":[[287,290]],"inputs":[["(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (neg.f64 (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 (*.f64 (fma.f64 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))) -1/2 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (+.f64 (fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 (*.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (*.f64 (fma.f64 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))) -1/2 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (*.f64 alpha cosTheta) 2) (PI.f64)))) (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(+.f64 (/.f64 (*.f64 (fma.f64 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))) -1/2 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (PI.f64)))) (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (*.f64 (fma.f64 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))) -1/2 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (fma.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 cosTheta 4)) (/.f64 (+.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha))) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (pow.f64 alpha 6)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (PI.f64)))))) (fma.f64 -1/2 (/.f64 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(/.f64 (/.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta (neg.f64 2)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha)))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 (/.f64 1/2 (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 cosTheta 4)) (/.f64 (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta (neg.f64 2)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha))))))) (pow.f64 alpha 6)) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta (neg.f64 2)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha)))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)))) (-.f64 (/.f64 1/2 (*.f64 (pow.f64 (*.f64 cosTheta alpha) 2) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (neg.f64 (log.f64 (neg.f64 alpha)))))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2) (*.f64 (neg.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (+.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (neg.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2))) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (-.f64 (/.f64 (+.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (*.f64 (neg.f64 (pow.f64 cosTheta 6)) (pow.f64 (fma.f64 alpha alpha -1) 4))) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))) (/.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta)) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))) (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta)) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))) (/.f64 -1 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 (/.f64 (/.f64 1 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))) (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))))"]],"time":200.083984375,"type":"simplify"},{"compiler":[[14421,6792]],"time":118.47509765625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","fresh",0.47152127870766913],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (pow.f64 (PI.f64) 2/3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.4541588379159782],["(fma.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","fresh",0.502291369536632],["(/.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))","fresh",0.5661189086104002],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 cosTheta (pow.f64 alpha 2)) cosTheta))))","fresh",1.335529672061106],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","next",0.43314129109026744],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64))","fresh",0.46903131808026577],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)) (PI.f64))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5840989258319564],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) 3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.8059504395798912]],"compiler":[[23,15],[31,20],[42,23],[72,36],[30,20],[28,19],[23,15],[35,21],[34,23],[23,15],[31,20],[42,23],[72,36],[30,20],[28,19],[23,15],[35,21],[34,23]],"count":[[356,9]],"kept":[{"done":[0,0],"fresh":[9,4],"new":[346,5],"picked":[1,0]}],"min-error":[0],"time":106.94287109375,"type":"prune"},{"compiler":[[111,52]],"locations":[["(log.f64 (*.f64 alpha alpha))",0.11748756092597981,false],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))",0.26791000976844204,true],["(*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))",0.41796875,true],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))",0.4381637695368841,true]],"time":32.30419921875,"type":"localize"},{"count":[[3,60]],"series":[["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","-inf",0.360107421875],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","inf",4.9970703125],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","0",1.248046875],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","-inf",1.044921875],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","inf",1.27197265625],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","0",1.44189453125],["(*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))","alpha","-inf",0.166015625],["(*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))","alpha","inf",0.275146484375],["(*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))","alpha","0",0.987060546875],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","cosTheta","-inf",0.27294921875],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","cosTheta","inf",0.375],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","cosTheta","0",0.427978515625],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","alpha","-inf",0.612060546875],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","alpha","inf",0.56494140625],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","alpha","0",0.697021484375]],"time":15.23583984375,"type":"series"},{"count":[[3,210]],"inputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","(*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 0) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) (*.f64 0 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (PI.f64)))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))) (/.f64 1 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (pow.f64 (PI.f64) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (cbrt.f64 (PI.f64)))) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (pow.f64 (PI.f64) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) -1/3)) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (PI.f64))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 1 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (/.f64 1 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 1 (*.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (PI.f64)))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha)))) (neg.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (neg.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (PI.f64))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64)))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (neg.f64 (cbrt.f64 (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (cbrt.f64 (PI.f64)))) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (-.f64 1 (*.f64 alpha alpha))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha))))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3))) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -1/3)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha)))) (neg.f64 (pow.f64 (PI.f64) -1/3))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (neg.f64 (pow.f64 (PI.f64) -1/3))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 alpha alpha)) (neg.f64 (pow.f64 (PI.f64) -1/3))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) -1/3)) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (PI.f64) -1/3)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (PI.f64) -1/3)) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (pow.f64 (PI.f64) -1/3)) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (pow.f64 (PI.f64) -1/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) 1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (PI.f64))) 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) 1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) 1) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3)) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64)))) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64)))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (/.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 (*.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64))))) (neg.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (+.f64 (pow.f64 alpha 4) (+.f64 1 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) (PI.f64)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (PI.f64) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (neg.f64 (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 0) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (*.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2/3) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 alpha alpha)) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (log.f64 (*.f64 alpha alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (cbrt.f64 (pow.f64 (PI.f64) 2/3))) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 (PI.f64)))) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (pow.f64 (log.f64 (*.f64 alpha alpha)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (pow.f64 (log.f64 (*.f64 alpha alpha)) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1) (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 alpha alpha) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 alpha alpha) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (PI.f64)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) -2/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (/.f64 1 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha)))) (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha)))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -2/3) (fma.f64 alpha alpha -1)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (fma.f64 alpha alpha -1)) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha))))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (PI.f64)))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (-.f64 1 (*.f64 alpha alpha)))) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (fma.f64 alpha alpha -1))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3))) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 (*.f64 alpha alpha)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))))) (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (-.f64 1 (*.f64 alpha alpha))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha)))) 1) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) 1) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) 1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (log.f64 (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (*.f64 alpha alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (neg.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3))) (neg.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (log.f64 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (+.f64 (pow.f64 alpha 6) -1)) (+.f64 (pow.f64 alpha 4) (+.f64 1 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (pow.f64 alpha 4) (+.f64 1 (*.f64 alpha alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3))))))"]],"rules":[["egg-rr",93],["egg-rr",23],["egg-rr",94]],"time":52.212158203125,"type":"rewrite"},{"count":[[270,296]],"inputs":[["(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (pow.f64 alpha 2))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (pow.f64 alpha 2))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(+.f64 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (pow.f64 alpha 2))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2))))))","(*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha)))))) (pow.f64 alpha 2))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha)))))) (pow.f64 alpha 2))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha))))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2)))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha)))))) (pow.f64 alpha 2))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha))))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 (pow.f64 alpha 2))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 (pow.f64 alpha 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 (pow.f64 alpha 2))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (log.f64 (pow.f64 alpha 2))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 (pow.f64 alpha 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 (pow.f64 alpha 2)))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(fma.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (fma.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (+.f64 (*.f64 (*.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)) (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))) (*.f64 alpha alpha) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (log.f64 alpha)))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (/.f64 -1/2 (*.f64 (*.f64 (*.f64 (*.f64 alpha cosTheta) (*.f64 alpha cosTheta)) (PI.f64)) (log.f64 alpha))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64))) (log.f64 alpha))) (/.f64 -1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (log.f64 alpha)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha))) (/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (log.f64 alpha)))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 (*.f64 (*.f64 cosTheta alpha) (*.f64 cosTheta alpha)) (PI.f64)) (log.f64 alpha))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64))) (log.f64 alpha))) (/.f64 -1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (log.f64 alpha))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha))) (/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (log.f64 alpha)))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (+.f64 (/.f64 -1/2 (*.f64 (*.f64 (*.f64 (*.f64 cosTheta alpha) (*.f64 cosTheta alpha)) (PI.f64)) (log.f64 alpha))) (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (log.f64 alpha))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) -1/2) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64))) (log.f64 alpha))) (/.f64 -1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (log.f64 alpha)))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(/.f64 (/.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64)))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (/.f64 (/.f64 1/2 (*.f64 alpha alpha)) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64)))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64)))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 cosTheta -2) (*.f64 (*.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha)))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64)))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 cosTheta -2) (*.f64 (*.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha))))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha)))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)))) (*.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 cosTheta 4)) (/.f64 (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (neg.f64 (log.f64 (neg.f64 alpha))))))) (pow.f64 alpha 6)))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 cosTheta 4)) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64)))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (neg.f64 (log.f64 (neg.f64 alpha))) (PI.f64))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2) (*.f64 (log.f64 (pow.f64 alpha -2)) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (+.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (neg.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2))) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (+.f64 (/.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2) (*.f64 (log.f64 (pow.f64 alpha -2)) (PI.f64))) (/.f64 (+.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (*.f64 (neg.f64 (pow.f64 cosTheta 6)) (pow.f64 (fma.f64 alpha alpha -1) 4))) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))) (/.f64 -1 (*.f64 (log.f64 (pow.f64 alpha -2)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (log.f64 (neg.f64 alpha))))","(*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) -1/2) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (pow.f64 alpha 2))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (*.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)))) (*.f64 alpha alpha)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (pow.f64 alpha 2))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(-.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (*.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)))) (*.f64 alpha alpha)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (+.f64 (*.f64 cosTheta cosTheta) -1))))","(+.f64 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))) (pow.f64 alpha 2))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(fma.f64 (*.f64 (*.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)) (cbrt.f64 (pow.f64 (PI.f64) -2)) (-.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (*.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)))) (*.f64 alpha alpha)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))) (+.f64 (*.f64 cosTheta cosTheta) -1)))))","(*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) -1/2) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) -1/2) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (pow.f64 alpha -2)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2)))))","(-.f64 (fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) -1/2) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (pow.f64 alpha -2))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) -1/2) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha)))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2))))))","(fma.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) -1/2) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (-.f64 (fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) -1/2) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (pow.f64 alpha -2))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (-.f64 (/.f64 -1/2 (*.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha))) (/.f64 (*.f64 (+.f64 (*.f64 cosTheta cosTheta) -1) -1/2) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha)))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)))))","(*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) -1/2) (*.f64 (*.f64 cosTheta cosTheta) (neg.f64 (log.f64 (neg.f64 alpha)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha)))))) (pow.f64 alpha 2))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (*.f64 cosTheta cosTheta) (neg.f64 (log.f64 (neg.f64 alpha))))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (neg.f64 (log.f64 (neg.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (neg.f64 (log.f64 (neg.f64 alpha))))))) (*.f64 alpha alpha))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha)))))) (pow.f64 alpha 2))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha))))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2)))))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (*.f64 cosTheta cosTheta) (neg.f64 (log.f64 (neg.f64 alpha))))) (fma.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (neg.f64 (log.f64 (neg.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (neg.f64 (log.f64 (neg.f64 alpha))))))) (*.f64 alpha alpha)) (neg.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (neg.f64 (log.f64 (neg.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (neg.f64 (log.f64 (neg.f64 alpha))))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha)))))) (pow.f64 alpha 2))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (log.f64 (/.f64 -1 alpha))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (log.f64 (/.f64 -1 alpha))))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))))))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (*.f64 cosTheta cosTheta) (neg.f64 (log.f64 (neg.f64 alpha))))) (-.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (neg.f64 (log.f64 (neg.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (neg.f64 (log.f64 (neg.f64 alpha))))))) (*.f64 alpha alpha)) (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (neg.f64 (log.f64 (neg.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (neg.f64 (log.f64 (neg.f64 alpha)))))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 1/2 (+.f64 (/.f64 (pow.f64 cosTheta -2) (neg.f64 (log.f64 (neg.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (neg.f64 (log.f64 (neg.f64 alpha))))))))) (*.f64 (pow.f64 alpha 4) (*.f64 cosTheta cosTheta)))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (fma.f64 alpha alpha -1)) (log.f64 (*.f64 alpha alpha)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 (pow.f64 alpha 2))))))","(fma.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 (*.f64 alpha alpha))) (neg.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (log.f64 (*.f64 alpha alpha)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 (pow.f64 alpha 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 (pow.f64 alpha 2))))))","(fma.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 (*.f64 alpha alpha))) (-.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (log.f64 (*.f64 alpha alpha)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (log.f64 (pow.f64 alpha 2))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 (pow.f64 alpha 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 (pow.f64 alpha 2))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 (pow.f64 alpha 2)))))))","(-.f64 (fma.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 (*.f64 alpha alpha))) (-.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (/.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (log.f64 (*.f64 alpha alpha))))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 4) (pow.f64 cosTheta 6))) (log.f64 (*.f64 alpha alpha))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))","(/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))))","(-.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))))","(+.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))))))))","(+.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (-.f64 (-.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))","(/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))))","(-.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2))))))","(+.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (pow.f64 cosTheta 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))))))))","(+.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (-.f64 (-.f64 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8))))))"]],"time":288.079833984375,"type":"simplify"},{"compiler":[[13974,8006]],"time":136.97119140625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","fresh",0.47152127870766913],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (pow.f64 (PI.f64) 2/3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.4541588379159782],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)) (PI.f64))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5840989258319564],["(-.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))) (/.f64 1 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))","fresh",0.49409005831182373],["(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","fresh",0.5439985341171091],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 cosTheta (pow.f64 alpha 2)) cosTheta))))","fresh",1.335529672061106],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","next",0.39254630115753786],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64))","fresh",0.46903131808026577],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) 3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.8059504395798912],["(fma.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","fresh",0.502291369536632]],"compiler":[[23,15],[31,20],[35,21],[51,29],[172,136],[30,20],[28,20],[23,15],[34,23],[42,23],[23,15],[31,20],[35,21],[51,29],[172,136],[30,20],[28,20],[23,15],[34,23],[42,23]],"count":[[330,10]],"kept":[{"done":[0,0],"fresh":[8,7],"new":[321,3],"picked":[1,0]}],"min-error":[0],"time":96.3359375,"type":"prune"},{"compiler":[[111,62]],"locations":[["(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))",0.01171875,true],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))",0.26791000976844204,true],["(*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha)))",0.41796875,true],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))",0.4381637695368841,true]],"time":33.760986328125,"type":"localize"},{"count":[[4,84]],"series":[["(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))","cosTheta","-inf",0.241943359375],["(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))","cosTheta","inf",0.666015625],["(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))","cosTheta","0",4.27880859375],["(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))","alpha","-inf",0.900146484375],["(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))","alpha","inf",0.827880859375],["(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))","alpha","0",0.820068359375],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","-inf",0.34716796875],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","inf",0.888916015625],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","0",0.866943359375],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","-inf",1.68896484375],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","inf",1.3759765625],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","0",1.364013671875],["(*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha)))","alpha","-inf",6.72900390625],["(*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha)))","alpha","inf",4.69580078125],["(*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha)))","alpha","0",5.725830078125],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","cosTheta","-inf",0.2919921875],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","cosTheta","inf",0.760009765625],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","cosTheta","0",0.863037109375],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","alpha","-inf",1.60791015625],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","alpha","inf",1.825927734375],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","alpha","0",1.29296875]],"time":38.681884765625,"type":"series"},{"count":[[4,271]],"inputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","(*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha)))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","(*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 0) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) (*.f64 0 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (PI.f64)))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))) (/.f64 1 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (pow.f64 (PI.f64) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (pow.f64 (PI.f64) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (cbrt.f64 (PI.f64)))) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) -1/3)) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 1 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (PI.f64))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (/.f64 1 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 1 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (neg.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (PI.f64)))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3)))) (neg.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (PI.f64))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64)))) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64)))) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -1/3)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (cbrt.f64 (cbrt.f64 (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3))) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (-.f64 1 (*.f64 alpha alpha))) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (cbrt.f64 (PI.f64)))) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (PI.f64) 2/3))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3)) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))) (cbrt.f64 (cbrt.f64 (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (PI.f64) -1/3)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (pow.f64 (PI.f64) -1/3)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) -1/3)) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3)))) (pow.f64 (PI.f64) -1/3)) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (pow.f64 (PI.f64) -1/3)) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64)))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64)))) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (PI.f64)))) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 alpha alpha)) (neg.f64 (pow.f64 (PI.f64) -1/3))) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (neg.f64 (pow.f64 (PI.f64) -1/3))) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3)))) (neg.f64 (pow.f64 (PI.f64) -1/3))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))) (cbrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) 1) (cbrt.f64 (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) 1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (PI.f64))) 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (PI.f64))) 1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (/.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (/.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64))))) (neg.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 1 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64)))) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (PI.f64)))) (+.f64 (+.f64 1 (*.f64 alpha alpha)) (pow.f64 alpha 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) (PI.f64)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (pow.f64 (PI.f64) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (cbrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (PI.f64) -1/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 alpha)) 1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 alpha)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 0) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 alpha))) (*.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 0 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (log.f64 alpha))) (*.f64 (pow.f64 (*.f64 2 (log.f64 alpha)) 2/3) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (cbrt.f64 (log.f64 alpha))) (pow.f64 (log.f64 alpha) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 alpha) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (cbrt.f64 (pow.f64 (PI.f64) 2/3))) (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (log.f64 alpha)) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (cbrt.f64 (*.f64 2 (log.f64 alpha)))) (pow.f64 (*.f64 2 (log.f64 alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 alpha)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (cbrt.f64 (PI.f64)))) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8) (pow.f64 (log.f64 alpha) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8) (pow.f64 (log.f64 alpha) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 alpha alpha)) (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) -1) (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 alpha alpha) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 alpha alpha) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 (neg.f64 (pow.f64 (PI.f64) -2/3)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (PI.f64)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) -2/3) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (neg.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3)))) (/.f64 -1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (/.f64 1 (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 1 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 alpha alpha)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3)))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (fma.f64 alpha alpha -1))) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3) (cbrt.f64 (-.f64 1 (*.f64 alpha alpha)))) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -2/3) (fma.f64 alpha alpha -1)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (fma.f64 alpha alpha -1)) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (log.f64 alpha)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))) (pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)))) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (-.f64 1 (*.f64 alpha alpha))) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (fma.f64 alpha alpha -1)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3))) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (PI.f64)))) (pow.f64 (fma.f64 alpha alpha -1) 2/3)) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) 1) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3)))) 1) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) 1) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (*.f64 alpha alpha))) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2/3)) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (log.f64 alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 alpha alpha)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 alpha alpha -1) (pow.f64 (PI.f64) -2/3))) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (pow.f64 alpha 6) -1)) (+.f64 (+.f64 1 (*.f64 alpha alpha)) (pow.f64 alpha 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 6) -1) (/.f64 (pow.f64 (PI.f64) -2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (+.f64 (+.f64 1 (*.f64 alpha alpha)) (pow.f64 alpha 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha)))) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 0) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) 1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))) 1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))) (pow.f64 (PI.f64) 2/3)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha))) (pow.f64 (PI.f64) 2/3)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 0 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8))) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (pow.f64 (PI.f64) 2/3)) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))) (pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (pow.f64 (PI.f64) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (*.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) 2/3) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2/3) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 -2 (*.f64 (log.f64 alpha) (pow.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2/3) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (cbrt.f64 (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (+.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 3) 1)) (+.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 2) (neg.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 3) 1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha))) (+.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 2) (neg.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (pow.f64 (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 -2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (pow.f64 (*.f64 2 (*.f64 (log.f64 alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)))))))"]],"rules":[["egg-rr",52],["egg-rr",95],["egg-rr",30],["egg-rr",94]],"time":63.91015625,"type":"rewrite"},{"count":[[355,372]],"inputs":[["(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(-.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 6) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(/.f64 1/2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 6) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64))))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64)))))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)))))))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)))))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 alpha 6) (*.f64 (pow.f64 cosTheta 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2)))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))))))))","(*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 2)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 2)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 6) (pow.f64 alpha 4))))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 2)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 8) (pow.f64 alpha 6)))))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 6) (pow.f64 alpha 4)))))))))","(*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2)))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha))))))","(*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))","(-.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (*.f64 (*.f64 1/2 (*.f64 alpha alpha)) (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))))) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (pow.f64 alpha 4) (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 6) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(+.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))))) (*.f64 (*.f64 (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)) (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64)))))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)))) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (pow.f64 alpha 4) (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64)))) (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (PI.f64))))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(fma.f64 1/2 (*.f64 (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha)))) (pow.f64 alpha -2)) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(+.f64 (/.f64 (*.f64 1/2 (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha))))) (*.f64 alpha alpha)) (fma.f64 -1/2 (/.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4))) (*.f64 cosTheta cosTheta)) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(+.f64 (*.f64 1/2 (+.f64 (/.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha)))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha)))) (pow.f64 alpha -2)))) (fma.f64 -1/2 (/.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (pow.f64 cosTheta 4) (PI.f64)) (log.f64 alpha)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4))) (*.f64 cosTheta cosTheta)) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))))","(/.f64 1/2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(+.f64 (/.f64 1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 -1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(+.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (/.f64 -1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 6) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(+.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 alpha 6) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))) (/.f64 1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))) (/.f64 -1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64))))","(/.f64 (*.f64 1/2 (fma.f64 alpha alpha -1)) (*.f64 (log.f64 alpha) (PI.f64)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))))","(/.f64 (+.f64 (*.f64 1/2 (fma.f64 alpha alpha -1)) (*.f64 -1/2 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2))) (*.f64 (log.f64 alpha) (PI.f64)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64))))))","(fma.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4))) (*.f64 -1/2 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2))) (*.f64 (log.f64 alpha) (PI.f64))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64)))))))","(+.f64 (/.f64 (+.f64 (*.f64 1/2 (fma.f64 alpha alpha -1)) (*.f64 -1/2 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2))) (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4))) (*.f64 -1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 4) (pow.f64 cosTheta 6)))) (*.f64 (log.f64 alpha) (PI.f64))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(+.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(-.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(+.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(-.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha))))","(neg.f64 (*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (log.f64 alpha)))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha))))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha))))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha))))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha))))))","(*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(/.f64 (*.f64 -1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)))))))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(fma.f64 1/2 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 alpha alpha)) (+.f64 (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha))) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)))) (/.f64 (*.f64 -1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)))))))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(fma.f64 1/2 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 alpha alpha)) (+.f64 (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha))) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)))) (*.f64 -1/2 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (*.f64 (pow.f64 alpha 4) (*.f64 (*.f64 cosTheta cosTheta) (+.f64 (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha))) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha)))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 alpha 6) (*.f64 (pow.f64 cosTheta 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(+.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 alpha alpha)) (+.f64 (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha))) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)) (+.f64 (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha))) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2)) (cbrt.f64 (pow.f64 (PI.f64) -2))))) (*.f64 -1/2 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (*.f64 (pow.f64 alpha 4) (*.f64 (*.f64 cosTheta cosTheta) (+.f64 (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha))) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 alpha)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) -2))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 -1 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha)))))))","(*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2)))))","(/.f64 (*.f64 -1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2)))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta)))) (/.f64 (*.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (*.f64 alpha alpha)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta)))))) (/.f64 (*.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (*.f64 alpha alpha)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4))))) (pow.f64 alpha 2)))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 2))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (pow.f64 cosTheta 4)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))))))))","(+.f64 (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4))) (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (+.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 (+.f64 (/.f64 -1 (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta))) (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha)))) (pow.f64 alpha -2)))))","(*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(/.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 cosTheta cosTheta)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 2)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha))))) (*.f64 cosTheta cosTheta)) (/.f64 -1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 cosTheta 4) (*.f64 alpha alpha))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 2)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 6) (pow.f64 alpha 4))))))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 cosTheta 4) (*.f64 alpha alpha)))) (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 1 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 cosTheta cosTheta))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 cosTheta 6) (pow.f64 alpha 4))))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 2)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 8) (pow.f64 alpha 6)))))) (*.f64 1/2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 6) (pow.f64 alpha 4)))))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha))))) (*.f64 cosTheta cosTheta)) (/.f64 -1/2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 cosTheta 4) (*.f64 alpha alpha)))))) (fma.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 cosTheta 8) (pow.f64 alpha 6)))) (/.f64 (*.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 cosTheta 6) (pow.f64 alpha 4))))))","(*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 1/2 (/.f64 (*.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (pow.f64 (PI.f64) -2))) (log.f64 alpha)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (*.f64 -1/2 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (log.f64 alpha)) (/.f64 (*.f64 1/2 (fma.f64 alpha alpha -1)) (log.f64 alpha))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2) (cbrt.f64 (pow.f64 (PI.f64) -2))) (log.f64 alpha)) (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (log.f64 alpha))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (log.f64 alpha)) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (*.f64 -1/2 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2)) (log.f64 alpha)) (/.f64 (*.f64 -1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 4) (pow.f64 cosTheta 6))) (log.f64 alpha)))) (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 4)) (log.f64 alpha))))))","(*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(/.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(/.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (PI.f64) -2))) (*.f64 (log.f64 alpha) (*.f64 cosTheta cosTheta)))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))))","(fma.f64 -1/2 (/.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6))))))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 4)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 8)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 2))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 1/2 (*.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 6)))) (pow.f64 (/.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))) (*.f64 (cbrt.f64 (pow.f64 (PI.f64) -2)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6))))))","(*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (pow.f64 (*.f64 alpha cosTheta) 2)))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (pow.f64 (*.f64 alpha cosTheta) 2)))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (pow.f64 (*.f64 alpha cosTheta) 2)))))","(*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2)))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 alpha cosTheta) 2))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha))))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (+.f64 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha)) (neg.f64 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 alpha cosTheta) 2)))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha))))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (+.f64 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha)) (neg.f64 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 alpha cosTheta) 2)))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))) (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha))))))","(*.f64 (*.f64 -2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (+.f64 (*.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (log.f64 alpha)) (neg.f64 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 alpha cosTheta) 2)))))","(*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (*.f64 (pow.f64 (*.f64 alpha cosTheta) 2) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (+.f64 (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (*.f64 (pow.f64 (*.f64 alpha cosTheta) 2) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (+.f64 (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (*.f64 (pow.f64 (*.f64 alpha cosTheta) 2) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))","(+.f64 (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 alpha)))) (+.f64 (*.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (*.f64 (pow.f64 (*.f64 alpha cosTheta) 2) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))","(*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 alpha)))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3)))","(*.f64 (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))) (*.f64 2 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3))))","(*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))"]],"time":396.057861328125,"type":"simplify"},{"compiler":[[15472,9091]],"time":157.697998046875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))","fresh",0.45349506837909426],["(-.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))) (/.f64 1 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))","fresh",0.4803484633709541],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)) (PI.f64))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5840989258319564],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (cbrt.f64 (PI.f64)))","fresh",0.38864005115753786],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8) (pow.f64 (log.f64 alpha) 3))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","fresh",0.46942012930507404],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64))","fresh",0.46903131808026577],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (pow.f64 (PI.f64) 2/3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.4541588379159782],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","fresh",0.45451275412215364],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) 3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.8059504395798912],["(fma.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","fresh",0.502291369536632]],"compiler":[[35,25],[53,32],[35,21],[31,20],[31,22],[23,15],[31,20],[34,26],[34,23],[42,23]],"count":[[382,10]],"kept":[{"done":[0,0],"fresh":[9,5],"new":[372,5],"picked":[1,0]}],"min-error":[0],"time":114.030029296875,"type":"prune"},{"accuracy":[0.3886400511575378],"baseline":[0.38864005115753786],"branch":[["cosTheta",0.38864005115753786,1],["alpha",0.3886400511575378,1],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))",0.38864005115753786,1],["(*.f64 alpha alpha)",0.3886400511575378,1],["(*.f64 alpha alpha)",0.3886400511575378,1]],"compiler":[[3,2],[3,2],[26,16],[5,3],[5,3],[1179,645]],"count":[[25,1]],"inputs":[["(*.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (cbrt.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (PI.f64) -2/3)))","(-.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))) (/.f64 1 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8)) (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (cbrt.f64 (PI.f64)))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 8) (pow.f64 (log.f64 alpha) 3))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 -2 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) (log.f64 (/.f64 1 alpha)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","(-.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))) (/.f64 1 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (PI.f64)))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (log.f64 (*.f64 alpha alpha))) (pow.f64 (PI.f64) 2/3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (-.f64 (*.f64 (/.f64 (*.f64 alpha alpha) (cbrt.f64 (PI.f64))) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 cosTheta (pow.f64 alpha 2)) cosTheta))))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (PI.f64)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 (*.f64 alpha alpha)))) 3)) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","(-.f64 (/.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(fma.f64 (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 -1 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(/.f64 (*.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) 2)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 alpha alpha))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 (*.f64 alpha alpha)) 2)) (PI.f64))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (log.f64 (*.f64 alpha alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (-.f64 (*.f64 (*.f64 alpha alpha) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (*.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (neg.f64 (PI.f64)) (*.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))"]],"link":["."],"name":["GTR1 distribution"],"oracle":[2.1723988508436554],"outputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (cbrt.f64 (PI.f64)))"]],"time":58.60205078125,"times":[["cosTheta",7.93994140625],["alpha",8.364013671875],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))",8.172119140625],["(*.f64 alpha alpha)",7.916015625],["(*.f64 alpha alpha)",8.032958984375]],"type":"regimes"},{"compiler":[[31,20]],"inputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (cbrt.f64 (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (cbrt.f64 (PI.f64)))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (log.f64 alpha)) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (cbrt.f64 (PI.f64)))"]],"stop":[["fuel",1]],"time":22.98291015625,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[31,20]],"remove-preprocessing":[[]],"time":13.214111328125,"type":"end"}]