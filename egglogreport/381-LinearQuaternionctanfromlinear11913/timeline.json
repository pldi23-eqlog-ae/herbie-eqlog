[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.21452919111879964,0.6104330620016754,0.175037746879525],[11,0.18722547588549787,0.6591896963468571,0.15358482776764504],[10,0.11701592242843617,0.8776194182132713,0.005364659358292556],[9,0.07801061495229078,0.9205252564370312,0.0014641286106780171],[8,0.062408491961832624,0.9361273794274894,0.0014641286106780171],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":118.64208984375,"type":"analyze"},{"outcomes":[["body",256,"invalid",470.2861328125,10803],["body",256,"valid",360.622802734375,8256]],"time":848.27099609375,"type":"sample"},{"compiler":[[11,7]],"inputs":[["0","1","2"],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","(/.f64 (*.f64 (cosh.f64 y) (/.f64 x y)) z)","(/.f64 (*.f64 (cosh.f64 z) (/.f64 y z)) x)","(/.f64 (*.f64 (cosh.f64 x) (/.f64 z x)) y)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","(/.f64 (*.f64 (cosh.f64 y) (/.f64 x y)) z)","(/.f64 (*.f64 (cosh.f64 y) x) (*.f64 y z))","(/.f64 (*.f64 (cosh.f64 z) (/.f64 y z)) x)","(/.f64 (*.f64 (cosh.f64 z) y) (*.f64 z x))","(/.f64 (*.f64 (cosh.f64 x) (/.f64 z x)) y)","(/.f64 (*.f64 (cosh.f64 x) z) (*.f64 x y))"]],"symmetry":[[]],"time":68.822021484375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))"]],"time":17.697021484375,"type":"simplify"},{"compiler":[[19,10]],"time":0.31982421875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","fresh",7.413626639712642],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","next",6.4765625]],"compiler":[[11,7],[11,7],[11,7],[11,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.3671875],"time":1.2080078125,"type":"prune"},{"compiler":[[25,7]],"locations":[["(*.f64 (cosh.f64 x) (/.f64 y x))",0.2458593469403058,true],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)",5.873290723081575,true]],"time":5.819091796875,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 (cosh.f64 x) (/.f64 y x))","y","-inf",0.31005859375],["(*.f64 (cosh.f64 x) (/.f64 y x))","y","inf",0.346923828125],["(*.f64 (cosh.f64 x) (/.f64 y x))","y","0",0.350830078125],["(*.f64 (cosh.f64 x) (/.f64 y x))","x","-inf",0.364990234375],["(*.f64 (cosh.f64 x) (/.f64 y x))","x","inf",0.175048828125],["(*.f64 (cosh.f64 x) (/.f64 y x))","x","0",0.2861328125],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","z","-inf",0.343994140625],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","z","inf",0.572998046875],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","z","0",1.618896484375],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","y","-inf",0.366943359375],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","y","inf",0.51513671875],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","y","0",1.094970703125],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","x","-inf",1.56494140625],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","x","inf",1.241943359375],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","x","0",0.68505859375]],"time":10.072021484375,"type":"series"},{"count":[[2,184]],"inputs":[["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)","(*.f64 (cosh.f64 x) (/.f64 y x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 0) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) (/.f64 (/.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (/.f64 (cosh.f64 x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) (cbrt.f64 z)) (/.f64 (cosh.f64 x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (cbrt.f64 z)) (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z))) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) z) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 z z))) (/.f64 (cosh.f64 x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) z) (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (cbrt.f64 (*.f64 z z))) (/.f64 (/.f64 y x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (*.f64 (neg.f64 y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (neg.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 (/.f64 y x) z)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 1 z)) (neg.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (/.f64 1 z)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (neg.f64 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 y x) (cbrt.f64 z)) (cosh.f64 x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cosh.f64 x) (cbrt.f64 z)) (/.f64 y x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 (*.f64 (cosh.f64 x) y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2)) (/.f64 (/.f64 y x) z)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 (/.f64 y x) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) (/.f64 (/.f64 y x) z)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (/.f64 (cosh.f64 x) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 -1 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 (cosh.f64 x) z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (cosh.f64 x) z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 (cosh.f64 x) z)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 1 z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 1 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (/.f64 1 z)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (/.f64 (*.f64 x z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 y x)) (/.f64 (cosh.f64 x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 0) (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (cbrt.f64 x)) (/.f64 y (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) (cbrt.f64 (/.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) (cbrt.f64 (cosh.f64 x))) (cbrt.f64 (pow.f64 (cosh.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (cosh.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cosh.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (/.f64 y x)) (cbrt.f64 (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (*.f64 x x))) (/.f64 (cosh.f64 x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (*.f64 (/.f64 y x) (cbrt.f64 (cosh.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (*.f64 (cosh.f64 x) (cbrt.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (cosh.f64 x)) (cbrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cosh.f64 x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y x)) (neg.f64 (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 1 (neg.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (/.f64 1 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (neg.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cosh.f64 x) (cbrt.f64 x)) y) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cosh.f64 x) y) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) (cbrt.f64 (*.f64 (cosh.f64 x) y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (*.f64 (cosh.f64 x) y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (/.f64 y (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (/.f64 1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (/.f64 y x))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2)) (/.f64 y x)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 y x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) (/.f64 y x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (/.f64 y (cbrt.f64 (*.f64 x x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (cosh.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (neg.f64 y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1) (neg.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) 1) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (cosh.f64 x))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (cosh.f64 x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (cbrt.f64 x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (neg.f64 y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (neg.f64 (neg.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 y x) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 3))))))"]],"rules":[["egg-rr",90],["egg-rr",94]],"time":31.008056640625,"type":"rewrite"},{"count":[[244,202]],"inputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (+.f64 (*.f64 1/720 (*.f64 y (pow.f64 x 5))) (*.f64 1/24 (*.f64 y (pow.f64 x 3))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(fma.f64 (/.f64 (*.f64 y x) z) 1/2 (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(+.f64 (/.f64 y (*.f64 z x)) (/.f64 (fma.f64 (*.f64 1/24 y) (pow.f64 x 3) (*.f64 1/2 (*.f64 y x))) z))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (fma.f64 1/720 (*.f64 y (pow.f64 x 5)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))) z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x)))","(fma.f64 (*.f64 1/2 y) x (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (fma.f64 (*.f64 1/24 y) (pow.f64 x 3) (*.f64 1/2 (*.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (+.f64 (*.f64 1/720 (*.f64 y (pow.f64 x 5))) (*.f64 1/24 (*.f64 y (pow.f64 x 3))))))","(+.f64 (/.f64 y x) (fma.f64 (*.f64 1/2 y) x (fma.f64 1/720 (*.f64 y (pow.f64 x 5)) (*.f64 1/24 (*.f64 y (pow.f64 x 3))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)"]],"time":177.885986328125,"type":"simplify"},{"compiler":[[2959,882]],"time":23.73583984375,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (cosh.f64 x))) (cbrt.f64 x)) z)","fresh",26.77162403994495],["(/.f64 (+.f64 (/.f64 y x) (fma.f64 (*.f64 1/2 y) x (fma.f64 1/720 (*.f64 y (pow.f64 x 5)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))))) z)","fresh",6.547354454191334],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","next",6.25607146407355],["(/.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) (/.f64 (/.f64 y x) z)) (cbrt.f64 4))","fresh",7.032806640737679],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","fresh",6.537441259768442],["(*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))","fresh",6.940677880969238],["(/.f64 (*.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))","fresh",29.910763932251097],["(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","fresh",7.413626639712642],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 (*.f64 x z)))","fresh",7.795253759768443]],"compiler":[[20,14],[28,19],[11,7],[21,16],[13,9],[17,11],[19,13],[11,7],[13,9],[20,14],[28,19],[11,7],[21,16],[13,9],[17,11],[19,13],[11,7],[13,9]],"count":[[204,9]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[202,8],"picked":[1,0]}],"min-error":[0.24271980102152754],"time":58.736083984375,"type":"prune"},{"compiler":[[26,7]],"locations":[["(/.f64 (*.f64 (cosh.f64 x) y) z)",0.0078125,true],["(*.f64 (cosh.f64 x) y)",0.2535603740692153,true],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)",5.998258964073549,true]],"time":4.885009765625,"type":"localize"},{"count":[[3,96]],"series":[["(/.f64 (*.f64 (cosh.f64 x) y) z)","z","-inf",0.360107421875],["(/.f64 (*.f64 (cosh.f64 x) y) z)","z","inf",0.1630859375],["(/.f64 (*.f64 (cosh.f64 x) y) z)","z","0",0.350830078125],["(/.f64 (*.f64 (cosh.f64 x) y) z)","y","-inf",0.576904296875],["(/.f64 (*.f64 (cosh.f64 x) y) z)","y","inf",0.43994140625],["(/.f64 (*.f64 (cosh.f64 x) y) z)","y","0",0.3359375],["(/.f64 (*.f64 (cosh.f64 x) y) z)","x","-inf",0.368896484375],["(/.f64 (*.f64 (cosh.f64 x) y) z)","x","inf",0.297119140625],["(/.f64 (*.f64 (cosh.f64 x) y) z)","x","0",0.265869140625],["(*.f64 (cosh.f64 x) y)","y","-inf",0.323974609375],["(*.f64 (cosh.f64 x) y)","y","inf",0.337890625],["(*.f64 (cosh.f64 x) y)","y","0",0.156982421875],["(*.f64 (cosh.f64 x) y)","x","-inf",0.329833984375],["(*.f64 (cosh.f64 x) y)","x","inf",0.385986328125],["(*.f64 (cosh.f64 x) y)","x","0",0.27490234375],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","z","-inf",0.19677734375],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","z","inf",0.18212890625],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","z","0",0.18701171875],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","y","-inf",0.18603515625],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","y","inf",0.203125],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","y","0",0.171875],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","x","-inf",0.19189453125],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","x","inf",0.215087890625],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","x","0",0.241943359375]],"time":7.052978515625,"type":"series"},{"count":[[3,221]],"inputs":[["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","(*.f64 (cosh.f64 x) y)","(/.f64 (*.f64 (cosh.f64 x) y) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 0) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) (*.f64 0 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (/.f64 (/.f64 1 z) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (*.f64 (cosh.f64 x) y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) z) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (*.f64 x x))) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 1 (neg.f64 (*.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z))) (*.f64 (neg.f64 x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (neg.f64 (*.f64 (cosh.f64 x) y))) (*.f64 (cbrt.f64 (*.f64 x x)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (cosh.f64 x) y)) (*.f64 (cbrt.f64 (*.f64 x x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z))) (*.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 (/.f64 1 x))) (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (cbrt.f64 (/.f64 1 x))) (*.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) -1) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) 1) (*.f64 (cbrt.f64 (*.f64 z z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (*.f64 z (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (neg.f64 (neg.f64 (*.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (neg.f64 (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (/.f64 1 z)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 (/.f64 1 x) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 -1 x)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 -1 x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 (cosh.f64 x) y))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x)) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 2))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (/.f64 1 x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 z) (cbrt.f64 (*.f64 x x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) -1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (neg.f64 (*.f64 z x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (/.f64 (*.f64 z x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (*.f64 x (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 (neg.f64 x) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (*.f64 (neg.f64 x) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (*.f64 (neg.f64 (*.f64 z x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 (*.f64 z x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (*.f64 z (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 (neg.f64 z) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x))) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 x) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cosh.f64 x) y) (*.f64 (*.f64 (cosh.f64 x) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cosh.f64 x) y) 0) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cosh.f64 x) y) (*.f64 0 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cosh.f64 x) y)) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)) (cbrt.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (cosh.f64 x))) (cbrt.f64 (pow.f64 (cosh.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cosh.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (cosh.f64 x)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) y) (cbrt.f64 (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cosh.f64 x) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (*.f64 y (cbrt.f64 (cosh.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (neg.f64 (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (cosh.f64 x) y))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cosh.f64 x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2)) y) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) y) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) y) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) y)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cosh.f64 x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 0) (/.f64 (*.f64 (cosh.f64 x) y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 (*.f64 (cosh.f64 x) y) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (cbrt.f64 z)) (/.f64 y (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 z)) (/.f64 (cosh.f64 x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (cosh.f64 x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (cosh.f64 x) y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)) z) (cbrt.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (neg.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (cbrt.f64 (*.f64 z z))) (/.f64 y (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (*.f64 z z))) (/.f64 (cosh.f64 x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cosh.f64 x) (cbrt.f64 z)) y) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 (cosh.f64 x) y)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) (cbrt.f64 (neg.f64 (*.f64 (cosh.f64 x) y)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) (cbrt.f64 (*.f64 (cosh.f64 x) y))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (cosh.f64 x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 1 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (cosh.f64 x) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2)) (/.f64 y z)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) (/.f64 y z)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 y z)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 (cosh.f64 x) y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (/.f64 y (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (*.f64 (cbrt.f64 (*.f64 z z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (*.f64 (neg.f64 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 z 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) -1) (*.f64 2 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) 1) (*.f64 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (cbrt.f64 (/.f64 1 z))) (*.f64 2 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 3))))))"]],"rules":[["egg-rr",72],["egg-rr",51],["egg-rr",98]],"time":34.364013671875,"type":"rewrite"},{"count":[[317,248]],"inputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","y","(+.f64 (*.f64 1/2 (*.f64 y (pow.f64 x 2))) y)","(+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 4))) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 x 2))) y))","(+.f64 (*.f64 1/720 (*.f64 y (pow.f64 x 6))) (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 4))) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 x 2))) y)))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(/.f64 y z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (pow.f64 x 2)) z)) (/.f64 y z))","(+.f64 (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 4)) z)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (pow.f64 x 2)) z)) (/.f64 y z)))","(+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 6)) z)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 4)) z)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (pow.f64 x 2)) z)) (/.f64 y z))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(+.f64 (/.f64 y (*.f64 z x)) (/.f64 (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 3))) (*.f64 1/2 (*.f64 y x))) z))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 3))) (*.f64 1/720 (*.f64 y (pow.f64 x 5)))) z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 x) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y z)))","y","(+.f64 (*.f64 1/2 (*.f64 y (pow.f64 x 2))) y)","(fma.f64 1/2 (*.f64 y (*.f64 x x)) y)","(+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 4))) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 x 2))) y))","(fma.f64 (*.f64 1/24 y) (pow.f64 x 4) (fma.f64 1/2 (*.f64 y (*.f64 x x)) y))","(+.f64 (*.f64 1/720 (*.f64 y (pow.f64 x 6))) (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 4))) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 x 2))) y)))","(fma.f64 1/720 (*.f64 y (pow.f64 x 6)) (fma.f64 (*.f64 1/24 y) (pow.f64 x 4) (fma.f64 1/2 (*.f64 y (*.f64 x x)) y)))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y))","(/.f64 y z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (pow.f64 x 2)) z)) (/.f64 y z))","(/.f64 (fma.f64 1/2 (*.f64 y (*.f64 x x)) y) z)","(+.f64 (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 4)) z)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (pow.f64 x 2)) z)) (/.f64 y z)))","(fma.f64 1/24 (*.f64 (pow.f64 x 4) (/.f64 y z)) (/.f64 (fma.f64 1/2 (*.f64 y (*.f64 x x)) y) z))","(+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 6)) z)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 4)) z)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (pow.f64 x 2)) z)) (/.f64 y z))))","(+.f64 (/.f64 (fma.f64 (*.f64 y (pow.f64 x 6)) 1/720 (*.f64 1/24 (*.f64 y (pow.f64 x 4)))) z) (/.f64 (fma.f64 1/2 (*.f64 y (*.f64 x x)) y) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) z))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) z)"]],"time":285.7890625,"type":"simplify"},{"compiler":[[3640,1199]],"time":31.367919921875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) z))","fresh",7.799160009768442],["(+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 3))) (*.f64 1/720 (*.f64 y (pow.f64 x 5)))) z)))","fresh",7.4883248439039765],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","next",6.4765625],["(*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x))","fresh",26.42878525916993],["(/.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2)) x)","fresh",6.714659354811223],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","done",6.25607146407355],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","fresh",6.537441259768442],["(*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))","fresh",6.940677880969238]],"compiler":[[13,9],[33,22],[11,7],[22,12],[17,11],[11,7],[13,9],[17,11],[13,9],[33,22],[11,7],[22,12],[17,11],[13,9],[17,11]],"count":[[257,8]],"kept":[{"done":[0,0],"fresh":[8,2],"new":[248,5],"picked":[1,1]}],"min-error":[0.24271980102152754],"time":86.80908203125,"type":"prune"},{"compiler":[[26,7]],"locations":[["(*.f64 (cosh.f64 x) y)",0.2535603740692153,false],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)",5.873290723081575,true]],"time":4.867919921875,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","z","-inf",0.171875],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","z","inf",0.184814453125],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","z","0",0.171142578125],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","y","-inf",0.18115234375],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","y","inf",0.194091796875],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","y","0",0.171875],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","x","-inf",0.2099609375],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","x","inf",0.18994140625],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","x","0",0.259033203125]],"time":1.859130859375,"type":"series"},{"count":[[1,98]],"inputs":[["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 0) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) (*.f64 0 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 z z))) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) x) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 1 (neg.f64 (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (*.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (neg.f64 (*.f64 (cosh.f64 x) y))) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 (cosh.f64 x) y)) (*.f64 (cbrt.f64 (*.f64 z z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 (/.f64 1 z))) (*.f64 (neg.f64 x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) -1) (*.f64 (cbrt.f64 (*.f64 x x)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (cbrt.f64 (/.f64 1 z))) (*.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) 1) (*.f64 (cbrt.f64 (*.f64 x x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (*.f64 x (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (neg.f64 (neg.f64 (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (neg.f64 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (/.f64 1 x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 (/.f64 1 z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 (cosh.f64 x) y))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 -1 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 -1 z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (/.f64 1 z)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (neg.f64 (*.f64 x z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (/.f64 (*.f64 x z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (*.f64 (neg.f64 (*.f64 x z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 (*.f64 x z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (*.f64 x (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 (neg.f64 x) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 (neg.f64 z) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (*.f64 (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (*.f64 z (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 z) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) 3))))))"]],"rules":[["egg-rr",98]],"time":23.664794921875,"type":"rewrite"},{"count":[[134,107]],"inputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(/.f64 (+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x))) z)","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(/.f64 (+.f64 (/.f64 y x) (*.f64 y (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 1/2 x)))) z)","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(+.f64 (/.f64 (+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x))) z) (/.f64 (*.f64 y (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 1/720 (pow.f64 x 5)))) z))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y (*.f64 z x))))"]],"time":154.426025390625,"type":"simplify"},{"compiler":[[2417,807]],"time":20.295166015625,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x))","fresh",26.42878525916993],["(+.f64 (/.f64 (+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x))) z) (/.f64 (*.f64 y (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 1/720 (pow.f64 x 5)))) z))","fresh",6.54963945853468],["(/.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2)) x)","fresh",6.714659354811223],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","done",6.25607146407355],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","next",6.537441259768442],["(*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))","fresh",6.940677880969238],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) z))","fresh",7.799160009768442],["(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","fresh",7.413626639712642]],"compiler":[[22,12],[30,21],[17,11],[11,7],[13,9],[17,11],[13,9],[11,7],[22,12],[30,21],[17,11],[13,9],[17,11],[13,9],[11,7]],"count":[[175,8]],"kept":[{"done":[1,1],"fresh":[6,5],"new":[167,2],"picked":[1,0]}],"min-error":[0.24271980102152754],"time":46.517822265625,"type":"prune"},{"compiler":[[34,15]],"locations":[["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))",0.19140625,true],["(*.f64 (cosh.f64 x) y)",0.2535603740692153,false],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)",5.873290723081575,true]],"time":7.170166015625,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))","y","-inf",0.31298828125],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))","y","inf",0.1630859375],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))","y","0",0.179931640625],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))","x","-inf",0.167236328125],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))","x","inf",0.1650390625],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))","x","0",0.18701171875],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","z","-inf",0.171875],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","z","inf",0.18603515625],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","z","0",0.171875],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","y","-inf",0.182861328125],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","y","inf",0.199951171875],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","y","0",0.174072265625],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","x","-inf",0.208984375],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","x","inf",0.191162109375],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","x","0",0.255859375]],"time":3.114990234375,"type":"series"},{"count":[[2,177]],"inputs":[["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 0) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) (/.f64 (/.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (cbrt.f64 z)) (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (*.f64 (cosh.f64 x) y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (cbrt.f64 z)) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 z z))) (/.f64 (cosh.f64 x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) z) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z))) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y x) z) (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 z z))) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 (*.f64 z z))) (/.f64 (/.f64 1 x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 (/.f64 y x) z)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (/.f64 1 x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cosh.f64 x) (cbrt.f64 z)) (/.f64 y x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 (*.f64 (cosh.f64 x) y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 x) (cbrt.f64 z)) (*.f64 (cosh.f64 x) y)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2) (*.f64 z z)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 (/.f64 y x) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2)) (/.f64 (/.f64 y x) z)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) (/.f64 (/.f64 y x) z)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 (/.f64 1 x) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 (cosh.f64 x) y) z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (*.f64 (cosh.f64 x) y) z)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) z)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 1 z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) (/.f64 1 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (/.f64 1 z)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (/.f64 (/.f64 y x) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 -1 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) (/.f64 (*.f64 x z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (*.f64 x z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (neg.f64 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 x) (/.f64 (*.f64 (cosh.f64 x) y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 0) (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) x)) (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (*.f64 0 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (cbrt.f64 x)) (*.f64 y (cbrt.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 x)) (*.f64 (cosh.f64 x) (cbrt.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (cosh.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (*.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) x) (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cosh.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (cosh.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (cosh.f64 x) y)) (cbrt.f64 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)) x) (cbrt.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) (cbrt.f64 (pow.f64 x -2))) (/.f64 y (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2)) (/.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 x -2))) (/.f64 (cosh.f64 x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (/.f64 y x)) (cbrt.f64 (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (neg.f64 (*.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cosh.f64 x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) y) 2))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (cosh.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2)) (cbrt.f64 (*.f64 (cosh.f64 x) y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cosh.f64 x) (cbrt.f64 x)) y) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 y x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (sqrt.f64 2)) (/.f64 y x)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) (/.f64 y x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (/.f64 1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (*.f64 y (cbrt.f64 (pow.f64 x -2)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (cosh.f64 x) y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (cosh.f64 x) y))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 (cbrt.f64 (pow.f64 (cosh.f64 x) 2)) (/.f64 y x))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 (cosh.f64 x) (cbrt.f64 (pow.f64 x -2)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (cosh.f64 x) y)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cosh.f64 x) y) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y x))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (cosh.f64 x) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) 3))))))"]],"rules":[["egg-rr",82],["egg-rr",95]],"time":30.7099609375,"type":"rewrite"},{"count":[[237,195]],"inputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (+.f64 (*.f64 1/720 (*.f64 y (pow.f64 x 5))) (*.f64 1/24 (*.f64 y (pow.f64 x 3))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y (*.f64 z x))","(+.f64 (/.f64 y (*.f64 z x)) (*.f64 1/2 (/.f64 (*.f64 y x) z)))","(fma.f64 (/.f64 (*.f64 y x) z) 1/2 (/.f64 y (*.f64 z x)))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z))))","(+.f64 (/.f64 y (*.f64 z x)) (/.f64 (fma.f64 (*.f64 1/24 y) (pow.f64 x 3) (*.f64 1/2 (*.f64 y x))) z))","(+.f64 (/.f64 y (*.f64 z x)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 1/720 (/.f64 (*.f64 y (pow.f64 x 5)) z)) (*.f64 1/24 (/.f64 (*.f64 y (pow.f64 x 3)) z)))))","(+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (fma.f64 1/720 (*.f64 y (pow.f64 x 5)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))) z)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) (*.f64 z x)))","(*.f64 (/.f64 1/2 z) (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) (/.f64 y x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x)))","(fma.f64 (*.f64 1/2 y) x (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))))","(+.f64 (/.f64 y x) (fma.f64 (*.f64 1/24 y) (pow.f64 x 3) (*.f64 1/2 (*.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (*.f64 y x)) (+.f64 (*.f64 1/720 (*.f64 y (pow.f64 x 5))) (*.f64 1/24 (*.f64 y (pow.f64 x 3))))))","(+.f64 (/.f64 y x) (fma.f64 (*.f64 1/2 y) x (fma.f64 1/720 (*.f64 y (pow.f64 x 5)) (*.f64 1/24 (*.f64 y (pow.f64 x 3))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y) x))","(/.f64 (*.f64 1/2 (*.f64 (+.f64 (exp.f64 (neg.f64 x)) (exp.f64 x)) y)) x)"]],"time":178.113037109375,"type":"simplify"},{"compiler":[[3875,1402]],"time":32.93798828125,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x))","fresh",26.42878525916993],["(+.f64 (/.f64 (+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x))) z) (/.f64 (*.f64 y (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 1/720 (pow.f64 x 5)))) z))","fresh",6.54963945853468],["(/.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2)) x)","fresh",6.714659354811223],["(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","done",6.25607146407355],["(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","done",6.537441259768442],["(*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))","fresh",6.940677880969238],["(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) z))","fresh",7.799160009768442],["(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","fresh",7.413626639712642]],"compiler":[[22,12],[30,21],[17,11],[11,7],[13,9],[17,11],[13,9],[11,7]],"count":[[263,8]],"kept":[{"done":[1,1],"fresh":[6,6],"new":[255,0],"picked":[1,1]}],"min-error":[0.24271980102152754],"time":86.099853515625,"type":"prune"},{"accuracy":[0.453125],"baseline":[6.25607146407355],"branch":[["x",6.256071464073547,1],["y",0.46146980102152757,3],["z",0.453125,3],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)",0.48100105102152757,3],["(*.f64 (cosh.f64 x) (/.f64 y x))",0.46928230102152757,3]],"compiler":[[4,3],[4,3],[4,3],[11,7],[9,6],[253,119]],"count":[[17,3]],"inputs":[["(+.f64 (/.f64 (+.f64 (/.f64 y x) (*.f64 1/2 (*.f64 y x))) z) (/.f64 (*.f64 y (+.f64 (*.f64 1/24 (pow.f64 x 3)) (*.f64 1/720 (pow.f64 x 5)))) z))","(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 (/.f64 1 x) z))","(+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 3))) (*.f64 1/720 (*.f64 y (pow.f64 x 5)))) z)))","(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","(*.f64 (cbrt.f64 (/.f64 (*.f64 (cosh.f64 x) y) z)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) 2)) x))","(/.f64 (*.f64 (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2)) x)","(/.f64 (/.f64 (*.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 2)) (cosh.f64 x))) (cbrt.f64 x)) z)","(/.f64 (+.f64 (/.f64 y x) (fma.f64 (*.f64 1/2 y) x (fma.f64 1/720 (*.f64 y (pow.f64 x 5)) (*.f64 1/24 (*.f64 y (pow.f64 x 3)))))) z)","(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) z) x)","(/.f64 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (cbrt.f64 2)) (/.f64 (/.f64 y x) z)) (cbrt.f64 4))","(/.f64 (*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 x)) z)","(*.f64 (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))","(/.f64 (*.f64 (/.f64 1 z) (/.f64 (*.f64 (cosh.f64 x) y) (cbrt.f64 x))) (cbrt.f64 (*.f64 x x)))","(*.f64 (*.f64 (cosh.f64 x) y) (/.f64 1 (*.f64 x z)))","(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)"]],"link":["."],"name":["Linear.Quaternion:$ctan from linear-1.19.1.3"],"oracle":[51.537521902569296],"outputs":[["(/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z))","(/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z)","(+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 3))) (*.f64 1/720 (*.f64 y (pow.f64 x 5)))) z)))"]],"time":73.862060546875,"times":[["x",5.910888671875],["y",15.827880859375],["z",16.22998046875],["(/.f64 (*.f64 (cosh.f64 x) (/.f64 y x)) z)",16.58984375],["(*.f64 (cosh.f64 x) (/.f64 y x))",14.9482421875]],"type":"regimes"},{"bstep":[[6.356807180506271e+59,6.276013328342002e+60,9.47705078125],[-1.8614794519424943e-41,-1.5015312906201265e-41,5.51318359375]],"compiler":[[12,8],[12,8],[13,9],[4,3]],"method":["binary-search","binary-search"],"time":15.14501953125,"type":"bsearch"},{"compiler":[[57,34]],"inputs":[["(if (<=.f64 z -6277101735386681/392318858461667547739736838950479151006397215279002157056) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (if (<=.f64 z 635680718050627079771138688335664971441064588163286107684864) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) (+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 3))) (*.f64 1/720 (*.f64 y (pow.f64 x 5)))) z)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 z -6277101735386681/392318858461667547739736838950479151006397215279002157056) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (if (<=.f64 z 635680718050627079771138688335664971441064588163286107684864) (/.f64 (/.f64 (*.f64 (cosh.f64 x) y) x) z) (+.f64 (/.f64 y (*.f64 z x)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 x 3))) (*.f64 1/720 (*.f64 y (pow.f64 x 5)))) z)))))","(if (<=.f64 z -6277101735386681/392318858461667547739736838950479151006397215279002157056) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (if (<=.f64 z 635680718050627079771138688335664971441064588163286107684864) (/.f64 (*.f64 (cosh.f64 x) y) (*.f64 x z)) (fma.f64 1/2 (/.f64 (*.f64 y x) z) (/.f64 (+.f64 (*.f64 y (+.f64 (*.f64 (pow.f64 x 5) 1/720) (*.f64 (pow.f64 x 3) 1/24))) (/.f64 y x)) z))))"]],"stop":[["fuel",1]],"time":28.075927734375,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[57,34]],"remove-preprocessing":[[]],"time":17.697998046875,"type":"end"}]