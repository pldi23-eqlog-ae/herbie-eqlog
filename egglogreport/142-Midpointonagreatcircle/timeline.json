[{"compiler":[[25,15]],"method":["search"],"sampling":[[12,0.10916153336439205,0.8888867716814781,0.0019516949541298345],[11,0.10916153336439205,0.8888867716814781,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":360.135009765625,"type":"analyze"},{"outcomes":[["body",512,"valid",486.375244140625,1842],["body",1024,"valid",2197.473876953125,4538],["body",2048,"valid",128.083984375,111],["body",256,"valid",226.411865234375,1765]],"time":3047.255126953125,"type":"sample"},{"compiler":[[24,14]],"inputs":[["0","1","2","3"],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda2 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 phi1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 phi1 lambda2))) (+.f64 (cos.f64 lambda1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 phi1 lambda2))))))","(+.f64 phi2 (atan2.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (-.f64 phi2 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda1) (cos.f64 (-.f64 phi2 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 phi1))) (+.f64 (cos.f64 lambda2) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 lambda2) (sin.f64 (-.f64 lambda1 phi2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 (-.f64 lambda1 phi2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi1) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi2) (*.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))","(+.f64 lambda2 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 lambda2 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))","(+.f64 phi1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 phi1 lambda2))) (+.f64 (cos.f64 lambda1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 phi1 lambda2))))))","(+.f64 phi1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 phi1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 phi1 lambda2)) (cos.f64 lambda1))))","(+.f64 phi2 (atan2.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (-.f64 phi2 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda1) (cos.f64 (-.f64 phi2 lambda2))))))","(+.f64 phi2 (atan2.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (-.f64 phi2 lambda2))) (fma.f64 (cos.f64 lambda1) (cos.f64 (-.f64 phi2 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 phi1))) (+.f64 (cos.f64 lambda2) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 phi1))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 phi1)) (cos.f64 lambda2))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 lambda2) (sin.f64 (-.f64 lambda1 phi2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 (-.f64 lambda1 phi2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 lambda2) (sin.f64 (-.f64 lambda1 phi2))) (fma.f64 (cos.f64 lambda2) (cos.f64 (-.f64 lambda1 phi2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi1) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi2) (*.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi1) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))"]],"symmetry":[[]],"time":74.3330078125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))"]],"time":21.2158203125,"type":"simplify"},{"compiler":[[43,19]],"time":0.503173828125,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","next",1.3625476773888114],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","fresh",1.3885002406302862]],"compiler":[[23,14],[24,14],[23,14],[24,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[1.3586414273888114],"time":1.680908203125,"type":"prune"},{"compiler":[[78,14]],"locations":[["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))",0.1953125,true],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))",0.43739264220461926,true],["(sin.f64 (-.f64 lambda1 lambda2))",2.854448181948309,true],["(cos.f64 (-.f64 lambda2 lambda1))",2.9312165798244525,true]],"time":16.240966796875,"type":"localize"},{"count":[[4,100]],"series":[["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda2","-inf",0.297119140625],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda2","inf",0.288818359375],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda2","0",0.339111328125],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda1","-inf",0.323974609375],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda1","inf",0.2861328125],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda1","0",0.345947265625],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","phi2","-inf",0.77490234375],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","phi2","inf",0.5400390625],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","phi2","0",0.39306640625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","phi1","-inf",0.2109375],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","phi1","inf",0.6240234375],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","phi1","0",0.35498046875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","lambda1","-inf",0.3701171875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","lambda1","inf",0.661865234375],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","lambda1","0",0.35791015625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","lambda2","-inf",0.385009765625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","lambda2","inf",0.717041015625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","lambda2","0",0.467041015625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","phi2","-inf",0.31884765625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","phi2","inf",1.303955078125],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","phi2","0",0.54296875],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","-inf",0.164794921875],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","inf",0.162109375],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","0",0.363037109375],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","-inf",0.179931640625],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","inf",0.18505859375],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","0",0.35791015625],["(cos.f64 (-.f64 lambda2 lambda1))","lambda1","-inf",0.18505859375],["(cos.f64 (-.f64 lambda2 lambda1))","lambda1","inf",0.1728515625],["(cos.f64 (-.f64 lambda2 lambda1))","lambda1","0",0.39111328125],["(cos.f64 (-.f64 lambda2 lambda1))","lambda2","-inf",0.22509765625],["(cos.f64 (-.f64 lambda2 lambda1))","lambda2","inf",0.18505859375],["(cos.f64 (-.f64 lambda2 lambda1))","lambda2","0",0.491943359375]],"time":13.41015625,"type":"series"},{"count":[[4,150]],"inputs":[["(cos.f64 (-.f64 lambda2 lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 0) (cos.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 0 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 0) (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 (sin.f64 0) (sin.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 0) (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 (sin.f64 0) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 (neg.f64 lambda2)) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (neg.f64 (*.f64 (sin.f64 (neg.f64 lambda1)) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 (neg.f64 lambda2)) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 (neg.f64 lambda1)) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2)) (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (-.f64 lambda2 lambda1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 2) (*.f64 2 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 2) (*.f64 2 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 (neg.f64 lambda1)) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (neg.f64 (*.f64 (sin.f64 (neg.f64 lambda1)) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda2 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda1 lambda2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) 0) (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 0 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (-.f64 lambda1 lambda2))) (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 0) (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 (cos.f64 0) (sin.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (sin.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (sin.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda2 lambda1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (-.f64 lambda1 lambda2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) (*.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 0) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) (*.f64 0 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2)) (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 phi1) 2)) (cbrt.f64 (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 phi1)) (cbrt.f64 (pow.f64 (cos.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2)) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 phi1) 1 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 1 (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 0) (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 0 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2)) (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cos.f64 phi2)) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 2)) (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 (cos.f64 phi2))) (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 3))))))"]],"rules":[["egg-rr",42],["egg-rr",34],["egg-rr",30],["egg-rr",44]],"time":36.180908203125,"type":"rewrite"},{"count":[[250,239]],"inputs":[["(cos.f64 (neg.f64 lambda1))","(+.f64 (cos.f64 (neg.f64 lambda1)) (*.f64 -1 (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))))","(+.f64 (cos.f64 (neg.f64 lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 (neg.f64 lambda1))))))","(+.f64 (cos.f64 (neg.f64 lambda1)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 (neg.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 (neg.f64 lambda1)))))))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 lambda2)","(+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (cos.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (cos.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))) (*.f64 (sin.f64 lambda2) lambda1))))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(sin.f64 (neg.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))","(+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1))))))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(+.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda2 lambda1)))","(+.f64 (cos.f64 phi1) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 -1/2 (*.f64 (pow.f64 phi2 2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 (cos.f64 phi1) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 phi2 2) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 1/24 (*.f64 (pow.f64 phi2 4) (cos.f64 (-.f64 lambda2 lambda1)))))))","(+.f64 (cos.f64 phi1) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 phi2 2) (cos.f64 (-.f64 lambda2 lambda1)))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 phi2 4) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 -1/720 (*.f64 (pow.f64 phi2 6) (cos.f64 (-.f64 lambda2 lambda1))))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (cos.f64 phi1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (cos.f64 phi1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))))))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1)))))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 1 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(sin.f64 (-.f64 lambda1 lambda2))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2)))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))))","(*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3)))))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (neg.f64 lambda1))","(cos.f64 lambda1)","(+.f64 (cos.f64 (neg.f64 lambda1)) (*.f64 -1 (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))))","(-.f64 (cos.f64 lambda1) (*.f64 lambda2 (sin.f64 (neg.f64 lambda1))))","(+.f64 (cos.f64 (neg.f64 lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 (neg.f64 lambda1))))))","(+.f64 (-.f64 (cos.f64 lambda1) (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))) (*.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) (cos.f64 lambda1)))","(+.f64 (cos.f64 (neg.f64 lambda1)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 (neg.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 (neg.f64 lambda1)))))))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda1)) (+.f64 (*.f64 1/6 (pow.f64 lambda2 3)) (neg.f64 lambda2))) (+.f64 (*.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) (cos.f64 lambda1)) (cos.f64 lambda1)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 lambda2)","(+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (cos.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (cos.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))) (*.f64 (sin.f64 lambda2) lambda1))))","(fma.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)) (+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (sin.f64 lambda2) lambda1))))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(cos.f64 (-.f64 lambda1 lambda2))","(cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2))","(cos.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))","(-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(-.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))))","(fma.f64 -1/6 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)) (-.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (sin.f64 lambda1))","(-.f64 (sin.f64 lambda1) (*.f64 lambda2 (cos.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1)))))","(-.f64 (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1)) (*.f64 lambda2 (cos.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 lambda1) (+.f64 (neg.f64 lambda2) (*.f64 1/6 (pow.f64 lambda2 3)))) (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1)))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (-.f64 lambda1 lambda2))","(+.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda2 lambda1)))","(+.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2)))","(+.f64 (cos.f64 phi1) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 -1/2 (*.f64 (pow.f64 phi2 2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1)))","(+.f64 (cos.f64 phi1) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 phi2 2) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 1/24 (*.f64 (pow.f64 phi2 4) (cos.f64 (-.f64 lambda2 lambda1)))))))","(+.f64 (+.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (*.f64 1/24 (pow.f64 phi2 4)))))","(+.f64 (cos.f64 phi1) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 phi2 2) (cos.f64 (-.f64 lambda2 lambda1)))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 phi2 4) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 -1/720 (*.f64 (pow.f64 phi2 6) (cos.f64 (-.f64 lambda2 lambda1))))))))","(+.f64 (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/720 (pow.f64 phi2 6)) (*.f64 1/24 (pow.f64 phi2 4)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (cos.f64 phi1)))","(-.f64 (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)) (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))))))))","(+.f64 (-.f64 (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)) (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (*.f64 -1/2 (*.f64 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2)) (cos.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda1)))))))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 lambda1))) (+.f64 (*.f64 1/6 (pow.f64 lambda2 3)) (neg.f64 lambda2))) (+.f64 (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)) (*.f64 -1/2 (*.f64 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2)) (cos.f64 lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (cos.f64 phi1)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (fma.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1))) (fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (cos.f64 phi1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (+.f64 (fma.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1))) (fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (cos.f64 phi1))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 1 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 1 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))))","(+.f64 1 (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))))))","(fma.f64 -1/720 (pow.f64 phi1 6) (+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))","(sin.f64 (-.f64 lambda1 lambda2))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2)))))","(fma.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2)))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))))","(fma.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6)) (fma.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2))))))","(*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2)))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (*.f64 -1/2 (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 lambda1 lambda1))))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3)))))))","(+.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (fma.f64 -1/2 (*.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 lambda1 lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3))))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(-.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2)))) (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (*.f64 1/6 (pow.f64 lambda2 3)) (neg.f64 lambda2))) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 1 (*.f64 -1/2 (*.f64 lambda2 lambda2)))))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))"]],"time":338.6650390625,"type":"simplify"},{"compiler":[[6560,1636]],"time":40.721923828125,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))","fresh",13.937889000819213],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.6569032842335727],["(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",4.174853369052157],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","next",1.307759444372645],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (cos.f64 phi2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.400582699241023],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2)) (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))","fresh",1.4262864660964074],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))","fresh",1.3963273974070876],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (sin.f64 lambda2) lambda1))) (cos.f64 phi1))))","fresh",1.6348234563220592],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cbrt.f64 (cos.f64 phi1)) (cbrt.f64 (pow.f64 (cos.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","fresh",1.406536896795964],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (*.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2))) (cos.f64 phi1))))","fresh",1.3799673321491133],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))","fresh",1.4803467737055915],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (-.f64 (cos.f64 lambda1) (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))) (*.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) (cos.f64 lambda1))) (cos.f64 phi1))))","fresh",17.65595684674916],["(+.f64 lambda1 (atan2.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) (sqrt.f64 2)) (sqrt.f64 2)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",22.60238490505046],["(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cos.f64 phi2)) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",4.198085918193364],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))","fresh",1.391916135621979],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.5087179997704414],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1)) (cos.f64 phi1))))","fresh",1.6766192263871678]],"compiler":[[27,18],[26,16],[35,19],[30,19],[30,19],[37,19],[35,19],[34,20],[30,19],[32,19],[26,17],[36,22],[35,23],[32,19],[30,19],[26,17],[26,16],[27,18],[26,16],[35,19],[30,19],[30,19],[37,19],[35,19],[34,20],[30,19],[32,19],[26,17],[36,22],[35,23],[32,19],[30,19],[26,17],[26,16]],"count":[[241,17]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[239,17],"picked":[1,0]}],"min-error":[1.1335062924494186],"time":107.740966796875,"type":"prune"},{"compiler":[[121,19]],"locations":[["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))",0.171875,true],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))",0.1796875,true],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))",0.43739264220461926,false],["(cos.f64 (-.f64 lambda2 lambda1))",2.9312165798244525,false]],"time":22.89794921875,"type":"localize"},{"count":[[2,84]],"series":[["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","lambda1","-inf",1.69384765625],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","lambda1","inf",0.8759765625],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","lambda1","0",0.424072265625],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","lambda2","-inf",0.60400390625],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","lambda2","inf",0.884033203125],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","lambda2","0",0.302978515625],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","phi2","-inf",0.31494140625],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","phi2","inf",1.3251953125],["(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))","phi2","0",0.634033203125],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","phi1","-inf",0.2509765625],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","phi1","inf",0.22998046875],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","phi1","0",0.232177734375],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","lambda1","-inf",0.31591796875],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","lambda1","inf",0.26416015625],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","lambda1","0",0.239990234375],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","lambda2","-inf",0.2978515625],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","lambda2","inf",0.41796875],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","lambda2","0",0.240966796875],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","phi2","-inf",0.24609375],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","phi2","inf",0.285888671875],["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","phi2","0",0.305908203125]],"time":10.8330078125,"type":"series"},{"count":[[2,61]],"inputs":[["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (*.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 0) (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (*.f64 0 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (cbrt.f64 (pow.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 2)) (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2)) (neg.f64 (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi2))) (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (*.f64 1 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2))) (*.f64 1 (neg.f64 (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 0) (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) 1) (*.f64 (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2)) 1) (*.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 0 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 2)) (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cbrt.f64 (cos.f64 phi2))) (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 phi2)) (sin.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda2 lambda1)) (neg.f64 (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2) (neg.f64 (*.f64 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))))))))"]],"rules":[["egg-rr",40],["egg-rr",21]],"time":28.028076171875,"type":"rewrite"},{"count":[[145,88]],"inputs":[["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(-.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(-.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/720 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 6))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2)))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 2)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1))))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))"]],"method":["egg-herbie"],"outputs":[["(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(sin.f64 (-.f64 lambda1 lambda2))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(fma.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2)) (sin.f64 (-.f64 lambda1 lambda2)))","(-.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(fma.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (fma.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2)) (sin.f64 (-.f64 lambda1 lambda2))))","(-.f64 (+.f64 (*.f64 1/24 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/720 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 6))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))) (pow.f64 phi2 2))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))))) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1)))","(fma.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (+.f64 (fma.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6)) (*.f64 (*.f64 -1/2 (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 phi2 phi2))) (sin.f64 (-.f64 lambda1 lambda2))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(fma.f64 (neg.f64 lambda2) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(fma.f64 (neg.f64 lambda2) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(+.f64 (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (*.f64 1/6 (pow.f64 lambda2 3)) (neg.f64 lambda2))) (*.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2)))","(neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2)))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)))","(fma.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) lambda1 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 2)))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1))))","(fma.f64 (neg.f64 (cos.f64 phi2)) (sin.f64 lambda2) (fma.f64 (*.f64 1/2 (cos.f64 phi2)) (*.f64 (sin.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) lambda1)))","(+.f64 (*.f64 -1 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1)) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)))))))","(fma.f64 (neg.f64 (cos.f64 phi2)) (sin.f64 lambda2) (fma.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (*.f64 lambda1 lambda1))) (fma.f64 (*.f64 -1/6 (cos.f64 phi2)) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)) (*.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) lambda1))))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))"]],"time":253.593017578125,"type":"simplify"},{"compiler":[[6988,1417]],"time":37.44091796875,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2)) (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))","fresh",1.370629512403169],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))","fresh",1.3406704439954458],["(+.f64 lambda1 (*.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))) 2) 3)))","fresh",1.8585535166793212],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))","fresh",13.890551801211817],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))","fresh",1.3371279026058127],["(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))) 2) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.6411583023079603],["(+.f64 lambda1 (atan2.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) (sqrt.f64 2)) (sqrt.f64 2)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",22.60238490505046],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))","fresh",1.424721193711778],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","next",0.2547580908424292],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))))","fresh",1.178883985556385],["(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.400582699241023],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.5087179997704414],["(+.f64 lambda1 (pow.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) 3))","fresh",1.5888624895230232]],"compiler":[[44,24],[42,24],[48,21],[34,23],[37,24],[38,21],[35,23],[33,22],[46,24],[49,28],[30,19],[26,17],[26,17],[44,24],[42,24],[48,21],[34,23],[37,24],[38,21],[35,23],[33,22],[46,24],[49,28],[30,19],[26,17],[26,17]],"count":[[234,13]],"kept":[{"done":[0,0],"fresh":[16,2],"new":[217,11],"picked":[1,0]}],"min-error":[0.07356597661783103],"time":97.27001953125,"type":"prune"},{"compiler":[[214,45]],"locations":[["(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))",0.19921875,true],["(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))",0.3183975586106521,true],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))",0.3872220338418053,true],["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)",0.39357377930532605,true]],"time":37.239990234375,"type":"localize"},{"count":[[4,104]],"series":[["(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","lambda1","-inf",0.151123046875],["(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","lambda1","inf",0.155029296875],["(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","lambda1","0",0.323974609375],["(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","lambda2","-inf",0.155029296875],["(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","lambda2","inf",0.194091796875],["(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))","lambda2","0",1.869873046875],["(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","lambda1","-inf",0.212158203125],["(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","lambda1","inf",0.18798828125],["(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","lambda1","0",0.27587890625],["(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","lambda2","-inf",0.18798828125],["(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","lambda2","inf",0.22314453125],["(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","lambda2","0",0.281005859375],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","phi1","-inf",0.26904296875],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","phi1","inf",2.551025390625],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","phi1","0",0.588134765625],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","lambda1","-inf",6.10498046875],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","lambda1","inf",2.89501953125],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","lambda1","0",0.77392578125],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","lambda2","-inf",2.8818359375],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","lambda2","inf",3.156982421875],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","lambda2","0",1.321044921875],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","phi2","-inf",0.403076171875],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","phi2","inf",2.666015625],["(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","phi2","0",1.069091796875],["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","lambda1","-inf",0.48193359375],["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","lambda1","inf",0.494140625],["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","lambda1","0",0.51318359375],["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","lambda2","-inf",0.510986328125],["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","lambda2","inf",0.53515625],["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","lambda2","0",0.6650390625]],"time":32.671142578125,"type":"series"},{"count":[[4,316]],"inputs":[["(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","(fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (sin.f64 lambda2) (sin.f64 lambda1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) (*.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) 0) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) (*.f64 0 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 4)) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cos.f64 lambda2)) (cos.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cos.f64 lambda1)) (cos.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 lambda1) (*.f64 (cos.f64 lambda2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 lambda2) (*.f64 (cos.f64 lambda1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 4)) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) (*.f64 1/2 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cbrt.f64 (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cbrt.f64 (cos.f64 lambda1)))) (*.f64 (pow.f64 (cos.f64 lambda1) 2/3) (pow.f64 (cos.f64 lambda1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 lambda2) 2/3) (*.f64 (*.f64 (pow.f64 (cos.f64 lambda2) 2/3) (cos.f64 lambda1)) (*.f64 (pow.f64 (cos.f64 lambda2) 2/3) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 lambda1) (cbrt.f64 (cos.f64 lambda2))) (*.f64 (cos.f64 lambda1) (cbrt.f64 (cos.f64 lambda2)))) (*.f64 (pow.f64 (cos.f64 lambda2) 2/3) (pow.f64 (cos.f64 lambda2) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 lambda2) 2/3) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 lambda1) 2/3) (*.f64 (*.f64 (pow.f64 (cos.f64 lambda1) 2/3) (cos.f64 lambda2)) (*.f64 (pow.f64 (cos.f64 lambda1) 2/3) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 3 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 3 2))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) 1) (*.f64 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) -1) (*.f64 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) -1) (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 1 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) (/.f64 1 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (neg.f64 (sqrt.f64 2))) (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)) (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -1) (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (sqrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (neg.f64 (sqrt.f64 2))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 4)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) -1) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 4) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -1) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -2) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cos.f64 lambda2))) 3) (cos.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 2/3 1))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) (cbrt.f64 16)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) -1) -4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) -2) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2))) (*.f64 (sqrt.f64 2) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 (sqrt.f64 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 (cbrt.f64 4) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2))) (*.f64 (cbrt.f64 4) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2))) (*.f64 -2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2))) (*.f64 -2 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2)) -4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 1) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 2) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) (cbrt.f64 4)) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) 1) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2))) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cos.f64 phi1) (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi2))) (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi2)) (+.f64 (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi2)) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) (*.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 0) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) (*.f64 0 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2/3) (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 1 (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (pow.f64 (cos.f64 phi2) 2/3) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 phi2) (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1)))) (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2/3) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 phi1)) (pow.f64 (cos.f64 phi1) 2/3) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cos.f64 phi1) 2/3) (cbrt.f64 (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 phi1) 1 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 0) (cos.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 0 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1/2)) (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (cos.f64 (neg.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1/2) (-.f64 (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1/2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) (-.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (+.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3) (-.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) (*.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (+.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2/3) (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (cbrt.f64 4)) (*.f64 (sqrt.f64 2) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)))) (*.f64 (sqrt.f64 2) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) -2) (*.f64 (sqrt.f64 2) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))))) (*.f64 (sqrt.f64 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4)) (*.f64 2 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) -2) (*.f64 2 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))))) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) (*.f64 -2 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)) (*.f64 -2 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)))) (*.f64 -2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (*.f64 -2 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))) (*.f64 -2 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) 2) (*.f64 (cbrt.f64 4) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) -2) (*.f64 (cbrt.f64 4) (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))))) (*.f64 (cbrt.f64 4) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (sqrt.f64 2)) (*.f64 (cbrt.f64 4) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))) (*.f64 (cbrt.f64 4) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (cbrt.f64 4)) (*.f64 (sqrt.f64 2) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)))) (*.f64 (sqrt.f64 2) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) -2) (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 (sqrt.f64 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)) (*.f64 2 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -2) (*.f64 2 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) 2) (*.f64 (cbrt.f64 4) (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) -2) (*.f64 (cbrt.f64 4) (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (*.f64 (cbrt.f64 4) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (sqrt.f64 2)) (*.f64 (cbrt.f64 4) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))) (*.f64 (cbrt.f64 4) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) 2) (*.f64 -2 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 4)) (*.f64 -2 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)))) (*.f64 -2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) (sqrt.f64 2)) (*.f64 -2 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))) (*.f64 -2 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) 2) (*.f64 (sqrt.f64 2) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 2) (*.f64 2 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (*.f64 2 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -2) (*.f64 -2 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (cbrt.f64 4)) (*.f64 (cbrt.f64 4) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)))) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) 2) (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 2) (*.f64 2 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)) (*.f64 2 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (cbrt.f64 4)) (*.f64 (cbrt.f64 4) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)))) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1)))) -2) (*.f64 -2 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (-.f64 lambda2 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda2) (cbrt.f64 (sin.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (pow.f64 (sin.f64 lambda2) 2/3) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3) (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 1/2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 lambda1)) (*.f64 (pow.f64 (sin.f64 lambda1) 2/3) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda1) (cbrt.f64 (sin.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3) (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 1/2 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda2) (cbrt.f64 (cos.f64 lambda1))) (pow.f64 (cos.f64 lambda1) 2/3) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 lambda2)) (*.f64 (pow.f64 (cos.f64 lambda2) 2/3) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3)) 4) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda1) (cbrt.f64 (cos.f64 lambda2))) (pow.f64 (cos.f64 lambda2) 2/3) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 lambda2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2/3)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (pow.f64 (cos.f64 lambda1) 2/3) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (+.f64 3 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) 4) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda2 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda1 lambda2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 0) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 0 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1/2) (neg.f64 (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1/2) (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (pow.f64 (sin.f64 lambda2) 2/3) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 lambda1)) (*.f64 (pow.f64 (sin.f64 lambda1) 2/3) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (sqrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 lambda2 (-.f64 lambda1 (+.f64 lambda2 lambda1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 lambda2 lambda1) (+.f64 lambda2 lambda1)) 1/2))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 lambda2 (-.f64 lambda1 (+.f64 lambda2 lambda1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 lambda2 lambda1) (+.f64 lambda2 lambda1)) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 2)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 lambda2 (-.f64 lambda1 (+.f64 lambda2 lambda1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 lambda2 lambda1) (+.f64 lambda2 lambda1)) 1/2))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (neg.f64 (sqrt.f64 2))) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 lambda2 (-.f64 lambda1 (+.f64 lambda2 lambda1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 lambda2 lambda1) (+.f64 lambda2 lambda1)) 1/2))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (cbrt.f64 4)) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 lambda2 (-.f64 lambda1 (+.f64 lambda2 lambda1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 lambda2 lambda1) (+.f64 lambda2 lambda1)) 1/2))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 -1) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 lambda2 (-.f64 lambda1 (+.f64 lambda2 lambda1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 lambda2 lambda1) (+.f64 lambda2 lambda1)) 1/2))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 2) (/.f64 (*.f64 (sin.f64 (*.f64 (-.f64 lambda2 (-.f64 lambda1 (+.f64 lambda2 lambda1))) 1/2)) (sin.f64 (*.f64 (-.f64 (-.f64 lambda2 lambda1) (+.f64 lambda2 lambda1)) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (sqrt.f64 2)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (neg.f64 (sqrt.f64 2))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 4)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) -1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3) (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 lambda1) (cbrt.f64 (sin.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 lambda2) (cbrt.f64 (sin.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (/.f64 1 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 2)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (sqrt.f64 2))) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (neg.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 4)) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3) (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 2/3)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (sqrt.f64 (sqrt.f64 2))) (sqrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2) (*.f64 2 (cos.f64 (+.f64 lambda2 lambda1)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1/2) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) 3))))))"]],"rules":[["egg-rr",72],["egg-rr",97],["egg-rr",37],["egg-rr",110]],"time":50.90185546875,"type":"rewrite"},{"count":[[420,395]],"inputs":[["(pow.f64 (cos.f64 lambda1) 2)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 lambda1) 2))) (pow.f64 (cos.f64 lambda1) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 lambda1) 2))) (+.f64 (*.f64 (pow.f64 lambda2 4) (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda1) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda1) 2)))) (pow.f64 (cos.f64 lambda1) 2)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 lambda1) 2))) (+.f64 (*.f64 (pow.f64 lambda2 4) (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda1) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda1) 2)))) (+.f64 (*.f64 (pow.f64 lambda2 6) (+.f64 (*.f64 -1/24 (pow.f64 (cos.f64 lambda1) 2)) (*.f64 -1/360 (pow.f64 (cos.f64 lambda1) 2)))) (pow.f64 (cos.f64 lambda1) 2))))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (cos.f64 lambda2) 2)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 lambda1 2))) (pow.f64 (cos.f64 lambda2) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 lambda1 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)) (pow.f64 (cos.f64 lambda2) 2)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 lambda1 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)) (+.f64 (pow.f64 (cos.f64 lambda2) 2) (*.f64 (+.f64 (*.f64 -1/24 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 -1/360 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 6)))))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 2))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 2)))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1/720 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 6))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 2))))))))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (pow.f64 lambda2 2))) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (pow.f64 lambda2 2))) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2)))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2)))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2))))))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))","(+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(*.f64 lambda2 (sin.f64 lambda1))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (sin.f64 lambda1))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1)))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (sin.f64 lambda1))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (*.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (sin.f64 lambda1))))))","(*.f64 (sin.f64 lambda2) lambda1)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))) (*.f64 (sin.f64 lambda2) lambda1))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (cos.f64 lambda1) 2)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 lambda1) 2))) (pow.f64 (cos.f64 lambda1) 2))","(-.f64 (pow.f64 (cos.f64 lambda1) 2) (pow.f64 (*.f64 lambda2 (cos.f64 lambda1)) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 lambda1) 2))) (+.f64 (*.f64 (pow.f64 lambda2 4) (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda1) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda1) 2)))) (pow.f64 (cos.f64 lambda1) 2)))","(-.f64 (fma.f64 (pow.f64 lambda2 4) (*.f64 (pow.f64 (cos.f64 lambda1) 2) 1/3) (pow.f64 (cos.f64 lambda1) 2)) (pow.f64 (*.f64 lambda2 (cos.f64 lambda1)) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (pow.f64 (cos.f64 lambda1) 2))) (+.f64 (*.f64 (pow.f64 lambda2 4) (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda1) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda1) 2)))) (+.f64 (*.f64 (pow.f64 lambda2 6) (+.f64 (*.f64 -1/24 (pow.f64 (cos.f64 lambda1) 2)) (*.f64 -1/360 (pow.f64 (cos.f64 lambda1) 2)))) (pow.f64 (cos.f64 lambda1) 2))))","(-.f64 (fma.f64 (pow.f64 lambda2 4) (*.f64 (pow.f64 (cos.f64 lambda1) 2) 1/3) (fma.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (cos.f64 lambda1) 2) -2/45) (pow.f64 (cos.f64 lambda1) 2))) (pow.f64 (*.f64 lambda2 (cos.f64 lambda1)) 2))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(pow.f64 (cos.f64 lambda2) 2)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 lambda1 2))) (pow.f64 (cos.f64 lambda2) 2))","(-.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (*.f64 (cos.f64 lambda2) lambda1) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 lambda1 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)) (pow.f64 (cos.f64 lambda2) 2)))","(-.f64 (fma.f64 (*.f64 (pow.f64 (cos.f64 lambda2) 2) 1/3) (pow.f64 lambda1 4) (pow.f64 (cos.f64 lambda2) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) lambda1) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 lambda1 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 1/4 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)) (+.f64 (pow.f64 (cos.f64 lambda2) 2) (*.f64 (+.f64 (*.f64 -1/24 (pow.f64 (cos.f64 lambda2) 2)) (*.f64 -1/360 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 6)))))","(+.f64 (-.f64 (fma.f64 (*.f64 (pow.f64 (cos.f64 lambda2) 2) 1/3) (pow.f64 lambda1 4) (pow.f64 (cos.f64 lambda2) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) lambda1) 2)) (*.f64 (*.f64 (pow.f64 (cos.f64 lambda2) 2) -2/45) (pow.f64 lambda1 6)))","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(*.f64 (pow.f64 (cos.f64 lambda2) 2) (pow.f64 (cos.f64 lambda1) 2))","(pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cos.f64 phi1)))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 2))))))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (*.f64 -1/2 (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 phi2 phi2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 2)))))))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (fma.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (pow.f64 phi2 4)) (+.f64 (cos.f64 phi1) (*.f64 (*.f64 -1/2 (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 phi2 phi2)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 4))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1/720 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 6))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 2))))))))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (fma.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (pow.f64 phi2 4)) (+.f64 (cos.f64 phi1) (fma.f64 -1/720 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (pow.f64 phi2 6)) (*.f64 (*.f64 -1/2 (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 phi2 phi2))))))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))","(fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (pow.f64 lambda2 2))) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))","(fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (cos.f64 phi1) (fma.f64 (*.f64 (cos.f64 lambda1) -1/2) (*.f64 (cos.f64 phi2) (*.f64 lambda2 lambda2)) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (pow.f64 lambda2 2))) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(fma.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))) (fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (cos.f64 phi1) (fma.f64 (*.f64 (cos.f64 lambda1) -1/2) (*.f64 (cos.f64 phi2) (*.f64 lambda2 lambda2)) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (cos.f64 phi1)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 lambda1 lambda1)) (cos.f64 lambda2)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))) (+.f64 (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2)))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (+.f64 (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 lambda1 lambda1)) (cos.f64 lambda2)))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 1 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(+.f64 1 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2))))","(+.f64 1 (fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (*.f64 -1/2 (*.f64 phi1 phi1))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (*.f64 -1/2 (*.f64 phi1 phi1)))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2))))))","(fma.f64 -1/720 (pow.f64 phi1 6) (+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (*.f64 -1/2 (*.f64 phi1 phi1))))))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))","(cos.f64 lambda1)","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))","(fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))))","(fma.f64 (*.f64 (cos.f64 lambda1) -1/2) (*.f64 lambda2 lambda2) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (*.f64 (pow.f64 1 1/3) (cos.f64 lambda1)))))","(fma.f64 (*.f64 (cos.f64 lambda1) -1/2) (*.f64 lambda2 lambda2) (+.f64 (*.f64 (sin.f64 lambda1) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3)))) (cos.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))","(cos.f64 lambda2)","(+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1)))","(fma.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 lambda1 lambda1) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)))) (pow.f64 lambda1 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))))","(fma.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)) (fma.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 lambda1 lambda1) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 (-.f64 lambda2 lambda1))","(*.f64 lambda2 (sin.f64 lambda1))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))))","(*.f64 (sin.f64 lambda1) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (sin.f64 lambda1))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1)))))","(fma.f64 1/120 (*.f64 (pow.f64 lambda2 5) (sin.f64 lambda1)) (*.f64 (sin.f64 lambda1) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3)))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 lambda2 5) (sin.f64 lambda1))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (*.f64 -1/5040 (*.f64 (pow.f64 lambda2 7) (sin.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 1/120 (pow.f64 lambda2 5)) lambda2)) (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 -1/5040 (pow.f64 lambda2 7)) (*.f64 -1/6 (pow.f64 lambda2 3)))))","(*.f64 (sin.f64 lambda2) lambda1)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (*.f64 (sin.f64 lambda2) lambda1))","(fma.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))) (*.f64 (sin.f64 lambda2) lambda1)))","(fma.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)) (fma.f64 1/120 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5))) (*.f64 (sin.f64 lambda2) lambda1))))","(fma.f64 -1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)) (fma.f64 -1/5040 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 7)) (fma.f64 1/120 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 5)) (*.f64 (sin.f64 lambda2) lambda1))))"]],"time":370.690185546875,"type":"simplify"},{"compiler":[[18697,4532]],"time":101.2919921875,"type":"eval"},{"alts":[["(+.f64 lambda1 (*.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))) 2) 3)))","fresh",1.8585535166793212],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))","fresh",13.890551801211817],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (/.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (sqrt.f64 2)) (*.f64 (cbrt.f64 4) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))) (*.f64 (cbrt.f64 4) (sqrt.f64 2))) (cos.f64 phi1))))","fresh",1.5015520504413635],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))","fresh",1.424721193711778],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (/.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))) 2) (cos.f64 phi1))))","fresh",1.3178569541410872],["(+.f64 lambda1 (pow.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) 3))","fresh",1.5888624895230232],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))","fresh",1.3371279026058127],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))","fresh",1.3406704439954458],["(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))) 2) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.6411583023079603],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16)))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","next",0.9336229004728382],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","done",0.2547580908424292],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))))","fresh",1.178883985556385],["(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.400582699241023],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.5087179997704414]],"compiler":[[48,21],[34,23],[63,42],[33,22],[59,38],[26,17],[37,24],[42,24],[38,21],[64,34],[46,24],[49,28],[30,19],[26,17],[48,21],[34,23],[63,42],[33,22],[59,38],[26,17],[37,24],[42,24],[38,21],[64,34],[49,28],[30,19],[26,17]],"count":[[408,14]],"kept":[{"done":[0,0],"fresh":[12,10],"new":[395,3],"picked":[1,1]}],"min-error":[0.06184722661783103],"time":253.1708984375,"type":"prune"},{"compiler":[[374,91]],"locations":[["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))",0.46484375,true],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))",0.549160009768442,true],["(cos.f64 (+.f64 lambda2 lambda1))",2.8838717712212905,true],["(cos.f64 (-.f64 lambda2 lambda1))",2.9312165798244525,false]],"time":62.862060546875,"type":"localize"},{"count":[[3,64]],"series":[["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","lambda1","-inf",0.218994140625],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","lambda1","inf",1.074951171875],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","lambda1","0",0.4501953125],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","lambda2","-inf",0.43994140625],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","lambda2","inf",1.137939453125],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","lambda2","0",0.572021484375],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","lambda1","-inf",0.23486328125],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","lambda1","inf",1.06103515625],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","lambda1","0",0.5029296875],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","lambda2","-inf",0.487060546875],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","lambda2","inf",1.472900390625],["(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","lambda2","0",0.64306640625],["(cos.f64 (+.f64 lambda2 lambda1))","lambda1","-inf",0.1748046875],["(cos.f64 (+.f64 lambda2 lambda1))","lambda1","inf",0.1630859375],["(cos.f64 (+.f64 lambda2 lambda1))","lambda1","0",0.29296875],["(cos.f64 (+.f64 lambda2 lambda1))","lambda2","-inf",0.18505859375],["(cos.f64 (+.f64 lambda2 lambda1))","lambda2","inf",0.2080078125],["(cos.f64 (+.f64 lambda2 lambda1))","lambda2","0",0.39501953125]],"time":10.079833984375,"type":"series"},{"count":[[3,139]],"inputs":[["(cos.f64 (+.f64 lambda2 lambda1))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 lambda2 lambda1)) (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) 0) (cos.f64 (+.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 lambda2 lambda1)) (*.f64 0 (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (+.f64 lambda2 lambda1))) (cos.f64 (+.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 lambda2 lambda1))) (pow.f64 (cos.f64 (+.f64 lambda2 lambda1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (+.f64 lambda2 lambda1)) 2/3) (cbrt.f64 (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 lambda2 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 2) (*.f64 2 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 lambda2 lambda1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 lambda2 lambda1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 lambda2 lambda1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 lambda2 lambda1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 lambda2 lambda1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 lambda2 lambda1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 (neg.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 lambda2 lambda1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 0) (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/4) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 (cbrt.f64 1/4) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/4) (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 (cbrt.f64 1/4) (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/4) (cos.f64 (+.f64 lambda2 lambda1))) (*.f64 (cbrt.f64 1/4) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/4) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cbrt.f64 1/4) (fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (cos.f64 (+.f64 lambda2 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) (*.f64 0 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))) (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 1/4)) (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cbrt.f64 1/4)) (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cbrt.f64 1/4)) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 1/4)) (*.f64 (fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 -4)) (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 4)) (/.f64 (fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (neg.f64 (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 4)) (/.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))) (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 2/3) (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (neg.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/4) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/4))) (cbrt.f64 (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))) (pow.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 2/3)) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 2/3) (cbrt.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 2/3) (cbrt.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))))) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/4))) 1) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 2/3)) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 2/3)) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) -1) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/4))) (cbrt.f64 (cbrt.f64 (cbrt.f64 16)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/4))) 1) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/4)))) (cbrt.f64 (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 3) 1/4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 3) 1/4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 0) (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/16) (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))) (*.f64 (cbrt.f64 1/16) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/16) (cos.f64 (-.f64 lambda2 lambda1))) (*.f64 (cbrt.f64 1/16) (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/16) (cos.f64 (+.f64 lambda2 lambda1))) (*.f64 (cbrt.f64 1/16) (cos.f64 (-.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/16) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cbrt.f64 1/16) (fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (cos.f64 (+.f64 lambda2 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) (*.f64 0 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))) (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 1/16)) (*.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cbrt.f64 1/16)) (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cbrt.f64 1/16)) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 1/16)) (*.f64 (fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 -16)) (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cbrt.f64 16)) (/.f64 (fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (neg.f64 (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 16)) (/.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))) (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 2/3) (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (neg.f64 (cbrt.f64 1/16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/16)) (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 256))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))) (/.f64 1 (cbrt.f64 (cbrt.f64 256))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/16) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))) (cbrt.f64 (cbrt.f64 256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))) (pow.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 2/3)) (cbrt.f64 (cbrt.f64 256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/16)) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 (cbrt.f64 256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))) 1) (cbrt.f64 (cbrt.f64 256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))) (cbrt.f64 (cbrt.f64 (cbrt.f64 256)))) (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 256))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))) 1) (cbrt.f64 (cbrt.f64 256)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16))) 1) (*.f64 (cbrt.f64 (cbrt.f64 256)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 -16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 2/3) (cbrt.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 2/3) (cbrt.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))))) (cbrt.f64 (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 256))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 2/3)) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))))) (pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 2/3)) (cbrt.f64 (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/4)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) -1) (cbrt.f64 -16))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/4))) (cbrt.f64 (*.f64 (cbrt.f64 16) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1)))) (cbrt.f64 (cbrt.f64 16))) (neg.f64 (cbrt.f64 (cbrt.f64 256))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 (cbrt.f64 1/16)))) (neg.f64 (cbrt.f64 (cbrt.f64 256))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 3) 1/16) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 -16)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 1/16)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) 3) 1/16))))))"]],"rules":[["egg-rr",56],["egg-rr",54],["egg-rr",29]],"time":39.338134765625,"type":"rewrite"},{"count":[[203,194]],"inputs":[["(cos.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 lambda1))) (cos.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (+.f64 (cos.f64 lambda1) (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))))))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 lambda2)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 lambda2) lambda1)) (cos.f64 lambda2))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 lambda2) (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (cos.f64 lambda2) (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(/.f64 (+.f64 (cos.f64 (neg.f64 lambda1)) (cos.f64 lambda1)) (cbrt.f64 4))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 4))) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 4)) (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))","(+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 4))) (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 4))) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 4)) (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4)))))","(+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 4))) (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 -1/6 (sin.f64 (neg.f64 lambda1))))) (cbrt.f64 4))) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 4)) (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4)))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 4))))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 4))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 4)))))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (sin.f64 lambda2)) (*.f64 -1/6 (sin.f64 lambda2))) (pow.f64 lambda1 3)) (cbrt.f64 4))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 4))))))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 lambda1)) (cos.f64 lambda1)) (cbrt.f64 16))","(+.f64 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16)) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 16)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 16)))))","(+.f64 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16)) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 16)) (+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16))) (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 16))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 16))))))","(+.f64 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16)) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 16)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 -1/6 (sin.f64 (neg.f64 lambda1))))) (cbrt.f64 16))) (+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16))) (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 16))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 16)))))))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16)))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 16))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 16))) (+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 16)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 16))) (+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 16))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (sin.f64 lambda2)) (*.f64 -1/6 (sin.f64 lambda2))) (pow.f64 lambda1 3)) (cbrt.f64 16))))))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 lambda1))) (cos.f64 lambda1))","(fma.f64 (neg.f64 lambda2) (sin.f64 lambda1) (cos.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1)))","(fma.f64 (neg.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (+.f64 (cos.f64 lambda1) (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))))))","(fma.f64 (neg.f64 lambda2) (sin.f64 lambda1) (fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1)) (fma.f64 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1)) 1/6 (cos.f64 lambda1))))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 (+.f64 lambda1 lambda2))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 (+.f64 lambda1 lambda2))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 (+.f64 lambda1 lambda2))","(cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))","(cos.f64 (+.f64 lambda1 lambda2))","(cos.f64 lambda2)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 lambda2) lambda1)) (cos.f64 lambda2))","(fma.f64 (sin.f64 (neg.f64 lambda2)) lambda1 (cos.f64 lambda2))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 lambda2) (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))))","(-.f64 (fma.f64 (*.f64 -1/2 (cos.f64 lambda2)) (*.f64 lambda1 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3))) (+.f64 (cos.f64 lambda2) (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))))","(fma.f64 (sin.f64 (neg.f64 lambda2)) lambda1 (fma.f64 1/6 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 3)) (fma.f64 (*.f64 -1/2 (cos.f64 lambda2)) (*.f64 lambda1 lambda1) (cos.f64 lambda2))))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(cos.f64 (+.f64 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(cos.f64 (+.f64 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(cos.f64 (+.f64 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))","(cos.f64 (+.f64 lambda1 lambda2))","(/.f64 (+.f64 (cos.f64 (neg.f64 lambda1)) (cos.f64 lambda1)) (cbrt.f64 4))","(/.f64 (*.f64 2 (cos.f64 lambda1)) (cbrt.f64 4))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 4))) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 4)) (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))","(/.f64 (+.f64 (*.f64 (neg.f64 lambda2) (-.f64 (sin.f64 lambda1) (sin.f64 lambda1))) (*.f64 2 (cos.f64 lambda1))) (cbrt.f64 4))","(+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 4))) (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 4))) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 4)) (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4)))))","(fma.f64 (*.f64 lambda2 lambda2) (*.f64 -1/2 (/.f64 (*.f64 2 (cos.f64 lambda1)) (cbrt.f64 4))) (/.f64 (+.f64 (*.f64 (neg.f64 lambda2) (-.f64 (sin.f64 lambda1) (sin.f64 lambda1))) (*.f64 2 (cos.f64 lambda1))) (cbrt.f64 4)))","(+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 4))) (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 -1/6 (sin.f64 (neg.f64 lambda1))))) (cbrt.f64 4))) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 4)) (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 4))))))","(fma.f64 (*.f64 lambda2 lambda2) (*.f64 -1/2 (/.f64 (*.f64 2 (cos.f64 lambda1)) (cbrt.f64 4))) (-.f64 (/.f64 (+.f64 (*.f64 2 (cos.f64 lambda1)) (*.f64 (neg.f64 (pow.f64 lambda2 3)) (*.f64 -1/6 (-.f64 (sin.f64 lambda1) (sin.f64 lambda1))))) (cbrt.f64 4)) (/.f64 (*.f64 (-.f64 (sin.f64 lambda1) (sin.f64 lambda1)) lambda2) (cbrt.f64 4))))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4)))","(/.f64 (*.f64 2 (cos.f64 lambda2)) (cbrt.f64 4))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 4))))","(/.f64 (-.f64 (*.f64 2 (cos.f64 lambda2)) (*.f64 0 lambda1)) (cbrt.f64 4))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 4))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 4)))))","(fma.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4)) (/.f64 (+.f64 (*.f64 0 lambda1) (*.f64 (neg.f64 (*.f64 lambda1 lambda1)) (cos.f64 lambda2))) (cbrt.f64 4)))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (sin.f64 lambda2)) (*.f64 -1/6 (sin.f64 lambda2))) (pow.f64 lambda1 3)) (cbrt.f64 4))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 4))))))","(+.f64 (/.f64 (-.f64 (*.f64 2 (cos.f64 lambda2)) (*.f64 0 lambda1)) (cbrt.f64 4)) (/.f64 (+.f64 (pow.f64 (*.f64 0 lambda1) 3) (*.f64 (neg.f64 (*.f64 lambda1 lambda1)) (cos.f64 lambda2))) (cbrt.f64 4)))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4))","(/.f64 (+.f64 (cos.f64 (neg.f64 lambda1)) (cos.f64 lambda1)) (cbrt.f64 16))","(/.f64 (*.f64 2 (cos.f64 lambda1)) (cbrt.f64 16))","(+.f64 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16)) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 16)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 16)))))","(-.f64 (/.f64 (*.f64 2 (cos.f64 lambda1)) (cbrt.f64 16)) (/.f64 (*.f64 (-.f64 (sin.f64 lambda1) (sin.f64 lambda1)) lambda2) (cbrt.f64 16)))","(+.f64 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16)) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 16)) (+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16))) (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 16))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 16))))))","(+.f64 (/.f64 (*.f64 2 (cos.f64 lambda1)) (cbrt.f64 16)) (fma.f64 (*.f64 lambda2 lambda2) (*.f64 -1/2 (/.f64 (*.f64 2 (cos.f64 lambda1)) (cbrt.f64 16))) (/.f64 (*.f64 (neg.f64 lambda2) (-.f64 (sin.f64 lambda1) (sin.f64 lambda1))) (cbrt.f64 16))))","(+.f64 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16)) (+.f64 (/.f64 (cos.f64 lambda1) (cbrt.f64 16)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 -1/6 (sin.f64 (neg.f64 lambda1))))) (cbrt.f64 16))) (+.f64 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 -1/2 (/.f64 (cos.f64 (neg.f64 lambda1)) (cbrt.f64 16))) (*.f64 -1/2 (/.f64 (cos.f64 lambda1) (cbrt.f64 16))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda1))) lambda2) (cbrt.f64 16)))))))","(+.f64 (/.f64 (+.f64 (cos.f64 lambda1) (*.f64 (neg.f64 (pow.f64 lambda2 3)) (*.f64 -1/6 (-.f64 (sin.f64 lambda1) (sin.f64 lambda1))))) (cbrt.f64 16)) (+.f64 (/.f64 (+.f64 (cos.f64 lambda1) (*.f64 (neg.f64 lambda2) (-.f64 (sin.f64 lambda1) (sin.f64 lambda1)))) (cbrt.f64 16)) (*.f64 2 (/.f64 (*.f64 (*.f64 -1/2 (cos.f64 lambda1)) (*.f64 lambda2 lambda2)) (cbrt.f64 16)))))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda2) lambda1))) (cos.f64 (-.f64 lambda1 (*.f64 -1 lambda2)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16)))","(/.f64 (*.f64 2 (cos.f64 lambda2)) (cbrt.f64 16))","(+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 16))))","(/.f64 (-.f64 (*.f64 2 (cos.f64 lambda2)) (*.f64 0 lambda1)) (cbrt.f64 16))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 16))) (+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 16)))))","(-.f64 (/.f64 (-.f64 (*.f64 2 (cos.f64 lambda2)) (*.f64 0 lambda1)) (cbrt.f64 16)) (/.f64 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (cbrt.f64 16)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)) (cbrt.f64 16))) (+.f64 (*.f64 2 (/.f64 (cos.f64 lambda2) (cbrt.f64 16))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (sin.f64 lambda2) (*.f64 -1 (sin.f64 lambda2))) lambda1) (cbrt.f64 16))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (sin.f64 lambda2)) (*.f64 -1/6 (sin.f64 lambda2))) (pow.f64 lambda1 3)) (cbrt.f64 16))))))","(+.f64 (/.f64 (+.f64 (*.f64 (neg.f64 (*.f64 lambda1 lambda1)) (cos.f64 lambda2)) (*.f64 2 (cos.f64 lambda2))) (cbrt.f64 16)) (/.f64 (-.f64 (*.f64 0 lambda1) (pow.f64 (*.f64 0 lambda1) 3)) (cbrt.f64 16)))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 (*.f64 -1 lambda1) lambda2)) (cos.f64 (-.f64 lambda2 (*.f64 -1 lambda1)))) (cbrt.f64 16))","(/.f64 (+.f64 (cos.f64 (+.f64 lambda1 lambda2)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16))"]],"time":233.65185546875,"type":"simplify"},{"compiler":[[24519,6193]],"time":121.960205078125,"type":"eval"},{"alts":[["(+.f64 lambda1 (*.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))) 2) 3)))","fresh",1.8585535166793212],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))","fresh",13.890551801211817],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (/.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (sqrt.f64 2)) (*.f64 (cbrt.f64 4) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))) (*.f64 (cbrt.f64 4) (sqrt.f64 2))) (cos.f64 phi1))))","fresh",1.5015520504413635],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))","fresh",1.424721193711778],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (/.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))) 2) (cos.f64 phi1))))","fresh",1.3178569541410872],["(+.f64 lambda1 (pow.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) 3))","fresh",1.5888624895230232],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))","fresh",1.3371279026058127],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))","fresh",1.3406704439954458],["(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))) 2) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.6411583023079603],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16)))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","done",0.9336229004728382],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","done",0.2547580908424292],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))))","fresh",1.178883985556385],["(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.400582699241023],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","fresh",1.5087179997704414]],"compiler":[[48,21],[34,23],[63,42],[33,22],[59,38],[26,17],[37,24],[42,24],[38,21],[64,34],[46,24],[49,28],[30,19],[26,17]],"count":[[374,14]],"kept":[{"done":[1,1],"fresh":[12,12],"new":[360,0],"picked":[1,1]}],"min-error":[0.06184722661783103],"time":214.85888671875,"type":"prune"},{"accuracy":[0.2547580908424292],"baseline":[0.2547580908424292],"branch":[["lambda1",0.2547580908424292,1],["lambda2",0.2547580908424292,1],["phi1",0.2547580908424292,1],["phi2",0.2547580908424292,1],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))",0.2547580908424292,1],["(cos.f64 phi2)",0.2547580908424292,1],["(cos.f64 phi1)",0.2547580908424292,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[24,14],[6,5],[6,5],[1059,281]],"count":[[33,1]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (/.f64 (+.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 2)) (sqrt.f64 2)) (*.f64 (cbrt.f64 4) (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)))) (*.f64 (cbrt.f64 4) (sqrt.f64 2))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (/.f64 (+.f64 (*.f64 (/.f64 (-.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 (+.f64 lambda2 lambda1))) (sqrt.f64 2)) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (sqrt.f64 2)))) 2) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (*.f64 (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 4)) (/.f64 (+.f64 (cos.f64 (+.f64 lambda2 lambda1)) (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 16)))) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2)) (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))","(+.f64 lambda1 (*.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))) 2) 3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))))) 2) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (pow.f64 (cbrt.f64 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))) 3))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 3) 1/3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) 2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (sin.f64 (-.f64 lambda1 lambda2))) (cbrt.f64 (cos.f64 phi2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)) 2)) (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))) 2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (*.f64 (sin.f64 lambda2) lambda1))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cbrt.f64 (cos.f64 phi1)) (cbrt.f64 (pow.f64 (cos.f64 phi1) 2)) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (*.f64 (cbrt.f64 (cos.f64 (-.f64 lambda2 lambda1))) (cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda2 lambda1)) 2))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))) 3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (-.f64 (cos.f64 lambda1) (*.f64 lambda2 (sin.f64 (neg.f64 lambda1)))) (*.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) (cos.f64 lambda1))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (/.f64 (/.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (-.f64 phi2 (-.f64 lambda2 lambda1)))) (sqrt.f64 2)) (sqrt.f64 2)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2)) (cos.f64 phi2)) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cbrt.f64 (cos.f64 phi2)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 phi2) 2)) (cos.f64 (-.f64 lambda2 lambda1))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))"]],"link":["."],"name":["Midpoint on a great circle"],"oracle":[37.475384775355856],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))"]],"time":81.010009765625,"times":[["lambda1",9.4990234375],["lambda2",9.802001953125],["phi1",9.4970703125],["phi2",9.544921875],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))",9.9560546875],["(cos.f64 phi2)",8.45703125],["(cos.f64 phi1)",7.943115234375]],"type":"regimes"},{"compiler":[[46,24]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) 2)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))"]],"stop":[["fuel",1]],"time":24.029052734375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[46,24]],"remove-preprocessing":[[]],"time":16.43408203125,"type":"end"}]