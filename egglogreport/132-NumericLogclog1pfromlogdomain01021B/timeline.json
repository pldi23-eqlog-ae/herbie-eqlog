[{"compiler":[[10,8]],"method":["search"],"sampling":[[12,0.7486577033996582,0.0009760856628417969,0.2503662109375],[11,0.7476816177368164,0.0019521713256835938,0.2503662109375],[10,0.7457294464111328,0.0039043426513671875,0.2503662109375],[9,0.7418251037597656,0.007808685302734375,0.2503662109375],[8,0.7340164184570313,0.01561737060546875,0.2503662109375],[7,0.7183990478515625,0.0312347412109375,0.2503662109375],[6,0.687164306640625,0.062469482421875,0.2503662109375],[5,0.62469482421875,0.12493896484375,0.2503662109375],[4,0.499755859375,0.2498779296875,0.2503662109375],[3,0.2498779296875,0.499755859375,0.2503662109375],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.56396484375,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.06103515625,2],["body",256,"valid",282.825927734375,8256]],"time":290.93994140625,"type":"sample"},{"compiler":[[9,7]],"inputs":[["0"],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","(/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))"]],"symmetry":[[]],"time":51.9951171875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","(/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))"]],"time":18.94287109375,"type":"simplify"},{"compiler":[[17,13]],"time":0.387939453125,"type":"eval"},{"alts":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","next",0.171875]],"compiler":[[9,7],[9,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.171875],"time":0.817138671875,"type":"prune"},{"compiler":[[24,18]],"locations":[["(sqrt.f64 (+.f64 x 1))",0.0078125,true],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))",0.01171875,true],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))",0.171875,true]],"time":6.06787109375,"type":"localize"},{"count":[[3,12]],"series":[["(sqrt.f64 (+.f64 x 1))","x","-inf",0.27490234375],["(sqrt.f64 (+.f64 x 1))","x","inf",0.27587890625],["(sqrt.f64 (+.f64 x 1))","x","0",0.1708984375],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))","x","-inf",0.319091796875],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))","x","inf",0.30908203125],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))","x","0",0.195068359375],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","x","-inf",1.01220703125],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","x","inf",1.423828125],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","x","0",0.47021484375]],"time":4.569091796875,"type":"series"},{"count":[[3,192]],"inputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","(+.f64 1 (sqrt.f64 (+.f64 x 1)))","(sqrt.f64 (+.f64 x 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 0) (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 1/2) (*.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 0 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (*.f64 1/2 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2)) (cbrt.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 x (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (sqrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 (cbrt.f64 x) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))) (cbrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (sqrt.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (sqrt.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) x) (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) x) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (*.f64 x x))) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2)) (cbrt.f64 x)) (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))) (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2))) (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2))) (cbrt.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 1/2 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0) (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1/2) (*.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 0 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 1/2 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (neg.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (+.f64 x 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))) (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 x 1) 3/2))) (/.f64 1 (neg.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0) (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)) (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 x 1) 3/2))) (neg.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 x 1) 3/2)))) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)))) (cbrt.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (sqrt.f64 (+.f64 x 1)) 9)) (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))))) (-.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3)) (pow.f64 (+.f64 x 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 x 1) 3/2))) 1) (neg.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))) (cbrt.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (cbrt.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))))) (pow.f64 (cbrt.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (sqrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))) (/.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))) (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 (+.f64 x 1) 3/2))) 1) (*.f64 (neg.f64 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (sqrt.f64 (+.f64 x 1)) 9)) 1) (*.f64 (-.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3)) (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0) (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x 1)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (+.f64 x 1)) 0) (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (+.f64 x 1)) (*.f64 (sqrt.f64 (+.f64 x 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (+.f64 x 1)) 1/2) (*.f64 (sqrt.f64 (+.f64 x 1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (+.f64 x 1)) (*.f64 0 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (+.f64 x 1))) (*.f64 1/2 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (+.f64 x 1))) (fabs.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (fabs.f64 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 x 1)) 0) (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x 1)) (pow.f64 (sqrt.f64 (+.f64 x 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 (pow.f64 x 3) 1))) (cbrt.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))))))))"]],"rules":[["egg-rr",43],["egg-rr",85],["egg-rr",64]],"time":35.944091796875,"type":"rewrite"},{"count":[[204,213]],"inputs":[["(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","2","(+.f64 (*.f64 1/2 x) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","1","(+.f64 (*.f64 1/2 x) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(*.f64 x (+.f64 (*.f64 x -1/8) 1/2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 x (+.f64 (*.f64 x -1/8) 1/2)) (*.f64 1/16 (pow.f64 x 3)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(+.f64 (*.f64 x (+.f64 (*.f64 x -1/8) 1/2)) (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3))))","2","(+.f64 (*.f64 1/2 x) 2)","(fma.f64 1/2 x 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(+.f64 (*.f64 x (+.f64 (*.f64 x -1/8) 1/2)) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(+.f64 (*.f64 x (+.f64 (*.f64 x -1/8) 1/2)) (fma.f64 (pow.f64 x 3) 1/16 2))","1","(+.f64 (*.f64 1/2 x) 1)","(fma.f64 1/2 x 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(+.f64 (*.f64 x (+.f64 (*.f64 x -1/8) 1/2)) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))","(+.f64 (*.f64 x (+.f64 (*.f64 x -1/8) 1/2)) (fma.f64 (pow.f64 x 3) 1/16 1))"]],"time":70.802001953125,"type":"simplify"},{"compiler":[[3221,2593]],"time":47.697021484375,"type":"eval"},{"alts":[["(/.f64 x (cbrt.f64 (exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 3))))","fresh",6.423549505801668],["(/.f64 x (*.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))))))","fresh",4.7446225122036845],["(/.f64 x (+.f64 1 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2)))","fresh",0.26503759768442015],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))","next",0.17091752930532605],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","done",0.171875],["(/.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))","fresh",4.768060012203684],["(*.f64 (/.f64 x (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))) (cbrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))","fresh",1.6000002379860356],["(/.f64 x (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))","fresh",4.7446225122036845]],"compiler":[[12,10],[21,17],[12,10],[23,19],[9,7],[21,17],[21,18],[19,15],[12,10],[21,17],[12,10],[23,19],[21,17],[21,18],[19,15]],"count":[[214,8]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[213,7],"picked":[1,1]}],"min-error":[0.05078125],"time":67.1337890625,"type":"prune"},{"compiler":[[87,71]],"locations":[["(cbrt.f64 (sqrt.f64 (+.f64 x 1)))",0.05859375,true],["(*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1))",0.1328125,true],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))",0.171875,true],["(-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))",5.207055899505929,true]],"time":22.320068359375,"type":"localize"},{"count":[[4,36]],"series":[["(cbrt.f64 (sqrt.f64 (+.f64 x 1)))","x","-inf",0.3330078125],["(cbrt.f64 (sqrt.f64 (+.f64 x 1)))","x","inf",0.2451171875],["(cbrt.f64 (sqrt.f64 (+.f64 x 1)))","x","0",0.204833984375],["(*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1))","x","-inf",1.026123046875],["(*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1))","x","inf",0.784912109375],["(*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1))","x","0",0.201171875],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))","x","-inf",4.736083984375],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))","x","inf",4.76708984375],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))","x","0",0.27099609375],["(-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))","x","-inf",0.574951171875],["(-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))","x","inf",0.77490234375],["(-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))","x","0",0.59912109375]],"time":14.7509765625,"type":"series"},{"count":[[4,347]],"inputs":[["(-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))","(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))","(*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1))","(cbrt.f64 (sqrt.f64 (+.f64 x 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 1/2 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 1/2 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1/2) (*.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 1/2 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (neg.f64 (/.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 1 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (neg.f64 (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (sqrt.f64 (+.f64 x 1))) (/.f64 1 (neg.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (+.f64 (+.f64 x 2) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (cbrt.f64 (pow.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (+.f64 x 1) 3/2)) 1) (*.f64 (+.f64 (+.f64 x 2) (sqrt.f64 (+.f64 x 1))) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (sqrt.f64 (+.f64 x 1))) 1) (*.f64 (neg.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) 1) (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (sqrt.f64 (+.f64 x 1))) (neg.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) 1) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (sqrt.f64 (+.f64 x 1)))) (pow.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (sqrt.f64 (+.f64 x 1))) 1) (neg.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 3 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (cbrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (*.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1/2) (*.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 0) (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (*.f64 0 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (*.f64 1/2 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 1 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3) (cbrt.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (/.f64 (pow.f64 x 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) -1/3) (/.f64 x (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (/.f64 -1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 x) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 x 2/3)) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) x) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (*.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) 1) (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 x 2/3)) (*.f64 (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) 1) (*.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (*.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (neg.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (neg.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 x) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (pow.f64 x 2/3)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3) (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3) (cbrt.f64 x)) (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) x) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (neg.f64 x)) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (pow.f64 x 2/3)) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) -1/3) x) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3)) (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 2/3)) (cbrt.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) 1) (neg.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) 1) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3)) (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) -1) (neg.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) 1) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (neg.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) -1) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (neg.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (sqrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (sqrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1)))) (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))) 1) (-.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (+.f64 (sqrt.f64 (+.f64 x 1)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 1/2 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) (*.f64 1 (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1)))) (-.f64 1 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (+.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 1 (cbrt.f64 (+.f64 x 1)))) (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (-.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1/2) (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0) (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (+.f64 x 1)))) 1) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) 1) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) 1) (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1))) 1) (*.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (sqrt.f64 (+.f64 x 1)))) -1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) (*.f64 0 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (*.f64 1/2 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1))) (-.f64 1 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1))) (-.f64 1 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1)))) (-.f64 1 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) (*.f64 1 (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1))) 1) (*.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) 1) (*.f64 (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))) 1) (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) 0) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (/.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (neg.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (+.f64 x 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 (+.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) 1) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (+.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 x 1)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (+.f64 (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 x 1)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))) (neg.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1/2) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) 1) (/.f64 1 (-.f64 (+.f64 x 2) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (sqrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0) (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2/3) (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) 1) (-.f64 (+.f64 x 2) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (-.f64 -1 (sqrt.f64 (+.f64 x 1)))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) 1) 1) (-.f64 (+.f64 x 2) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (*.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) -1) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (/.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) 1) (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) 1) 1) (*.f64 (-.f64 (+.f64 x 2) (sqrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) 1)) (neg.f64 (-.f64 (+.f64 x 2) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0) (/.f64 1 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (+.f64 (+.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x 1)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))) 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))) -1 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 1 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 3 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (pow.f64 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))) 2)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 x 1)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (-.f64 1 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (+.f64 x 1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1/2) (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 0) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (*.f64 0 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 1/2 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1) (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1) (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 2) (/.f64 1/6 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 2) (*.f64 1/2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) (*.f64 2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))"]],"rules":[["egg-rr",34],["egg-rr",150],["egg-rr",93],["egg-rr",70]],"time":59.72412109375,"type":"rewrite"},{"count":[[383,411]],"inputs":[["(*.f64 -1/6 x)","(+.f64 (*.f64 5/72 (pow.f64 x 2)) (*.f64 -1/6 x))","(+.f64 (*.f64 -55/1296 (pow.f64 x 3)) (+.f64 (*.f64 5/72 (pow.f64 x 2)) (*.f64 -1/6 x)))","(+.f64 (*.f64 -55/1296 (pow.f64 x 3)) (+.f64 (*.f64 5/72 (pow.f64 x 2)) (+.f64 (*.f64 935/31104 (pow.f64 x 4)) (*.f64 -1/6 x))))","(-.f64 1 (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (+.f64 1 (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (+.f64 (*.f64 5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 1 (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (+.f64 (*.f64 5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (*.f64 -55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6))))) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(-.f64 (+.f64 1 (*.f64 -1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 -1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (*.f64 (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (+.f64 1 (pow.f64 (/.f64 1 x) -1/6))))","(/.f64 x (*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))","2","(+.f64 (*.f64 1/2 x) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(*.f64 (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (+.f64 1 (pow.f64 (/.f64 1 x) -1/6)))","(*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","1","(+.f64 1 (*.f64 1/6 x))","(+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))))","(pow.f64 x 1/6)","(+.f64 (pow.f64 x 1/6) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))","(+.f64 (pow.f64 x 1/6) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))))","(+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (pow.f64 x 1/6) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))))","(exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/6 x)","(+.f64 (*.f64 5/72 (pow.f64 x 2)) (*.f64 -1/6 x))","(fma.f64 5/72 (*.f64 x x) (*.f64 -1/6 x))","(+.f64 (*.f64 -55/1296 (pow.f64 x 3)) (+.f64 (*.f64 5/72 (pow.f64 x 2)) (*.f64 -1/6 x)))","(fma.f64 (pow.f64 x 3) -55/1296 (fma.f64 5/72 (*.f64 x x) (*.f64 -1/6 x)))","(+.f64 (*.f64 -55/1296 (pow.f64 x 3)) (+.f64 (*.f64 5/72 (pow.f64 x 2)) (+.f64 (*.f64 935/31104 (pow.f64 x 4)) (*.f64 -1/6 x))))","(fma.f64 (pow.f64 x 3) -55/1296 (fma.f64 5/72 (*.f64 x x) (fma.f64 935/31104 (pow.f64 x 4) (*.f64 -1/6 x))))","(-.f64 1 (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (+.f64 1 (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (fma.f64 -1/6 (pow.f64 (pow.f64 x -5) 1/6) 1) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (+.f64 (*.f64 5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 1 (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (fma.f64 (pow.f64 (pow.f64 x -11) 1/6) 5/72 (fma.f64 -1/6 (pow.f64 (pow.f64 x -5) 1/6) 1)) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (+.f64 (*.f64 5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (*.f64 -55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6))))) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 (+.f64 (fma.f64 (pow.f64 (pow.f64 x -11) 1/6) 5/72 1) (fma.f64 -1/6 (pow.f64 (pow.f64 x -5) 1/6) (*.f64 -55/1296 (pow.f64 (pow.f64 x -17) 1/6)))) (pow.f64 (/.f64 1 x) -1/6))","(-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(neg.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))","(-.f64 (+.f64 1 (*.f64 -1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(+.f64 (/.f64 (*.f64 -1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) x) (neg.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(+.f64 (fma.f64 -1/6 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) (/.f64 (*.f64 5/72 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 x x))) (neg.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 -1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))) (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(+.f64 (fma.f64 -55/1296 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (pow.f64 x 3)) (fma.f64 -1/6 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) (/.f64 (*.f64 5/72 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 x x)))) (neg.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 (pow.f64 x 3) 1/16 (*.f64 1/2 x)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 x 1/2 (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (*.f64 (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (+.f64 1 (pow.f64 (/.f64 1 x) -1/6))))","(/.f64 x (*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))","(/.f64 (neg.f64 x) (*.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (+.f64 1 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","2","(+.f64 (*.f64 1/2 x) 2)","(fma.f64 1/2 x 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 1/2 x 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 (pow.f64 x 3) 1/16 2)))","(*.f64 (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (+.f64 1 (pow.f64 (/.f64 1 x) -1/6)))","(*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(neg.f64 (*.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (+.f64 1 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","1","(+.f64 1 (*.f64 1/6 x))","(fma.f64 x 1/6 1)","(+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(+.f64 (fma.f64 x 1/6 1) (*.f64 -5/72 (*.f64 x x)))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))))","(+.f64 (fma.f64 55/1296 (pow.f64 x 3) 1) (fma.f64 1/6 x (*.f64 -5/72 (*.f64 x x))))","(pow.f64 x 1/6)","(+.f64 (pow.f64 x 1/6) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))","(fma.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6) (pow.f64 x 1/6))","(+.f64 (pow.f64 x 1/6) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))))","(+.f64 (pow.f64 x 1/6) (fma.f64 -5/72 (pow.f64 (pow.f64 x -11) 1/6) (*.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6))))","(+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (pow.f64 x 1/6) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))))","(+.f64 (fma.f64 55/1296 (pow.f64 (pow.f64 x -17) 1/6) (pow.f64 x 1/6)) (fma.f64 -5/72 (pow.f64 (pow.f64 x -11) 1/6) (*.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6))))","(exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(fma.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(fma.f64 -5/72 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 x x)) (fma.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))","(fma.f64 -5/72 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 x x)) (fma.f64 55/1296 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (pow.f64 x 3)) (fma.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))"]],"time":142.600830078125,"type":"simplify"},{"compiler":[[12632,10363]],"time":161.572021484375,"type":"eval"},{"alts":[["(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","fresh",20.46592118791405],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","next",0.1497650390737681],["(*.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))","fresh",0.17062382814753613],["(/.f64 x (+.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1)))))","fresh",0.16796875],["(/.f64 x (*.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))","fresh",0.20968632814753613],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1)))","fresh",0.20054628907376804],["(/.f64 x (/.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (/.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))","fresh",0.20054628907376806],["(/.f64 x (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))","fresh",4.7446225122036845]],"compiler":[[9,6],[23,19],[25,21],[19,15],[37,31],[30,25],[35,29],[19,15],[9,6],[23,19],[25,21],[19,15],[37,31],[30,25],[35,29],[19,15]],"count":[[475,8]],"kept":[{"done":[1,0],"fresh":[6,1],"new":[467,7],"picked":[1,0]}],"min-error":[0.00390625],"time":262.902099609375,"type":"prune"},{"compiler":[[82,66]],"locations":[["(cbrt.f64 (sqrt.f64 (+.f64 x 1)))",0.05859375,false],["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))",0.0625,true],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))",0.135097509768442,true],["(+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)",5.207055899505929,true]],"time":21.094970703125,"type":"localize"},{"count":[[3,24]],"series":[["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))","x","-inf",1.593994140625],["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))","x","inf",2.390869140625],["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))","x","0",0.22314453125],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","x","-inf",1.4560546875],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","x","inf",1.118896484375],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","x","0",0.219970703125],["(+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)","x","-inf",0.322998046875],["(+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)","x","inf",0.265869140625],["(+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)","x","0",0.255126953125]],"time":8.02490234375,"type":"series"},{"count":[[3,206]],"inputs":[["(+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)","(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1/2) (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (*.f64 1/2 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (*.f64 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)) (/.f64 1 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (neg.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1) (-.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1) (-.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (/.f64 1 (neg.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (-.f64 1 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (+.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (+.f64 -1 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (+.f64 1 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3) (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1) (/.f64 1 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)) (+.f64 (sqrt.f64 (+.f64 x 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1) (cbrt.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1) (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (neg.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3) (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1))) (cbrt.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) 1) (neg.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1)) (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3)) (cbrt.f64 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) -1) (/.f64 1 (+.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))) (+.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (cbrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 0) (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1/2) (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (*.f64 1/2 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (*.f64 0 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (/.f64 1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1/3) (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) (/.f64 x (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 -1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1/3) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))) (cbrt.f64 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (cbrt.f64 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))) (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) -1) (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) -1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (neg.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (neg.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (neg.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) -1) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 0) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1/2) (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (*.f64 1/2 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (*.f64 0 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 (pow.f64 x 2/3) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) (/.f64 x (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))) (neg.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 x 2/3)) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) x) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 x 2/3) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) 1) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (cbrt.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) 1) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (neg.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (neg.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (cbrt.f64 x)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 3))))))"]],"rules":[["egg-rr",56],["egg-rr",91],["egg-rr",59]],"time":46.526123046875,"type":"rewrite"},{"count":[[230,249]],"inputs":[["(*.f64 1/6 x)","(+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (+.f64 (*.f64 -935/31104 (pow.f64 x 4)) (*.f64 -5/72 (pow.f64 x 2)))))","(-.f64 (pow.f64 (/.f64 1 x) -1/6) 1)","(-.f64 (+.f64 (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (pow.f64 (/.f64 1 x) -1/6)) 1)","(-.f64 (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (pow.f64 (/.f64 1 x) -1/6))) 1)","(-.f64 (+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (pow.f64 (/.f64 1 x) -1/6)))) 1)","(-.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(-.f64 (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))) 1)","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))) 1)","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))) 1)","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (*.f64 (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (+.f64 1 (pow.f64 (/.f64 1 x) -1/6))))","(/.f64 x (*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))","x","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -49/1296 (pow.f64 x 4)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x)))","(/.f64 x (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)))","(/.f64 x (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/6 x)","(+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))","(fma.f64 1/6 x (*.f64 -5/72 (*.f64 x x)))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(fma.f64 55/1296 (pow.f64 x 3) (fma.f64 1/6 x (*.f64 -5/72 (*.f64 x x))))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (+.f64 (*.f64 -935/31104 (pow.f64 x 4)) (*.f64 -5/72 (pow.f64 x 2)))))","(fma.f64 55/1296 (pow.f64 x 3) (fma.f64 x 1/6 (fma.f64 -935/31104 (pow.f64 x 4) (*.f64 -5/72 (*.f64 x x)))))","(-.f64 (pow.f64 (/.f64 1 x) -1/6) 1)","(+.f64 (pow.f64 (/.f64 1 x) -1/6) -1)","(-.f64 (+.f64 (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (pow.f64 (/.f64 1 x) -1/6)) 1)","(fma.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6) (+.f64 (pow.f64 (/.f64 1 x) -1/6) -1))","(-.f64 (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (pow.f64 (/.f64 1 x) -1/6))) 1)","(+.f64 (fma.f64 (pow.f64 (pow.f64 x -11) 1/6) -5/72 (fma.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6) (pow.f64 (/.f64 1 x) -1/6))) -1)","(-.f64 (+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (+.f64 (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)) (pow.f64 (/.f64 1 x) -1/6)))) 1)","(+.f64 (fma.f64 (pow.f64 (pow.f64 x -17) 1/6) 55/1296 (fma.f64 (pow.f64 (pow.f64 x -11) 1/6) -5/72 (fma.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6) (pow.f64 (/.f64 1 x) -1/6)))) -1)","(-.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(-.f64 (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))) 1)","(+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))) 1)","(fma.f64 (/.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) x) -5/72 (+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))) 1)","(+.f64 (fma.f64 (/.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) x) -5/72 (/.f64 (*.f64 55/1296 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 1/16 (pow.f64 x 3) (*.f64 1/2 x)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 x 1/2 (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (*.f64 (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (+.f64 1 (pow.f64 (/.f64 1 x) -1/6))))","(/.f64 x (*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))","(/.f64 (neg.f64 x) (*.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (+.f64 1 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","x","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) x)","(fma.f64 -1/6 (*.f64 x x) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x))","(fma.f64 -1/6 (*.f64 x x) (fma.f64 5/72 (pow.f64 x 3) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -49/1296 (pow.f64 x 4)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x)))","(fma.f64 -1/6 (*.f64 x x) (fma.f64 -49/1296 (pow.f64 x 4) (fma.f64 5/72 (pow.f64 x 3) x)))","(/.f64 x (-.f64 1 (pow.f64 (/.f64 1 x) -1/6)))","(/.f64 x (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))"]],"time":92.866943359375,"type":"simplify"},{"compiler":[[10794,8891]],"time":131.97314453125,"type":"eval"},{"alts":[["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","next",0.1458587890737681],["(/.f64 x (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))","fresh",4.7446225122036845],["(*.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))","fresh",0.17062382814753613],["(/.f64 x (*.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))","fresh",0.20968632814753613],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1)))","fresh",0.20054628907376804],["(/.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) x) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","fresh",1.5347725773556589],["(*.f64 (/.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) x)","fresh",0.1855850586106521]],"compiler":[[25,21],[19,15],[25,21],[37,31],[30,25],[40,34],[25,21],[25,21],[19,15],[25,21],[37,31],[30,25],[40,34],[25,21]],"count":[[369,7]],"kept":[{"done":[0,0],"fresh":[7,4],"new":[361,3],"picked":[1,0]}],"min-error":[0.00390625],"time":159.286865234375,"type":"prune"},{"compiler":[[103,85]],"locations":[["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)))",0.0625,true],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))",0.135097509768442,true],["(pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3)",1.2440387799401555,true],["(+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)",5.207055704163634,true]],"time":31.869140625,"type":"localize"},{"count":[[4,36]],"series":[["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)))","x","-inf",0.555908203125],["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)))","x","inf",1.760986328125],["(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)))","x","0",0.178955078125],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","x","-inf",1.551025390625],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","x","inf",5.76904296875],["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","x","0",0.215087890625],["(pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3)","x","-inf",0.255126953125],["(pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3)","x","inf",0.215087890625],["(pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3)","x","0",0.178955078125],["(+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)","x","-inf",0.5927734375],["(+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)","x","inf",0.65185546875],["(+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)","x","0",0.447998046875]],"time":12.614990234375,"type":"series"},{"count":[[4,229]],"inputs":[["(+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)","(pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3)","(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","(/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1/2) (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (*.f64 1/2 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (*.f64 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (neg.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1) (-.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1) (-.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (-.f64 1 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (+.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (+.f64 -1 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (+.f64 1 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1) (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3) (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (/.f64 1 (neg.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (neg.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3) (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1))) (cbrt.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) 1) (neg.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1)) (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 2/3)) (cbrt.f64 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 x 1) 3/2) -1) (/.f64 1 (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (+.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (sqrt.f64 (+.f64 x 1)) -1) 1) (+.f64 1 (+.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (cbrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1/2) (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 0) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (*.f64 1/2 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (*.f64 0 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (cbrt.f64 (neg.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (*.f64 -1 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/8) (cbrt.f64 (pow.f64 (+.f64 x 1) 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1) (*.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 0) (-.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (-.f64 0 (*.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))) (+.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (+.f64 0 (*.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))) (-.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x 1) 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (pow.f64 (+.f64 x 1) (+.f64 1/6 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x 1) 1/8)) (pow.f64 (+.f64 x 1) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 1/8) 4/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 2) (/.f64 1/6 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) (*.f64 1/4 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 2) (*.f64 1/2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) (*.f64 2 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (cbrt.f64 (+.f64 x 1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1/2) (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 0) (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (*.f64 1/2 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (*.f64 0 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (/.f64 1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1/3) (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 -1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3) (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))) (cbrt.f64 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) -1/3) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))) (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2/3)) (cbrt.f64 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (cbrt.f64 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) 1) (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (cbrt.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (neg.f64 (pow.f64 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) x) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (neg.f64 x)) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (neg.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (-.f64 -1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1/2) (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 0) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (*.f64 1/2 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (*.f64 0 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (/.f64 (pow.f64 x 2/3) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) (/.f64 x (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))) (neg.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) x) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (pow.f64 x 2/3)) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) 1) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 x 2/3) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))) (cbrt.f64 (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))) (neg.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3) (cbrt.f64 x)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 2/3)) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3))) (cbrt.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1) (cbrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) 3))))))"]],"rules":[["egg-rr",44],["egg-rr",73],["egg-rr",55],["egg-rr",57]],"time":49.90185546875,"type":"rewrite"},{"count":[[265,295]],"inputs":[["(*.f64 1/6 x)","(+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (+.f64 (*.f64 -935/31104 (pow.f64 x 4)) (*.f64 -5/72 (pow.f64 x 2)))))","(-.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) 1)","(-.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))) 1)","(-.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))) 1)","(-.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) (+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))))) 1)","(-.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(-.f64 (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))) 1)","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))) 1)","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))) 1)","1","(+.f64 1 (*.f64 1/6 x))","(+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))))","(pow.f64 (*.f64 1 x) 1/6)","(+.f64 (pow.f64 (*.f64 1 x) 1/6) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))","(+.f64 (pow.f64 (*.f64 1 x) 1/6) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))))","(+.f64 (pow.f64 (*.f64 1 x) 1/6) (+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))))","(exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (*.f64 (+.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (-.f64 1 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3))))","(/.f64 x (*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))","x","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -49/1296 (pow.f64 x 4)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x)))","(/.f64 x (-.f64 1 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3)))","(/.f64 x (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/6 x)","(+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))","(fma.f64 1/6 x (*.f64 -5/72 (*.f64 x x)))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(fma.f64 55/1296 (pow.f64 x 3) (fma.f64 1/6 x (*.f64 -5/72 (*.f64 x x))))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 (*.f64 1/6 x) (+.f64 (*.f64 -935/31104 (pow.f64 x 4)) (*.f64 -5/72 (pow.f64 x 2)))))","(fma.f64 (pow.f64 x 3) 55/1296 (fma.f64 x 1/6 (fma.f64 -935/31104 (pow.f64 x 4) (*.f64 -5/72 (*.f64 x x)))))","(-.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) 1)","(+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) -1)","(-.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))) 1)","(+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) (fma.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6) -1))","(-.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))) 1)","(+.f64 (fma.f64 -5/72 (pow.f64 (pow.f64 x -11) 1/6) (*.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6))) (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) -1))","(-.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) (+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))))) 1)","(+.f64 (fma.f64 55/1296 (pow.f64 (pow.f64 x -17) 1/6) (fma.f64 -5/72 (pow.f64 (pow.f64 x -11) 1/6) (*.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6)))) (+.f64 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3) -1))","(-.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(-.f64 (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))) 1)","(+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))) 1)","(fma.f64 -5/72 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 x x)) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(-.f64 (+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))) 1)","(+.f64 (fma.f64 -5/72 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 x x)) (/.f64 (*.f64 55/1296 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 1/6 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","1","(+.f64 1 (*.f64 1/6 x))","(fma.f64 x 1/6 1)","(+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2))))","(+.f64 (fma.f64 x 1/6 1) (*.f64 -5/72 (*.f64 x x)))","(+.f64 (*.f64 55/1296 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 1/6 x) (*.f64 -5/72 (pow.f64 x 2)))))","(+.f64 (fma.f64 (pow.f64 x 3) 55/1296 1) (fma.f64 1/6 x (*.f64 -5/72 (*.f64 x x))))","(pow.f64 (*.f64 1 x) 1/6)","(pow.f64 x 1/6)","(+.f64 (pow.f64 (*.f64 1 x) 1/6) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))","(fma.f64 (pow.f64 (pow.f64 x -5) 1/6) 1/6 (pow.f64 x 1/6))","(+.f64 (pow.f64 (*.f64 1 x) 1/6) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6))))","(+.f64 (pow.f64 x 1/6) (fma.f64 -5/72 (pow.f64 (pow.f64 x -11) 1/6) (*.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6))))","(+.f64 (pow.f64 (*.f64 1 x) 1/6) (+.f64 (*.f64 55/1296 (pow.f64 (/.f64 1 (pow.f64 x 17)) 1/6)) (+.f64 (*.f64 -5/72 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/6)) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 x 5)) 1/6)))))","(+.f64 (pow.f64 x 1/6) (fma.f64 55/1296 (pow.f64 (pow.f64 x -17) 1/6) (fma.f64 -5/72 (pow.f64 (pow.f64 x -11) 1/6) (*.f64 1/6 (pow.f64 (pow.f64 x -5) 1/6)))))","(exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(fma.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 x x)) -5/72 (fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))","(+.f64 (*.f64 -5/72 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 55/1296 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/6 (/.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))","(fma.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 x x)) -5/72 (fma.f64 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (pow.f64 x 3)) 55/1296 (fma.f64 1/6 (/.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) x) (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 (pow.f64 x 3) 1/16 (*.f64 1/2 x)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 x 1/2 (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (*.f64 (+.f64 1 (pow.f64 (/.f64 1 x) -1/6)) (-.f64 1 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3))))","(/.f64 x (*.f64 (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (+.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))))","(/.f64 (neg.f64 x) (*.f64 (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (+.f64 1 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","x","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) x)","(fma.f64 -1/6 (*.f64 x x) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x))","(fma.f64 -1/6 (*.f64 x x) (fma.f64 5/72 (pow.f64 x 3) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -49/1296 (pow.f64 x 4)) (+.f64 (*.f64 5/72 (pow.f64 x 3)) x)))","(fma.f64 (*.f64 x x) -1/6 (fma.f64 -49/1296 (pow.f64 x 4) (fma.f64 5/72 (pow.f64 x 3) x)))","(/.f64 x (-.f64 1 (pow.f64 (pow.f64 (/.f64 1 x) -1/4) 2/3)))","(/.f64 x (-.f64 1 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/6 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))"]],"time":134.734130859375,"type":"simplify"},{"compiler":[[8590,7074]],"time":106.350830078125,"type":"eval"},{"alts":[["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","done",0.1458587890737681],["(/.f64 x (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))","fresh",4.7446225122036845],["(*.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))","fresh",0.17062382814753613],["(/.f64 x (*.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))","fresh",0.20968632814753613],["(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1)))","fresh",0.20054628907376804],["(/.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) x) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","fresh",1.5347725773556589],["(*.f64 (/.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) x)","fresh",0.1855850586106521]],"compiler":[[25,21],[19,15],[25,21],[37,31],[30,25],[40,34],[25,21]],"count":[[302,7]],"kept":[{"done":[0,0],"fresh":[6,5],"new":[295,1],"picked":[1,1]}],"min-error":[0.00390625],"time":111.946044921875,"type":"prune"},{"accuracy":[0.14585878907376806],"baseline":[0.1458587890737681],"branch":[["x",0.14585878907376806,1],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))",0.14585878907376806,1]],"compiler":[[2,1],[9,7],[428,351]],"count":[[19,1]],"inputs":[["(/.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) x) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","(/.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) -1/3) x) (pow.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) 2/3)) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","(*.f64 (/.f64 (/.f64 1 (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) x)","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","(*.f64 (/.f64 x (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1))))","(/.f64 x (+.f64 (-.f64 1 (cbrt.f64 (+.f64 x 1))) (+.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x 1)))))","(/.f64 x (*.f64 (*.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1)) (/.f64 1 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)))))","(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x 1))) (cbrt.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) 1)))","(/.f64 x (/.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (/.f64 (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) -1)) (+.f64 (sqrt.f64 (+.f64 x 1)) 1))))","(/.f64 x (cbrt.f64 (exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 3))))","(/.f64 x (*.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1))))))","(/.f64 x (+.f64 1 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2)))","(/.f64 x (*.f64 (+.f64 (cbrt.f64 (+.f64 x 1)) (-.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1))))) (+.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))","(/.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (/.f64 1 (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))","(*.f64 (/.f64 x (cbrt.f64 (pow.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))) (cbrt.f64 (exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))","(/.f64 x (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 2 x) (sqrt.f64 (+.f64 x 1)))))","(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"link":["."],"name":["Numeric.Log:$clog1p from log-domain-0.10.2.1, B"],"oracle":[21.142366207450934],"outputs":[["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))"]],"time":20.27001953125,"times":[["x",6.392822265625],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))",6.656005859375]],"type":"regimes"},{"compiler":[[25,21]],"inputs":[["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 x (-.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (+.f64 x 1))) 2/3) -1))) (+.f64 1 (cbrt.f64 (sqrt.f64 (+.f64 x 1)))))","(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"stop":[["fuel",1]],"time":24.10302734375,"type":"simplify"},{"time":0.006103515625,"type":"soundness"},{"compiler":[[25,21]],"remove-preprocessing":[[]],"time":13.262939453125,"type":"end"}]