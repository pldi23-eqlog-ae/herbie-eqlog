[{"compiler":[[22,17]],"method":["search"],"sampling":[[12,0.4987797737121582,0.0009760856628417969,0.500244140625],[11,0.4978036880493164,0.0019521713256835938,0.500244140625],[10,0.4958515167236328,0.0039043426513671875,0.500244140625],[9,0.4919471740722656,0.007808685302734375,0.500244140625],[8,0.48413848876953125,0.01561737060546875,0.500244140625],[7,0.4685211181640625,0.0312347412109375,0.500244140625],[6,0.437286376953125,0.062469482421875,0.500244140625],[5,0.37481689453125,0.12493896484375,0.500244140625],[4,0.2498779296875,0.2498779296875,0.500244140625],[3,0.0,0.499755859375,0.500244140625],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":2.2421875,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.37060546875,8],["body",256,"valid",415.763427734375,8256]],"time":423.755859375,"type":"sample"},{"compiler":[[21,16]],"inputs":[["0"],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))","(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))"]],"symmetry":[[]],"time":56.98095703125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))","(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))"]],"time":23.51708984375,"type":"simplify"},{"compiler":[[39,27]],"time":0.55908203125,"type":"eval"},{"alts":[["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))","fresh",0.9921875],["(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))","next",0.021816259768442016]],"compiler":[[21,16],[19,14],[21,16],[19,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.015625],"time":2.759033203125,"type":"prune"},{"compiler":[[78,34]],"locations":[["(sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))",0.00390625,true],["(+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))",0.01171875,true],["(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))",0.015625,true],["(*.f64 (*.f64 v v) (PI.f64))",0.2083587890737681,true]],"time":15.143798828125,"type":"localize"},{"count":[[4,32]],"series":[["(sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))","v","-inf",0.260986328125],["(sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))","v","inf",0.405029296875],["(sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))","v","0",0.3828125],["(+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))","v","-inf",0.1611328125],["(+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))","v","inf",0.19482421875],["(+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))","v","0",0.173095703125],["(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))","v","-inf",0.800048828125],["(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))","v","inf",1.56005859375],["(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))","v","0",1.344970703125],["(*.f64 (*.f64 v v) (PI.f64))","v","-inf",0.18994140625],["(*.f64 (*.f64 v v) (PI.f64))","v","inf",0.43603515625],["(*.f64 (*.f64 v v) (PI.f64))","v","0",0.558837890625]],"time":6.691162109375,"type":"series"},{"count":[[4,297]],"inputs":[["(*.f64 (*.f64 v v) (PI.f64))","(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))","(+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))","(sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 v v) (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 v v) (PI.f64)) (*.f64 (*.f64 (*.f64 v v) (PI.f64)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 v v) (PI.f64)) 1/2) (*.f64 (*.f64 (*.f64 v v) (PI.f64)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 v v) (PI.f64)) 0) (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))) 0) (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 -1) (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 v v) (PI.f64))) (*.f64 1/2 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))) (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 v v) (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 v v)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 v v) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 v (*.f64 v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 v (PI.f64)) v)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (pow.f64 v 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 v v)) (*.f64 (cbrt.f64 (pow.f64 v 4)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 v) (*.f64 (cbrt.f64 (*.f64 v v)) (*.f64 v (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 v v) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (neg.f64 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64))))) (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 v) (neg.f64 (*.f64 v (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 v v))) (*.f64 (cbrt.f64 (pow.f64 v 4)) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 v v)) (cbrt.f64 (PI.f64))) (neg.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 v v)) (neg.f64 (*.f64 (cbrt.f64 (pow.f64 v 4)) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (*.f64 0 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64)))))) (+.f64 0 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (+.f64 0 (*.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) 0))) (-.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 v v) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (neg.f64 (*.f64 v v)) (cbrt.f64 (PI.f64)))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 v v) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 v v) (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 v v) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 v v) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (*.f64 v v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (pow.f64 v 4)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 v v) (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 v v) (PI.f64)) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 v) (*.f64 (cbrt.f64 (*.f64 v v)) (*.f64 v (PI.f64))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 v v)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 v v)) (*.f64 (cbrt.f64 (pow.f64 v 4)) (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 v (*.f64 v (PI.f64)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v (PI.f64)) v 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v v) (PI.f64) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 v v) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (*.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1/2) (*.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 0) (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (*.f64 0 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (*.f64 1/2 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (/.f64 4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (/.f64 0 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3)) (/.f64 4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4/3 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4/3) (/.f64 (cbrt.f64 16/9) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 4/3) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (/.f64 (sqrt.f64 4/3) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 64/27) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (cbrt.f64 (/.f64 (sqrt.f64 64/27) (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 4/3) (/.f64 (sqrt.f64 4/3) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 4/3) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (/.f64 (sqrt.f64 4/3) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 4/3) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (/.f64 (cbrt.f64 16/9) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 4/3) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (/.f64 (cbrt.f64 16/9) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (cbrt.f64 (/.f64 64/27 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (/.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (/.f64 4/3 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (/.f64 4/3 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) 1) (sqrt.f64 (/.f64 (fma.f64 (*.f64 -6 v) v 2) 16/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -4/3) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) 1) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) 1) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4/3 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4/3 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (sqrt.f64 (/.f64 (fma.f64 (*.f64 -6 v) v 2) 16/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4/3 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 (cbrt.f64 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fma.f64 (neg.f64 v) v 1)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (PI.f64)) (fma.f64 (neg.f64 v) v 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) -1) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) 1) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -1) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (*.f64 (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4/3) (cbrt.f64 16/9)) (*.f64 (cbrt.f64 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 16/9)) (*.f64 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) (sqrt.f64 (/.f64 (fma.f64 (*.f64 -6 v) v 2) 16/9))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) 1) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) 1) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) 4/3) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4/3 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1) (*.f64 (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 4/3 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (sqrt.f64 (/.f64 (fma.f64 (*.f64 -6 v) v 2) 16/9)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 16/9)) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 4/3) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (cbrt.f64 16/9)) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (sqrt.f64 64/27) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (sqrt.f64 4/3)) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) 4/3) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) 4/3) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 4/3) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (sqrt.f64 4/3)) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 -4/3)) (cbrt.f64 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 4/3)) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 4/3) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 16/9)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 4/3) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (sqrt.f64 4/3)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) 1) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) 1) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2)))) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 4/3) (cbrt.f64 (/.f64 (sqrt.f64 64/27) (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 4/3) (/.f64 (sqrt.f64 4/3) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4/3) (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4/3) (cbrt.f64 (/.f64 16/9 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4/3) (/.f64 (cbrt.f64 16/9) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 64/27 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) 1) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2) (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 -1) (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 4/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -4/3 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -4/3 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 1/2) (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 0) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) (*.f64 0 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (*.f64 1/2 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (*.f64 (*.f64 v v) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 2)) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (fma.f64 (neg.f64 v) v 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 v) v 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (PI.f64)) (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (-.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (+.f64 -1 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (+.f64 (*.f64 v v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (-.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))) (cbrt.f64 (PI.f64))))) (+.f64 (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (-.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (+.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (*.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64)))))) (-.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (cbrt.f64 (PI.f64)) (*.f64 (neg.f64 (*.f64 v v)) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (*.f64 (neg.f64 (*.f64 v v)) (cbrt.f64 (PI.f64))) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (-.f64 (cbrt.f64 (PI.f64)) (*.f64 (*.f64 v v) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v v) (neg.f64 (PI.f64)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))) (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 v v) (PI.f64)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 v v) (PI.f64)) -1 (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (neg.f64 (*.f64 v v)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))) 1 (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 v v) (PI.f64))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64))))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 v) (*.f64 v (PI.f64)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (neg.f64 (*.f64 (*.f64 v v) (PI.f64)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 v (neg.f64 (*.f64 v (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (PI.f64)) (*.f64 v v) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 v v)) (*.f64 (cbrt.f64 (pow.f64 v 4)) (neg.f64 (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1 (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (PI.f64)) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (*.f64 v v)) (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (PI.f64)) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 1/2) (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 0) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 0) (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -6 v) v 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))))))"]],"rules":[["egg-rr",43],["egg-rr",62],["egg-rr",127],["egg-rr",65]],"time":53.847900390625,"type":"rewrite"},{"count":[[329,317]],"inputs":[["(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))","(+.f64 (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 4/3 (*.f64 (pow.f64 v 2) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(+.f64 (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 v 4) (+.f64 (*.f64 1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (+.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))))))) (*.f64 4/3 (*.f64 (pow.f64 v 2) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (/.f64 (sqrt.f64 1/2) (PI.f64)))))))","(+.f64 (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 v 6) (+.f64 (*.f64 1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (+.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 1/2 (/.f64 (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (*.f64 (sqrt.f64 1/2) (PI.f64))))))))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 v 4) (+.f64 (*.f64 1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (+.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))))))) (*.f64 4/3 (*.f64 (pow.f64 v 2) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (/.f64 (sqrt.f64 1/2) (PI.f64))))))))","(PI.f64)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(sqrt.f64 2)","(+.f64 (sqrt.f64 2) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2)))))","(+.f64 (*.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5))) (+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))","(/.f64 (*.f64 4/3 (sqrt.f64 1/2)) (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 4/3 (*.f64 (pow.f64 v 2) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(*.f64 4/3 (+.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 (*.f64 v v) (+.f64 (/.f64 3/4 (*.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(+.f64 (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 v 4) (+.f64 (*.f64 1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (+.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))))))) (*.f64 4/3 (*.f64 (pow.f64 v 2) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (/.f64 (sqrt.f64 1/2) (PI.f64)))))))","(*.f64 4/3 (+.f64 (fma.f64 (pow.f64 v 4) (+.f64 (fma.f64 (/.f64 (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))) 1/2 (/.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 3/4 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 (*.f64 v v) (+.f64 (/.f64 3/4 (*.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64))))) (/.f64 (sqrt.f64 1/2) (PI.f64))))","(+.f64 (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 v 6) (+.f64 (*.f64 1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (+.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 1/2 (/.f64 (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (*.f64 (sqrt.f64 1/2) (PI.f64))))))))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 v 4) (+.f64 (*.f64 1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (+.f64 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))))))) (*.f64 4/3 (*.f64 (pow.f64 v 2) (+.f64 (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (/.f64 (sqrt.f64 1/2) (PI.f64))))))))","(fma.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)) (*.f64 4/3 (+.f64 (fma.f64 (pow.f64 v 4) (+.f64 (fma.f64 (/.f64 (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))) 1/2 (/.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 3/4 (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 (*.f64 v v) (+.f64 (/.f64 3/4 (*.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 (pow.f64 v 6) (+.f64 (fma.f64 (/.f64 (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))) 1/2 (/.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 (+.f64 3/4 (*.f64 1/2 (+.f64 27/2 (*.f64 -3/4 (-.f64 9 (*.f64 (*.f64 (*.f64 3/4 3/4) 2) 2)))))) (*.f64 (sqrt.f64 1/2) (PI.f64))))))))","(PI.f64)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (neg.f64 (*.f64 v v)) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (neg.f64 (*.f64 v v)) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(sqrt.f64 2)","(+.f64 (sqrt.f64 2) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))","(fma.f64 (/.f64 (*.f64 v v) (sqrt.f64 2)) -3 (sqrt.f64 2))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2)))))","(+.f64 (fma.f64 (/.f64 (*.f64 v v) (sqrt.f64 2)) -3 (sqrt.f64 2)) (/.f64 (*.f64 -9/2 (pow.f64 v 4)) (pow.f64 2 3/2)))","(+.f64 (*.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 (sqrt.f64 2) 5))) (+.f64 (sqrt.f64 2) (+.f64 (*.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 (sqrt.f64 2) 3))) (*.f64 -3 (/.f64 (pow.f64 v 2) (sqrt.f64 2))))))","(+.f64 (fma.f64 -27/2 (/.f64 (pow.f64 v 6) (pow.f64 2 5/2)) (sqrt.f64 2)) (fma.f64 -9/2 (/.f64 (pow.f64 v 4) (pow.f64 2 3/2)) (/.f64 (*.f64 -3 (*.f64 v v)) (sqrt.f64 2))))"]],"time":116.1689453125,"type":"simplify"},{"compiler":[[8100,4509]],"time":84.566162109375,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))","fresh",0.0078125],["(/.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fma.f64 (neg.f64 v) v 1)) (PI.f64))","fresh",0.0078125],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","next",0.0078125]],"compiler":[[27,20],[18,14],[19,14],[27,20],[18,14],[19,14]],"count":[[319,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[317,3],"picked":[1,0]}],"min-error":[0],"time":167.390869140625,"type":"prune"},{"compiler":[[63,32]],"locations":[["(pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)",0.00390625,true],["(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))",0.01171875,true],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))",0.98046875,true],["(/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))",0.99609375,true]],"time":14.906982421875,"type":"localize"},{"count":[[4,40]],"series":[["(pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)","v","-inf",0.473876953125],["(pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)","v","inf",0.6259765625],["(pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)","v","0",0.546142578125],["(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","v","-inf",0.158935546875],["(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","v","inf",0.296875],["(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","v","0",0.201904296875],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","v","-inf",1.059814453125],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","v","inf",1.035888671875],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","v","0",0.903076171875],["(/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))","v","-inf",0.299072265625],["(/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))","v","inf",0.511962890625],["(/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))","v","0",0.4091796875]],"time":6.787109375,"type":"series"},{"count":[[4,234]],"inputs":[["(/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))","(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 0) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (*.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (*.f64 0 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (/.f64 0 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3)) (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 16/9) -1) (/.f64 (cbrt.f64 -4/3) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 -1) (/.f64 1 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 4/3) -1) (/.f64 (sqrt.f64 4/3) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 4/3) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (/.f64 (sqrt.f64 4/3) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 4/3) (cbrt.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (/.f64 (sqrt.f64 4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 4/3) 1) (/.f64 (sqrt.f64 4/3) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4/3) (/.f64 (cbrt.f64 16/9) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 4/3) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (/.f64 (cbrt.f64 16/9) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 4/3) 1) (/.f64 (cbrt.f64 16/9) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (neg.f64 1/3)) (/.f64 -4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (/.f64 -4/3 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 -4/3) -1) (/.f64 (neg.f64 (cbrt.f64 16/9)) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 -4/3) (cbrt.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (/.f64 (neg.f64 (cbrt.f64 16/9)) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (/.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4/3 (/.f64 1 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 16/9) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (/.f64 4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -2)) (/.f64 4/3 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 16/9) (/.f64 (cbrt.f64 -4/3) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 16/9) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (/.f64 (cbrt.f64 -4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 -4/3) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 -4/3) -1) (/.f64 (cbrt.f64 16/9) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 -4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (/.f64 (cbrt.f64 16/9) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (neg.f64 1/3)) -4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (cbrt.f64 16/9)) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (cbrt.f64 4/3)) (cbrt.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (cbrt.f64 -4/3)) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) 1) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4/3) (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2))) (cbrt.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -4/3 -1) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) 1) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 4/3 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 4/3 (/.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 0) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (*.f64 0 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 -4/3)) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (/.f64 (cbrt.f64 16/9) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (neg.f64 1/3)) (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) -1) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) -4/3) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) -4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) -4/3) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -1) (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 -1) (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4/3 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 2)) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (/.f64 -4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (/.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) (*.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) (/.f64 1 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 -4/3)) 1) (/.f64 (cbrt.f64 16/9) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 -4/3)) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 -4/3)) -1) (/.f64 (cbrt.f64 16/9) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -2) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4/3 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) (/.f64 4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (neg.f64 (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 2)) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) -4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) -1) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 2))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) 1) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) 1) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4/3) (*.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))) (cbrt.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 (pow.f64 (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) 2)) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) -1) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) 1) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) 1) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 (/.f64 -64/27 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 4/3) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 4/3 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 4/3 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (*.f64 v v)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (PI.f64)) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 0) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (*.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (neg.f64 (*.f64 (PI.f64) (*.f64 v v)))) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) (*.f64 0 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))) -1) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) (*.f64 v v)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (+.f64 -1 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (+.f64 (neg.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (+.f64 (*.f64 v v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (+.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 v v)) (neg.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (-.f64 (*.f64 v v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (-.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 v v)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)) -1) (/.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 2)) (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 v v)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v v) (PI.f64) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 v v))) (cbrt.f64 (pow.f64 v 4)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) v) v (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 v v))) (cbrt.f64 (*.f64 (pow.f64 v 4) (*.f64 (PI.f64) (PI.f64)))) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (neg.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) -1 (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (neg.f64 (PI.f64))) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) (*.f64 v v)) 1 (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (PI.f64) (*.f64 v v)) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (PI.f64)) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (PI.f64)) 1 (*.f64 (PI.f64) (*.f64 v v)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 0) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (*.f64 0 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 3))))))"]],"rules":[["egg-rr",25],["egg-rr",50],["egg-rr",85],["egg-rr",74]],"time":47.010986328125,"type":"rewrite"},{"count":[[274,285]],"inputs":[["(/.f64 4/3 (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 6) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(*.f64 -1 (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (pow.f64 v 2) (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (pow.f64 v 2) (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 3/2 (*.f64 (pow.f64 v 2) (sqrt.f64 1/2))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (*.f64 27/8 (*.f64 (pow.f64 v 4) (sqrt.f64 1/2)))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (+.f64 (*.f64 27/8 (*.f64 (pow.f64 v 4) (sqrt.f64 1/2))) (*.f64 135/16 (*.f64 (pow.f64 v 6) (sqrt.f64 1/2))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v))))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 2))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 4))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v))))))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 6))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 4))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v))))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 2))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 4))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v))))))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 4))) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 6))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 4/3 (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))","(/.f64 (+.f64 4/3 (*.f64 4/3 (*.f64 v v))) (PI.f64))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64)))))","(*.f64 4/3 (+.f64 (/.f64 (+.f64 (pow.f64 v 4) 1) (PI.f64)) (/.f64 (*.f64 v v) (PI.f64))))","(+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 2) (PI.f64))) (+.f64 (*.f64 4/3 (/.f64 (pow.f64 v 4) (PI.f64))) (*.f64 4/3 (/.f64 1 (PI.f64))))))","(fma.f64 4/3 (/.f64 (pow.f64 v 6) (PI.f64)) (*.f64 4/3 (+.f64 (/.f64 (+.f64 (pow.f64 v 4) 1) (PI.f64)) (/.f64 (*.f64 v v) (PI.f64)))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(/.f64 (/.f64 -4/3 (PI.f64)) (*.f64 v v))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(*.f64 -4/3 (/.f64 (+.f64 (pow.f64 v (neg.f64 4)) (pow.f64 v (neg.f64 2))) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (*.f64 4/3 (+.f64 (/.f64 (+.f64 (pow.f64 v (neg.f64 4)) (pow.f64 v (neg.f64 2))) (PI.f64)) (/.f64 (pow.f64 v (neg.f64 6)) (PI.f64)))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(-.f64 (/.f64 -4/3 (*.f64 (pow.f64 v 8) (PI.f64))) (*.f64 4/3 (+.f64 (/.f64 (+.f64 (pow.f64 v (neg.f64 4)) (pow.f64 v (neg.f64 2))) (PI.f64)) (/.f64 (pow.f64 v (neg.f64 6)) (PI.f64)))))","(/.f64 -4/3 (*.f64 (pow.f64 v 2) (PI.f64)))","(/.f64 (/.f64 -4/3 (PI.f64)) (*.f64 v v))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64))))))","(*.f64 -4/3 (/.f64 (+.f64 (pow.f64 v (neg.f64 4)) (pow.f64 v (neg.f64 2))) (PI.f64)))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64)))))))","(neg.f64 (*.f64 4/3 (+.f64 (/.f64 (+.f64 (pow.f64 v (neg.f64 4)) (pow.f64 v (neg.f64 2))) (PI.f64)) (/.f64 (pow.f64 v (neg.f64 6)) (PI.f64)))))","(neg.f64 (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 8) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 2) (PI.f64)))) (+.f64 (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 4) (PI.f64)))) (*.f64 4/3 (/.f64 1 (*.f64 (pow.f64 v 6) (PI.f64))))))))","(-.f64 (/.f64 -4/3 (*.f64 (pow.f64 v 8) (PI.f64))) (*.f64 4/3 (+.f64 (/.f64 (+.f64 (pow.f64 v (neg.f64 4)) (pow.f64 v (neg.f64 2))) (PI.f64)) (/.f64 (pow.f64 v (neg.f64 6)) (PI.f64)))))","(*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))","(/.f64 (*.f64 4/3 (sqrt.f64 1/2)) (PI.f64))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))","(fma.f64 -4/3 (*.f64 (*.f64 v v) (+.f64 (/.f64 (sqrt.f64 1/2) (neg.f64 (PI.f64))) (/.f64 -3/4 (*.f64 (sqrt.f64 1/2) (PI.f64))))) (/.f64 (*.f64 4/3 (sqrt.f64 1/2)) (PI.f64)))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64)))))","(+.f64 (*.f64 -4/3 (+.f64 (*.f64 (*.f64 v v) (+.f64 (/.f64 (sqrt.f64 1/2) (neg.f64 (PI.f64))) (/.f64 -3/4 (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 (pow.f64 v 4) (+.f64 (/.f64 (sqrt.f64 1/2) (neg.f64 (PI.f64))) (/.f64 (-.f64 (*.f64 -1/2 (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2))) 3/4) (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (/.f64 (*.f64 4/3 (sqrt.f64 1/2)) (PI.f64)))","(+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 6) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (*.f64 (sqrt.f64 1/2) (PI.f64)))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64)))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 2) (-.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 v 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (sqrt.f64 1/2) (PI.f64))) (*.f64 -1/2 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (*.f64 3/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (*.f64 4/3 (/.f64 (sqrt.f64 1/2) (PI.f64))))))","(+.f64 (*.f64 -4/3 (+.f64 (*.f64 (pow.f64 v 6) (+.f64 (/.f64 (sqrt.f64 1/2) (neg.f64 (PI.f64))) (fma.f64 -1/2 (/.f64 (+.f64 (+.f64 27/2 (*.f64 -3/4 (-.f64 9 (*.f64 (*.f64 (*.f64 3/4 3/4) 2) 2)))) (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2))) (*.f64 (sqrt.f64 1/2) (PI.f64))) (/.f64 -3/4 (*.f64 (sqrt.f64 1/2) (PI.f64)))))) (*.f64 (*.f64 v v) (+.f64 (/.f64 (sqrt.f64 1/2) (neg.f64 (PI.f64))) (/.f64 -3/4 (*.f64 (sqrt.f64 1/2) (PI.f64))))))) (fma.f64 -4/3 (*.f64 (pow.f64 v 4) (+.f64 (/.f64 (sqrt.f64 1/2) (neg.f64 (PI.f64))) (/.f64 (-.f64 (*.f64 -1/2 (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2))) 3/4) (*.f64 (sqrt.f64 1/2) (PI.f64))))) (/.f64 (*.f64 4/3 (sqrt.f64 1/2)) (PI.f64))))","(*.f64 -1 (PI.f64))","(neg.f64 (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(+.f64 (*.f64 -1 (PI.f64)) (*.f64 (pow.f64 v 2) (PI.f64)))","(fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))","(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 3/2 (*.f64 (pow.f64 v 2) (sqrt.f64 1/2))))","(fma.f64 (*.f64 3/2 (*.f64 v v)) (sqrt.f64 1/2) (sqrt.f64 1/2))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (*.f64 27/8 (*.f64 (pow.f64 v 4) (sqrt.f64 1/2)))))","(+.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 3/2 (*.f64 v v)) (*.f64 27/8 (pow.f64 v 4)))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (+.f64 (*.f64 27/8 (*.f64 (pow.f64 v 4) (sqrt.f64 1/2))) (*.f64 135/16 (*.f64 (pow.f64 v 6) (sqrt.f64 1/2))))))","(+.f64 (sqrt.f64 1/2) (fma.f64 3/2 (*.f64 (*.f64 v v) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 (*.f64 27/8 (pow.f64 v 4)) (*.f64 135/16 (pow.f64 v 6))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v))))))","(pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6)))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 2))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))))","(fma.f64 1/6 (/.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))) v) v) (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 4))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v))))))))","(fma.f64 (/.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))) v) v) 1/6 (fma.f64 1/24 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))) (pow.f64 v 4)) (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6)))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 6))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))) (pow.f64 v 4))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 1 v)))))))))","(fma.f64 (/.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))) v) v) 1/6 (fma.f64 5/432 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))) (pow.f64 v 6)) (fma.f64 1/24 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))) (pow.f64 v 4)) (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 v)) -2 (log.f64 -6))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v))))))","(pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6)))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 2))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))))","(fma.f64 1/6 (/.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))) v) v) (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 4))) (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v))))))))","(fma.f64 (/.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))) v) v) 1/6 (fma.f64 1/24 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))) (pow.f64 v 4)) (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6)))))","(+.f64 (*.f64 1/6 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 2))) (+.f64 (*.f64 1/24 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 4))) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (*.f64 5/432 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 -6) (*.f64 -2 (log.f64 (/.f64 -1 v)))))) (pow.f64 v 6))))))","(fma.f64 (/.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))) v) v) 1/6 (fma.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))) (pow.f64 v 4)) 1/24 (fma.f64 5/432 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))) (pow.f64 v 6)) (pow.f64 (exp.f64 -1/2) (fma.f64 (neg.f64 (log.f64 (neg.f64 v))) -2 (log.f64 -6))))))"]],"time":166.291015625,"type":"simplify"},{"compiler":[[7900,4600]],"time":86.9609375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))","next",0.00390625],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","done",0.0078125]],"compiler":[[36,29],[19,14],[36,29]],"count":[[288,2]],"kept":[{"done":[0,0],"fresh":[2,0],"new":[285,1],"picked":[1,1]}],"min-error":[0],"time":98.070068359375,"type":"prune"},{"compiler":[[143,97]],"locations":[["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)",0.0078125,true],["(-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))",0.01171875,true],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2)",0.015625,true],["(*.f64 (PI.f64) (*.f64 v v))",0.2083587890737681,true]],"time":37.099853515625,"type":"localize"},{"count":[[4,40]],"series":[["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)","v","-inf",0.336181640625],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)","v","inf",0.40380859375],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)","v","0",0.404052734375],["(-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))","v","-inf",0.18701171875],["(-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))","v","inf",0.161865234375],["(-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))","v","0",0.162109375],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2)","v","-inf",0.837890625],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2)","v","inf",2.351806640625],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2)","v","0",1.20703125],["(*.f64 (PI.f64) (*.f64 v v))","v","-inf",0.178955078125],["(*.f64 (PI.f64) (*.f64 v v))","v","inf",0.166015625],["(*.f64 (PI.f64) (*.f64 v v))","v","0",0.18896484375]],"time":6.814208984375,"type":"series"},{"count":[[4,141]],"inputs":[["(*.f64 (PI.f64) (*.f64 v v))","(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2)","(-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))","(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (*.f64 v v)) (*.f64 (*.f64 (PI.f64) (*.f64 v v)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) (*.f64 v v)) 0) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (*.f64 v v)) (*.f64 0 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (PI.f64) (*.f64 v v))) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 v v))) (pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 v (*.f64 (PI.f64) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (pow.f64 v 2/3)) (cbrt.f64 (pow.f64 v 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) v) v)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 v v) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 2/3) (cbrt.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) v) (cbrt.f64 v)) (pow.f64 v 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 v v) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 v 2/3) (*.f64 (cbrt.f64 (pow.f64 v 4)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (*.f64 v v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) (*.f64 v v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 v v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) (*.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) 0) (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) (*.f64 0 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)) (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))) (cbrt.f64 -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (cbrt.f64 (*.f64 -4/3 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))) (*.f64 1 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) -1) (*.f64 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 1) (*.f64 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 4) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 2/3) (cbrt.f64 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 16/9) (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2)) 16/9) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2)) 16/9))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) (*.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 0) (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) (*.f64 0 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64))) (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (PI.f64) (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))) (*.f64 (neg.f64 (PI.f64)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (*.f64 v v) (PI.f64) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))) (neg.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (PI.f64) 0) (*.f64 (PI.f64) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (*.f64 v v) (PI.f64) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (-.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (PI.f64)) (neg.f64 (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (+.f64 -1 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (PI.f64)) (fma.f64 v v -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (*.f64 v v) (PI.f64) (neg.f64 (PI.f64))))) (pow.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (PI.f64) 2/3) (+.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 2/3) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) v) 2)))) (-.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 v v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64))) (pow.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 2/3) (cbrt.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (-.f64 1 (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (+.f64 (neg.f64 (*.f64 v v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (-.f64 (cbrt.f64 (PI.f64)) (*.f64 (*.f64 v v) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (*.f64 v v)) 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 v v) (PI.f64) (neg.f64 (PI.f64)))) (neg.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (*.f64 v v) (PI.f64) (neg.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (*.f64 v v) (PI.f64) (neg.f64 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (pow.f64 (PI.f64) 2/3) (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (PI.f64) (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) v) (neg.f64 v) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v v) (neg.f64 (PI.f64)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 (PI.f64) (*.f64 v v)))) (pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 2/3) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (PI.f64)) (pow.f64 v 2/3)) (cbrt.f64 (pow.f64 v 4)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (neg.f64 (*.f64 v v)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 v v))) (neg.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 v v)) 2/3)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (PI.f64)) (*.f64 v v) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (PI.f64)) (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1 (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (PI.f64) 2/3) (cbrt.f64 (PI.f64)) (neg.f64 (*.f64 (PI.f64) (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (neg.f64 (*.f64 (PI.f64) v)) v (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (PI.f64) (*.f64 v v)) (PI.f64))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 0) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (*.f64 0 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (cbrt.f64 (*.f64 -4/3 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) (*.f64 2 -1/2)) 16/9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 16/9) (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 2/3) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4/3 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2))) (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (*.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 2/3) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (cbrt.f64 -4/3)) (cbrt.f64 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) (+.f64 3 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 3) -64/27) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) 3) -64/27))))))"]],"rules":[["egg-rr",29],["egg-rr",56],["egg-rr",32],["egg-rr",24]],"time":35.73095703125,"type":"rewrite"},{"count":[[181,177]],"inputs":[["(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))","(+.f64 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)) (*.f64 (*.f64 (pow.f64 v 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 1/2 1/3)))","(+.f64 (*.f64 (+.f64 (*.f64 7/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))) (*.f64 1/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)))) (pow.f64 v 4)) (+.f64 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)) (*.f64 (*.f64 (pow.f64 v 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 1/2 1/3))))","(+.f64 (*.f64 (+.f64 (*.f64 7/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))) (*.f64 1/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)))) (pow.f64 v 4)) (+.f64 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 7/8 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))) (*.f64 91/24 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)))) (pow.f64 v 6)) (*.f64 (*.f64 (pow.f64 v 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 1/2 1/3)))))","(*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))))))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (+.f64 (*.f64 7/5832 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))) (+.f64 (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (*.f64 91/17496 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))))))))","(*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2))","(+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))))","(+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))))))","(+.f64 (*.f64 91/17496 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))) (+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 7/5832 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))) (+.f64 (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))))))))","(PI.f64)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(*.f64 -4/3 (sqrt.f64 1/2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (*.f64 -4/3 (sqrt.f64 1/2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 v 4)) (sqrt.f64 1/2))) (*.f64 -4/3 (sqrt.f64 1/2))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 v 6) (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2))))) (sqrt.f64 1/2))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 v 4)) (sqrt.f64 1/2))) (*.f64 -4/3 (sqrt.f64 1/2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 v 2) (PI.f64))","(*.f64 (*.f64 v v) (PI.f64))","(*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))","(cbrt.f64 (*.f64 (*.f64 -4/3 -4/3) 1/2))","(+.f64 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)) (*.f64 (*.f64 (pow.f64 v 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 1/2 1/3)))","(*.f64 (cbrt.f64 (*.f64 (*.f64 -4/3 -4/3) 1/2)) (+.f64 (*.f64 v v) 1))","(+.f64 (*.f64 (+.f64 (*.f64 7/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))) (*.f64 1/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)))) (pow.f64 v 4)) (+.f64 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)) (*.f64 (*.f64 (pow.f64 v 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 1/2 1/3))))","(fma.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 -4/3 -4/3) 1/2) 8)) (pow.f64 v 4) (*.f64 (cbrt.f64 (*.f64 (*.f64 -4/3 -4/3) 1/2)) (+.f64 (*.f64 v v) 1)))","(+.f64 (*.f64 (+.f64 (*.f64 7/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))) (*.f64 1/4 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)))) (pow.f64 v 4)) (+.f64 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 7/8 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3))) (*.f64 91/24 (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 1/2 1/3)))) (pow.f64 v 6)) (*.f64 (*.f64 (pow.f64 v 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 1/2 1/3)))))","(+.f64 (fma.f64 (cbrt.f64 (*.f64 (*.f64 (*.f64 -4/3 -4/3) 1/2) 8)) (pow.f64 v 4) (*.f64 (cbrt.f64 (*.f64 (*.f64 -4/3 -4/3) 1/2)) (+.f64 (*.f64 v v) 1))) (*.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -4/3 -4/3) 1/2)) 14/3) (pow.f64 v 6)))","(*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2))","(pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2)","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)))","(fma.f64 1/9 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) v) v) (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))))))","(fma.f64 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) v) v) 1/9 (fma.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) (pow.f64 v 4)) 2/81 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2)))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (+.f64 (*.f64 7/5832 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))) (+.f64 (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (*.f64 91/17496 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))))))))","(+.f64 (fma.f64 1/9 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) v) v) (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2)) (fma.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) (pow.f64 v 6)) 7/5832 (fma.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) (pow.f64 v 4)) 2/81 (/.f64 (*.f64 91/17496 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 v)) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2)) (pow.f64 v 6)))))","(*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2))","(pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2)","(+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))))","(fma.f64 1/9 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) v) v) (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2))","(+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) (pow.f64 v 4)) 2/81) (fma.f64 1/9 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) v) v) (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2)))","(+.f64 (*.f64 91/17496 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))) (+.f64 (*.f64 7/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 7/5832 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 6))) (+.f64 (*.f64 1/324 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 4))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (*.f64 1/9 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 2 (log.f64 (/.f64 -1 v))) (log.f64 -1/6)))) 2) (pow.f64 (cbrt.f64 -4/3) 2)) (pow.f64 v 2))))))))","(fma.f64 91/17496 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) (pow.f64 v 6)) (+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) (pow.f64 v 4)) 2/81) (fma.f64 1/9 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2) v) v) (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2))) (/.f64 (*.f64 7/5832 (pow.f64 (*.f64 (pow.f64 (exp.f64 1/6) (fma.f64 2 (neg.f64 (log.f64 (neg.f64 v))) (log.f64 -1/6))) (cbrt.f64 -4/3)) 2)) (pow.f64 v 6))))","(PI.f64)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (neg.f64 (*.f64 v v)) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64)))","(*.f64 (neg.f64 (*.f64 v v)) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 2) (PI.f64))) (PI.f64))","(fma.f64 (neg.f64 (*.f64 v v)) (PI.f64) (PI.f64))","(*.f64 -4/3 (sqrt.f64 1/2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (*.f64 -4/3 (sqrt.f64 1/2)))","(fma.f64 -4/3 (sqrt.f64 1/2) (/.f64 (neg.f64 (*.f64 v v)) (sqrt.f64 1/2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 v 4)) (sqrt.f64 1/2))) (*.f64 -4/3 (sqrt.f64 1/2))))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 v v)) (*.f64 -2/3 (*.f64 (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2)) (pow.f64 v 4)))) (sqrt.f64 1/2)) (*.f64 -4/3 (sqrt.f64 1/2)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (sqrt.f64 1/2))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 v 6) (-.f64 27/2 (*.f64 3/4 (/.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2))))) (sqrt.f64 1/2))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (-.f64 9/2 (pow.f64 (/.f64 3/4 (sqrt.f64 1/2)) 2)) (pow.f64 v 4)) (sqrt.f64 1/2))) (*.f64 -4/3 (sqrt.f64 1/2)))))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 v v)) (*.f64 -2/3 (*.f64 (pow.f64 v 6) (+.f64 27/2 (*.f64 -3/4 (-.f64 9 (*.f64 (*.f64 (*.f64 3/4 3/4) 2) 2))))))) (sqrt.f64 1/2)) (fma.f64 -2/3 (/.f64 (*.f64 (-.f64 9/2 (*.f64 (*.f64 3/4 3/4) 2)) (pow.f64 v 4)) (sqrt.f64 1/2)) (*.f64 -4/3 (sqrt.f64 1/2))))"]],"time":158.411865234375,"type":"simplify"},{"compiler":[[9621,7043]],"time":112.027099609375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))","done",0.00390625],["(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","done",0.0078125]],"compiler":[[36,29],[19,14]],"count":[[215,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[213,0],"picked":[1,1]}],"min-error":[0],"time":62.968017578125,"type":"prune"},{"accuracy":[0.00390625],"baseline":[0.00390625],"branch":[["v",0.00390625,1],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))",0.00390625,1],["(*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v)))))",0.00390625,1],["(*.f64 v v)",0.00390625,1]],"compiler":[[2,1],[21,16],[19,14],[4,2],[135,91]],"count":[[6,1]],"inputs":[["(*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))","(/.f64 (/.f64 (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))) (cbrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))))","(/.f64 (/.f64 (/.f64 4/3 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2))) (fma.f64 (neg.f64 v) v 1)) (PI.f64))","(*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) (/.f64 -4/3 (fma.f64 (PI.f64) (*.f64 v v) (neg.f64 (PI.f64)))))","(/.f64 4/3 (*.f64 (sqrt.f64 (fma.f64 (*.f64 -6 v) v 2)) (+.f64 (PI.f64) (neg.f64 (*.f64 (*.f64 v v) (PI.f64))))))","(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))"]],"link":["."],"name":["Falkner and Boettcher, Equation (22+)"],"oracle":[0.998378759768442],"outputs":[["(*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))"]],"time":11.704833984375,"times":[["v",3.302001953125],["(/.f64 4 (*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v))))))",1.89501953125],["(*.f64 (*.f64 (*.f64 3 (PI.f64)) (-.f64 1 (*.f64 v v))) (sqrt.f64 (-.f64 2 (*.f64 6 (*.f64 v v)))))",1.93310546875],["(*.f64 v v)",2.1630859375]],"type":"regimes"},{"compiler":[[36,29]],"inputs":[["(*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2) -4/3)) 2) (-.f64 (PI.f64) (*.f64 (PI.f64) (*.f64 v v)))))","(/.f64 (*.f64 4/3 (pow.f64 (fma.f64 (*.f64 -6 v) v 2) -1/2)) (fma.f64 (PI.f64) (neg.f64 (*.f64 v v)) (PI.f64)))"]],"stop":[["done",1]],"time":22.84619140625,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[36,29]],"remove-preprocessing":[[]],"time":16.802978515625,"type":"end"}]