[{"compiler":[[42,20]],"method":["search"],"sampling":[[12,0.46832247126419985,0.5297258337816704,0.0019516949541298345],[11,0.46296186025076985,0.5350864447951004,0.0019516949541297235],[10,0.40545712392488475,0.5925911811209854,0.0019516949541298345],[9,0.35477498343427416,0.643273321611596,0.0019516949541298345],[8,0.26510658102780926,0.7329417240180609,0.0019516949541298345],[7,0.23391757149512582,0.7641307335507443,0.0019516949541298345],[6,0.1559450476634172,0.842103257382453,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":217.89013671875,"type":"analyze"},{"outcomes":[["body",512,"invalid",209.391357421875,943],["body",2048,"invalid",138.243408203125,184],["body",256,"invalid",98.79248046875,880],["body",512,"valid",41.3125,187],["body",1024,"valid",66.370849609375,182],["body",1024,"invalid",948.32177734375,2574],["body",2048,"valid",12.931884765625,20],["body",256,"valid",842.392822265625,7867]],"time":2371.950927734375,"type":"sample"},{"compiler":[[41,19]],"inputs":[["0","1","2","3"],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.im x.im) (*.f64 x.re x.re)))) y.re) (*.f64 (atan2.f64 x.re x.im) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.im x.im) (*.f64 x.re x.re)))) y.im) (*.f64 (atan2.f64 x.re x.im) y.re))))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.re y.re) (*.f64 x.im x.im)))) x.re) (*.f64 (atan2.f64 x.im y.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.re y.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im y.re) x.re))))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.im y.im) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im y.im) x.re))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.im y.im) (*.f64 x.im x.im)))) x.re) (*.f64 (atan2.f64 x.im y.im) y.re))))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.re y.re)))) x.im) (*.f64 (atan2.f64 y.re x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.re y.re)))) y.im) (*.f64 (atan2.f64 y.re x.re) x.im))))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.im y.im)))) y.re) (*.f64 (atan2.f64 y.im x.re) x.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.im y.im)))) x.im) (*.f64 (atan2.f64 y.im x.re) y.re))))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.im x.re)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.im x.re) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.im x.im) (*.f64 x.re x.re)))) y.re) (*.f64 (atan2.f64 x.re x.im) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.im x.im) (*.f64 x.re x.re)))) y.im) (*.f64 (atan2.f64 x.re x.im) y.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.im x.re)) y.im (*.f64 (atan2.f64 x.re x.im) y.re))) (pow.f64 (hypot.f64 x.im x.re) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.re x.im)))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.re y.re) (*.f64 x.im x.im)))) x.re) (*.f64 (atan2.f64 x.im y.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.re y.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im y.re) x.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 y.re x.im)) y.im (*.f64 (atan2.f64 x.im y.re) x.re))) (pow.f64 (hypot.f64 y.re x.im) x.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im y.re)))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.im y.im) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im y.im) x.re))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 y.im y.im) (*.f64 x.im x.im)))) x.re) (*.f64 (atan2.f64 x.im y.im) y.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 y.im x.im)) x.re (*.f64 (atan2.f64 x.im y.im) y.re))) (pow.f64 (hypot.f64 y.im x.im) y.re)) (pow.f64 (exp.f64 x.re) (atan2.f64 x.im y.im)))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.re y.re)))) x.im) (*.f64 (atan2.f64 y.re x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.re y.re)))) y.im) (*.f64 (atan2.f64 y.re x.re) x.im))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re y.re)) y.im (*.f64 (atan2.f64 y.re x.re) x.im))) (pow.f64 (hypot.f64 x.re y.re) x.im)) (pow.f64 (exp.f64 y.im) (atan2.f64 y.re x.re)))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.im y.im)))) y.re) (*.f64 (atan2.f64 y.im x.re) x.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 y.im y.im)))) x.im) (*.f64 (atan2.f64 y.im x.re) y.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re y.im)) x.im (*.f64 (atan2.f64 y.im x.re) y.re))) (pow.f64 (hypot.f64 x.re y.im) y.re)) (pow.f64 (exp.f64 x.im) (atan2.f64 y.im x.re)))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.im x.re)) y.re (*.f64 (atan2.f64 x.im x.re) y.im))) (pow.f64 (hypot.f64 x.im x.re) y.im)) (pow.f64 (exp.f64 y.re) (atan2.f64 x.im x.re)))"]],"symmetry":[[]],"time":77.451904296875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))"]],"time":23.253173828125,"type":"simplify"},{"compiler":[[66,28]],"time":0.5830078125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","next",10.255109991752239],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","fresh",33.16341918910931]],"compiler":[[29,15],[41,19],[29,15],[41,19]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[7.945469274860153],"time":1.81884765625,"type":"prune"},{"compiler":[[102,15]],"locations":[["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))",0.19140625,true],["(*.f64 (atan2.f64 x.im x.re) y.re)",1.8586579841852848,true],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))",2.930323738867848,true],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))",31.708858793971793,true]],"time":15.576171875,"type":"localize"},{"count":[[4,168]],"series":[["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","y.re","-inf",0.18994140625],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","y.re","inf",0.176025390625],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","y.re","0",1.114990234375],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","y.im","-inf",0.337890625],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","y.im","inf",0.3330078125],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","y.im","0",2.389892578125],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","x.im","-inf",0.27099609375],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","x.im","inf",0.307861328125],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","x.im","0",0.27099609375],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","x.re","-inf",0.284912109375],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","x.re","inf",0.33203125],["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))","x.re","0",0.300048828125],["(*.f64 (atan2.f64 x.im x.re) y.re)","y.re","-inf",0.25390625],["(*.f64 (atan2.f64 x.im x.re) y.re)","y.re","inf",0.302001953125],["(*.f64 (atan2.f64 x.im x.re) y.re)","y.re","0",0.258056640625],["(*.f64 (atan2.f64 x.im x.re) y.re)","x.re","-inf",0.22900390625],["(*.f64 (atan2.f64 x.im x.re) y.re)","x.re","inf",0.21484375],["(*.f64 (atan2.f64 x.im x.re) y.re)","x.re","0",0.2060546875],["(*.f64 (atan2.f64 x.im x.re) y.re)","x.im","-inf",0.23779296875],["(*.f64 (atan2.f64 x.im x.re) y.re)","x.im","inf",0.261962890625],["(*.f64 (atan2.f64 x.im x.re) y.re)","x.im","0",0.263916015625],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","x.re","-inf",0.307861328125],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","x.re","inf",1.968994140625],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","x.re","0",3.9990234375],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","x.im","-inf",0.317138671875],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","x.im","inf",0.31982421875],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","x.im","0",6.9912109375],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","y.im","-inf",10.350830078125],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","y.im","inf",15.761962890625],["(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","y.im","0",0.3330078125],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","y.re","-inf",0.23193359375],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","y.re","inf",0.203125],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","y.re","0",0.630859375],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","y.im","-inf",0.22509765625],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","y.im","inf",0.2080078125],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","y.im","0",1.094970703125],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","x.im","-inf",1.218017578125],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","x.im","inf",1.763916015625],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","x.im","0",2.10302734375],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","x.re","-inf",1.237060546875],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","x.re","inf",1.9619140625],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","x.re","0",2.180908203125]],"time":62.698974609375,"type":"series"},{"count":[[4,109]],"inputs":[["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(*.f64 (atan2.f64 x.im x.re) y.re)","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cos.f64 (*.f64 (atan2.f64 x.im x.re) y.re))) (*.f64 (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (sin.f64 (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (sin.f64 (*.f64 (atan2.f64 x.im x.re) y.re))) (*.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cos.f64 (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 0) (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cos.f64 (*.f64 (atan2.f64 x.im x.re) y.re))) 1) (*.f64 (*.f64 (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (sin.f64 (*.f64 (atan2.f64 x.im x.re) y.re))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (*.f64 0 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) (pow.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 2/3) (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cos.f64 (*.f64 (atan2.f64 x.im x.re) y.re)) (*.f64 (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (sin.f64 (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 0) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) (*.f64 0 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))) (pow.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 2/3) (cbrt.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 y.im (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (atan2.f64 x.im x.re)) y.im)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 y.im)) (*.f64 (pow.f64 y.im 2/3) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 y.im (cbrt.f64 (atan2.f64 x.im x.re)))) (pow.f64 (atan2.f64 x.im x.re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (*.f64 y.im (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 0) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (atan2.f64 x.im x.re) y.re) (*.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (atan2.f64 x.im x.re) y.re)) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (atan2.f64 x.im x.re) y.re) (*.f64 0 (*.f64 (atan2.f64 x.im x.re) y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (atan2.f64 x.im x.re) y.re)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y.re (atan2.f64 x.im x.re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y.re) (*.f64 (pow.f64 y.re 2/3) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y.re 2/3) (atan2.f64 x.im x.re)) (cbrt.f64 y.re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re) (cbrt.f64 (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (atan2.f64 x.im x.re) y.re)) (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 2/3) (cbrt.f64 (*.f64 (atan2.f64 x.im x.re) y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (atan2.f64 x.im x.re) (cbrt.f64 y.re)) (pow.f64 y.re 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y.re (cbrt.f64 (atan2.f64 x.im x.re))) (pow.f64 (atan2.f64 x.im x.re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) (*.f64 y.re (cbrt.f64 (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y.re 2/3) (*.f64 (atan2.f64 x.im x.re) (cbrt.f64 y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (atan2.f64 x.im x.re) y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (atan2.f64 x.im x.re) y.re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (atan2.f64 x.im x.re) y.re)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (atan2.f64 x.im x.re) y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 0) (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) (*.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) (*.f64 0 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (atan2.f64 x.im x.re) y.re) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3) (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (atan2.f64 x.im x.re) y.re (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (atan2.f64 x.im x.re) y.re)) (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 2/3) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y.re (cbrt.f64 (atan2.f64 x.im x.re))) (pow.f64 (atan2.f64 x.im x.re) 2/3) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y.re) (*.f64 (pow.f64 y.re 2/3) (atan2.f64 x.im x.re)) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y.re (atan2.f64 x.im x.re) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 2/3) (cbrt.f64 (*.f64 (atan2.f64 x.im x.re) y.re)) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (atan2.f64 x.im x.re) (cbrt.f64 y.re)) (pow.f64 y.re 2/3) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (hypot.f64 x.re x.im))) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 2/3) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y.im (log.f64 (hypot.f64 x.re x.im)) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cbrt.f64 y.im)) (pow.f64 y.im 2/3) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (atan2.f64 x.im x.re) y.re)) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (atan2.f64 x.im x.re) y.re) (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (atan2.f64 x.im x.re) y.re) 1 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 1 (*.f64 (atan2.f64 x.im x.re) y.re))))))"]],"rules":[["egg-rr",36],["egg-rr",26],["egg-rr",26],["egg-rr",21]],"time":35.052001953125,"type":"rewrite"},{"count":[[277,232]],"inputs":[["(sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 2) y.im)) (pow.f64 x.im 2))))","(+.f64 (*.f64 (pow.f64 x.re 4) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 y.im 2)) (pow.f64 x.im 4))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.im 4))))) (+.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 2) y.im)) (pow.f64 x.im 2)))))","(+.f64 (*.f64 (pow.f64 x.re 4) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 y.im 2)) (pow.f64 x.im 4))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.im 4))))) (+.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 2) y.im)) (pow.f64 x.im 2))) (*.f64 (pow.f64 x.re 6) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 y.im 2)) (pow.f64 x.im 6))) (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/6 (/.f64 y.im (pow.f64 x.im 6))) (*.f64 -1/48 (/.f64 (pow.f64 y.im 3) (pow.f64 x.im 6))))))))))","(sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 2) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 2))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 2) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 4) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4))) (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 6))) (pow.f64 x.re 6))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 y.im 3) (pow.f64 x.im 6))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im))) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 2) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))) (*.f64 -1/4 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 4) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4))))))))","(sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 4))) (pow.f64 x.re 4))) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 4))) (pow.f64 x.re 4))) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 y.im 3) (pow.f64 x.im 6))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im))) (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 6))) (pow.f64 x.re 6))))))))","(sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.re 4))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 4)))) (pow.f64 x.im 4)) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 y.im 3) (pow.f64 x.re 6))) (*.f64 1/6 (/.f64 y.im (pow.f64 x.re 6)))) (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)))) (pow.f64 x.im 6)) (+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.re 4))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 4)))) (pow.f64 x.im 4)) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))))))","(sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 2))) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))) (pow.f64 x.im 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 4))) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))) (pow.f64 x.im 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 3))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 90 (pow.f64 x.re 6)) (*.f64 30 (pow.f64 x.re 6))) y.im))) (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im))))) (pow.f64 x.im 6)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 x.re 6) (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))) (pow.f64 x.im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 4))) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))))))","(sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 2))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 4) (pow.f64 y.im 2))) (pow.f64 x.im 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 4))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 3))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 90 (pow.f64 x.re 6)) (*.f64 30 (pow.f64 x.re 6))) y.im))) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.im 6)) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 4) (pow.f64 y.im 2))) (pow.f64 x.im 4))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 2))) (pow.f64 x.im 6))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 4))))))))","(sin.f64 (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 y.im (*.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 (pow.f64 y.im 2) (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) 2)))) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 y.im (*.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 (pow.f64 y.im 2) (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) 2)))) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y.im 3) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) 3) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))) (*.f64 y.im (*.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))))","(+.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 (pow.f64 y.re 2) (pow.f64 (atan2.f64 x.im x.re) 2)))) (+.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 (pow.f64 y.re 2) (pow.f64 (atan2.f64 x.im x.re) 2)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y.re 3) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 3) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))))))) (+.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))))))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","1","(+.f64 1 (*.f64 (atan2.f64 x.im x.re) y.im))","(+.f64 1 (+.f64 (*.f64 (atan2.f64 x.im x.re) y.im) (*.f64 1/2 (*.f64 (pow.f64 y.im 2) (pow.f64 (atan2.f64 x.im x.re) 2)))))","(+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y.im 3) (pow.f64 (atan2.f64 x.im x.re) 3))) (+.f64 (*.f64 (atan2.f64 x.im x.re) y.im) (*.f64 1/2 (*.f64 (pow.f64 y.im 2) (pow.f64 (atan2.f64 x.im x.re) 2))))))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 y.im (log.f64 x.im)))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 y.im (log.f64 x.im)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2)))))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 y.im (log.f64 x.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4))))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 x.re 6) y.im) (pow.f64 x.im 6))) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 y.im (log.f64 x.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4)))))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im) (pow.f64 x.re 6)))))))","(+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im) (pow.f64 x.re 6)))))))","(+.f64 (*.f64 y.im (log.f64 x.re)) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 y.im (log.f64 x.re)) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 y.im (log.f64 x.re)) (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 y.im (log.f64 x.re)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/6 (/.f64 (*.f64 y.im (pow.f64 x.im 6)) (pow.f64 x.re 6)))))))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2)))))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4))))))","(+.f64 (*.f64 1/720 (/.f64 (*.f64 y.im (+.f64 (*.f64 30 (pow.f64 x.re 6)) (*.f64 90 (pow.f64 x.re 6)))) (pow.f64 x.im 6))) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4)))))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4))))))","(+.f64 (*.f64 1/720 (/.f64 (*.f64 y.im (+.f64 (*.f64 30 (pow.f64 x.re 6)) (*.f64 90 (pow.f64 x.re 6)))) (pow.f64 x.im 6))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4)))))))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))"]],"method":["egg-herbie"],"outputs":[["(sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 2) y.im)) (pow.f64 x.im 2))))","(+.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (/.f64 (*.f64 1/2 (*.f64 (cos.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 x.re x.re) y.im))) (*.f64 x.im x.im)))","(+.f64 (*.f64 (pow.f64 x.re 4) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 y.im 2)) (pow.f64 x.im 4))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.im 4))))) (+.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 2) y.im)) (pow.f64 x.im 2)))))","(fma.f64 (pow.f64 x.re 4) (fma.f64 -1/8 (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im y.im)) (pow.f64 x.im 4)) (/.f64 (*.f64 -1/4 (*.f64 (cos.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 4))) (+.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (/.f64 (*.f64 1/2 (*.f64 (cos.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 x.re x.re) y.im))) (*.f64 x.im x.im))))","(+.f64 (*.f64 (pow.f64 x.re 4) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 y.im 2)) (pow.f64 x.im 4))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.im 4))))) (+.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 2) y.im)) (pow.f64 x.im 2))) (*.f64 (pow.f64 x.re 6) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 y.im 2)) (pow.f64 x.im 6))) (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.im) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/6 (/.f64 y.im (pow.f64 x.im 6))) (*.f64 -1/48 (/.f64 (pow.f64 y.im 3) (pow.f64 x.im 6))))))))))","(fma.f64 (pow.f64 x.re 4) (fma.f64 -1/8 (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im y.im)) (pow.f64 x.im 4)) (/.f64 (*.f64 -1/4 (*.f64 (cos.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 4))) (+.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (fma.f64 1/2 (/.f64 (*.f64 (cos.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 x.re x.re) y.im)) (*.f64 x.im x.im)) (*.f64 (pow.f64 x.re 6) (fma.f64 1/8 (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im y.im)) (pow.f64 x.im 6)) (*.f64 (cos.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (fma.f64 1/6 (/.f64 y.im (pow.f64 x.im 6)) (/.f64 (*.f64 -1/48 (pow.f64 y.im 3)) (pow.f64 x.im 6)))))))))","(sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 2) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 2))))","(+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (/.f64 (*.f64 1/2 (*.f64 y.im (*.f64 (*.f64 x.im x.im) (cos.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))))) (*.f64 x.re x.re)))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 2) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 4) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4))) (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))))))","(+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (*.f64 x.im x.im) (cos.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (*.f64 x.re x.re)) (fma.f64 -1/4 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 4) (cos.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4)) (/.f64 (*.f64 -1/8 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 y.im y.im) (pow.f64 x.im 4)))) (pow.f64 x.re 4)))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 6))) (pow.f64 x.re 6))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 y.im 3) (pow.f64 x.im 6))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im))) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 2) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))) (*.f64 -1/4 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 4) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4))))))))","(fma.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 y.im y.im) (pow.f64 x.im 6))) (pow.f64 x.re 6)) (+.f64 (/.f64 (*.f64 (fma.f64 -1/48 (*.f64 (pow.f64 y.im 3) (pow.f64 x.im 6)) (*.f64 1/720 (*.f64 (*.f64 (pow.f64 x.im 6) 120) y.im))) (cos.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)) (+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 (*.f64 x.im x.im) (cos.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (*.f64 x.re x.re)) (fma.f64 -1/4 (/.f64 (*.f64 y.im (*.f64 (pow.f64 x.im 4) (cos.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4)) (/.f64 (*.f64 -1/8 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 y.im y.im) (pow.f64 x.im 4)))) (pow.f64 x.re 4)))))))","(sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))))","(+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (/.f64 (*.f64 1/2 (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (*.f64 x.im x.im)))) (*.f64 x.re x.re)))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 4))) (pow.f64 x.re 4))) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))) (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))))))","(fma.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 4))) (pow.f64 x.re 4)) (+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (fma.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 y.im y.im) (pow.f64 x.im 4))) (pow.f64 x.re 4)) (/.f64 (*.f64 1/2 (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (*.f64 x.im x.im)))) (*.f64 x.re x.re)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 4))) (pow.f64 x.re 4))) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 y.im 3) (pow.f64 x.im 6))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im))) (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 4))) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 y.im 2) (pow.f64 x.im 6))) (pow.f64 x.re 6))))))))","(fma.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 4))) (pow.f64 x.re 4)) (+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (/.f64 (*.f64 (fma.f64 -1/48 (*.f64 (pow.f64 y.im 3) (pow.f64 x.im 6)) (*.f64 1/720 (*.f64 (*.f64 (pow.f64 x.im 6) 120) y.im))) (cos.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)) (fma.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 y.im y.im) (pow.f64 x.im 4))) (pow.f64 x.re 4)) (fma.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (*.f64 x.im x.im))) (*.f64 x.re x.re)) (/.f64 (*.f64 1/8 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (*.f64 y.im y.im) (pow.f64 x.im 6)))) (pow.f64 x.re 6)))))))","(sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))))","(fma.f64 1/2 (/.f64 (*.f64 (cos.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (*.f64 x.im x.im))) (*.f64 x.re x.re)) (sin.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.re 4))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 4)))) (pow.f64 x.im 4)) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))))","(fma.f64 1/2 (/.f64 (*.f64 (cos.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (*.f64 x.im x.im))) (*.f64 x.re x.re)) (fma.f64 (fma.f64 -1/4 (/.f64 (*.f64 (cos.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.re 4)) (/.f64 (*.f64 -1/8 (*.f64 (*.f64 y.im y.im) (sin.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4))) (pow.f64 x.im 4) (sin.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (pow.f64 x.im 2))) (pow.f64 x.re 2))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 y.im 3) (pow.f64 x.re 6))) (*.f64 1/6 (/.f64 y.im (pow.f64 x.re 6)))) (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 6)))) (pow.f64 x.im 6)) (+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.re 4))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.re 4)))) (pow.f64 x.im 4)) (sin.f64 (+.f64 (*.f64 (log.f64 x.re) y.im) (*.f64 y.re (atan2.f64 x.im x.re)))))))","(fma.f64 1/2 (/.f64 (*.f64 (cos.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 y.im (*.f64 x.im x.im))) (*.f64 x.re x.re)) (fma.f64 (fma.f64 (fma.f64 -1/48 (/.f64 (pow.f64 y.im 3) (pow.f64 x.re 6)) (/.f64 (*.f64 1/6 y.im) (pow.f64 x.re 6))) (cos.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (/.f64 (*.f64 1/8 (*.f64 (*.f64 y.im y.im) (sin.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 6))) (pow.f64 x.im 6) (fma.f64 (fma.f64 -1/4 (/.f64 (*.f64 (cos.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) y.im) (pow.f64 x.re 4)) (/.f64 (*.f64 -1/8 (*.f64 (*.f64 y.im y.im) (sin.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))))) (pow.f64 x.re 4))) (pow.f64 x.im 4) (sin.f64 (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))))))","(sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im))))","(sin.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 2))) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) (*.f64 (cos.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))) y.im)) (*.f64 x.im x.im)) (sin.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))) (pow.f64 x.im 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 4))) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 (pow.f64 x.re 4) (*.f64 y.im y.im)) (sin.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))))) (pow.f64 x.im 4)) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) (*.f64 (cos.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))) y.im)) (*.f64 x.im x.im)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))) y.im)) (pow.f64 x.im 4)) (sin.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))) (pow.f64 x.im 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 3))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 90 (pow.f64 x.re 6)) (*.f64 30 (pow.f64 x.re 6))) y.im))) (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im))))) (pow.f64 x.im 6)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 x.re 6) (*.f64 (pow.f64 y.im 2) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))) (pow.f64 x.im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))) y.im)) (pow.f64 x.im 4))) (sin.f64 (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))))))))","(fma.f64 -1/8 (/.f64 (*.f64 (*.f64 (pow.f64 x.re 4) (*.f64 y.im y.im)) (sin.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))))) (pow.f64 x.im 4)) (+.f64 (/.f64 (*.f64 (fma.f64 -1/48 (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 3)) (*.f64 1/720 (*.f64 (*.f64 (pow.f64 x.re 6) 120) y.im))) (cos.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))))) (pow.f64 x.im 6)) (fma.f64 1/8 (/.f64 (*.f64 (*.f64 (pow.f64 x.re 6) (*.f64 y.im y.im)) (sin.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))))) (pow.f64 x.im 6)) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) (*.f64 (cos.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))) y.im)) (*.f64 x.im x.im)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))) y.im)) (pow.f64 x.im 4)) (sin.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))))))))","(sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 2))))","(+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (/.f64 (*.f64 1/2 (*.f64 (*.f64 x.re x.re) (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im))) (*.f64 x.im x.im)))","(+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 4) (pow.f64 y.im 2))) (pow.f64 x.im 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 4))))))","(+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (*.f64 x.im x.im)) (fma.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 4) (*.f64 y.im y.im))) (pow.f64 x.im 4)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im))) (pow.f64 x.im 4)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 3))) (*.f64 1/720 (*.f64 (+.f64 (*.f64 90 (pow.f64 x.re 6)) (*.f64 30 (pow.f64 x.re 6))) y.im))) (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.im 6)) (+.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 2))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 4) (pow.f64 y.im 2))) (pow.f64 x.im 4))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 2))) (pow.f64 x.im 6))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (pow.f64 x.im 4))))))))","(+.f64 (/.f64 (*.f64 (fma.f64 -1/48 (*.f64 (pow.f64 x.re 6) (pow.f64 y.im 3)) (*.f64 1/720 (*.f64 (*.f64 (pow.f64 x.re 6) 120) y.im))) (cos.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))) (pow.f64 x.im 6)) (+.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im)) (*.f64 x.im x.im)) (fma.f64 -1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 4) (*.f64 y.im y.im))) (pow.f64 x.im 4)) (fma.f64 1/8 (/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (*.f64 (pow.f64 x.re 6) (*.f64 y.im y.im))) (pow.f64 x.im 6)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) (*.f64 (cos.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) y.im))) (pow.f64 x.im 4)))))))","(sin.f64 (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 y.im (*.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))))","(+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 y.im (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 (pow.f64 y.im 2) (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) 2)))) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 y.im (*.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))))","(fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 y.im (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (*.f64 (pow.f64 y.im 2) (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) 2)))) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y.im 3) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) 3) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))) (*.f64 y.im (*.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))))))","(fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (fma.f64 -1/6 (*.f64 (pow.f64 y.im 3) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 3) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))) (*.f64 y.im (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))))","(sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))","(+.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))))))","(+.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 (pow.f64 y.re 2) (pow.f64 (atan2.f64 x.im x.re) 2)))) (+.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))))))))","(fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (pow.f64 (*.f64 y.re (atan2.f64 x.im x.re)) 2)) (+.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im))))))","(+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 (pow.f64 y.re 2) (pow.f64 (atan2.f64 x.im x.re) 2)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y.re 3) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 3) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))))))) (+.f64 (sin.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))))))))","(fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (pow.f64 (*.f64 y.re (atan2.f64 x.im x.re)) 2)) (fma.f64 -1/6 (*.f64 (pow.f64 y.re 3) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 3) (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)))) (+.f64 (sin.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (*.f64 y.re (*.f64 (atan2.f64 x.im x.re) (cos.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)))))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","1","(+.f64 1 (*.f64 (atan2.f64 x.im x.re) y.im))","(+.f64 1 (+.f64 (*.f64 (atan2.f64 x.im x.re) y.im) (*.f64 1/2 (*.f64 (pow.f64 y.im 2) (pow.f64 (atan2.f64 x.im x.re) 2)))))","(+.f64 1 (fma.f64 (atan2.f64 x.im x.re) y.im (*.f64 1/2 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 2))))","(+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y.im 3) (pow.f64 (atan2.f64 x.im x.re) 3))) (+.f64 (*.f64 (atan2.f64 x.im x.re) y.im) (*.f64 1/2 (*.f64 (pow.f64 y.im 2) (pow.f64 (atan2.f64 x.im x.re) 2))))))","(+.f64 1 (fma.f64 1/6 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 3) (fma.f64 (atan2.f64 x.im x.re) y.im (*.f64 1/2 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 2)))))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(exp.f64 (*.f64 (atan2.f64 x.im x.re) y.im))","(pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 y.im (log.f64 x.im)))","(fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 y.im (log.f64 x.im)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2)))))","(fma.f64 y.re (atan2.f64 x.im x.re) (fma.f64 y.im (log.f64 x.im) (/.f64 (*.f64 1/2 (*.f64 (*.f64 x.re x.re) y.im)) (*.f64 x.im x.im))))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 y.im (log.f64 x.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4))))))","(fma.f64 y.re (atan2.f64 x.im x.re) (fma.f64 y.im (log.f64 x.im) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) y.im) (*.f64 x.im x.im)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) y.im)) (pow.f64 x.im 4)))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 x.re 6) y.im) (pow.f64 x.im 6))) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 y.im (log.f64 x.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4)))))))","(fma.f64 1/6 (/.f64 (*.f64 (pow.f64 x.re 6) y.im) (pow.f64 x.im 6)) (fma.f64 y.re (atan2.f64 x.im x.re) (fma.f64 y.im (log.f64 x.im) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) y.im) (*.f64 x.im x.im)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) y.im)) (pow.f64 x.im 4))))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))","(fma.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4)) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.re)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im) (pow.f64 x.re 6)))))))","(fma.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4)) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (+.f64 (neg.f64 (*.f64 (neg.f64 (log.f64 x.re)) y.im)) (fma.f64 y.re (atan2.f64 x.im x.re) (/.f64 (*.f64 1/720 (*.f64 (*.f64 (pow.f64 x.im 6) 120) y.im)) (pow.f64 x.re 6))))))","(+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))","(fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))))","(fma.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4)) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 -1 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 x.im 6)) (*.f64 90 (pow.f64 x.im 6))) y.im) (pow.f64 x.re 6)))))))","(fma.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4)) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (+.f64 (neg.f64 (*.f64 y.im (log.f64 (/.f64 -1 x.re)))) (fma.f64 y.re (atan2.f64 x.im x.re) (/.f64 (*.f64 1/720 (*.f64 (*.f64 (pow.f64 x.im 6) 120) y.im)) (pow.f64 x.re 6))))))","(+.f64 (*.f64 y.im (log.f64 x.re)) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 y.im (log.f64 x.re)) (*.f64 y.re (atan2.f64 x.im x.re))))","(fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 y.im (log.f64 x.re)) (*.f64 y.re (atan2.f64 x.im x.re)))))","(fma.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4)) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (fma.f64 (log.f64 x.re) y.im (*.f64 y.re (atan2.f64 x.im x.re)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y.im (pow.f64 x.im 2)) (pow.f64 x.re 2))) (+.f64 (*.f64 y.im (log.f64 x.re)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/6 (/.f64 (*.f64 y.im (pow.f64 x.im 6)) (pow.f64 x.re 6)))))))","(fma.f64 -1/4 (/.f64 (*.f64 y.im (pow.f64 x.im 4)) (pow.f64 x.re 4)) (fma.f64 1/2 (/.f64 (*.f64 y.im (*.f64 x.im x.im)) (*.f64 x.re x.re)) (fma.f64 y.im (log.f64 x.re) (fma.f64 y.re (atan2.f64 x.im x.re) (/.f64 (*.f64 1/6 (*.f64 y.im (pow.f64 x.im 6))) (pow.f64 x.re 6))))))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)))","(fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im)))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2)))))","(+.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))) (/.f64 (*.f64 1/2 (*.f64 (*.f64 x.re x.re) y.im)) (*.f64 x.im x.im)))","(+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4))))))","(+.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) y.im) (*.f64 x.im x.im)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) y.im)) (pow.f64 x.im 4))))","(+.f64 (*.f64 1/720 (/.f64 (*.f64 y.im (+.f64 (*.f64 30 (pow.f64 x.re 6)) (*.f64 90 (pow.f64 x.re 6)))) (pow.f64 x.im 6))) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x.im)) y.im)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4)))))))","(fma.f64 1/720 (/.f64 (*.f64 (*.f64 (pow.f64 x.re 6) 120) y.im) (pow.f64 x.im 6)) (+.f64 (fma.f64 y.re (atan2.f64 x.im x.re) (neg.f64 (*.f64 (neg.f64 (log.f64 x.im)) y.im))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) y.im) (*.f64 x.im x.im)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) y.im)) (pow.f64 x.im 4)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2)))))","(+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (fma.f64 y.re (atan2.f64 x.im x.re) (/.f64 (*.f64 1/2 (*.f64 (*.f64 x.re x.re) y.im)) (*.f64 x.im x.im))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4))))))","(+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (fma.f64 y.re (atan2.f64 x.im x.re) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) y.im) (*.f64 x.im x.im)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) y.im)) (pow.f64 x.im 4)))))","(+.f64 (*.f64 1/720 (/.f64 (*.f64 y.im (+.f64 (*.f64 30 (pow.f64 x.re 6)) (*.f64 90 (pow.f64 x.re 6)))) (pow.f64 x.im 6))) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (+.f64 (*.f64 y.re (atan2.f64 x.im x.re)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 x.re 2) y.im) (pow.f64 x.im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 x.re 4) y.im) (pow.f64 x.im 4)))))))","(fma.f64 1/720 (/.f64 (*.f64 (*.f64 (pow.f64 x.re 6) 120) y.im) (pow.f64 x.im 6)) (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (fma.f64 y.re (atan2.f64 x.im x.re) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 x.re x.re) y.im) (*.f64 x.im x.im)) (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 x.re 4) y.im)) (pow.f64 x.im 4))))))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))","(*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))","(*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2)))))","(*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(*.f64 y.re (atan2.f64 x.im x.re))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))","(+.f64 (*.f64 y.im (log.f64 (sqrt.f64 (+.f64 (pow.f64 x.im 2) (pow.f64 x.re 2))))) (*.f64 y.re (atan2.f64 x.im x.re)))","(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 y.re (atan2.f64 x.im x.re)))"]],"time":484.572998046875,"type":"simplify"},{"compiler":[[10775,3592]],"time":61.803955078125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","fresh",40.137896785329914],["(/.f64 (*.f64 (sin.f64 (*.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3) (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","fresh",39.29005378712596],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","fresh",22.62572214744967],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","fresh",9.448875327355942],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","fresh",31.99336439046043],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","fresh",33.16341918910931],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","next",9.446629589715092],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (+.f64 1 (fma.f64 (atan2.f64 x.im x.re) y.im (*.f64 1/2 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 2)))))","fresh",13.822552427460398],["(/.f64 (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","fresh",10.4982593466563],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (log.f64 (hypot.f64 x.re x.im))) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 2/3) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","fresh",23.50386461597044],["(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","fresh",10.458323114172973]],"compiler":[[27,15],[44,19],[40,20],[39,19],[36,19],[41,19],[29,15],[39,21],[32,18],[37,19],[32,18],[27,15],[44,19],[40,20],[39,19],[36,19],[41,19],[29,15],[39,21],[32,18],[37,19],[32,18]],"count":[[234,11]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[232,10],"picked":[1,0]}],"min-error":[7.092773188234886],"time":90.56005859375,"type":"prune"},{"compiler":[[105,15]],"locations":[["(fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))",0.19140625,false],["(*.f64 (atan2.f64 x.im x.re) y.re)",1.8586579841852848,false],["(*.f64 y.im (atan2.f64 x.im x.re))",1.8937982282383778,true],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))",31.708858793971793,false]],"time":15.669921875,"type":"localize"},{"count":[[1,12]],"series":[["(*.f64 y.im (atan2.f64 x.im x.re))","x.re","-inf",0.22607421875],["(*.f64 y.im (atan2.f64 x.im x.re))","x.re","inf",0.242919921875],["(*.f64 y.im (atan2.f64 x.im x.re))","x.re","0",0.200927734375],["(*.f64 y.im (atan2.f64 x.im x.re))","x.im","-inf",0.246826171875],["(*.f64 y.im (atan2.f64 x.im x.re))","x.im","inf",0.23095703125],["(*.f64 y.im (atan2.f64 x.im x.re))","x.im","0",0.2509765625],["(*.f64 y.im (atan2.f64 x.im x.re))","y.im","-inf",0.25390625],["(*.f64 y.im (atan2.f64 x.im x.re))","y.im","inf",0.31005859375],["(*.f64 y.im (atan2.f64 x.im x.re))","y.im","0",0.31689453125]],"time":2.367919921875,"type":"series"},{"count":[[1,34]],"inputs":[["(*.f64 y.im (atan2.f64 x.im x.re))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y.im (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y.im (atan2.f64 x.im x.re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (atan2.f64 x.im x.re) y.im)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (atan2.f64 x.im x.re) (cbrt.f64 y.im)) (pow.f64 y.im 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y.im 2/3) (*.f64 (atan2.f64 x.im x.re) (cbrt.f64 y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) 4) (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 x.im x.re))) (*.f64 (cbrt.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y.im)) (*.f64 (cbrt.f64 (pow.f64 y.im 2/3)) (*.f64 (pow.f64 y.im 2/3) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y.im) (*.f64 (pow.f64 y.im 2/3) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (cbrt.f64 y.im) (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y.im) (*.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3) (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y.im (cbrt.f64 (atan2.f64 x.im x.re))) (pow.f64 (atan2.f64 x.im x.re) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) (*.f64 y.im (cbrt.f64 (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y.im 2/3) (atan2.f64 x.im x.re)) (cbrt.f64 y.im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.im) (cbrt.f64 (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re))) (neg.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y.im (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 3))))))"]],"rules":[["egg-rr",34]],"time":35.26904296875,"type":"rewrite"},{"count":[[46,34]],"inputs":[["(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)","(*.f64 (atan2.f64 x.im x.re) y.im)"]],"time":64.06103515625,"type":"simplify"},{"compiler":[[10819,3619]],"time":61.544921875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 (pow.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 3) 1/3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",53.01916688979499],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.070325511234376],["(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",9.650870190283618],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",39.615588429082614],["(/.f64 (*.f64 (sin.f64 (*.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3) (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",38.90573896458465],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",31.483618815202565],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (log.f64 (hypot.f64 x.re x.im))) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 2/3) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.81144989968832],["(/.f64 (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",9.674596203470518],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (+.f64 1 (fma.f64 (atan2.f64 x.im x.re) y.im (*.f64 1/2 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 2)))))","fresh",13.822552427460398],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","next",9.448875327355942],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","fresh",33.16341918910931],["(/.f64 (*.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (fma.f64 -1/6 (*.f64 (pow.f64 y.im 3) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 3) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))) (*.f64 y.im (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.718045178663502],["(/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",43.95222715501571]],"compiler":[[33,19],[40,20],[32,18],[27,15],[44,19],[36,19],[37,19],[32,18],[39,21],[39,19],[41,19],[73,32],[31,19],[33,19],[40,20],[32,18],[27,15],[44,19],[36,19],[37,19],[32,18],[39,21],[39,19],[41,19],[73,32],[31,19]],"count":[[244,13]],"kept":[{"done":[0,0],"fresh":[10,3],"new":[233,10],"picked":[1,0]}],"min-error":[6.743324123503614],"time":84.916015625,"type":"prune"},{"compiler":[[147,25]],"locations":[["(*.f64 (atan2.f64 x.im x.re) y.re)",1.8586579841852848,false],["(*.f64 y.im (atan2.f64 x.im x.re))",1.8937982282383778,false],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))",10.041376623477305,true],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))",31.708858793971793,false]],"time":22.782958984375,"type":"localize"},{"count":[[1,24]],"series":[["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","x.re","-inf",0.989013671875],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","x.re","inf",1.009033203125],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","x.re","0",0.8388671875],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","x.im","-inf",1.117919921875],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","x.im","inf",1.026123046875],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","x.im","0",1.31396484375],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","y.im","-inf",0.466796875],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","y.im","inf",0.320068359375],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","y.im","0",0.455078125]],"time":7.648193359375,"type":"series"},{"count":[[1,26]],"inputs":[["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y.im) (cbrt.f64 (atan2.f64 x.im x.re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (cbrt.f64 y.im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (cbrt.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (atan2.f64 x.im x.re) (cbrt.f64 y.im))) (cbrt.f64 (pow.f64 y.im 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y.im)) (cbrt.f64 (*.f64 (pow.f64 y.im 2/3) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y.im)) (cbrt.f64 (*.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (atan2.f64 x.im x.re))) (cbrt.f64 (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y.im (cbrt.f64 (atan2.f64 x.im x.re)))) (cbrt.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (*.f64 (neg.f64 y.im) (atan2.f64 x.im x.re))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))))))"]],"rules":[["egg-rr",26]],"time":39.451904296875,"type":"rewrite"},{"count":[[50,27]],"inputs":[["(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 y.im (atan2.f64 x.im x.re)) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))","(pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 1/3)","(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))"]],"time":101.487060546875,"type":"simplify"},{"compiler":[[12479,3676]],"time":71.034912109375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 (pow.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 3) 1/3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",53.01916688979499],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.070325511234376],["(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","next",9.651248555671323],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","fresh",33.16341918910931],["(/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",43.95222715501571],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","fresh",39.607285574074474],["(/.f64 (*.f64 (sin.f64 (*.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3) (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",38.90573896458465],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (log.f64 (hypot.f64 x.re x.im))) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 2/3) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.81144989968832],["(/.f64 (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",9.674596203470518],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re) (cbrt.f64 (atan2.f64 x.im x.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","fresh",31.475315960194422],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (+.f64 1 (fma.f64 (atan2.f64 x.im x.re) y.im (*.f64 1/2 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 2)))))","fresh",13.822552427460398],["(/.f64 (*.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (fma.f64 -1/6 (*.f64 (pow.f64 y.im 3) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 3) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))) (*.f64 y.im (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.718045178663502]],"compiler":[[33,19],[40,20],[42,22],[41,19],[31,19],[37,19],[44,19],[37,19],[32,18],[46,23],[39,21],[73,32],[33,19],[40,20],[42,22],[41,19],[31,19],[37,19],[44,19],[37,19],[32,18],[46,23],[39,21],[73,32]],"count":[[246,12]],"kept":[{"done":[0,0],"fresh":[12,9],"new":[233,3],"picked":[1,0]}],"min-error":[6.743324123503614],"time":98.0,"type":"prune"},{"compiler":[[182,34]],"locations":[["(*.f64 (atan2.f64 x.im x.re) y.re)",1.8586579841852848,false],["(*.f64 y.im (atan2.f64 x.im x.re))",1.8937982282383778,false],["(cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))",10.041376623477305,false],["(sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))",31.708858793971793,false]],"time":27.60400390625,"type":"localize"},{"compiler":[[13178,4374]],"time":77.29296875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 (pow.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 3) 1/3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",53.01916688979499],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.070325511234376],["(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re))))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","fresh",39.693593142453565],["(/.f64 (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",9.674596203470518],["(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","done",9.651248555671323],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","fresh",33.16341918910931],["(/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",43.95222715501571],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","fresh",39.607285574074474],["(/.f64 (*.f64 (sin.f64 (*.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3) (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",38.90573896458465],["(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (log.f64 (hypot.f64 x.re x.im))) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 2/3) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.81144989968832],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re) (cbrt.f64 (atan2.f64 x.im x.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","fresh",31.475315960194422],["(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (+.f64 1 (fma.f64 (atan2.f64 x.im x.re) y.im (*.f64 1/2 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 2)))))","fresh",13.822552427460398],["(/.f64 (*.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (fma.f64 -1/6 (*.f64 (pow.f64 y.im 3) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 3) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))) (*.f64 y.im (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","fresh",22.718045178663502]],"compiler":[[33,19],[40,20],[40,22],[32,18],[42,22],[41,19],[31,19],[37,19],[44,19],[37,19],[46,23],[39,21],[73,32]],"count":[[245,13]],"kept":[{"done":[0,0],"fresh":[11,11],"new":[233,1],"picked":[1,1]}],"min-error":[6.743324123503614],"time":79.453125,"type":"prune"},{"accuracy":[7.946629589715095],"baseline":[9.446629589715092],"branch":[["x.re",9.446629589715094,1],["x.im",9.446629589715094,1],["y.re",9.446629589715094,1],["y.im",9.446629589715094,1],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))",7.946629589715095,2]],"compiler":[[5,4],[5,4],[5,4],[5,4],[41,19],[875,198]],"count":[[26,2]],"inputs":[["(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re))))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re) (cbrt.f64 (atan2.f64 x.im x.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","(/.f64 (*.f64 (sin.f64 (pow.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 3) 1/3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (*.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3) (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (log.f64 (hypot.f64 x.re x.im))) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 2/3) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (fma.f64 -1/2 (*.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (+.f64 (sin.f64 (*.f64 y.re (atan2.f64 x.im x.re))) (fma.f64 -1/6 (*.f64 (pow.f64 y.im 3) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 3) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re))))) (*.f64 y.im (*.f64 (log.f64 (hypot.f64 x.re x.im)) (cos.f64 (*.f64 y.re (atan2.f64 x.im x.re)))))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (+.f64 (neg.f64 (*.f64 (log.f64 (/.f64 -1 x.im)) y.im)) (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 x.im) y.im (*.f64 y.re (atan2.f64 x.im x.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(/.f64 (*.f64 (sin.f64 (*.f64 (pow.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)) 2/3) (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im)) (cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 x.re x.im)) y.im) 2)) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re)))) (pow.f64 (cbrt.f64 (*.f64 y.im (atan2.f64 x.im x.re))) 2)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (cbrt.f64 (atan2.f64 x.im x.re)) (*.f64 (pow.f64 (atan2.f64 x.im x.re) 2/3) y.re)))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (+.f64 1 (fma.f64 (atan2.f64 x.im x.re) y.im (*.f64 1/2 (pow.f64 (*.f64 (atan2.f64 x.im x.re) y.im) 2)))))","(/.f64 (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) 3)) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (cbrt.f64 (log.f64 (hypot.f64 x.re x.im))) (*.f64 (pow.f64 (log.f64 (hypot.f64 x.re x.im)) 2/3) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re)))) 3) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re)))","(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))"]],"link":["."],"name":["powComplex, imaginary part"],"oracle":[64.0],"outputs":[["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))","(/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re))))"]],"time":52.27880859375,"times":[["x.re",7.864013671875],["x.im",8.156982421875],["y.re",8.1298828125],["y.im",7.9150390625],["(*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re))))",8.817138671875]],"type":"regimes"},{"bstep":[[-0.0,4.228205467768048e-213,0.0361328125]],"compiler":[[7,6],[41,19]],"method":["left-value"],"time":0.455078125,"type":"bsearch"},{"compiler":[[106,31]],"inputs":[["(if (<=.f64 (*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re)))) 0) (*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re)))) (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re)))) 0) (*.f64 (exp.f64 (-.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.re) (*.f64 (atan2.f64 x.im x.re) y.im))) (sin.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 x.re x.re) (*.f64 x.im x.im)))) y.im) (*.f64 (atan2.f64 x.im x.re) y.re)))) (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (exp.f64 (*.f64 y.im (atan2.f64 x.im x.re)))))","(if (<=.f64 (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))) 0) (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))) (/.f64 (*.f64 (sin.f64 (fma.f64 (log.f64 (hypot.f64 x.re x.im)) y.im (*.f64 (atan2.f64 x.im x.re) y.re))) (pow.f64 (hypot.f64 x.re x.im) y.re)) (pow.f64 (exp.f64 y.im) (atan2.f64 x.im x.re))))"]],"stop":[["fuel",1]],"time":26.719970703125,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[106,31]],"remove-preprocessing":[[]],"time":17.911865234375,"type":"end"}]