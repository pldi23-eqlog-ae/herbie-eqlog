[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.5870298775159881,0.41150599387333386,0.0014641286106780171],[11,0.5051187318160828,0.4934171395732392,0.0014641286106780171],[10,0.43295891298521383,0.5655769584041082,0.0014641286106780171],[9,0.3276445827996213,0.6708912885897007,0.0014641286106780171],[8,0.23403184485687234,0.7645040265324496,0.0014641286106780171],[7,0.15602122990458156,0.8425146414847404,0.0014641286106780171],[6,0.062408491961832624,0.9361273794274894,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":79.64794921875,"type":"analyze"},{"outcomes":[["body",512,"valid",0.14599609375,2],["body",1024,"valid",0.10400390625,1],["body",2048,"valid",0.156982421875,1],["body",256,"valid",344.294189453125,8252]],"time":353.031005859375,"type":"sample"},{"compiler":[[12,8]],"inputs":[["0","1","2"],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 x z)))","(/.f64 (+.f64 z y) (-.f64 1 (/.f64 y x)))","(/.f64 (+.f64 x z) (-.f64 1 (/.f64 z y)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","(/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 x z)))","(/.f64 (+.f64 x y) (/.f64 (-.f64 z x) z))","(/.f64 (+.f64 z y) (-.f64 1 (/.f64 y x)))","(/.f64 (+.f64 y z) (/.f64 (-.f64 x y) x))","(/.f64 (+.f64 x z) (-.f64 1 (/.f64 z y)))","(/.f64 (+.f64 z x) (/.f64 (-.f64 y z) y))"]],"symmetry":[[]],"time":74.0,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","(/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))"]],"time":19.275146484375,"type":"simplify"},{"compiler":[[21,11]],"time":0.322998046875,"type":"eval"},{"alts":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","next",8.893762559347234]],"compiler":[[12,8],[12,8]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[8.893762559347234],"time":2.04296875,"type":"prune"},{"compiler":[[27,11]],"locations":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))",8.89376255934723,true]],"time":5.47802734375,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","z","-inf",0.377197265625],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","z","inf",0.473876953125],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","z","0",0.513916015625],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","y","-inf",0.465087890625],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","y","inf",0.64794921875],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","y","0",0.468994140625],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","x","-inf",0.380859375],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","x","inf",0.52197265625],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","x","0",0.635009765625]],"time":4.635986328125,"type":"series"},{"count":[[1,51]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 0) (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) (*.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (pow.f64 (/.f64 (-.f64 z y) z) -1)) (*.f64 y (pow.f64 (/.f64 (-.f64 z y) z) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (pow.f64 (/.f64 (-.f64 z y) z) -1)) (*.f64 x (pow.f64 (/.f64 (-.f64 z y) z) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))) (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) (*.f64 0 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 x y) (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (-.f64 y z) z)) (/.f64 (+.f64 x y) (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 x y) (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (pow.f64 (/.f64 (-.f64 y z) z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (pow.f64 (/.f64 (-.f64 z y) z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1)) (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (/.f64 (-.f64 z y) z)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 y z) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 y z) z) -1) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 z y) z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 z y) z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1)) (+.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 2)) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 2)) (cbrt.f64 (neg.f64 (+.f64 x y)))) (cbrt.f64 (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))) (cbrt.f64 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 2))) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 2))) (cbrt.f64 (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z))) 1) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) -1) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (-.f64 1 (pow.f64 (/.f64 y z) 3))) (/.f64 1 (fma.f64 (/.f64 (+.f64 y z) z) (/.f64 y z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z))) 1) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (/.f64 (-.f64 z y) z))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 y z) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 3))))))"]],"rules":[["egg-rr",51]],"time":22.58984375,"type":"rewrite"},{"count":[[87,90]],"inputs":[["(/.f64 y (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","x","(+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 1 (*.f64 -1 (/.f64 x z)))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)))","(*.f64 -1 z)","(-.f64 (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 z x) y))) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2)))) (/.f64 (pow.f64 z 2) y))","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2))))) (/.f64 (pow.f64 z 2) y))","(*.f64 -1 z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (*.f64 -1 z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2))))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(/.f64 x (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","(+.f64 (/.f64 x (-.f64 1 (/.f64 y z))) (/.f64 y (-.f64 1 (/.f64 y z))))","(/.f64 (+.f64 y x) (-.f64 1 (/.f64 y z)))","x","(+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)","(fma.f64 y (+.f64 1 (/.f64 x z)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x))","(+.f64 (/.f64 (*.f64 (*.f64 y y) (+.f64 1 (/.f64 x z))) z) (fma.f64 y (+.f64 1 (/.f64 x z)) x))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 1 (*.f64 -1 (/.f64 x z)))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 1 (*.f64 -1 (/.f64 x z)))) z) (+.f64 (*.f64 y (-.f64 1 (*.f64 -1 (/.f64 x z)))) x)))","(+.f64 (fma.f64 (*.f64 (pow.f64 y 3) (+.f64 1 (/.f64 x z))) (pow.f64 z -2) (/.f64 (*.f64 (*.f64 y y) (+.f64 1 (/.f64 x z))) z)) (fma.f64 y (+.f64 1 (/.f64 x z)) x))","(*.f64 -1 z)","(neg.f64 z)","(-.f64 (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 z x) y))) (/.f64 (pow.f64 z 2) y))","(-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y))","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2)))) (/.f64 (pow.f64 z 2) y))","(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 z 2)) z) (pow.f64 y 2))))) (/.f64 (pow.f64 z 2) y))","(+.f64 (neg.f64 z) (+.f64 (fma.f64 (*.f64 (neg.f64 (*.f64 z (+.f64 x z))) (*.f64 z z)) (pow.f64 y -3) (*.f64 (*.f64 (*.f64 z (+.f64 x z)) z) (neg.f64 (pow.f64 y -2)))) (neg.f64 (/.f64 (*.f64 z (+.f64 x z)) y))))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (*.f64 -1 z))","(-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2)))))","(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 z x) (*.f64 -1 (pow.f64 z 2))) z) (pow.f64 y 2))))))","(-.f64 (-.f64 (-.f64 (*.f64 (*.f64 (*.f64 z (+.f64 x z)) z) (neg.f64 (pow.f64 y -2))) z) (/.f64 (*.f64 (*.f64 z (+.f64 x z)) (*.f64 z z)) (pow.f64 y 3))) (/.f64 (*.f64 z (+.f64 x z)) y))","(*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))","(neg.f64 (/.f64 (*.f64 (+.f64 y x) z) y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))","(neg.f64 (fma.f64 (*.f64 z z) (fma.f64 x (pow.f64 y -2) (/.f64 1 y)) (/.f64 (*.f64 (+.f64 y x) z) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y))))","(fma.f64 (neg.f64 (fma.f64 x (pow.f64 y -2) (/.f64 1 y))) (*.f64 z z) (neg.f64 (fma.f64 (fma.f64 x (pow.f64 y -3) (pow.f64 y -2)) (pow.f64 z 3) (/.f64 (*.f64 (+.f64 y x) z) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 2))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (+.f64 y x) z) y)))))","(-.f64 (fma.f64 (neg.f64 (fma.f64 x (pow.f64 y -3) (pow.f64 y -2))) (pow.f64 z 3) (neg.f64 (fma.f64 (pow.f64 z 4) (fma.f64 x (pow.f64 y (neg.f64 4)) (pow.f64 y -3)) (/.f64 (*.f64 (+.f64 y x) z) y)))) (*.f64 (fma.f64 x (pow.f64 y -2) (/.f64 1 y)) (*.f64 z z)))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x)))","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y (fma.f64 (*.f64 (*.f64 y y) (+.f64 y x)) (pow.f64 z -2) x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (pow.f64 z 3)) (+.f64 y x))))","(+.f64 (+.f64 (pow.f64 (/.f64 (*.f64 y (cbrt.f64 (+.f64 y x))) z) 3) (fma.f64 (*.f64 (*.f64 y y) (+.f64 y x)) (pow.f64 z -2) x)) (+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) y))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 2)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) (+.f64 y (fma.f64 (*.f64 (*.f64 y y) (+.f64 y x)) (pow.f64 z -2) x)))","(+.f64 (/.f64 (*.f64 (+.f64 y x) y) z) (+.f64 y (+.f64 (/.f64 (*.f64 (+.f64 y x) (pow.f64 y 3)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y x)) (pow.f64 z 2)) x))))","(+.f64 (+.f64 (pow.f64 (/.f64 (*.f64 y (cbrt.f64 (+.f64 y x))) z) 3) (fma.f64 (*.f64 (*.f64 y y) (+.f64 y x)) (pow.f64 z -2) x)) (+.f64 (/.f64 (*.f64 y (+.f64 y x)) z) y))"]],"time":131.74609375,"type":"simplify"},{"compiler":[[1811,707]],"time":15.751953125,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (*.f64 (+.f64 y x) z) y))","fresh",35.12226297305154],["(+.f64 (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","next",8.962453819115677],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234],["(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","fresh",32.997883451361005],["(*.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) -2))","fresh",9.15003018633698]],"compiler":[[11,7],[22,12],[12,8],[25,11],[22,11],[11,7],[22,12],[25,11],[22,11]],"count":[[91,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[90,4],"picked":[1,1]}],"min-error":[0.015625],"time":17.868896484375,"type":"prune"},{"compiler":[[59,21]],"locations":[["(/.f64 (-.f64 z y) z)",0.01171875,true],["(pow.f64 (/.f64 (-.f64 z y) z) -1)",0.5917423935011066,true],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)",2.3780410184010203,true],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)",8.159698503140374,true]],"time":10.238037109375,"type":"localize"},{"count":[[4,108]],"series":[["(/.f64 (-.f64 z y) z)","y","-inf",0.25],["(/.f64 (-.f64 z y) z)","y","inf",1.090087890625],["(/.f64 (-.f64 z y) z)","y","0",0.22314453125],["(/.f64 (-.f64 z y) z)","z","-inf",0.22216796875],["(/.f64 (-.f64 z y) z)","z","inf",0.259033203125],["(/.f64 (-.f64 z y) z)","z","0",0.26806640625],["(pow.f64 (/.f64 (-.f64 z y) z) -1)","y","-inf",0.222900390625],["(pow.f64 (/.f64 (-.f64 z y) z) -1)","y","inf",0.251953125],["(pow.f64 (/.f64 (-.f64 z y) z) -1)","y","0",0.205810546875],["(pow.f64 (/.f64 (-.f64 z y) z) -1)","z","-inf",0.213134765625],["(pow.f64 (/.f64 (-.f64 z y) z) -1)","z","inf",0.233154296875],["(pow.f64 (/.f64 (-.f64 z y) z) -1)","z","0",0.80615234375],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","x","-inf",0.30615234375],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","x","inf",0.4091796875],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","x","0",0.510009765625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","y","-inf",0.27197265625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","y","inf",0.299072265625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","y","0",0.263916015625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","z","-inf",0.222900390625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","z","inf",0.419921875],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","z","0",0.384033203125],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)","y","-inf",0.291015625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)","y","inf",0.2890625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)","y","0",0.23291015625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)","z","-inf",0.280029296875],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)","z","inf",0.348876953125],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)","z","0",0.6611328125]],"time":9.781005859375,"type":"series"},{"count":[[4,296]],"inputs":[["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)","(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x)","(pow.f64 (/.f64 (-.f64 z y) z) -1)","(/.f64 (-.f64 z y) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 z y)) y) (*.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 0) (*.f64 (/.f64 z (-.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 z y)) y) (*.f64 0 (*.f64 (/.f64 z (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 z (-.f64 z y)) y)) (*.f64 (/.f64 z (-.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) y)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 2)) (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (/.f64 z (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 z (-.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 y) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 z (-.f64 z y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 y) (/.f64 (-.f64 z y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) y) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) (*.f64 y (cbrt.f64 (/.f64 z (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 y z)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (/.f64 1 z))) (/.f64 (-.f64 z y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z y) (*.f64 (/.f64 (-.f64 z y) z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 z)) (*.f64 (/.f64 (-.f64 z y) z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z y) (*.f64 z (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) y) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) y) (*.f64 (neg.f64 z) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) y) (neg.f64 z)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 1 (-.f64 z y))) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (cbrt.f64 (/.f64 z (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (*.f64 (/.f64 z (-.f64 z y)) y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 z y)) y) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) y) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (/.f64 1 z)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 z y)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) y) (*.f64 (/.f64 (-.f64 z y) z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) y) z) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) y) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 (/.f64 z (-.f64 z y)) y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (/.f64 z (-.f64 z y)) y)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 y) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) y) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 z y)) x) (*.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 0) (*.f64 (/.f64 z (-.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 z y)) x) (*.f64 0 (*.f64 (/.f64 z (-.f64 z y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 z (-.f64 z y)) x)) (*.f64 (/.f64 z (-.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) x)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 2)) (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (/.f64 z (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 z (-.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 x) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) x) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 z (-.f64 z y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (/.f64 (-.f64 z y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) (*.f64 x (cbrt.f64 (/.f64 z (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 y z)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (/.f64 1 z))) (/.f64 (-.f64 z y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (*.f64 z z))) (*.f64 (/.f64 (-.f64 z y) z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x z) (*.f64 (/.f64 (-.f64 z y) z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 z)) (*.f64 (/.f64 (-.f64 z y) z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z x) (*.f64 z (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) x) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) x) (*.f64 (neg.f64 z) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) x) (neg.f64 z)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 1 (-.f64 z y))) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (/.f64 z (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (*.f64 (/.f64 z (-.f64 z y)) x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) x) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (/.f64 1 z)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 z y)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) x) z) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 z (-.f64 z y)) x) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 (/.f64 z (-.f64 z y)) x)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (/.f64 z (-.f64 z y)) x)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 z y)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 x) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 z y)) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 z y)) (*.f64 (/.f64 z (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 z y)) 0) (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 z y)) (*.f64 0 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 z (-.f64 z y))) (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (-.f64 y z) z)) (neg.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 z y)) (/.f64 0 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (-.f64 z y) z)) (neg.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 z (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 z y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 z (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2))) (cbrt.f64 (neg.f64 (/.f64 z (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 -1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 z y)) 1) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 z y)) -1) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (-.f64 z y)) (neg.f64 z)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 z (-.f64 z y)))) -1) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) -2)))) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 z (-.f64 z y))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 z y) z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 z y) z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 z y)) -1) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (/.f64 1 z))) (pow.f64 (cbrt.f64 (/.f64 1 z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (/.f64 -1 z))) (neg.f64 (pow.f64 (cbrt.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (/.f64 1 z))) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (*.f64 z z))) (*.f64 (/.f64 1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 z y)) (neg.f64 z)) (*.f64 (/.f64 1 z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (*.f64 z z))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) z) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (neg.f64 z)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (*.f64 (/.f64 (-.f64 z y) z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (*.f64 (/.f64 (-.f64 y z) z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (cbrt.f64 (/.f64 z (-.f64 z y)))) (*.f64 z (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (*.f64 z (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 1 (-.f64 z y))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (/.f64 z (-.f64 z y)))) (*.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) -1) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 1 (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (cbrt.f64 (/.f64 z (-.f64 z y)))) (*.f64 (neg.f64 z) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (*.f64 (neg.f64 z) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (/.f64 z (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (-.f64 z y)) z) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 z (-.f64 z y))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 z (-.f64 z y))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 z) (/.f64 (-.f64 z y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (/.f64 (-.f64 z y) z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 (/.f64 (-.f64 z y) z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (*.f64 z z))) (*.f64 (/.f64 (-.f64 y z) z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 (/.f64 (-.f64 y z) z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 z (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 (neg.f64 z) (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z y) z) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (neg.f64 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z y) z) (*.f64 (/.f64 (-.f64 z y) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 z y) z) 0) (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 z) (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (/.f64 1 z) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z y) z) (*.f64 0 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 z y) z)) (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (/.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (neg.f64 (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 z) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 z y)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y z) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z y) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)) (cbrt.f64 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (-.f64 z y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z y) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) z) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 z y)) (/.f64 1 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y z) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z y) z) (neg.f64 z)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 (-.f64 z y) z)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 z y)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (pow.f64 z 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 z y)) (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z y) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z y) z) z) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z y) z) (cbrt.f64 z)) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y z) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (neg.f64 (/.f64 y z)) 3)) (+.f64 1 (-.f64 (*.f64 (neg.f64 (/.f64 y z)) (neg.f64 (/.f64 y z))) (neg.f64 (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 y z) 3)) (+.f64 1 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (*.f64 z z)) z) (*.f64 z (/.f64 y (cbrt.f64 z)))) (*.f64 (cbrt.f64 (*.f64 z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z (neg.f64 z)) (neg.f64 (*.f64 z y))) (*.f64 z (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 z 4)) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 y (cbrt.f64 z)))) (cbrt.f64 (pow.f64 z 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 y))) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 z) z) (*.f64 (neg.f64 z) y)) (*.f64 (neg.f64 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 z z))) (*.f64 (neg.f64 z) (/.f64 y (cbrt.f64 z)))) (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z y) (cbrt.f64 (*.f64 z z))) (*.f64 (cbrt.f64 (*.f64 z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z y) (neg.f64 z)) (*.f64 z (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (pow.f64 z 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) z) (*.f64 (cbrt.f64 (*.f64 z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) (neg.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 z y)) (cbrt.f64 (*.f64 z z))) (*.f64 (*.f64 z z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 z y)) z) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 z y)) (neg.f64 z)) (neg.f64 (pow.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y z) (cbrt.f64 (*.f64 z z))) (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y z) z) (*.f64 (neg.f64 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (-.f64 z y) (cbrt.f64 z))) (*.f64 (cbrt.f64 (*.f64 z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 y z)) (*.f64 z (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 z (-.f64 z y))) (pow.f64 z 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 z y) (cbrt.f64 z))) (cbrt.f64 (pow.f64 z 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 z y)) (*.f64 (cbrt.f64 (*.f64 z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 z (-.f64 z y))) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 (-.f64 z y) (cbrt.f64 z))) (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (-.f64 z y)) (*.f64 (neg.f64 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (*.f64 z (-.f64 z y))) (neg.f64 (pow.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (-.f64 z y))) (neg.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 z y) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 z y)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (-.f64 z y)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z y) z) z) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z y) z) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)) (cbrt.f64 (-.f64 z y))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2)) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 z y)) 1) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (-.f64 z y) z)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 z y) z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z y) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 z y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y z)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 z y)) (cbrt.f64 (pow.f64 z 4))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 z y)) 1) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y z) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z y) z) (cbrt.f64 (/.f64 1 z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (*.f64 z z)) z) (*.f64 (cbrt.f64 (*.f64 z z)) y)) (*.f64 (cbrt.f64 (*.f64 z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z z) (*.f64 (neg.f64 z) (neg.f64 y))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z y) z) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y z) (neg.f64 z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (-.f64 y z)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 z y) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z y) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 z)) (cbrt.f64 z) (neg.f64 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 z) (neg.f64 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 1 z)) (neg.f64 (/.f64 y z)))))))"]],"rules":[["egg-rr",113],["egg-rr",77],["egg-rr",53],["egg-rr",53]],"time":41.501953125,"type":"rewrite"},{"count":[[404,343]],"inputs":[["(*.f64 -1 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))))","y","(+.f64 (/.f64 (pow.f64 y 2) z) y)","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (/.f64 (pow.f64 y 3) (pow.f64 z 2))))","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 2)))))","y","(+.f64 (/.f64 (pow.f64 y 2) z) y)","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (/.f64 (pow.f64 y 3) (pow.f64 z 2))))","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 2)))))","y","(+.f64 (/.f64 (pow.f64 y 2) z) y)","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (/.f64 (pow.f64 y 3) (pow.f64 z 2))))","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 2)))))","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))))","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","1","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","1","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","1","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(+.f64 (*.f64 -1 (/.f64 y z)) 1)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(-.f64 (neg.f64 (/.f64 (*.f64 z z) y)) z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 z z) y)) z) (/.f64 (pow.f64 z 3) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 z) (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (/.f64 (*.f64 z z) y)) (/.f64 (pow.f64 z 3) (*.f64 y y)))","y","(+.f64 (/.f64 (pow.f64 y 2) z) y)","(+.f64 (/.f64 (*.f64 y y) z) y)","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (/.f64 (pow.f64 y 3) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 y y) z) (fma.f64 (pow.f64 y 3) (pow.f64 z (neg.f64 2)) y))","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 y y) z) (+.f64 y (fma.f64 (pow.f64 y 4) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (pow.f64 y 3) z) z))))","y","(+.f64 (/.f64 (pow.f64 y 2) z) y)","(+.f64 (/.f64 (*.f64 y y) z) y)","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (/.f64 (pow.f64 y 3) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 y y) z) (fma.f64 (pow.f64 y 3) (pow.f64 z (neg.f64 2)) y))","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 y y) z) (+.f64 y (fma.f64 (pow.f64 y 4) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (pow.f64 y 3) z) z))))","y","(+.f64 (/.f64 (pow.f64 y 2) z) y)","(+.f64 (/.f64 (*.f64 y y) z) y)","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (/.f64 (pow.f64 y 3) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 y y) z) (fma.f64 (pow.f64 y 3) (pow.f64 z (neg.f64 2)) y))","(+.f64 (/.f64 (pow.f64 y 2) z) (+.f64 y (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 y y) z) (+.f64 y (fma.f64 (pow.f64 y 4) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (pow.f64 y 3) z) z))))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(-.f64 (neg.f64 (/.f64 (*.f64 z z) y)) z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 z z) y)) z) (/.f64 (pow.f64 z 3) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 z) (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (/.f64 (*.f64 z z) y)) (/.f64 (pow.f64 z 3) (*.f64 y y)))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(-.f64 (neg.f64 (/.f64 (*.f64 z z) y)) z)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (*.f64 -1 (/.f64 (pow.f64 z 2) y))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 z z) y)) z) (/.f64 (pow.f64 z 3) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 2))) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 z) (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (/.f64 (*.f64 z z) y)) (/.f64 (pow.f64 z 3) (*.f64 y y)))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (pow.f64 z 4)) (pow.f64 y 4)) (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 z x) y))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 x) y) z) 3) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 x) y) z) 3) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 x) y) z) 3) x)))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (pow.f64 z 4)) (pow.f64 y 4)) (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 z x) y))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (pow.f64 z 4)) (pow.f64 y 4)) (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 z x) y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","1","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","1","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","1","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) 1)","(-.f64 1 (/.f64 y z))"]],"time":331.5791015625,"type":"simplify"},{"compiler":[[13684,5093]],"time":106.533935546875,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (*.f64 (+.f64 y x) z) y))","fresh",35.12226297305154],["(+.f64 (*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","fresh",9.178790144111215],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234],["(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","fresh",32.997883451361005],["(+.f64 (*.f64 x (/.f64 z (-.f64 z y))) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","next",8.913812714148785],["(+.f64 (/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (/.f64 1 z)) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","fresh",11.874832360140191]],"compiler":[[11,7],[24,15],[12,8],[25,11],[20,11],[24,15],[11,7],[24,15],[25,11],[20,11],[24,15]],"count":[[555,6]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[550,3],"picked":[1,0]}],"min-error":[0],"time":342.77099609375,"type":"prune"},{"compiler":[[60,17]],"locations":[["(/.f64 z (-.f64 z y))",0.01953125,true],["(pow.f64 (/.f64 (-.f64 z y) z) -1)",0.5917423935011066,false],["(*.f64 x (/.f64 z (-.f64 z y)))",2.3780410184010203,true],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)",8.159698503140374,false]],"time":10.003173828125,"type":"localize"},{"count":[[2,60]],"series":[["(/.f64 z (-.f64 z y))","y","-inf",0.18408203125],["(/.f64 z (-.f64 z y))","y","inf",0.203125],["(/.f64 z (-.f64 z y))","y","0",0.1640625],["(/.f64 z (-.f64 z y))","z","-inf",0.1650390625],["(/.f64 z (-.f64 z y))","z","inf",0.179931640625],["(/.f64 z (-.f64 z y))","z","0",0.208984375],["(*.f64 x (/.f64 z (-.f64 z y)))","y","-inf",0.221923828125],["(*.f64 x (/.f64 z (-.f64 z y)))","y","inf",0.2080078125],["(*.f64 x (/.f64 z (-.f64 z y)))","y","0",0.203857421875],["(*.f64 x (/.f64 z (-.f64 z y)))","z","-inf",0.18408203125],["(*.f64 x (/.f64 z (-.f64 z y)))","z","inf",0.2060546875],["(*.f64 x (/.f64 z (-.f64 z y)))","z","0",0.202880859375],["(*.f64 x (/.f64 z (-.f64 z y)))","x","-inf",0.1650390625],["(*.f64 x (/.f64 z (-.f64 z y)))","x","inf",0.18212890625],["(*.f64 x (/.f64 z (-.f64 z y)))","x","0",0.205810546875]],"time":3.06689453125,"type":"series"},{"count":[[2,142]],"inputs":[["(*.f64 x (/.f64 z (-.f64 z y)))","(/.f64 z (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 0) (/.f64 (*.f64 x z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x z) (-.f64 z y)) (*.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x z) (-.f64 z y))) (/.f64 (*.f64 x z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x z) (-.f64 z y)) (*.f64 0 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (cbrt.f64 z)) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) -1) (/.f64 (*.f64 (cbrt.f64 (*.f64 x x)) z) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (/.f64 (*.f64 (cbrt.f64 (*.f64 x x)) z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 (*.f64 (cbrt.f64 (*.f64 x x)) z) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (-.f64 z y)) (/.f64 (*.f64 (cbrt.f64 (*.f64 x x)) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x -1) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 x z) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x z)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 x z)) 2) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x z)) 1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 x z)) 2) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x z)) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 x z)) 2) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x z)) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 x z)) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 z) (cbrt.f64 (-.f64 z y))) (/.f64 x (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) (/.f64 (neg.f64 z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (/.f64 z (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (/.f64 z (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x z) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 z (-.f64 z y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) x) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (*.f64 x (cbrt.f64 (/.f64 z (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x z)) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (cbrt.f64 z)) -1) (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (cbrt.f64 z)) 1) (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (cbrt.f64 z)) (-.f64 z y)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 z (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z -1) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (/.f64 (*.f64 x z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x z)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x z) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 2)) (cbrt.f64 (*.f64 x z))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) z) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x z) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x z)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) x) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 z (cbrt.f64 (pow.f64 (-.f64 z y) 2)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) x)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) x)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x z) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x z)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x z)) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x z) (cbrt.f64 (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 z (-.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x z) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 z y)) 0) (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 z y)) (*.f64 (/.f64 z (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 z (-.f64 z y))) (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 z y)) (*.f64 0 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 z z)) -1) (/.f64 (cbrt.f64 z) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (/.f64 (neg.f64 z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (neg.f64 (cbrt.f64 (*.f64 z z))) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 z) -1) (/.f64 (neg.f64 (cbrt.f64 (*.f64 z z))) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 z)) 1) (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 z)) (cbrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (/.f64 z (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 z y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z -1) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (cbrt.f64 z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 z) -1) (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 z) (-.f64 z y)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2) (/.f64 z (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) -2)) (/.f64 (neg.f64 z) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (/.f64 z (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) z) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (cbrt.f64 z)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 z) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 3))))))"]],"rules":[["egg-rr",60],["egg-rr",82]],"time":27.632080078125,"type":"rewrite"},{"count":[[202,171]],"inputs":[["(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (/.f64 (*.f64 z x) y))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 y (cbrt.f64 x)) z) 3) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 y (cbrt.f64 x)) z) 3) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 y (cbrt.f64 x)) z) 3) x)))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (/.f64 (*.f64 z x) y))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (*.f64 y y))) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (/.f64 (*.f64 z x) y))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 y z) (+.f64 1 (pow.f64 (/.f64 y z) 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 y z) (+.f64 1 (pow.f64 (/.f64 y z) 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 y z) (+.f64 1 (pow.f64 (/.f64 y z) 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))"]],"time":182.781982421875,"type":"simplify"},{"compiler":[[7712,2515]],"time":53.328857421875,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (*.f64 (+.f64 y x) z) y))","fresh",35.12226297305154],["(+.f64 (*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","next",9.178790144111215],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234],["(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","fresh",32.997883451361005],["(+.f64 (*.f64 x (/.f64 z (-.f64 z y))) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","done",8.913812714148785],["(+.f64 (/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (/.f64 1 z)) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","fresh",11.874832360140191]],"compiler":[[11,7],[24,15],[12,8],[25,11],[20,11],[24,15],[11,7],[24,15],[25,11],[24,15]],"count":[[336,6]],"kept":[{"done":[1,1],"fresh":[4,4],"new":[330,0],"picked":[1,1]}],"min-error":[0],"time":142.7890625,"type":"prune"},{"compiler":[[80,36]],"locations":[["(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))",0.3930577381845536,true],["(pow.f64 (/.f64 (-.f64 z y) z) -1)",0.5917423935011066,false],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)",2.3780410184010203,true],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y)",8.159698503140374,false]],"time":15.02001953125,"type":"localize"},{"count":[[2,60]],"series":[["(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))","y","-inf",0.177978515625],["(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))","y","inf",0.19580078125],["(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))","y","0",0.155029296875],["(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))","z","-inf",0.1728515625],["(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))","z","inf",0.159912109375],["(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))","z","0",0.181884765625],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","x","-inf",0.1728515625],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","x","inf",0.156982421875],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","x","0",0.1689453125],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","y","-inf",0.216796875],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","y","inf",0.233154296875],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","y","0",0.173095703125],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","z","-inf",0.19287109375],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","z","inf",0.218017578125],["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","z","0",0.26708984375]],"time":3.041015625,"type":"series"},{"count":[[2,139]],"inputs":[["(*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x)","(/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x z) (-.f64 z y)) (*.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 0) (/.f64 (*.f64 x z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x z) (-.f64 z y)) (*.f64 0 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x z) (-.f64 z y))) (/.f64 (*.f64 x z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) x) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 z (-.f64 z y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 z y)) (neg.f64 (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))) (/.f64 x (cbrt.f64 (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y z)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (/.f64 z (-.f64 z y)))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z x)) (/.f64 -1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (neg.f64 z) -2))) (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (*.f64 x (cbrt.f64 (/.f64 z (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (/.f64 z (-.f64 z y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (neg.f64 z))) (pow.f64 (cbrt.f64 (/.f64 -1 z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x z) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x z) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (/.f64 1 z))) (neg.f64 (pow.f64 (cbrt.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 (/.f64 -1 z))) (neg.f64 (pow.f64 (cbrt.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 y z)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 z y)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))) x) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 x (-.f64 y z)))) (cbrt.f64 (/.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z)))) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z x)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (pow.f64 (neg.f64 z) -2))) (cbrt.f64 (/.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (neg.f64 z))) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 (/.f64 -1 z))) (neg.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (/.f64 -1 z))) (cbrt.f64 (/.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (neg.f64 z))) 1) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 x (-.f64 y z)) (cbrt.f64 (neg.f64 z)))) (neg.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x z) (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 z y)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 x) (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x z) (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 z (-.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 z (-.f64 z y)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 y z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x z) (-.f64 z y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 z y)) (*.f64 (/.f64 z (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 z y)) 0) (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 z y)) (*.f64 0 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 z (-.f64 z y))) (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 1 z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 -1 z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 z y)) (/.f64 0 (/.f64 (-.f64 z y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (-.f64 z y) z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (-.f64 y z) z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 z y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 -1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 y z) -2) (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 z)) (/.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 z (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) (neg.f64 z)) (cbrt.f64 (/.f64 -1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (pow.f64 (neg.f64 z) -2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 y z) -2) (pow.f64 (neg.f64 z) -2))) (cbrt.f64 (/.f64 z (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (pow.f64 (neg.f64 z) -2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) z) (cbrt.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))) (pow.f64 (cbrt.f64 (/.f64 -1 z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (/.f64 -1 z))) (neg.f64 (pow.f64 (cbrt.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (-.f64 y z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) -2))) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) (/.f64 -1 (-.f64 z y))) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 z y))) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (cbrt.f64 (/.f64 -1 (-.f64 z y)))) (cbrt.f64 (/.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 2)) (cbrt.f64 (/.f64 1 (-.f64 z y)))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (cbrt.f64 (/.f64 -1 (-.f64 z y)))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (pow.f64 (neg.f64 z) -2))) (cbrt.f64 (/.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (/.f64 1 z))) (neg.f64 (pow.f64 (cbrt.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (/.f64 -1 z))) (neg.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 z) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 z) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z))) 1) (cbrt.f64 (pow.f64 (neg.f64 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 y z) z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (-.f64 z y) z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 z y) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (-.f64 y z) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 -1 (-.f64 z y)) (cbrt.f64 (neg.f64 z)))) (neg.f64 (cbrt.f64 (pow.f64 (neg.f64 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 z (/.f64 -1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 z (-.f64 z y)) 3))))))"]],"rules":[["egg-rr",72],["egg-rr",67]],"time":28.47705078125,"type":"rewrite"},{"count":[[199,168]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 z 4)) x) (pow.f64 y 4)) (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 z x) y))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 x) y) z) 3) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 x) y) z) 3) x)))","x","(+.f64 (/.f64 (*.f64 y x) z) x)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) x))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 3)) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (/.f64 (*.f64 (*.f64 y y) x) z) z) (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 x) y) z) 3) x)))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 z 4)) x) (pow.f64 y 4)) (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 z x) y))","(*.f64 -1 (/.f64 (*.f64 z x) y))","(neg.f64 (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))))","(-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (/.f64 (*.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (/.f64 (*.f64 z x) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 z 4)) x) (pow.f64 y 4)) (/.f64 (/.f64 (*.f64 (*.f64 z z) x) y) y)) (pow.f64 (/.f64 (*.f64 z (cbrt.f64 x)) y) 3)) (/.f64 (*.f64 z x) y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(/.f64 (*.f64 z x) (-.f64 z y))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","1","(+.f64 1 (/.f64 y z))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z)))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3)) (+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (/.f64 y z))))","(+.f64 (+.f64 (pow.f64 (/.f64 y z) 2) (/.f64 y z)) (+.f64 1 (pow.f64 (/.f64 y z) 3)))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))","(*.f64 -1 (/.f64 z y))","(neg.f64 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 z y)))","(-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 4) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 z y)) (pow.f64 (/.f64 z y) 2)) (pow.f64 (/.f64 z y) 3)) (/.f64 (pow.f64 z 4) (pow.f64 y 4)))"]],"time":179.43505859375,"type":"simplify"},{"compiler":[[8189,3541]],"time":64.4169921875,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (*.f64 (+.f64 y x) z) y))","fresh",35.12226297305154],["(+.f64 (*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","done",9.178790144111215],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","done",8.893762559347234],["(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","fresh",32.997883451361005],["(+.f64 (*.f64 x (/.f64 z (-.f64 z y))) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","done",8.913812714148785],["(+.f64 (/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (/.f64 1 z)) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","fresh",11.874832360140191]],"compiler":[[11,7],[24,15],[12,8],[25,11],[20,11],[24,15]],"count":[[333,6]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[327,0],"picked":[1,1]}],"min-error":[0],"time":134.5478515625,"type":"prune"},{"accuracy":[0.06640625],"baseline":[8.893762559347234],"branch":[["x",8.893762559347232,1],["y",4.834492931613704,3],["z",2.6849287951139993,3],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))",0.06640625,3]],"compiler":[[4,3],[4,3],[4,3],[12,8],[139,60]],"count":[[8,3]],"inputs":[["(+.f64 (*.f64 (/.f64 (/.f64 -1 (-.f64 z y)) (/.f64 -1 z)) x) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","(+.f64 (*.f64 x (/.f64 z (-.f64 z y))) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","(+.f64 (/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (/.f64 1 z)) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","(neg.f64 (/.f64 (*.f64 (+.f64 y x) z) y))","(+.f64 (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) x) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))","(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","(*.f64 (/.f64 (+.f64 x y) (cbrt.f64 (/.f64 (-.f64 z y) z))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) z)) -2))","(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))"]],"link":["."],"name":["Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, A"],"oracle":[45.75527384514471],"outputs":[["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))","(-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y)))","(+.f64 (*.f64 x (/.f64 z (-.f64 z y))) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))"]],"time":40.39599609375,"times":[["x",3.7470703125],["y",13.73193359375],["z",10.670166015625],["(/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z)))",9.952880859375]],"type":"regimes"},{"bstep":[[0.0,7.738897505769512e-286,0.014892578125],[-1.235931737407556e-252,-6.97109837843496e-265,0.098876953125]],"compiler":[[6,5],[12,8]],"method":["left-value","left-value"],"time":0.23095703125,"type":"bsearch"},{"compiler":[[75,36]],"inputs":[["(if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) (if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 0) (-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y))) (+.f64 (*.f64 x (/.f64 z (-.f64 z y))) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) (if (<=.f64 (/.f64 (+.f64 x y) (-.f64 1 (/.f64 y z))) 0) (-.f64 (-.f64 (neg.f64 z) (/.f64 (*.f64 z (+.f64 x z)) y)) (*.f64 (/.f64 z y) (/.f64 (*.f64 z (+.f64 x z)) y))) (+.f64 (*.f64 x (/.f64 z (-.f64 z y))) (*.f64 (pow.f64 (/.f64 (-.f64 z y) z) -1) y))))","(if (<=.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) -8254602048994769/8254602048994769474255309139320571976856989469314398783249386078541779727448825929287769623244643560854287421769642635607536680617229461519539671538483430889193541937484454440136429963694163141453503639190799818814812942074243152169349951543234944945149040326527156224) (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) (if (<=.f64 (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z)) 0) (+.f64 (neg.f64 z) (*.f64 (/.f64 (*.f64 z (+.f64 x z)) y) (-.f64 -1 (/.f64 z y)))) (/.f64 (+.f64 x y) (/.f64 (-.f64 z y) z))))"]],"stop":[["fuel",1]],"time":29.7421875,"type":"simplify"},{"time":0.016845703125,"type":"soundness"},{"compiler":[[75,36]],"remove-preprocessing":[[]],"time":17.197998046875,"type":"end"}]