[{"compiler":[[10,8]],"method":["search"],"sampling":[[12,0.4987797737121582,0.0009760856628417969,0.500244140625],[11,0.4978036880493164,0.0019521713256835938,0.500244140625],[10,0.4958515167236328,0.0039043426513671875,0.500244140625],[9,0.4919471740722656,0.007808685302734375,0.500244140625],[8,0.48413848876953125,0.01561737060546875,0.500244140625],[7,0.4685211181640625,0.0312347412109375,0.500244140625],[6,0.437286376953125,0.062469482421875,0.500244140625],[5,0.37481689453125,0.12493896484375,0.500244140625],[4,0.2498779296875,0.2498779296875,0.500244140625],[3,0.0,0.499755859375,0.500244140625],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.715087890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.06494140625,2],["body",512,"valid",229.716064453125,2040],["body",1024,"valid",927.271484375,4228],["body",2048,"valid",143.9541015625,419],["body",256,"valid",81.08544921875,1569]],"time":1390.5849609375,"type":"sample"},{"compiler":[[9,7]],"inputs":[["0"],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","(log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))"]],"symmetry":[[]],"time":51.968994140625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","(log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))"]],"time":18.097900390625,"type":"simplify"},{"compiler":[[17,13]],"time":0.360107421875,"type":"eval"},{"alts":[["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","next",58.9023254419129]],"compiler":[[9,7],[9,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[58.9023254419129],"time":0.85205078125,"type":"prune"},{"compiler":[[24,17]],"locations":[["(/.f64 (-.f64 1 eps) (+.f64 1 eps))",0.01953125,true],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))",5.466595508990503,true]],"time":5.95703125,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (-.f64 1 eps) (+.f64 1 eps))","eps","-inf",0.196044921875],["(/.f64 (-.f64 1 eps) (+.f64 1 eps))","eps","inf",0.22607421875],["(/.f64 (-.f64 1 eps) (+.f64 1 eps))","eps","0",0.211181640625],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","eps","-inf",0.322021484375],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","eps","inf",0.433837890625],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","eps","0",0.781982421875]],"time":2.261962890625,"type":"series"},{"count":[[2,119]],"inputs":[["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","(/.f64 (-.f64 1 eps) (+.f64 1 eps))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 0) (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) (*.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))) (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) (*.f64 0 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))) (cbrt.f64 (pow.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 2)) (cbrt.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 eps)) (/.f64 eps (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 eps (-.f64 -1 eps)) (/.f64 1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 0) (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) (*.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 eps)) (*.f64 (/.f64 1 (+.f64 1 eps)) (neg.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 1 eps)) (neg.f64 eps)) (/.f64 1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) (*.f64 0 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 eps)) (*.f64 (/.f64 eps (-.f64 -1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 eps)) (/.f64 eps (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 eps (-.f64 -1 eps)) (/.f64 1 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 eps)) (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 (fma.f64 eps eps (+.f64 1 eps))) (+.f64 1 eps)) (/.f64 (/.f64 (pow.f64 eps 3) (fma.f64 eps eps (+.f64 1 eps))) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 1 eps)) (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 1 eps) (pow.f64 (+.f64 1 eps) 2)) (/.f64 (fma.f64 eps eps eps) (pow.f64 (+.f64 1 eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 eps)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 1 eps) 2)) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (*.f64 (-.f64 1 eps) (cbrt.f64 (pow.f64 (+.f64 1 eps) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (+.f64 1 eps))) (cbrt.f64 (pow.f64 (+.f64 1 eps) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 2)) (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 eps) (/.f64 1 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 eps) (/.f64 1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 eps)) (-.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 1 eps) 2)) (+.f64 1 eps)) (cbrt.f64 (-.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 eps)) (+.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 eps) (cbrt.f64 (pow.f64 (+.f64 1 eps) -2))) (cbrt.f64 (/.f64 1 (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 eps) (-.f64 1 eps)) (pow.f64 (+.f64 1 eps) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 eps 3)) (/.f64 1 (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (pow.f64 eps 3)) (+.f64 1 eps)) (/.f64 1 (fma.f64 eps eps (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 1 (pow.f64 eps 3)) (+.f64 1 eps)) (cbrt.f64 (fma.f64 eps eps (+.f64 1 eps)))) (pow.f64 (cbrt.f64 (fma.f64 eps eps (+.f64 1 eps))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (+.f64 1 eps))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 eps))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 eps))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (*.f64 (+.f64 1 eps) (/.f64 eps (cbrt.f64 (+.f64 1 eps))))) (*.f64 (+.f64 1 eps) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 -1 eps) (*.f64 (+.f64 1 eps) (neg.f64 eps))) (*.f64 (+.f64 1 eps) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (/.f64 eps (cbrt.f64 (+.f64 1 eps))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (-.f64 -1 eps)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (neg.f64 eps))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (+.f64 1 eps)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) eps)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))) (*.f64 (-.f64 -1 eps) (/.f64 eps (cbrt.f64 (+.f64 1 eps))))) (*.f64 (-.f64 -1 eps) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 1 eps) (*.f64 (-.f64 -1 eps) (neg.f64 eps))) (*.f64 (-.f64 -1 eps) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 -1 eps) (*.f64 (-.f64 -1 eps) eps)) (*.f64 (-.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (-.f64 1 (pow.f64 eps 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (fma.f64 eps eps (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (+.f64 -1 (pow.f64 eps 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)) (neg.f64 (fma.f64 eps eps (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) (cbrt.f64 (/.f64 1 (+.f64 1 eps)))) (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) -1) (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) 1) (*.f64 (neg.f64 (fma.f64 eps eps (+.f64 1 eps))) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) (cbrt.f64 (/.f64 1 (+.f64 1 eps)))) (*.f64 (neg.f64 (fma.f64 eps eps (+.f64 1 eps))) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) -1) (*.f64 (neg.f64 (fma.f64 eps eps (+.f64 1 eps))) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 1 eps) (-.f64 1 eps))) (neg.f64 (pow.f64 (+.f64 1 eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (neg.f64 (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 eps) (-.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (pow.f64 eps 3)) (+.f64 1 eps)) (fma.f64 eps eps (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 eps) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (+.f64 1 eps))) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 eps) (-.f64 1 eps)) (pow.f64 (+.f64 1 eps) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 2)) (cbrt.f64 (-.f64 1 eps))) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 2)) (cbrt.f64 (+.f64 -1 eps))) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) (cbrt.f64 (pow.f64 (-.f64 1 eps) 2))) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (-.f64 1 eps)) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 eps)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 2))) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 -1 eps)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 2))) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (+.f64 1 eps))) 1) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 1 eps) (-.f64 1 eps)) 1) (pow.f64 (+.f64 1 eps) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 1 (pow.f64 eps 3)) (+.f64 1 eps)) 1) (fma.f64 eps eps (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) (/.f64 1 (-.f64 -1 eps))) (fma.f64 eps eps (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 eps) (cbrt.f64 (pow.f64 (+.f64 1 eps) -2))) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 1 (pow.f64 eps 3)) (+.f64 1 eps)) 1) (fma.f64 eps eps (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) (+.f64 1 (pow.f64 eps 3))) (/.f64 1 (fma.f64 eps eps (-.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) -1) (-.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (+.f64 1 eps))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (+.f64 1 eps))) 1) (cbrt.f64 (pow.f64 (+.f64 1 eps) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 eps) (-.f64 1 eps)) (+.f64 1 eps)) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (/.f64 (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (+.f64 1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (*.f64 (+.f64 1 eps) (neg.f64 (fma.f64 eps eps (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (*.f64 (-.f64 -1 eps) (fma.f64 eps eps (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (*.f64 (-.f64 -1 eps) (neg.f64 (fma.f64 eps eps (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) 1) (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (*.f64 (*.f64 (fma.f64 eps eps (+.f64 1 eps)) (+.f64 1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (+.f64 1 eps)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 1 eps)) (+.f64 -1 (pow.f64 eps 3))) (neg.f64 (fma.f64 eps eps (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 eps 3))) (/.f64 (cbrt.f64 (pow.f64 (-.f64 1 eps) 2)) (+.f64 1 eps))) (cbrt.f64 (fma.f64 eps eps (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) (/.f64 1 (+.f64 1 eps))) (neg.f64 (fma.f64 eps eps (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 1 (pow.f64 eps 3)) (+.f64 1 eps))) (neg.f64 (fma.f64 eps eps (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 eps))) (cbrt.f64 (pow.f64 (+.f64 1 eps) -2)) (/.f64 eps (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 -1 eps)) (/.f64 eps (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 eps))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 eps) -2))) (/.f64 eps (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 eps)) (/.f64 eps (-.f64 -1 eps)))))))"]],"rules":[["egg-rr",100],["egg-rr",19]],"time":27.94482421875,"type":"rewrite"},{"count":[[143,147]],"inputs":[["(*.f64 -2 eps)","(+.f64 (*.f64 -2 eps) (*.f64 -2/3 (pow.f64 eps 3)))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3)))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))","1","(+.f64 (*.f64 -2 eps) 1)","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) 1))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) (+.f64 1 (*.f64 -2 (pow.f64 eps 3)))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 eps)","(+.f64 (*.f64 -2 eps) (*.f64 -2/3 (pow.f64 eps 3)))","(fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2 eps))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3)))))","(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(+.f64 (log.f64 -1) (/.f64 -2 eps))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (log.f64 -1) (fma.f64 2/3 (pow.f64 eps -3) (/.f64 2 eps)))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))","(-.f64 (log.f64 -1) (fma.f64 2/3 (pow.f64 eps -3) (fma.f64 (pow.f64 eps -5) 2/5 (/.f64 2 eps))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(+.f64 (log.f64 -1) (/.f64 -2 eps))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (log.f64 -1) (fma.f64 2/3 (pow.f64 eps -3) (/.f64 2 eps)))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))","(-.f64 (log.f64 -1) (fma.f64 2/3 (pow.f64 eps -3) (fma.f64 (pow.f64 eps -5) 2/5 (/.f64 2 eps))))","1","(+.f64 (*.f64 -2 eps) 1)","(fma.f64 -2 eps 1)","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) 1))","(fma.f64 eps -2 (fma.f64 2 (*.f64 eps eps) 1))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) (+.f64 1 (*.f64 -2 (pow.f64 eps 3)))))","(fma.f64 -2 eps (fma.f64 (*.f64 eps eps) 2 (fma.f64 -2 (pow.f64 eps 3) 1)))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(+.f64 (/.f64 2 eps) -1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (/.f64 2 eps) (fma.f64 2 (pow.f64 eps -2) 1))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (fma.f64 2 (pow.f64 eps -3) (/.f64 2 eps)) (fma.f64 2 (pow.f64 eps -2) 1))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(+.f64 (/.f64 2 eps) -1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (/.f64 2 eps) (fma.f64 2 (pow.f64 eps -2) 1))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (fma.f64 2 (pow.f64 eps -3) (/.f64 2 eps)) (fma.f64 2 (pow.f64 eps -2) 1))"]],"time":79.72021484375,"type":"simplify"},{"compiler":[[2335,1836]],"time":33.3330078125,"type":"eval"},{"alts":[["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","fresh",59.000613193640156],["(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))","next",0.06505924734522824]],"compiler":[[12,10],[19,15],[12,10],[19,15]],"count":[[148,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[147,2],"picked":[1,0]}],"min-error":[0.009070031620653759],"time":13.15478515625,"type":"prune"},{"compiler":[[66,52]],"locations":[["(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))",0.00390625,true],["(*.f64 -2/3 (pow.f64 eps 3))",0.0859375,true]],"time":17.297119140625,"type":"localize"},{"count":[[2,12]],"series":[["(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","eps","-inf",0.51416015625],["(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","eps","inf",0.48095703125],["(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","eps","0",0.3359375],["(*.f64 -2/3 (pow.f64 eps 3))","eps","-inf",0.364013671875],["(*.f64 -2/3 (pow.f64 eps 3))","eps","inf",0.43896484375],["(*.f64 -2/3 (pow.f64 eps 3))","eps","0",0.6669921875]],"time":2.923095703125,"type":"series"},{"count":[[2,61]],"inputs":[["(*.f64 -2/3 (pow.f64 eps 3))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/3 (pow.f64 eps 3)) (*.f64 (*.f64 -2/3 (pow.f64 eps 3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -2/3 (pow.f64 eps 3)) 0) (*.f64 -2/3 (pow.f64 eps 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/3 (pow.f64 eps 3)) (*.f64 0 (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -2/3 (pow.f64 eps 3))) (*.f64 -2/3 (pow.f64 eps 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2/3 (*.f64 eps eps)) eps)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 eps (*.f64 -2/3 (*.f64 eps eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -2/3) (*.f64 (cbrt.f64 4/9) (pow.f64 eps 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4/9) (pow.f64 eps 3)) (cbrt.f64 -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 eps (cbrt.f64 -2/3)) (*.f64 (*.f64 eps eps) (cbrt.f64 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 eps eps) (cbrt.f64 4/9)) (*.f64 eps (cbrt.f64 -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2/3 eps) (*.f64 eps eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 eps 3) (cbrt.f64 -2/3)) (cbrt.f64 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 eps eps) (*.f64 -2/3 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4/9) (*.f64 (pow.f64 eps 3) (cbrt.f64 -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2/3 (pow.f64 eps 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 eps 3) -2/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 -2/3 (pow.f64 eps 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -2/3 (pow.f64 eps 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2/3 (pow.f64 eps 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2/3 (pow.f64 eps 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 eps 3) 3) -8/27) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 eps (cbrt.f64 -2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -2/3 (pow.f64 eps 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 eps 3) 3) -8/27))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) (*.f64 -2/3 (pow.f64 eps 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) (*.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 0) (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/5 (pow.f64 eps 5)) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 1) (*.f64 -2/3 (pow.f64 eps 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) (*.f64 0 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))) (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))) (*.f64 -2/5 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/3 (pow.f64 eps 3)) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3))) (*.f64 -2/7 (pow.f64 eps 7)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/7 (pow.f64 eps 7)) (+.f64 (*.f64 -2/3 (pow.f64 eps 3)) (*.f64 -2/5 (pow.f64 eps 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))) (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 2/3) (cbrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -2/5 (pow.f64 eps 5))) (cbrt.f64 (*.f64 4/25 (pow.f64 eps 10))) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 eps 5) -2/5 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -2/5) (*.f64 (cbrt.f64 4/25) (pow.f64 eps 5)) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2/5 (cbrt.f64 (pow.f64 eps 5))) (cbrt.f64 (pow.f64 eps 10)) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) (pow.f64 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))) 2/3) (*.f64 -2/5 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))) 2/3) (cbrt.f64 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) (*.f64 -2/5 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))) (*.f64 -2/5 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -2/5 (pow.f64 eps 5)) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))) (*.f64 -2/5 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))) 1 (*.f64 -2/5 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2/5 (pow.f64 eps 5)) 1 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))))))"]],"rules":[["egg-rr",35],["egg-rr",26]],"time":28.755859375,"type":"rewrite"},{"count":[[73,67]],"inputs":[["(*.f64 -2/3 (pow.f64 eps 3))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2/3 (pow.f64 eps 3))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/3 (pow.f64 eps 3)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 (pow.f64 eps 5) -2/5 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 (pow.f64 eps 5) -2/5 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 (pow.f64 eps 5) -2/5 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 (pow.f64 eps 5) -2/5 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 (pow.f64 eps 5) -2/5 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 (pow.f64 eps 5) -2/5 (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))"]],"time":57.511962890625,"type":"simplify"},{"compiler":[[1467,1162]],"time":27.47216796875,"type":"eval"},{"alts":[["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","next",59.000613193640156],["(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))","done",0.06505924734522824]],"compiler":[[12,10],[19,15],[12,10]],"count":[[69,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[67,0],"picked":[1,1]}],"min-error":[0.009070031620653759],"time":15.8837890625,"type":"prune"},{"compiler":[[46,35]],"locations":[["(cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))",0.0078125,true],["(/.f64 (+.f64 -1 eps) (-.f64 -1 eps))",0.01953125,true],["(pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3)",0.045253759768442016,true],["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))",5.466595533470467,true]],"time":12.279052734375,"type":"localize"},{"count":[[4,48]],"series":[["(cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))","eps","-inf",0.18310546875],["(cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))","eps","inf",0.261962890625],["(cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))","eps","0",0.343017578125],["(/.f64 (+.f64 -1 eps) (-.f64 -1 eps))","eps","-inf",0.18701171875],["(/.f64 (+.f64 -1 eps) (-.f64 -1 eps))","eps","inf",0.162109375],["(/.f64 (+.f64 -1 eps) (-.f64 -1 eps))","eps","0",0.162109375],["(pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3)","eps","-inf",0.242919921875],["(pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3)","eps","inf",0.22802734375],["(pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3)","eps","0",0.6220703125],["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","eps","-inf",1.44189453125],["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","eps","inf",1.43896484375],["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","eps","0",4.280029296875]],"time":9.858154296875,"type":"series"},{"count":[[4,247]],"inputs":[["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","(pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3)","(/.f64 (+.f64 -1 eps) (-.f64 -1 eps))","(cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 0) (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (*.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (*.f64 0 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (pow.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 2/3) (cbrt.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 1 eps)) eps) (*.f64 (/.f64 -1 (+.f64 1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 1 eps)) -1) (*.f64 (/.f64 -1 (+.f64 1 eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 0) (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (*.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 eps (/.f64 -1 (+.f64 1 eps))) (/.f64 1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 eps)) (*.f64 eps (/.f64 -1 (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (*.f64 0 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 eps (-.f64 -1 eps)) (/.f64 -1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 eps)) (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 1 eps)) (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 -1 eps)) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 eps) (/.f64 1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 eps) (/.f64 -1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 eps)) (+.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 eps) -1/3) (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) (pow.f64 (-.f64 -1 eps) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 4) 2) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (-.f64 -1 eps)) (cbrt.f64 (+.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 eps)) (-.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) (/.f64 1 (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) (pow.f64 (cbrt.f64 (-.f64 -1 eps)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (pow.f64 eps 3)) (/.f64 1 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 -1 eps) -1/3) (+.f64 -1 (pow.f64 eps 3))) (*.f64 (pow.f64 (-.f64 -1 eps) 2/3) (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 -1 eps) -1/3) (-.f64 1 (pow.f64 eps 3))) (*.f64 (pow.f64 (-.f64 -1 eps) 2/3) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 1 (pow.f64 eps 3))) (*.f64 (+.f64 1 eps) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) 1) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) -1) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) (pow.f64 (-.f64 -1 eps) -1/3)) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) -1) (*.f64 (+.f64 (*.f64 eps (-.f64 -1 eps)) -1) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) 1) (*.f64 (+.f64 (*.f64 eps (-.f64 -1 eps)) -1) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) (pow.f64 (-.f64 -1 eps) -1/3)) (*.f64 (+.f64 (*.f64 eps (-.f64 -1 eps)) -1) (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (neg.f64 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 eps) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 eps) (-.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (+.f64 1 eps)) (-.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 -1 eps) -1/3) (+.f64 -1 eps)) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (pow.f64 (+.f64 -1 eps) 2/3)) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps)))) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3) (cbrt.f64 (-.f64 1 eps))) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) (/.f64 -1 (+.f64 1 eps))) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 eps))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 4) 2)) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) 1) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) 1) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 -1 (pow.f64 eps 3))) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (-.f64 -1 eps))) (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 eps)) (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps)))) (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) 1) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) 1) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 (pow.f64 eps 3))) (/.f64 1 (fma.f64 eps (+.f64 -1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) -1) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (-.f64 -1 eps))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1))) (pow.f64 (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (/.f64 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (*.f64 (-.f64 -1 eps) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (*.f64 (+.f64 1 eps) (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (-.f64 1 eps))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (+.f64 -1 eps))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (*.f64 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 -1 eps)) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps)))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 eps)) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps)))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3))) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps))) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps)))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) (/.f64 1 (+.f64 1 eps))) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) 1) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) 1) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 1 eps)) eps) (*.f64 (/.f64 -1 (+.f64 1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 1 eps)) -1) (*.f64 (/.f64 -1 (+.f64 1 eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 0) (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (*.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 eps (/.f64 -1 (+.f64 1 eps))) (/.f64 1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 eps)) (*.f64 eps (/.f64 -1 (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (*.f64 0 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 eps (-.f64 -1 eps)) (/.f64 -1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 eps)) (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 1 eps)) (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 -1 eps)) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 eps) (/.f64 1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 eps) (/.f64 -1 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 eps)) (+.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 eps) -1/3) (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) (pow.f64 (-.f64 -1 eps) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 4) 2) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (-.f64 -1 eps)) (cbrt.f64 (+.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 eps)) (-.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) (/.f64 1 (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) (pow.f64 (cbrt.f64 (-.f64 -1 eps)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (pow.f64 eps 3)) (/.f64 1 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 -1 eps) -1/3) (+.f64 -1 (pow.f64 eps 3))) (*.f64 (pow.f64 (-.f64 -1 eps) 2/3) (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 -1 eps) -1/3) (-.f64 1 (pow.f64 eps 3))) (*.f64 (pow.f64 (-.f64 -1 eps) 2/3) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 1 (pow.f64 eps 3))) (*.f64 (+.f64 1 eps) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) 1) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) -1) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 eps 3)) (pow.f64 (-.f64 -1 eps) -1/3)) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) -1) (*.f64 (+.f64 (*.f64 eps (-.f64 -1 eps)) -1) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) 1) (*.f64 (+.f64 (*.f64 eps (-.f64 -1 eps)) -1) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) (pow.f64 (-.f64 -1 eps) -1/3)) (*.f64 (+.f64 (*.f64 eps (-.f64 -1 eps)) -1) (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (neg.f64 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 eps) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 eps) (-.f64 -1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (+.f64 1 eps)) (-.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 -1 eps) -1/3) (+.f64 -1 eps)) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (pow.f64 (+.f64 -1 eps) 2/3)) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps)))) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3) (cbrt.f64 (-.f64 1 eps))) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) (/.f64 -1 (+.f64 1 eps))) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 eps))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 4) 2)) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) 1) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) 1) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 -1 (pow.f64 eps 3))) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (-.f64 -1 eps))) (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 eps)) (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps)))) (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3)) 1) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps))) 1) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 (pow.f64 eps 3))) (/.f64 1 (fma.f64 eps (+.f64 -1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 eps) -1) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 eps) (cbrt.f64 (-.f64 -1 eps))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1))) (pow.f64 (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (/.f64 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (*.f64 (-.f64 -1 eps) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 eps 3)) (*.f64 (+.f64 1 eps) (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (-.f64 1 eps))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps))) (cbrt.f64 (+.f64 -1 eps))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 eps 3)) (*.f64 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 -1 eps)) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps)))) (pow.f64 (-.f64 -1 eps) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 eps)) (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (cbrt.f64 (-.f64 -1 eps)))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3))) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps))) (+.f64 (*.f64 eps (-.f64 -1 eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps)))) (neg.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 eps 3)) (/.f64 1 (+.f64 1 eps))) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) 1) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps)) 1) (fma.f64 eps (+.f64 1 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 0) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (*.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (*.f64 0 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 -1 eps)) (pow.f64 (-.f64 -1 eps) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 eps) -1/3) (cbrt.f64 (+.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 eps)) (neg.f64 (pow.f64 (-.f64 -1 eps) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 -1 eps) -1/3)) (cbrt.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 eps))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 -1 eps) 2/3) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 -1 eps)))) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 eps))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 -1 (pow.f64 eps 3))) 1) (*.f64 (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1)) (cbrt.f64 (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 eps)) 1) (*.f64 (cbrt.f64 (+.f64 1 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 -1 (pow.f64 eps 3))) (cbrt.f64 (*.f64 (fma.f64 eps (+.f64 1 eps) 1) (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (pow.f64 (-.f64 -1 eps) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 -1 eps)) (cbrt.f64 (-.f64 -1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 1 eps)) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 -1 (pow.f64 eps 3))) (pow.f64 (-.f64 -1 eps) -1/3)) (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 eps)) 1) (cbrt.f64 (+.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (+.f64 -1 eps)) (cbrt.f64 (cbrt.f64 (-.f64 -1 eps)))) (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (+.f64 -1 (pow.f64 eps 3)) (-.f64 -1 eps))) (cbrt.f64 (fma.f64 eps (+.f64 1 eps) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (cbrt.f64 (-.f64 -1 eps)))) (cbrt.f64 (pow.f64 (-.f64 -1 eps) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (+.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))))))"]],"rules":[["egg-rr",38],["egg-rr",95],["egg-rr",95],["egg-rr",19]],"time":42.5029296875,"type":"rewrite"},{"count":[[295,209]],"inputs":[["(log.f64 (pow.f64 (cbrt.f64 -1) 6))","(+.f64 (*.f64 eps (+.f64 (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (log.f64 (pow.f64 (cbrt.f64 -1) 6)))","(+.f64 (*.f64 eps (+.f64 (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (pow.f64 (cbrt.f64 -1) 6))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) 2) (pow.f64 (cbrt.f64 -1) 12)))))) (log.f64 (pow.f64 (cbrt.f64 -1) 6))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) 3) (pow.f64 (cbrt.f64 -1) 18))) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (+.f64 (*.f64 -1/3 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (+.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 2/3 (*.f64 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 6))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)))) (pow.f64 (cbrt.f64 -1) 12))))))) (+.f64 (*.f64 eps (+.f64 (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (pow.f64 (cbrt.f64 -1) 6))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) 2) (pow.f64 (cbrt.f64 -1) 12)))))) (log.f64 (pow.f64 (cbrt.f64 -1) 6)))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81)) 8) (pow.f64 eps 3))) (log.f64 -1)) (*.f64 2 (/.f64 1 eps)))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 (+.f64 48 (+.f64 (*.f64 -48 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81)) (*.f64 -24 (-.f64 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 88/243 (pow.f64 (cbrt.f64 -1) 2)) (+.f64 (*.f64 76/243 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 4/81 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))))) 58/81)))) (pow.f64 eps 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81)) 8) (pow.f64 eps 3))) (log.f64 -1))) (*.f64 2 (/.f64 1 eps)))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 -6 (-.f64 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)) 94/81)) 8) (pow.f64 eps 3)))) (*.f64 2 (/.f64 1 eps)))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 (+.f64 48 (+.f64 (*.f64 48 (-.f64 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)) 94/81)) (*.f64 -24 (-.f64 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1))) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 88/243 (pow.f64 (cbrt.f64 -1) 2)) (+.f64 (*.f64 76/243 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 4/81 (pow.f64 (cbrt.f64 -1) 2)))))) 58/81)))) (pow.f64 eps 4))) (+.f64 (log.f64 -1) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 -6 (-.f64 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)) 94/81)) 8) (pow.f64 eps 3))))) (*.f64 2 (/.f64 1 eps)))","(pow.f64 (cbrt.f64 -1) 6)","(+.f64 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) eps) (pow.f64 (cbrt.f64 -1) 6))","(+.f64 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) eps) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))) (pow.f64 (cbrt.f64 -1) 6)))","(+.f64 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) eps) (+.f64 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (+.f64 (*.f64 -1/3 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 2/3 (*.f64 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))))) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))) (pow.f64 (cbrt.f64 -1) 6))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)))) (pow.f64 eps 3)) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 94/81 (/.f64 1 (pow.f64 eps 3))))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81) (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","1","(+.f64 (*.f64 -2 eps) 1)","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) 1))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) (+.f64 1 (*.f64 -2 (pow.f64 eps 3)))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (*.f64 2/3 (*.f64 eps (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3))) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 2/3 (*.f64 eps (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 eps 2) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 2/3 (*.f64 eps (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 eps 3) (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 eps 2) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2)))))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (+.f64 (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2))) (*.f64 -22/81 (/.f64 (cbrt.f64 -1) (pow.f64 eps 3))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2)))))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (+.f64 (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2))) (*.f64 -22/81 (/.f64 (cbrt.f64 -1) (pow.f64 eps 3))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (pow.f64 (cbrt.f64 -1) 6))","0","(+.f64 (*.f64 eps (+.f64 (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (log.f64 (pow.f64 (cbrt.f64 -1) 6)))","(*.f64 -2 eps)","(+.f64 (*.f64 eps (+.f64 (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (pow.f64 (cbrt.f64 -1) 6))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) 2) (pow.f64 (cbrt.f64 -1) 12)))))) (log.f64 (pow.f64 (cbrt.f64 -1) 6))))","(fma.f64 eps -2 (*.f64 (*.f64 1/2 (*.f64 eps eps)) (fma.f64 2 (fma.f64 1/3 (+.f64 2 -4/3) (+.f64 8/9 (fma.f64 -2/3 (+.f64 -2 4/3) 4/9))) (neg.f64 4))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) 3) (pow.f64 (cbrt.f64 -1) 18))) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (+.f64 (*.f64 -1/3 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (+.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 2/3 (*.f64 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 6))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)))) (pow.f64 (cbrt.f64 -1) 12))))))) (+.f64 (*.f64 eps (+.f64 (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)) (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (pow.f64 (cbrt.f64 -1) 6))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) 2) (pow.f64 (cbrt.f64 -1) 12)))))) (log.f64 (pow.f64 (cbrt.f64 -1) 6)))))","(fma.f64 1/6 (*.f64 (pow.f64 eps 3) (+.f64 -16 (fma.f64 6 (fma.f64 -4/9 (+.f64 2 -4/3) (fma.f64 -1/3 (-.f64 2 (fma.f64 -4/3 (+.f64 -2 4/3) 8/27)) (+.f64 (fma.f64 2/3 (+.f64 (fma.f64 -4/3 (+.f64 -2 4/3) 8/27) -2) (*.f64 -4/9 (+.f64 2 -4/3))) (*.f64 -2/3 (fma.f64 -2/3 (+.f64 -2 4/3) 4/9))))) (*.f64 -6 (*.f64 (fma.f64 1/3 (+.f64 2 -4/3) (+.f64 8/9 (fma.f64 -2/3 (+.f64 -2 4/3) 4/9))) -2))))) (fma.f64 eps -2 (*.f64 (*.f64 1/2 (*.f64 eps eps)) (fma.f64 2 (fma.f64 1/3 (+.f64 2 -4/3) (+.f64 8/9 (fma.f64 -2/3 (+.f64 -2 4/3) 4/9))) (neg.f64 4)))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(+.f64 (log.f64 -1) (/.f64 -2 eps))","(-.f64 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81)) 8) (pow.f64 eps 3))) (log.f64 -1)) (*.f64 2 (/.f64 1 eps)))","(+.f64 (fma.f64 1/6 (*.f64 (fma.f64 -6 (+.f64 68/81 94/81) 8) (pow.f64 eps -3)) (log.f64 -1)) (/.f64 -2 eps))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 (+.f64 48 (+.f64 (*.f64 -48 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81)) (*.f64 -24 (-.f64 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 88/243 (pow.f64 (cbrt.f64 -1) 2)) (+.f64 (*.f64 76/243 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 4/81 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))))) 58/81)))) (pow.f64 eps 4))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81)) 8) (pow.f64 eps 3))) (log.f64 -1))) (*.f64 2 (/.f64 1 eps)))","(+.f64 (fma.f64 1/24 (/.f64 (+.f64 48 (fma.f64 -48 (+.f64 68/81 94/81) (*.f64 -24 (+.f64 (neg.f64 176/243) (+.f64 -136/243 -58/81))))) (pow.f64 eps 4)) (fma.f64 1/6 (*.f64 (fma.f64 -6 (+.f64 68/81 94/81) 8) (pow.f64 eps -3)) (log.f64 -1))) (/.f64 -2 eps))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(+.f64 (log.f64 -1) (/.f64 -2 eps))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 -6 (-.f64 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)) 94/81)) 8) (pow.f64 eps 3)))) (*.f64 2 (/.f64 1 eps)))","(+.f64 (log.f64 -1) (fma.f64 (*.f64 (fma.f64 -6 (+.f64 -68/81 -94/81) -8) (pow.f64 eps -3)) -1/6 (/.f64 -2 eps)))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 (+.f64 48 (+.f64 (*.f64 48 (-.f64 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)) 94/81)) (*.f64 -24 (-.f64 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1))) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 88/243 (pow.f64 (cbrt.f64 -1) 2)) (+.f64 (*.f64 76/243 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 4/81 (pow.f64 (cbrt.f64 -1) 2)))))) 58/81)))) (pow.f64 eps 4))) (+.f64 (log.f64 -1) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 -6 (-.f64 (*.f64 (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)) 94/81)) 8) (pow.f64 eps 3))))) (*.f64 2 (/.f64 1 eps)))","(+.f64 (/.f64 (*.f64 1/24 (+.f64 48 (fma.f64 48 (+.f64 -68/81 -94/81) (*.f64 -24 (+.f64 (neg.f64 176/243) (+.f64 -136/243 -58/81)))))) (pow.f64 eps 4)) (+.f64 (log.f64 -1) (fma.f64 (*.f64 (fma.f64 -6 (+.f64 -68/81 -94/81) -8) (pow.f64 eps -3)) -1/6 (/.f64 -2 eps))))","(pow.f64 (cbrt.f64 -1) 6)","1","(+.f64 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) eps) (pow.f64 (cbrt.f64 -1) 6))","(fma.f64 -2 eps 1)","(+.f64 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) eps) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))) (pow.f64 (cbrt.f64 -1) 6)))","(fma.f64 -2 eps (fma.f64 (*.f64 eps eps) (fma.f64 1/3 (+.f64 2 -4/3) (+.f64 8/9 (fma.f64 -2/3 (+.f64 -2 4/3) 4/9))) 1))","(+.f64 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3)) (*.f64 2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 13)) 1/3))) eps) (+.f64 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (+.f64 (*.f64 -1/3 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 2/3 (*.f64 (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))))) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 8/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3)) (+.f64 (*.f64 1/3 (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 4/9 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))) (pow.f64 (cbrt.f64 -1) 6))))","(fma.f64 -2 eps (fma.f64 (pow.f64 eps 3) (fma.f64 -4/9 (+.f64 2 -4/3) (fma.f64 -1/3 (-.f64 2 (fma.f64 -4/3 (+.f64 -2 4/3) 8/27)) (+.f64 (fma.f64 2/3 (+.f64 (fma.f64 -4/3 (+.f64 -2 4/3) 8/27) -2) (*.f64 -4/9 (+.f64 2 -4/3))) (*.f64 -2/3 (fma.f64 -2/3 (+.f64 -2 4/3) 4/9))))) (fma.f64 (*.f64 eps eps) (fma.f64 1/3 (+.f64 2 -4/3) (+.f64 8/9 (fma.f64 -2/3 (+.f64 -2 4/3) 4/9))) 1)))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(+.f64 (/.f64 2 eps) -1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (/.f64 2 eps) -1) (/.f64 2 (*.f64 eps eps)))","(-.f64 (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -44/81 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -8/27 (pow.f64 (cbrt.f64 -1) 2)))) (pow.f64 eps 3)) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 94/81 (/.f64 1 (pow.f64 eps 3))))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (+.f64 (*.f64 68/81 (pow.f64 eps -3)) (*.f64 94/81 (pow.f64 eps -3))) (/.f64 2 eps)) (+.f64 1 (/.f64 2 (*.f64 eps eps))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(+.f64 (/.f64 2 eps) -1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (/.f64 2 eps) -1) (/.f64 2 (*.f64 eps eps)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 8/27 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 44/81 (pow.f64 (cbrt.f64 -1) 2)))) 94/81) (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(+.f64 (*.f64 (+.f64 68/81 94/81) (pow.f64 eps -3)) (-.f64 (+.f64 (/.f64 2 eps) -1) (/.f64 2 (*.f64 eps eps))))","1","(+.f64 (*.f64 -2 eps) 1)","(fma.f64 -2 eps 1)","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) 1))","(fma.f64 -2 eps (fma.f64 2 (*.f64 eps eps) 1))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 2 (pow.f64 eps 2)) (+.f64 1 (*.f64 -2 (pow.f64 eps 3)))))","(+.f64 (fma.f64 -2 eps (fma.f64 2 (*.f64 eps eps) 1)) (*.f64 -2 (pow.f64 eps 3)))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(+.f64 (/.f64 2 eps) -1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (/.f64 2 eps) -1) (/.f64 2 (*.f64 eps eps)))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (fma.f64 2 (pow.f64 eps -3) (/.f64 2 eps)) (+.f64 1 (/.f64 2 (*.f64 eps eps))))","-1","(-.f64 (*.f64 2 (/.f64 1 eps)) 1)","(+.f64 (/.f64 2 eps) -1)","(-.f64 (*.f64 2 (/.f64 1 eps)) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (+.f64 (/.f64 2 eps) -1) (/.f64 2 (*.f64 eps eps)))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))) (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 eps 2)))))","(-.f64 (fma.f64 2 (pow.f64 eps -3) (/.f64 2 eps)) (+.f64 1 (/.f64 2 (*.f64 eps eps))))","(pow.f64 (cbrt.f64 -1) 2)","1","(+.f64 (*.f64 2/3 (*.f64 eps (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3))) (pow.f64 (cbrt.f64 -1) 2))","(fma.f64 2/3 (neg.f64 eps) 1)","(+.f64 (*.f64 2/3 (*.f64 eps (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 eps 2) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 2/3 (neg.f64 eps) (fma.f64 -1/3 (*.f64 (+.f64 -2 4/3) (*.f64 eps eps)) 1))","(+.f64 (*.f64 2/3 (*.f64 eps (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 eps 3) (-.f64 2 (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 eps 2) (+.f64 2 (*.f64 4/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2))))","(fma.f64 2/3 (neg.f64 eps) (fma.f64 1/3 (*.f64 (+.f64 (fma.f64 -4/3 (+.f64 -2 4/3) 8/27) -2) (pow.f64 eps 3)) (fma.f64 -1/3 (*.f64 (+.f64 -2 4/3) (*.f64 eps eps)) 1)))","(cbrt.f64 -1)","-1","(+.f64 (cbrt.f64 -1) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)))","(+.f64 -1 (/.f64 2/3 eps))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2)))))","(+.f64 -1 (+.f64 (/.f64 2/3 eps) (/.f64 -2/9 (*.f64 eps eps))))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (+.f64 (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2))) (*.f64 -22/81 (/.f64 (cbrt.f64 -1) (pow.f64 eps 3))))))","(+.f64 (+.f64 -1 (/.f64 2/3 eps)) (fma.f64 2/9 (neg.f64 (pow.f64 eps -2)) (*.f64 22/81 (pow.f64 eps -3))))","(cbrt.f64 -1)","-1","(+.f64 (cbrt.f64 -1) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)))","(+.f64 -1 (/.f64 2/3 eps))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2)))))","(+.f64 -1 (+.f64 (/.f64 2/3 eps) (/.f64 -2/9 (*.f64 eps eps))))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) eps)) (+.f64 (*.f64 2/9 (/.f64 (cbrt.f64 -1) (pow.f64 eps 2))) (*.f64 -22/81 (/.f64 (cbrt.f64 -1) (pow.f64 eps 3))))))","(+.f64 (+.f64 -1 (/.f64 2/3 eps)) (fma.f64 2/9 (neg.f64 (pow.f64 eps -2)) (*.f64 22/81 (pow.f64 eps -3))))"]],"time":223.94091796875,"type":"simplify"},{"compiler":[[4777,4163]],"time":78.60595703125,"type":"eval"},{"alts":[["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","done",59.000613193640156],["(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))","done",0.06505924734522824]],"compiler":[[12,10],[19,15]],"count":[[211,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[209,0],"picked":[1,1]}],"min-error":[0.009070031620653759],"time":18.572998046875,"type":"prune"},{"accuracy":[0.06505924734522824],"baseline":[0.06505924734522824],"branch":[["eps",0.06505924734522824,1],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))",0.06505924734522824,1],["(/.f64 (-.f64 1 eps) (+.f64 1 eps))",0.06505924734522824,1]],"compiler":[[2,1],[9,7],[8,6],[38,30]],"count":[[3,1]],"inputs":[["(log.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 eps) (-.f64 -1 eps))) 3))","(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))","(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))"]],"link":["."],"name":["logq (problem 3.4.3)"],"oracle":[59.056602409364736],"outputs":[["(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))"]],"time":7.93603515625,"times":[["eps",3.069091796875],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))",1.833984375],["(/.f64 (-.f64 1 eps) (+.f64 1 eps))",1.862060546875]],"type":"regimes"},{"compiler":[[19,15]],"inputs":[["(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))"]],"stop":[["done",1]],"time":20.9990234375,"type":"simplify"},{"time":0.032958984375,"type":"soundness"},{"compiler":[[19,15]],"remove-preprocessing":[[]],"time":14.5791015625,"type":"end"}]