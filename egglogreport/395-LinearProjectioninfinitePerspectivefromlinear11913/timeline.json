[{"compiler":[[16,11]],"method":["search"],"sampling":[[12,0.30019421675207814,0.697854088293792,0.0019516949541298345],[11,0.20272856196244238,0.7953197430834278,0.0019516949541298345],[10,0.1793368048129298,0.8187115002329404,0.0019516949541298345],[9,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[8,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":137.948974609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",41.2900390625,789],["body",256,"valid",402.248779296875,8256]],"time":452.09912109375,"type":"sample"},{"compiler":[[15,10]],"inputs":[["0","1","2","3"],["(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))","(/.f64 (*.f64 y 2) (-.f64 (*.f64 x z) (*.f64 t z)))","(/.f64 (*.f64 z 2) (-.f64 (*.f64 y x) (*.f64 t x)))","(/.f64 (*.f64 t 2) (-.f64 (*.f64 y z) (*.f64 x z)))","(/.f64 (*.f64 x 2) (-.f64 (*.f64 z y) (*.f64 t y)))","(/.f64 (*.f64 x 2) (-.f64 (*.f64 t z) (*.f64 y z)))","(/.f64 (*.f64 x 2) (-.f64 (*.f64 y t) (*.f64 z t)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))","(/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))","(/.f64 (*.f64 y 2) (-.f64 (*.f64 x z) (*.f64 t z)))","(/.f64 y (*.f64 (*.f64 z (-.f64 x t)) 1/2))","(/.f64 (*.f64 z 2) (-.f64 (*.f64 y x) (*.f64 t x)))","(/.f64 (+.f64 z z) (*.f64 x (-.f64 y t)))","(/.f64 (*.f64 t 2) (-.f64 (*.f64 y z) (*.f64 x z)))","(/.f64 t (*.f64 (*.f64 z (-.f64 y x)) 1/2))","(/.f64 (*.f64 x 2) (-.f64 (*.f64 z y) (*.f64 t y)))","(/.f64 x (*.f64 (*.f64 y (-.f64 z t)) 1/2))","(/.f64 (*.f64 x 2) (-.f64 (*.f64 t z) (*.f64 y z)))","(/.f64 (+.f64 x x) (*.f64 z (-.f64 t y)))","(/.f64 (*.f64 x 2) (-.f64 (*.f64 y t) (*.f64 z t)))","(/.f64 x (*.f64 (*.f64 t (-.f64 y z)) 1/2))"]],"symmetry":[[]],"time":89.828857421875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))","(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))"]],"time":19.2041015625,"type":"simplify"},{"compiler":[[24,15]],"time":0.39599609375,"type":"eval"},{"alts":[["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","next",6.725210873798447],["(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))","fresh",7.90671972535238]],"compiler":[[13,9],[15,10],[13,9],[15,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.07421875],"time":1.323974609375,"type":"prune"},{"compiler":[[29,12]],"locations":[["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))",6.421921468963094,true]],"time":6.04296875,"type":"localize"},{"count":[[1,48]],"series":[["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","t","-inf",0.386962890625],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","t","inf",0.451904296875],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","t","0",0.465087890625],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","y","-inf",0.38818359375],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","y","inf",0.580810546875],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","y","0",1.05517578125],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","z","-inf",0.273193359375],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","z","inf",0.5361328125],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","z","0",0.69091796875],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","x","-inf",0.659912109375],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","x","inf",0.733154296875],["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","x","0",0.93701171875]],"time":7.363037109375,"type":"series"},{"count":[[1,118]],"inputs":[["(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (/.f64 (/.f64 x z) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 0) (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) (*.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)) (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) (*.f64 0 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 x z) (*.f64 -1/2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 -1/2 (-.f64 y t))) (/.f64 (/.f64 x z) (*.f64 -1/2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2)) (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x z)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) (/.f64 2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x z)) (neg.f64 (/.f64 2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y t)) (/.f64 (/.f64 1 z) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (/.f64 2 (-.f64 y t)))) (/.f64 (/.f64 1 z) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (/.f64 2 (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x 2) (/.f64 (/.f64 -1 z) (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 x z)) (-.f64 y t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x z) 2) (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 x z) 1/8)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 y t)) (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (-.f64 y t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t y)) (/.f64 (/.f64 x z) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (-.f64 y t))) (/.f64 (/.f64 x z) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (/.f64 x z) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 x z) (*.f64 -1/2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 2 (-.f64 y t))) (neg.f64 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x z) 2) (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))) (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) 1/2) (/.f64 -1 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))) (cbrt.f64 (/.f64 2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) 2) (/.f64 (cbrt.f64 (/.f64 x z)) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) (/.f64 2 (-.f64 y t))) (cbrt.f64 (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) (-.f64 y t)) (cbrt.f64 (/.f64 (/.f64 x z) 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))) (*.f64 x (cbrt.f64 (/.f64 2 (-.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 y t)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 z) (-.f64 t y)) (*.f64 x 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (*.f64 -1/2 (-.f64 y t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) 1/2) (/.f64 x (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 -1/2 (-.f64 y t))) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (sqrt.f64 1/2)) (/.f64 1 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (-.f64 t y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x z) (cbrt.f64 (/.f64 2 (-.f64 y t)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y t) 1/2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (*.f64 (*.f64 (-.f64 y t) 1/2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (sqrt.f64 1/2))) (neg.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2))) (neg.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (-.f64 t y)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x z) 1/2)) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (neg.f64 (neg.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x z)) (*.f64 -1/2 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 -1/2 (-.f64 y t))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (sqrt.f64 1/2)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x z) (cbrt.f64 (/.f64 2 (-.f64 y t)))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) 1/2) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (-.f64 y t)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2)) (cbrt.f64 (/.f64 x z))) (cbrt.f64 (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2)) (cbrt.f64 (neg.f64 (/.f64 x z)))) (cbrt.f64 (*.f64 -1/2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2)) (cbrt.f64 (/.f64 (/.f64 x z) (-.f64 y t)))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 x z) 1/8)) (cbrt.f64 (pow.f64 (/.f64 x z) 2))) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (cbrt.f64 (/.f64 2 (-.f64 y t)))) (/.f64 1 z)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (-.f64 y t))) (/.f64 x z)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (-.f64 y t)) (/.f64 x (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 x z)) (-.f64 y t)) (cbrt.f64 (pow.f64 (/.f64 x z) 2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 x z)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 (/.f64 x z) (cbrt.f64 (-.f64 y t)))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (neg.f64 (/.f64 x z))) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 y t)) (/.f64 1 z)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)) (cbrt.f64 (pow.f64 (/.f64 x z) 2))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x 2) (/.f64 1 z)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (neg.f64 (/.f64 2 (-.f64 y t)))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 (/.f64 2 (-.f64 y t)))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (/.f64 1 z) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))) (cbrt.f64 (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x z)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x z) 2) (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))) (cbrt.f64 (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x z)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2))) (cbrt.f64 (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 x z))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x z) 2) (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))) (cbrt.f64 (*.f64 -1/2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 x z))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2))) (cbrt.f64 (*.f64 -1/2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 x z) (-.f64 y t))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x z) 2) (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 x z) (-.f64 y t))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 2))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (/.f64 1 z) 1/2)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) (/.f64 2 (-.f64 y t)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) (/.f64 2 (-.f64 y t)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x z)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x z) 2)) 2)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (sqrt.f64 1/2)) 1) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 x z) (cbrt.f64 (/.f64 2 (-.f64 y t)))) 1) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (*.f64 -1/2 (-.f64 y t))) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x z) 1/2) 1) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 t y)) 1) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) 1) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 z)) (/.f64 2 (-.f64 y t))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x z) (cbrt.f64 (-.f64 y t))) 2) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 x z)) 2) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))) (cbrt.f64 (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (cbrt.f64 (-.f64 y t))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (*.f64 -1/2 (-.f64 y t)))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 x z) (cbrt.f64 (/.f64 2 (-.f64 y t))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) 1/2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 x z) (*.f64 -1/2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 x z) (*.f64 -1/2 (-.f64 y t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 x z)) (/.f64 2 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 2 (-.f64 y t)) (neg.f64 (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 x z) (-.f64 y t)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z) 3))))))"]],"rules":[["egg-rr",118]],"time":26.60009765625,"type":"rewrite"},{"count":[[166,136]],"inputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))"]],"time":151.666015625,"type":"simplify"},{"compiler":[[2165,1061]],"time":22.114990234375,"type":"eval"},{"alts":[["(*.f64 (/.f64 x (-.f64 y t)) (/.f64 (/.f64 1 z) 1/2))","fresh",5.66130824165518],["(/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))","fresh",5.652813475352381],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","next",5.623632573570947],["(*.f64 (/.f64 2 (-.f64 y t)) (/.f64 x z))","fresh",6.756460871561958],["(*.f64 x (/.f64 1 (*.f64 (*.f64 (-.f64 y t) 1/2) z)))","fresh",5.723125975352381],["(*.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 1/4)))","fresh",6.857729674877142]],"compiler":[[15,11],[13,9],[13,9],[13,9],[15,11],[19,15],[15,11],[13,9],[13,9],[13,9],[15,11],[19,15]],"count":[[138,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[136,6],"picked":[1,0]}],"min-error":[0],"time":38.595947265625,"type":"prune"},{"compiler":[[31,15]],"locations":[["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)",5.568586765298013,true]],"time":6.705078125,"type":"localize"},{"count":[[1,48]],"series":[["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","z","-inf",0.18701171875],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","z","inf",0.159912109375],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","z","0",0.180908203125],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","t","-inf",0.2119140625],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","t","inf",0.240966796875],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","t","0",0.202880859375],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","y","-inf",0.242919921875],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","y","inf",0.2138671875],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","y","0",0.2109375],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","x","-inf",0.194091796875],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","x","inf",0.177001953125],["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","x","0",0.23681640625]],"time":2.622802734375,"type":"series"},{"count":[[1,130]],"inputs":[["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 0) (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) (*.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))) (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) (*.f64 0 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))) (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 2)) (cbrt.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 z)) (/.f64 (/.f64 -1 (-.f64 t y)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 -1 (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 x (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) 2)) z) (cbrt.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 (-.f64 t y) z)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 (-.f64 t y)) (cbrt.f64 (*.f64 z z))) (/.f64 (+.f64 x x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (/.f64 (+.f64 x x) (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (-.f64 t y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (-.f64 y t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (*.f64 (*.f64 (-.f64 y t) 1/2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 x) (/.f64 1 (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 x) z) (/.f64 1 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) z) (/.f64 -1 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t)))) (*.f64 (neg.f64 z) (cbrt.f64 (pow.f64 (-.f64 y t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (neg.f64 z) (*.f64 (-.f64 t y) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (+.f64 x x)) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t)))) (*.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (neg.f64 x)) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (-.f64 t y) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 -2 x)) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) x) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 z)) (*.f64 (-.f64 y t) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (/.f64 1 z))) (*.f64 (*.f64 (-.f64 y t) 1/2) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) -1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) (cbrt.f64 (/.f64 1 z))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 x) (cbrt.f64 (/.f64 1 z))) (*.f64 (-.f64 t y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (*.f64 (-.f64 t y) 1/2) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (cbrt.f64 (/.f64 1 z))) (*.f64 (*.f64 (-.f64 t y) 1/2) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x z)) (*.f64 (-.f64 t y) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) z) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (*.f64 (-.f64 t y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) z) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 2)) (cbrt.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 2)) (cbrt.f64 (/.f64 (+.f64 x x) (-.f64 t y)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))) (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 z)) (/.f64 -1 (-.f64 t y))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 x (*.f64 (-.f64 y t) 1/2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t)))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 x)) (*.f64 (-.f64 t y) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2))) (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 x x) (-.f64 t y))) (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 -1 z)) (*.f64 (-.f64 y t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 x) (/.f64 -1 z)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (/.f64 -1 z)) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) (/.f64 1 z)) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 1 z)) (*.f64 (-.f64 t y) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) 2)) z)) (cbrt.f64 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) 2)) z)) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) 2)) z)) (cbrt.f64 (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x z) 1) (*.f64 (-.f64 y t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -2 x) z) 1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) z) 1) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (/.f64 (/.f64 -1 (-.f64 t y)) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (pow.f64 (-.f64 y t) 2))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) -1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) 1) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) z) (cbrt.f64 (-.f64 t y))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) z) (cbrt.f64 (-.f64 y t))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) z) 1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) z) -1) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (cbrt.f64 (*.f64 (-.f64 y t) 1/2))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y t) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (*.f64 (cbrt.f64 (-.f64 y t)) (sqrt.f64 1/2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) 1) (*.f64 (-.f64 y t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (cbrt.f64 (*.f64 (-.f64 y t) 1/2))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 y t) 2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (sqrt.f64 1/2)) (*.f64 (-.f64 y t) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (cbrt.f64 1/2)) (/.f64 (-.f64 y t) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (-.f64 y t)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x z) (cbrt.f64 (-.f64 y t))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (/.f64 (*.f64 (-.f64 t y) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (/.f64 (*.f64 (-.f64 y t) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 y t)) (/.f64 z 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (*.f64 (-.f64 y t) 1/2) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (*.f64 (-.f64 y t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (*.f64 (-.f64 t y) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) (*.f64 z (cbrt.f64 (pow.f64 (-.f64 y t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 z (*.f64 (-.f64 t y) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (*.f64 (neg.f64 z) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (*.f64 (neg.f64 z) (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (neg.f64 z) (*.f64 (-.f64 y t) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (*.f64 (-.f64 t y) 1/2) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (*.f64 (*.f64 (-.f64 t y) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (*.f64 (*.f64 (-.f64 y t) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 (*.f64 (-.f64 y t) 1/2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (*.f64 (-.f64 y t) 1/2)) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 -2 x) z)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 z) (/.f64 (+.f64 x x) (-.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z)) 3))))))"]],"rules":[["egg-rr",130]],"time":26.467041015625,"type":"rewrite"},{"count":[[178,148]],"inputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))"]],"time":151.651123046875,"type":"simplify"},{"compiler":[[2287,1014]],"time":22.325927734375,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","done",5.623632573570947],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","next",5.652813475352381],["(*.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 1/4)))","fresh",6.857729674877142],["(*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))","fresh",6.756460871561958],["(*.f64 (+.f64 x x) (/.f64 -1 (*.f64 (-.f64 t y) z)))","fresh",5.723125975352381],["(*.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (/.f64 -1 z))","fresh",5.654882573765899]],"compiler":[[13,9],[13,8],[19,15],[13,9],[15,10],[15,10],[13,8],[19,15],[13,9],[15,10],[15,10]],"count":[[154,6]],"kept":[{"done":[0,0],"fresh":[5,1],"new":[148,4],"picked":[1,1]}],"min-error":[0],"time":41.60302734375,"type":"prune"},{"compiler":[[28,8]],"locations":[["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))",5.604356863502591,true]],"time":5.447998046875,"type":"localize"},{"count":[[1,48]],"series":[["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","z","-inf",0.1630859375],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","z","inf",0.1650390625],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","z","0",0.176025390625],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","t","-inf",0.2109375],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","t","inf",0.239990234375],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","t","0",0.201904296875],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","y","-inf",0.243896484375],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","y","inf",0.213134765625],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","y","0",0.233154296875],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","x","-inf",0.169189453125],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","x","inf",0.2041015625],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","x","0",0.198974609375]],"time":2.60498046875,"type":"series"},{"count":[[1,105]],"inputs":[["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 (-.f64 y t) z)) (/.f64 x (*.f64 (-.f64 y t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 0) (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) (*.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)) (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) (*.f64 0 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (-.f64 t y) z)) (/.f64 (+.f64 x x) (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 x x) (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 x x) (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 z)) (/.f64 1 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2)) (cbrt.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 x) (/.f64 (/.f64 -1 (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x x)) (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) (*.f64 (-.f64 y t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x x)) z) (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x x)) (-.f64 y t)) (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (*.f64 (-.f64 y t) z))) (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (-.f64 t y)) (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 (/.f64 -1 (-.f64 t y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 (-.f64 t y)) z) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (+.f64 x x) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 -1 (-.f64 t y)) z)) (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t y)) (/.f64 (+.f64 x x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (-.f64 y t) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 (-.f64 y t)) z) (*.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) (*.f64 (-.f64 y t) z)) (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y t)) (/.f64 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) z) (/.f64 -1 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))) (cbrt.f64 (/.f64 (/.f64 -1 (-.f64 t y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) (-.f64 y t)) (/.f64 (cbrt.f64 (+.f64 x x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (*.f64 (-.f64 t y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) (/.f64 -2 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) z) (/.f64 (cbrt.f64 (+.f64 x x)) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))) (cbrt.f64 (/.f64 8 (*.f64 (-.f64 y t) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (*.f64 (-.f64 y t) z))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y t) z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 x) (-.f64 y t)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -2 (-.f64 t y)) x) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (+.f64 x x)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (*.f64 -2 x)) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 -1 (-.f64 t y)) z)) (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (*.f64 (-.f64 y t) z))) x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 x x)) z) (cbrt.f64 (*.f64 4 (*.f64 x x)))) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 x x)) (-.f64 y t)) (cbrt.f64 (*.f64 4 (*.f64 x x)))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2)) (cbrt.f64 (/.f64 (+.f64 x x) (-.f64 y t)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)) (cbrt.f64 (*.f64 4 (*.f64 x x)))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 z) x) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 x) (/.f64 1 z)) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 x z)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 x x) (-.f64 y t))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) z)) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (*.f64 (-.f64 y t) z))) 1) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) z) 1) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -2 x) (-.f64 y t)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 z)) (cbrt.f64 z)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (cbrt.f64 (*.f64 (-.f64 y t) z))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (-.f64 y t) z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (-.f64 y t) z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (cbrt.f64 (*.f64 (-.f64 y t) z))) 1) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) z) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) z) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 (*.f64 (-.f64 y t) z))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (pow.f64 (-.f64 y t) 2))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) -1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 x x) (-.f64 y t))) (cbrt.f64 (*.f64 4 (*.f64 x x)))) (*.f64 (cbrt.f64 z) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) (-.f64 y t)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 x x) z)) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (*.f64 (-.f64 t y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t)))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2)) (cbrt.f64 (+.f64 x x))) (cbrt.f64 (*.f64 (-.f64 y t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2)) (cbrt.f64 (*.f64 -2 x))) (cbrt.f64 (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 x (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2)))) (cbrt.f64 (*.f64 (-.f64 y t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))) (cbrt.f64 (*.f64 (-.f64 y t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y t))) (/.f64 1 z)) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2))) (cbrt.f64 (*.f64 (-.f64 y t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 x)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 2))) (cbrt.f64 (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) (cbrt.f64 (*.f64 (-.f64 y t) z))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) -1) (*.f64 (-.f64 t y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (*.f64 (-.f64 y t) (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (*.f64 z (cbrt.f64 (-.f64 y t)))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (*.f64 (-.f64 y t) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 x x) (cbrt.f64 (*.f64 (-.f64 y t) z)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y t) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x x) (*.f64 (-.f64 t y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 x x) (*.f64 (-.f64 t y) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) 3))))))"]],"rules":[["egg-rr",105]],"time":25.123046875,"type":"rewrite"},{"count":[[153,122]],"inputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))"]],"time":151.389892578125,"type":"simplify"},{"compiler":[[2027,686]],"time":16.47705078125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","done",5.623632573570947],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","done",5.652813475352381],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","next",5.66130824165518],["(*.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 1/4)))","fresh",6.857729674877142],["(*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))","fresh",6.756460871561958],["(*.f64 (+.f64 x x) (/.f64 -1 (*.f64 (-.f64 t y) z)))","fresh",5.723125975352381]],"compiler":[[13,9],[13,8],[13,9],[19,15],[13,9],[15,10],[13,9],[19,15],[13,9],[15,10]],"count":[[128,6]],"kept":[{"done":[1,1],"fresh":[4,3],"new":[122,1],"picked":[1,1]}],"min-error":[0],"time":31.343017578125,"type":"prune"},{"compiler":[[29,12]],"locations":[["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))",5.606262433382247,true]],"time":5.927978515625,"type":"localize"},{"count":[[1,48]],"series":[["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","t","-inf",0.2119140625],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","t","inf",0.239013671875],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","t","0",0.2021484375],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","y","-inf",0.242919921875],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","y","inf",0.2109375],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","y","0",0.22998046875],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","x","-inf",0.1650390625],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","x","inf",0.1669921875],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","x","0",0.18115234375],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","z","-inf",0.16796875],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","z","inf",0.19580078125],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","z","0",0.2041015625]],"time":2.60107421875,"type":"series"},{"count":[[1,112]],"inputs":[["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) (*.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 0) (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) (*.f64 0 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))) (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2)) (cbrt.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 y t))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y t)) 2)) (/.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -2 x) (*.f64 z (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 x) (*.f64 z (-.f64 y t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y t)) 2)) (/.f64 2 z)) (cbrt.f64 (/.f64 x (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 z)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 z) 2)) (/.f64 x (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 -1 (*.f64 z (-.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 z)) (/.f64 (/.f64 x (-.f64 y t)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 z) (cbrt.f64 (-.f64 y t))) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 y t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y t)) (/.f64 2 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 y t)) (cbrt.f64 (/.f64 2 z))) (cbrt.f64 (pow.f64 (/.f64 2 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 2 z) (cbrt.f64 (/.f64 x (-.f64 y t)))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) z) (/.f64 -1 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (/.f64 -2 z) (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (/.f64 x (-.f64 y t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 y t)) z) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 y t)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 8 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 2 z) 2)) (*.f64 (/.f64 x (-.f64 y t)) (cbrt.f64 (/.f64 2 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y t)) 2)) (*.f64 (/.f64 2 z) (cbrt.f64 (/.f64 x (-.f64 y t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -2 z) (-.f64 t y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 z (-.f64 t y))) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 z) 2)) (/.f64 x (-.f64 y t))) (cbrt.f64 (/.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 y t) 2))) (/.f64 (/.f64 2 z) (cbrt.f64 (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (*.f64 -2 x) (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t y)) (/.f64 (+.f64 x x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 x) (/.f64 1 (*.f64 z (-.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 x) z) (/.f64 1 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) (pow.f64 (cbrt.f64 (-.f64 y t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 z) (/.f64 x (cbrt.f64 (-.f64 y t)))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 z) (cbrt.f64 (-.f64 y t))) x) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 y t))) (/.f64 2 z)) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 x) 1) (*.f64 z (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) 1) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) 1) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y t))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y t))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (*.f64 z (cbrt.f64 (-.f64 y t)))) (cbrt.f64 (pow.f64 (-.f64 y t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 (*.f64 z (-.f64 y t)))) (pow.f64 (cbrt.f64 (*.f64 z (-.f64 y t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) z) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (*.f64 z (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) z) (-.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) z) -1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2)) (cbrt.f64 (+.f64 x x))) (cbrt.f64 (*.f64 z (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2)) (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2)) (cbrt.f64 (/.f64 (+.f64 x x) z))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 y t)) (*.f64 z 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 y t)) (cbrt.f64 (/.f64 8 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 z)) (/.f64 x (-.f64 y t))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2))) (cbrt.f64 (*.f64 z (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 t y))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 x x) z)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 2))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 -2 x) z) 1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 t y)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2) (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 z) 2)) (/.f64 x (-.f64 y t)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 z) 2)) (/.f64 x (-.f64 y t)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 (/.f64 x (-.f64 y t)) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y t)) 2)) (/.f64 2 z))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y t)) 2)) (/.f64 2 z))) (cbrt.f64 (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 z) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 y t) 2)))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 x) (/.f64 1 z)) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (pow.f64 (-.f64 y t) 2))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) z) -1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) z) (cbrt.f64 (-.f64 y t))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 -2 x) z) 1) (-.f64 t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t))) (cbrt.f64 (-.f64 y t))) (cbrt.f64 (-.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 z)) (cbrt.f64 z)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (*.f64 z (-.f64 y t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (*.f64 z (-.f64 t y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (*.f64 z (-.f64 y t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (*.f64 z (-.f64 t y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (+.f64 x x) z) (cbrt.f64 (-.f64 y t)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 t y)) (/.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -2 x) (*.f64 z (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -2 (/.f64 (/.f64 x (-.f64 y t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -2 z) (/.f64 x (-.f64 y t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 2 z) (/.f64 x (-.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 y t)) (/.f64 -2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (+.f64 x x) z) (-.f64 t y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 -2 x) (-.f64 t y)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x x) (*.f64 z (-.f64 y t))) 3))))))"]],"rules":[["egg-rr",112]],"time":25.54296875,"type":"rewrite"},{"count":[[160,130]],"inputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 2 (/.f64 x (*.f64 (-.f64 y t) z)))","(/.f64 (/.f64 (*.f64 2 x) z) (-.f64 y t))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 2 (/.f64 x (*.f64 y z)))","(/.f64 (*.f64 2 x) (*.f64 y z))","(+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z)))))","(*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (pow.f64 y 3) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z))) (+.f64 (*.f64 2 (/.f64 (*.f64 t x) (*.f64 (pow.f64 y 2) z))) (*.f64 2 (/.f64 x (*.f64 y z))))))","(fma.f64 2 (/.f64 (*.f64 (*.f64 t t) x) (*.f64 (pow.f64 y 3) z)) (*.f64 2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 t x) (*.f64 y y)) (/.f64 x y)) z) (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (pow.f64 y 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))","(*.f64 -2 (/.f64 x (*.f64 t z)))","(/.f64 (*.f64 -2 x) (*.f64 t z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))","(*.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 y x) (*.f64 t t)) (/.f64 x t)) z))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z)))))","(*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) z))) (*.f64 -2 (/.f64 x (*.f64 t z))))))","(fma.f64 -2 (/.f64 (*.f64 y x) (*.f64 (*.f64 t t) z)) (*.f64 -2 (+.f64 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 t 3)) (/.f64 x t)) z) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) z)))))"]],"time":151.60498046875,"type":"simplify"},{"compiler":[[2053,786]],"time":18.27197265625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","done",5.623632573570947],["(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","done",5.652813475352381],["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","done",5.66130824165518],["(*.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 1/4)))","fresh",6.857729674877142],["(*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))","fresh",6.756460871561958],["(*.f64 (+.f64 x x) (/.f64 -1 (*.f64 (-.f64 t y) z)))","fresh",5.723125975352381]],"compiler":[[13,9],[13,8],[13,9],[19,15],[13,9],[15,10]],"count":[[136,6]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[130,0],"picked":[1,1]}],"min-error":[0],"time":33.028076171875,"type":"prune"},{"accuracy":[0.12890625],"baseline":[5.623632573570947],"branch":[["x",2.42578125,3],["y",4.516854810501022,2],["z",2.3936239980726315,3],["t",3.0166409626579966,4],["(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))",0.4140625,4],["(*.f64 x 2)",2.42578125,3],["(*.f64 x 2)",2.42578125,3],["(-.f64 (*.f64 y z) (*.f64 t z))",0.12890625,5]],"compiler":[[5,4],[5,4],[5,4],[5,4],[15,10],[7,6],[7,6],[11,7],[137,65]],"count":[[13,5]],"inputs":[["(*.f64 (/.f64 2 z) (/.f64 x (-.f64 y t)))","(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","(*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))","(*.f64 (+.f64 x x) (/.f64 -1 (*.f64 (-.f64 t y) z)))","(*.f64 (/.f64 (+.f64 x x) (-.f64 t y)) (/.f64 -1 z))","(*.f64 (/.f64 x (-.f64 y t)) (/.f64 (/.f64 1 z) 1/2))","(/.f64 x (*.f64 (*.f64 (-.f64 y t) 1/2) z))","(/.f64 (/.f64 (*.f64 x 2) (-.f64 y t)) z)","(*.f64 (/.f64 2 (-.f64 y t)) (/.f64 x z))","(*.f64 x (/.f64 1 (*.f64 (*.f64 (-.f64 y t) 1/2) z)))","(*.f64 (*.f64 (/.f64 (/.f64 x z) (-.f64 y t)) (cbrt.f64 2)) (/.f64 1 (cbrt.f64 1/4)))","(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))"]],"link":["."],"name":["Linear.Projection:infinitePerspective from linear-1.19.1.3, A"],"oracle":[20.167281372347823],"outputs":[["(*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))","(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","(/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2))","(/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z))","(*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))"]],"time":131.72900390625,"times":[["x",14.0830078125],["y",13.972900390625],["z",18.497802734375],["t",18.39794921875],["(/.f64 (*.f64 x 2) (-.f64 (*.f64 y z) (*.f64 t z)))",14.191162109375],["(*.f64 x 2)",14.220947265625],["(*.f64 x 2)",14.246826171875],["(-.f64 (*.f64 y z) (*.f64 t z))",21.305908203125]],"type":"regimes"},{"bstep":[[5.275165369593511e+191,5.148306844988042e+198,0.026123046875],[4.6092526817574026e-169,4.548214925880579e-158,0.028076171875],[-8.489533745131558e-185,-1.384956291976679e-187,0.049072265625],[-7.805014339822597e+247,-1.802872634143447e+245,0.098876953125]],"compiler":[[11,9],[11,7]],"method":["left-value","left-value","left-value","left-value"],"time":0.380859375,"type":"bsearch"},{"compiler":[[89,33]],"inputs":[["(if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) -50000000000000002264914023363570873473620092318771332891876656950378507639404832118106181454034316044065455720176623422002946717096999401107726465223044023895361617250089396116690506456651468006763909202353827454425907202639354864338375178146807808) (*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t))) (if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) -3827252586451049/76545051729020975577310162521900618820659871603466655644272117978380005723696097587725184512638784526308634214455061267843403507870735540391292521535824647434568377082591826884769598224146796816367616) (/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z)) (if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) 4249103942534137/8498207885068273579033411304839498037273489883632510771191106211206456957773635883826600036243668570702229271779944016245545269402443315830552319660265397631101300333366291504507650048) (/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2)) (if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) 1000000000000000040900880208761398001286019738266296957960021713442094663491997727554362004538245197373563261847757813447631532786297905940174312186739777303375354598782943738754654264509857792) (/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z)) (*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) -50000000000000002264914023363570873473620092318771332891876656950378507639404832118106181454034316044065455720176623422002946717096999401107726465223044023895361617250089396116690506456651468006763909202353827454425907202639354864338375178146807808) (*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t))) (if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) -3827252586451049/76545051729020975577310162521900618820659871603466655644272117978380005723696097587725184512638784526308634214455061267843403507870735540391292521535824647434568377082591826884769598224146796816367616) (/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z)) (if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) 4249103942534137/8498207885068273579033411304839498037273489883632510771191106211206456957773635883826600036243668570702229271779944016245545269402443315830552319660265397631101300333366291504507650048) (/.f64 (/.f64 x z) (*.f64 (-.f64 y t) 1/2)) (if (<=.f64 (-.f64 (*.f64 y z) (*.f64 t z)) 1000000000000000040900880208761398001286019738266296957960021713442094663491997727554362004538245197373563261847757813447631532786297905940174312186739777303375354598782943738754654264509857792) (/.f64 (+.f64 x x) (*.f64 (-.f64 y t) z)) (*.f64 (/.f64 x z) (/.f64 2 (-.f64 y t)))))))","(if (<=.f64 (*.f64 (-.f64 y t) z) -50000000000000002264914023363570873473620092318771332891876656950378507639404832118106181454034316044065455720176623422002946717096999401107726465223044023895361617250089396116690506456651468006763909202353827454425907202639354864338375178146807808) (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) (if (<=.f64 (*.f64 (-.f64 y t) z) -3827252586451049/76545051729020975577310162521900618820659871603466655644272117978380005723696097587725184512638784526308634214455061267843403507870735540391292521535824647434568377082591826884769598224146796816367616) (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) (if (<=.f64 (*.f64 (-.f64 y t) z) 4249103942534137/8498207885068273579033411304839498037273489883632510771191106211206456957773635883826600036243668570702229271779944016245545269402443315830552319660265397631101300333366291504507650048) (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) (if (<=.f64 (*.f64 (-.f64 y t) z) 1000000000000000040900880208761398001286019738266296957960021713442094663491997727554362004538245197373563261847757813447631532786297905940174312186739777303375354598782943738754654264509857792) (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z) (/.f64 (/.f64 (+.f64 x x) (-.f64 y t)) z)))))"]],"stop":[["fuel",1]],"time":25.884033203125,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[89,33]],"remove-preprocessing":[[]],"time":16.384033203125,"type":"end"}]