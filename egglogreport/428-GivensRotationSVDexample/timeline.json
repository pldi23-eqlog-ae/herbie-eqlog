[{"compiler":[[28,20]],"method":["search"],"sampling":[[12,0.35931999222105043,0.1270563092123344,0.5136236985666152],[11,0.3557576657945364,0.13061863563884846,0.5136236985666152],[10,0.3543327352239308,0.1320435662094541,0.5136236985666152],[9,0.3476830592277712,0.13869324220561366,0.5136236985666152],[8,0.34578315180029706,0.1405931496330878,0.5136236985666152],[7,0.3343837072354521,0.15199259419793276,0.5136236985666152],[6,0.3343837072354521,0.15199259419793276,0.5136236985666152],[5,0.3039851883958655,0.18239111303751931,0.5136236985666152],[4,0.3039851883958655,0.18239111303751931,0.5136236985666152],[3,0.24318815071669242,0.24318815071669242,0.5136236985666152],[2,0.24318815071669242,0.24318815071669242,0.5136236985666152],[1,0.0,0.48637630143338484,0.5136236985666152],[0,0.0,0.48637630143338484,0.5136236985666152]],"time":130.656005859375,"type":"analyze"},{"outcomes":[["body",4096,"valid",78.9482421875,265],["body",512,"valid",30.85595703125,253],["body",1024,"valid",98.860595703125,564],["body",2048,"valid",201.5517578125,852],["body",256,"valid",398.1123046875,6322]],"time":817.141845703125,"type":"sample"},{"compiler":[[19,14]],"inputs":[["0","1"],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))","(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 p (sqrt.f64 (+.f64 (*.f64 (*.f64 4 x) x) (*.f64 p p)))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))","(sqrt.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 x) (hypot.f64 (*.f64 2 p) x))))","(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 p (sqrt.f64 (+.f64 (*.f64 (*.f64 4 x) x) (*.f64 p p)))))))","(sqrt.f64 (+.f64 1/2 (/.f64 (*.f64 1/2 p) (hypot.f64 (*.f64 2 x) p))))"]],"symmetry":[[]],"time":65.677001953125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))","(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))"]],"time":21.84814453125,"type":"simplify"},{"compiler":[[30,22]],"time":0.517822265625,"type":"eval"},{"alts":[["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","next",16.21845430820683]],"compiler":[[13,10],[13,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[16.21845430820683],"time":2.27001953125,"type":"prune"},{"compiler":[[42,28]],"locations":[["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))",0.00390625,true],["(hypot.f64 (*.f64 2 p) x)",0.00390625,true],["(/.f64 x (hypot.f64 (*.f64 2 p) x))",0.0078125,true],["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)",0.4553281980626605,true]],"time":10.343017578125,"type":"localize"},{"count":[[4,96]],"series":[["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","p","-inf",0.286865234375],["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","p","inf",0.39013671875],["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","p","0",0.45703125],["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","x","-inf",0.98095703125],["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","x","inf",0.51513671875],["(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","x","0",0.44189453125],["(hypot.f64 (*.f64 2 p) x)","x","-inf",0.25],["(hypot.f64 (*.f64 2 p) x)","x","inf",0.22509765625],["(hypot.f64 (*.f64 2 p) x)","x","0",0.18701171875],["(hypot.f64 (*.f64 2 p) x)","p","-inf",0.637939453125],["(hypot.f64 (*.f64 2 p) x)","p","inf",0.235107421875],["(hypot.f64 (*.f64 2 p) x)","p","0",0.24609375],["(/.f64 x (hypot.f64 (*.f64 2 p) x))","p","-inf",0.342041015625],["(/.f64 x (hypot.f64 (*.f64 2 p) x))","p","inf",0.60205078125],["(/.f64 x (hypot.f64 (*.f64 2 p) x))","p","0",0.21923828125],["(/.f64 x (hypot.f64 (*.f64 2 p) x))","x","-inf",0.28515625],["(/.f64 x (hypot.f64 (*.f64 2 p) x))","x","inf",0.27001953125],["(/.f64 x (hypot.f64 (*.f64 2 p) x))","x","0",0.39599609375],["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)","p","-inf",0.3427734375],["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)","p","inf",0.458984375],["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)","p","0",0.572021484375],["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)","x","-inf",1.481201171875],["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)","x","inf",0.87890625],["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)","x","0",0.733154296875]],"time":11.866943359375,"type":"series"},{"count":[[4,243]],"inputs":[["(fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2)","(/.f64 x (hypot.f64 (*.f64 2 p) x))","(hypot.f64 (*.f64 2 p) x)","(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 0) (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (*.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 1/2) (*.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (*.f64 0 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (*.f64 1/2 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (+.f64 (cbrt.f64 1/4) (/.f64 (*.f64 (cbrt.f64 1/4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (+.f64 (/.f64 (*.f64 (cbrt.f64 1/4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) 1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 3) 1/8) (/.f64 1 (-.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 2) 1/4) (/.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 0) (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 2)) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (sqrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (+.f64 (sqrt.f64 1/2) (/.f64 (*.f64 (sqrt.f64 1/2) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (+.f64 (/.f64 (*.f64 (sqrt.f64 1/2) x) (hypot.f64 (+.f64 p p) x)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 1 (/.f64 x (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 3) 1/8) (-.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 2) 1/4) (/.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 3) 1/8) 1) (-.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 2) 1/4) (/.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 3) 1/8) (+.f64 1/4 (-.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 2) (/.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 x) 2) (hypot.f64 (+.f64 p p) x)) (*.f64 2 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 x) (sqrt.f64 2)) (*.f64 (hypot.f64 (+.f64 p p) x) (sqrt.f64 1/2))) (*.f64 (hypot.f64 (+.f64 p p) x) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 x) -2) (neg.f64 (hypot.f64 (+.f64 p p) x))) (*.f64 (hypot.f64 (+.f64 p p) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 1/2 x) (cbrt.f64 4)) (*.f64 (hypot.f64 (+.f64 p p) x) (cbrt.f64 1/2))) (*.f64 (hypot.f64 (+.f64 p p) x) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x 2) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) 1)) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (sqrt.f64 2)) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) (sqrt.f64 1/2))) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x -2) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) -1)) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 4)) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 1/2))) (*.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) -2) -2) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) 2) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) 1)) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (sqrt.f64 2)) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) (sqrt.f64 1/2))) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) -2) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) -1)) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 4)) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) (cbrt.f64 1/2))) (*.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x -2) 2) (neg.f64 (hypot.f64 (+.f64 p p) x))) (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x -2) (sqrt.f64 2)) (*.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) (sqrt.f64 1/2))) (*.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x -2) -2) (hypot.f64 (+.f64 p p) x)) (*.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x -2) (cbrt.f64 4)) (*.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 1/2))) (*.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) (*.f64 2 (/.f64 x -2))) (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (hypot.f64 (+.f64 p p) x) (*.f64 2 (*.f64 1/2 x))) (*.f64 2 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x))) (*.f64 2 (neg.f64 x))) (*.f64 2 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)) (*.f64 2 x)) (*.f64 2 (*.f64 2 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (hypot.f64 (+.f64 p p) x) (*.f64 -2 (/.f64 x -2))) (*.f64 -2 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -2 (*.f64 -2 (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) (*.f64 -2 (*.f64 1/2 x))) (*.f64 -2 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)))) (*.f64 -2 (neg.f64 x))) (*.f64 -2 (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -1 (*.f64 2 (hypot.f64 (+.f64 p p) x))) (*.f64 -2 x)) (*.f64 -2 (*.f64 2 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 1/2) (neg.f64 (hypot.f64 (+.f64 p p) x))) (*.f64 (sqrt.f64 2) (/.f64 x -2))) (*.f64 (sqrt.f64 2) (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 1/2) (hypot.f64 (+.f64 p p) x)) (*.f64 (sqrt.f64 2) (*.f64 1/2 x))) (*.f64 (sqrt.f64 2) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 1/2) (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)))) (*.f64 (sqrt.f64 2) (neg.f64 x))) (*.f64 (sqrt.f64 2) (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 2 (hypot.f64 (+.f64 p p) x))) (*.f64 (sqrt.f64 2) x)) (*.f64 (sqrt.f64 2) (*.f64 2 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (neg.f64 (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 4) (/.f64 x -2))) (*.f64 (cbrt.f64 4) (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (hypot.f64 (+.f64 p p) x)) (*.f64 (cbrt.f64 4) (*.f64 1/2 x))) (*.f64 (cbrt.f64 4) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) (neg.f64 x))) (*.f64 (cbrt.f64 4) (neg.f64 (*.f64 2 (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (*.f64 2 (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 2 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 3) 1/8) 1) (*.f64 (-.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 2) 1/4) (/.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 3) 1/8)) (neg.f64 (-.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 2) 1/4) (/.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (/.f64 x (hypot.f64 (+.f64 p p) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2) 2) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (sqrt.f64 2)) (*.f64 2 (sqrt.f64 1/2))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (*.f64 2 (/.f64 x (hypot.f64 (+.f64 p p) x)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 2) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (sqrt.f64 1/2) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (cbrt.f64 1/4) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/2) (neg.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 1/2)) (neg.f64 (sqrt.f64 1/2)) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 1 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (/.f64 (*.f64 (sqrt.f64 1/2) x) (hypot.f64 (+.f64 p p) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)))) (cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 1/4) x) (hypot.f64 (+.f64 p p) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1/2 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1/2 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 1 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 0) (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (hypot.f64 (+.f64 p p) x))) (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (*.f64 0 (/.f64 x (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (hypot.f64 (+.f64 p p) x))) (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2)) (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (+.f64 p p) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) (neg.f64 1/3)) (/.f64 x (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (hypot.f64 (+.f64 p p) x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))) (pow.f64 (hypot.f64 (+.f64 p p) x) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (hypot.f64 (+.f64 p p) x))) (sqrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)))) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2)) (cbrt.f64 x)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) (neg.f64 1/3)) x) (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2))) (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (neg.f64 (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x)))) (neg.f64 (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (+.f64 p p) x) 0) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (hypot.f64 (+.f64 p p) x) (*.f64 (hypot.f64 (+.f64 p p) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (+.f64 p p) x) 1/2) (*.f64 (hypot.f64 (+.f64 p p) x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (hypot.f64 (+.f64 p p) x)) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (hypot.f64 (+.f64 p p) x) (*.f64 0 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (hypot.f64 (+.f64 p p) x)) (*.f64 1/2 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) (sqrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (+.f64 p p) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))) (neg.f64 (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) -1) (*.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (hypot.f64 (+.f64 p p) x))) (*.f64 -1 (sqrt.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 0) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (+.f64 p p) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (+.f64 p p) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 (+.f64 p p) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (+.f64 p p) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (+.f64 p p) x) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (+.f64 p p) x) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (+.f64 p p) x)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 x (+.f64 p p))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 0) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (*.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 1/2) (*.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (*.f64 0 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (*.f64 1/2 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) (fabs.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 0) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1/2))))))))"]],"rules":[["egg-rr",41],["egg-rr",38],["egg-rr",48],["egg-rr",116]],"time":43.02001953125,"type":"rewrite"},{"count":[[339,376]],"inputs":[["1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))))))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2)))))) (pow.f64 x 8))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","1/2","(+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)))))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -5/2048 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))))))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))))) 1)","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 (*.f64 -20 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))))))","(*.f64 -1/2 (/.f64 x p))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/1024 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2)) (pow.f64 p 7))))))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(*.f64 -2 p)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 -2 p))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p)))","(+.f64 (*.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p))))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(*.f64 -1 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x)))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))))","(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p)))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/512 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 4) (pow.f64 p 3)))) (*.f64 1/32 (/.f64 1 (pow.f64 p 3)))) (pow.f64 x 3)) (sqrt.f64 1/2))) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (*.f64 -1/2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (*.f64 -1/2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 1 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (*.f64 -1/2 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (*.f64 -1/2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))))))","(*.f64 -1 (/.f64 p x))","(+.f64 (*.f64 -1 (/.f64 p x)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 p (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 p x)) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) p)) 2)) (*.f64 p (pow.f64 x 5)))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 p (pow.f64 x 3))))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) p)) 2))) (pow.f64 p 2)))) (*.f64 p (pow.f64 x 7)))) (+.f64 (*.f64 -1 (/.f64 p x)) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) p)) 2)) (*.f64 p (pow.f64 x 5)))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 p (pow.f64 x 3)))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 1 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (pow.f64 (/.f64 -1/2 (pow.f64 x 2)) 2)) (pow.f64 p 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (pow.f64 (/.f64 -1/2 (pow.f64 x 2)) 2)) (pow.f64 x 2))) (*.f64 10 (/.f64 1 (pow.f64 x 6)))) (pow.f64 p 6))) (*.f64 1/2 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (pow.f64 (/.f64 -1/2 (pow.f64 x 2)) 2)) (pow.f64 p 4))))))","(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p)))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (*.f64 -1/512 (/.f64 (pow.f64 x 3) (pow.f64 (sqrt.f64 1/2) 4)))) (*.f64 (sqrt.f64 1/2) (pow.f64 p 3)))) (+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))))","(sqrt.f64 1/2)","(+.f64 (*.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))) (sqrt.f64 1/2))","(+.f64 (*.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))) (+.f64 (sqrt.f64 1/2) (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2))))))","(+.f64 (*.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (*.f64 -1/512 (/.f64 (pow.f64 x 3) (pow.f64 (sqrt.f64 1/2) 4)))) (*.f64 (sqrt.f64 1/2) (pow.f64 p 3)))) (+.f64 (sqrt.f64 1/2) (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))))))"]],"method":["egg-herbie"],"outputs":[["1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (/.f64 (*.f64 1/4 x) p))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 -1/32 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (/.f64 (*.f64 1/4 x) p)))","(+.f64 1/2 (+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","(+.f64 1/2 (fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (/.f64 (*.f64 1/4 x) p))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))) (/.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (pow.f64 x 4)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)) (*.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 (*.f64 -2 (*.f64 (pow.f64 p 4) -6)) (*.f64 p p))) (pow.f64 x -6)))))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(fma.f64 -1/2 (*.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x -4)) (/.f64 (*.f64 p p) (*.f64 x x)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/2 (*.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x -4)) (/.f64 (*.f64 p p) (*.f64 x x))) (*.f64 -1/2 (*.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (pow.f64 x -6))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2)))))) (pow.f64 x 8))))))","(+.f64 (fma.f64 -1/2 (*.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x -4)) (/.f64 (*.f64 p p) (*.f64 x x))) (*.f64 -1/2 (+.f64 (*.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (pow.f64 x -6)) (/.f64 (fma.f64 1/2 (fma.f64 16 (pow.f64 p 8) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2)) (fma.f64 2 (*.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 p 4)) (fma.f64 8 (pow.f64 p 8) (*.f64 -2 (*.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (*.f64 p p)))))) (pow.f64 x 8)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))) (*.f64 3 (*.f64 (pow.f64 p 4) (pow.f64 x -4))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(+.f64 (+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))) (fma.f64 -10 (*.f64 (pow.f64 p 6) (pow.f64 x -6)) (*.f64 3 (*.f64 (pow.f64 p 4) (pow.f64 x -4)))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (/.f64 (*.f64 1/4 x) p))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 -1/32 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (/.f64 (*.f64 1/4 x) p)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (+.f64 1/2 (fma.f64 -1/32 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (/.f64 (*.f64 1/4 x) p))))","1/2","(+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))","(+.f64 1/2 (/.f64 (*.f64 -1/4 x) p))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p))))","(fma.f64 1/32 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (+.f64 1/2 (/.f64 (*.f64 -1/4 x) p)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (fma.f64 1/32 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (+.f64 1/2 (/.f64 (*.f64 -1/4 x) p))))","(*.f64 1/2 (/.f64 x p))","(/.f64 (*.f64 1/2 x) p)","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 1/2 (/.f64 x p) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3)))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)))))","(fma.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 1/2 (/.f64 x p) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3))))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -5/2048 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","(fma.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 1/2 (/.f64 x p) (fma.f64 -5/2048 (/.f64 (pow.f64 x 7) (pow.f64 p 7)) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3)))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (/.f64 (*.f64 -2 (*.f64 p p)) (*.f64 x x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (neg.f64 (*.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 (*.f64 -2 (*.f64 (pow.f64 p 4) -6)) (*.f64 p p))) (pow.f64 x -6))) (neg.f64 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4))))))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4)))) 1)","(+.f64 (fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) (neg.f64 (*.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x -4)))) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))))) 1)","(+.f64 (fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (neg.f64 (*.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (pow.f64 x -6))) (neg.f64 (*.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x -4))))) -1)","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (/.f64 (*.f64 -2 (*.f64 p p)) (*.f64 x x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 6 (*.f64 (pow.f64 p 4) (pow.f64 x -4)))))","(+.f64 (*.f64 -20 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(fma.f64 -20 (*.f64 (pow.f64 p 6) (pow.f64 x -6)) (+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 6 (*.f64 (pow.f64 p 4) (pow.f64 x -4))))))","(*.f64 1/2 (/.f64 x p))","(/.f64 (*.f64 1/2 x) p)","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 1/2 (/.f64 x p) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3)))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5)))))","(fma.f64 1/2 (/.f64 x p) (fma.f64 -1/16 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (neg.f64 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 (pow.f64 x 5) -3/256) (*.f64 x x)) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (fma.f64 1/2 (/.f64 x p) (fma.f64 -1/16 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (neg.f64 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5))))))","(*.f64 -1/2 (/.f64 x p))","(/.f64 (*.f64 -1/2 x) p)","(+.f64 (*.f64 -1/2 (/.f64 x p)) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 -1/2 (/.f64 x p) (/.f64 (*.f64 1/16 (pow.f64 x 3)) (pow.f64 p 3)))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","(fma.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/2 (/.f64 x p) (fma.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (/.f64 (*.f64 1/16 (pow.f64 x 3)) (pow.f64 p 3)))))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/1024 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2)) (pow.f64 p 7))))))))","(fma.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/2 (/.f64 x p) (fma.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 1/16 (*.f64 (pow.f64 x 3) (pow.f64 p -3)) (fma.f64 1/1024 (/.f64 (pow.f64 x 7) (pow.f64 p 7)) (/.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 x 5) -3/256) (*.f64 x x))) (pow.f64 p 7)))))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(fma.f64 2 (/.f64 (*.f64 p p) x) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 (*.f64 p p) x) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (*.f64 p p) x) x)))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 -1/64 (*.f64 (pow.f64 x 4) (pow.f64 p -3)) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (*.f64 (pow.f64 x 4) (pow.f64 p -3)) (*.f64 2 p))))","(*.f64 -2 p)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 -2 p))","(fma.f64 -1/4 (/.f64 (*.f64 x x) p) (*.f64 -2 p))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p)))","(fma.f64 -1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/64 (*.f64 (pow.f64 x 4) (pow.f64 p -3)) (*.f64 -2 p)))","(+.f64 (*.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p))))","(fma.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/64 (*.f64 (pow.f64 x 4) (pow.f64 p -3)) (*.f64 -2 p))))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 -1/64 (*.f64 (pow.f64 x 4) (pow.f64 p -3)) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (*.f64 (pow.f64 x 4) (pow.f64 p -3)) (*.f64 2 p))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(fma.f64 2 (/.f64 (*.f64 p p) x) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 (*.f64 p p) x) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (*.f64 p p) x) x)))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))","(fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x))","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x)))","(fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x)))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))))","(fma.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x))))","(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))","(+.f64 (sqrt.f64 1/2) (/.f64 (*.f64 1/8 x) (*.f64 (sqrt.f64 1/2) p)))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p)))))","(+.f64 (sqrt.f64 1/2) (fma.f64 -1/128 (/.f64 (*.f64 x x) (*.f64 (pow.f64 1/2 3/2) (*.f64 p p))) (/.f64 (*.f64 1/8 x) (*.f64 (sqrt.f64 1/2) p))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/512 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 4) (pow.f64 p 3)))) (*.f64 1/32 (/.f64 1 (pow.f64 p 3)))) (pow.f64 x 3)) (sqrt.f64 1/2))) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))))","(+.f64 (sqrt.f64 1/2) (fma.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1/512 (*.f64 (pow.f64 1/2 2) (pow.f64 p 3))) (*.f64 -1/32 (pow.f64 p -3))) (pow.f64 x 3)) (sqrt.f64 1/2)) (fma.f64 -1/128 (/.f64 (*.f64 x x) (*.f64 (pow.f64 1/2 3/2) (*.f64 p p))) (/.f64 (*.f64 1/8 x) (*.f64 (sqrt.f64 1/2) p)))))","1","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(fma.f64 -1/2 (/.f64 (*.f64 p p) (*.f64 x x)) 1)","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (*.f64 -1/2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1))","(fma.f64 1/2 (*.f64 (fma.f64 -1/2 (*.f64 (pow.f64 p 4) -6) (neg.f64 (pow.f64 (*.f64 -1/2 (*.f64 p p)) 2))) (pow.f64 x -4)) (fma.f64 -1/2 (/.f64 (*.f64 p p) (*.f64 x x)) 1))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (*.f64 -1/2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 1 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (*.f64 -1/2 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (*.f64 -1/2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))))))","(fma.f64 1/2 (*.f64 (fma.f64 -1/2 (*.f64 (pow.f64 p 4) -6) (neg.f64 (pow.f64 (*.f64 -1/2 (*.f64 p p)) 2))) (pow.f64 x -4)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 p p) (*.f64 x x)) 1) (*.f64 1/2 (/.f64 (*.f64 -1/2 (-.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 (*.f64 -2 (*.f64 (pow.f64 p 4) -6)) (*.f64 p p))) (*.f64 (fma.f64 -1/2 (*.f64 (pow.f64 p 4) -6) (neg.f64 (pow.f64 (*.f64 -1/2 (*.f64 p p)) 2))) (*.f64 p p)))) (pow.f64 x 6)))))","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(+.f64 (*.f64 -1 (/.f64 p x)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 p (pow.f64 x 3)))))","(+.f64 (neg.f64 (/.f64 p x)) (/.f64 (*.f64 1/4 (*.f64 (pow.f64 p 4) 6)) (*.f64 p (pow.f64 x 3))))","(+.f64 (*.f64 -1 (/.f64 p x)) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) p)) 2)) (*.f64 p (pow.f64 x 5)))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 p (pow.f64 x 3))))))","(+.f64 (neg.f64 (/.f64 p x)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/2 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (neg.f64 (pow.f64 (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 p 4) 6)) p) 2))) (*.f64 p (pow.f64 x 5))) (/.f64 (*.f64 1/4 (*.f64 (pow.f64 p 4) 6)) (*.f64 p (pow.f64 x 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))) (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) p)) 2))) (pow.f64 p 2)))) (*.f64 p (pow.f64 x 7)))) (+.f64 (*.f64 -1 (/.f64 p x)) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) p)) 2)) (*.f64 p (pow.f64 x 5)))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 p (pow.f64 x 3)))))))","(fma.f64 -1/2 (/.f64 (fma.f64 -1/2 (fma.f64 2 (*.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 p 4)) (fma.f64 1/2 (fma.f64 16 (pow.f64 p 8) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2)) (fma.f64 8 (pow.f64 p 8) (*.f64 -2 (*.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (*.f64 p p)))))) (neg.f64 (/.f64 (*.f64 -1/4 (*.f64 (*.f64 (pow.f64 p 4) 6) (fma.f64 -1/2 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (neg.f64 (pow.f64 (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 p 4) 6)) p) 2))))) (*.f64 p p)))) (*.f64 p (pow.f64 x 7))) (+.f64 (neg.f64 (/.f64 p x)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/2 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (neg.f64 (pow.f64 (/.f64 (*.f64 -1/4 (*.f64 (pow.f64 p 4) 6)) p) 2))) (*.f64 p (pow.f64 x 5))) (/.f64 (*.f64 1/4 (*.f64 (pow.f64 p 4) 6)) (*.f64 p (pow.f64 x 3))))))","1","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(fma.f64 -1/2 (/.f64 (*.f64 p p) (*.f64 x x)) 1)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 1 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (pow.f64 (/.f64 -1/2 (pow.f64 x 2)) 2)) (pow.f64 p 4)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 p p) (*.f64 x x)) 1) (*.f64 1/2 (*.f64 (fma.f64 3 (pow.f64 x -4) (neg.f64 (pow.f64 (/.f64 -1/2 (*.f64 x x)) 2))) (pow.f64 p 4))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (pow.f64 (/.f64 -1/2 (pow.f64 x 2)) 2)) (pow.f64 x 2))) (*.f64 10 (/.f64 1 (pow.f64 x 6)))) (pow.f64 p 6))) (*.f64 1/2 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (pow.f64 (/.f64 -1/2 (pow.f64 x 2)) 2)) (pow.f64 p 4))))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 p p) (*.f64 x x)) 1) (fma.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (fma.f64 3 (pow.f64 x -4) (neg.f64 (pow.f64 (/.f64 -1/2 (*.f64 x x)) 2))) (*.f64 x x)) (*.f64 10 (pow.f64 x -6))) (pow.f64 p 6)) (*.f64 1/2 (*.f64 (fma.f64 3 (pow.f64 x -4) (neg.f64 (pow.f64 (/.f64 -1/2 (*.f64 x x)) 2))) (pow.f64 p 4)))))","(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))","(+.f64 (sqrt.f64 1/2) (/.f64 (*.f64 1/8 x) (*.f64 (sqrt.f64 1/2) p)))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p)))))","(+.f64 (sqrt.f64 1/2) (fma.f64 -1/128 (/.f64 (*.f64 x x) (*.f64 (pow.f64 1/2 3/2) (*.f64 p p))) (/.f64 (*.f64 1/8 x) (*.f64 (sqrt.f64 1/2) p))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (*.f64 -1/512 (/.f64 (pow.f64 x 3) (pow.f64 (sqrt.f64 1/2) 4)))) (*.f64 (sqrt.f64 1/2) (pow.f64 p 3)))) (+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))) (*.f64 1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))))))","(fma.f64 1/2 (/.f64 (fma.f64 -1/32 (pow.f64 x 3) (neg.f64 (/.f64 (*.f64 -1/512 (pow.f64 x 3)) (pow.f64 1/2 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 p 3))) (+.f64 (sqrt.f64 1/2) (fma.f64 -1/128 (/.f64 (*.f64 x x) (*.f64 (pow.f64 1/2 3/2) (*.f64 p p))) (/.f64 (*.f64 1/8 x) (*.f64 (sqrt.f64 1/2) p)))))","(sqrt.f64 1/2)","(+.f64 (*.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))) (sqrt.f64 1/2))","(fma.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p)) (sqrt.f64 1/2))","(+.f64 (*.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))) (+.f64 (sqrt.f64 1/2) (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2))))))","(+.f64 (fma.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p)) (sqrt.f64 1/2)) (/.f64 (*.f64 -1/128 (*.f64 x x)) (*.f64 (pow.f64 1/2 3/2) (*.f64 p p))))","(+.f64 (*.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (*.f64 -1/512 (/.f64 (pow.f64 x 3) (pow.f64 (sqrt.f64 1/2) 4)))) (*.f64 (sqrt.f64 1/2) (pow.f64 p 3)))) (+.f64 (sqrt.f64 1/2) (*.f64 -1/128 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 p 2)))))))","(fma.f64 -1/8 (/.f64 x (*.f64 (sqrt.f64 1/2) p)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/32 (pow.f64 x 3) (neg.f64 (/.f64 (*.f64 -1/512 (pow.f64 x 3)) (pow.f64 1/2 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 p 3))) (+.f64 (sqrt.f64 1/2) (/.f64 (*.f64 -1/128 (*.f64 x x)) (*.f64 (pow.f64 1/2 3/2) (*.f64 p p))))))"]],"time":286.338134765625,"type":"simplify"},{"compiler":[[8999,5527]],"time":102.373046875,"type":"eval"},{"alts":[["(sqrt.f64 (/.f64 (*.f64 p p) (*.f64 x x)))","fresh",52.37742629020167],["(sqrt.f64 (fma.f64 (*.f64 1/2 x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) 1/2))","fresh",18.566702635336455],["(neg.f64 (/.f64 p x))","fresh",51.00610609737293],["(sqrt.f64 (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x))))","fresh",17.944633967813132],["(sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2)))","next",16.205695945742253]],"compiler":[[10,6],[15,11],[6,4],[17,13],[23,19],[10,6],[15,11],[6,4],[17,13],[23,19]],"count":[[377,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[376,5],"picked":[1,0]}],"min-error":[4.486812924770467],"time":179.263916015625,"type":"prune"},{"compiler":[[100,58]],"locations":[["(/.f64 x (hypot.f64 (+.f64 p p) x))",0.0078125,true],["(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))",0.0234375,true],["(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))",0.19988251953688402,true],["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))",0.477422992531026,true]],"time":20.31689453125,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 x (hypot.f64 (+.f64 p p) x))","p","-inf",0.23486328125],["(/.f64 x (hypot.f64 (+.f64 p p) x))","p","inf",0.218017578125],["(/.f64 x (hypot.f64 (+.f64 p p) x))","p","0",0.18505859375],["(/.f64 x (hypot.f64 (+.f64 p p) x))","x","-inf",0.19091796875],["(/.f64 x (hypot.f64 (+.f64 p p) x))","x","inf",0.19189453125],["(/.f64 x (hypot.f64 (+.f64 p p) x))","x","0",0.197021484375],["(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))","p","-inf",0.291015625],["(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))","p","inf",0.373046875],["(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))","p","0",0.590087890625],["(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))","x","-inf",0.531005859375],["(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))","x","inf",0.60791015625],["(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))","x","0",0.43701171875],["(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))","p","-inf",0.33203125],["(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))","p","inf",0.408203125],["(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))","p","0",0.301025390625],["(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))","x","-inf",0.277099609375],["(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))","x","inf",0.289794921875],["(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))","x","0",0.4541015625],["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))","p","-inf",0.3759765625],["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))","p","inf",0.8759765625],["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))","p","0",0.66796875],["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))","x","-inf",0.529052734375],["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))","x","inf",0.65087890625],["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))","x","0",0.81201171875]],"time":10.4951171875,"type":"series"},{"count":[[4,221]],"inputs":[["(+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x))))","(*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))","(/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))","(/.f64 x (hypot.f64 (+.f64 p p) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 4) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 0) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (*.f64 0 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cbrt.f64 4)) -1) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) (hypot.f64 (+.f64 p p) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) (hypot.f64 (+.f64 p p) x)) -1) (*.f64 (neg.f64 (cbrt.f64 4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3) (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 4)) (+.f64 (/.f64 (*.f64 (cbrt.f64 (cbrt.f64 16)) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 4)) (+.f64 (cbrt.f64 (cbrt.f64 16)) (/.f64 (*.f64 (cbrt.f64 (cbrt.f64 16)) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (+.f64 1 (/.f64 x (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16)) (+.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (*.f64 (cbrt.f64 1/2) (cbrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16)) (+.f64 (cbrt.f64 (cbrt.f64 4)) (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (+.f64 (*.f64 (cbrt.f64 1/2) (cbrt.f64 2)) (/.f64 x (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (neg.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (-.f64 (cbrt.f64 (cbrt.f64 16)) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 16) x) (hypot.f64 (+.f64 p p) x))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (cbrt.f64 16)) (-.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 16) x) (hypot.f64 (+.f64 p p) x))))) (+.f64 (cbrt.f64 (cbrt.f64 4)) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) 2 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 16)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (cbrt.f64 (cbrt.f64 1/4)) 2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (cbrt.f64 4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (cbrt.f64 1/2)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 16)) (cbrt.f64 (cbrt.f64 4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (cbrt.f64 1/2)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 1/2) (sqrt.f64 2)) (sqrt.f64 2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (cbrt.f64 2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 1/2) (cbrt.f64 2)) (cbrt.f64 4) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 4 (hypot.f64 (+.f64 p p) x))) (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 4)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 4) x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)))) (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (cbrt.f64 4) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 4)) (/.f64 (*.f64 (cbrt.f64 (cbrt.f64 16)) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 4) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) 1 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1 (cbrt.f64 4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 0) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (*.f64 0 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 4)) (/.f64 (*.f64 (cbrt.f64 (cbrt.f64 16)) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)))) (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (hypot.f64 (+.f64 p p) x))) (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4) x) (/.f64 1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (cbrt.f64 4) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) (/.f64 -1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4 (hypot.f64 (+.f64 p p) x))) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x)))) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 4) x) -1) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 4) x))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (cbrt.f64 4)) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) 1) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 4))) (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 4))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (*.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))) (neg.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3) 4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (cbrt.f64 4) (neg.f64 x)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3) 4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (*.f64 (cbrt.f64 1/32) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/32) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 0) (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 1/32)) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 1/32)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 1/32)) (*.f64 (cbrt.f64 4) (cbrt.f64 1/32)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) (*.f64 0 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))) (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 32))) (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/32))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/32))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/32))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/32))) (pow.f64 (cbrt.f64 (cbrt.f64 32)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)) (sqrt.f64 2)) (/.f64 1 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))) (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3) (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (neg.f64 (cbrt.f64 1/32)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 4)) (*.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (*.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3) (cbrt.f64 1/32)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 8)) (*.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/32)) (/.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (pow.f64 32 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/4))) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/4) (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1/2) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3) (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4))) (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/4))) 1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/4))) (*.f64 2 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4))) (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3)) (*.f64 (cbrt.f64 2) (cbrt.f64 (pow.f64 32 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/4))) 1) (*.f64 (cbrt.f64 (cbrt.f64 16)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/32))) 1) (*.f64 (cbrt.f64 (pow.f64 32 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/4))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)) (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (cbrt.f64 (neg.f64 32)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/32))) (cbrt.f64 (pow.f64 32 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1/2) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 32))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3) (cbrt.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (cbrt.f64 (cbrt.f64 (neg.f64 32))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3) (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 32)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))) (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3)) (cbrt.f64 (pow.f64 32 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 8)) (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 4)) (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/4) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/4)))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/32)) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (cbrt.f64 (pow.f64 32 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (pow.f64 32 2/3))) (cbrt.f64 (cbrt.f64 32)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 32))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 2/3)) (cbrt.f64 (cbrt.f64 32)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1/2) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)) (sqrt.f64 2)) 1) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/32))) 1) (cbrt.f64 (pow.f64 32 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (*.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3) 1/2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) 1/2) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/4))) 1/2) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 1/32)))) (neg.f64 (cbrt.f64 (pow.f64 32 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1/2)) (neg.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 3) 1/32) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/32))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (neg.f64 (cbrt.f64 1/32))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/32)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (cbrt.f64 1/4)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 3) 1/32))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 0) (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (*.f64 0 (/.f64 x (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (hypot.f64 (+.f64 p p) x))) (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (hypot.f64 (+.f64 p p) x))) (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (+.f64 p p) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) -1/3) (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (*.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) -1/3) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (pow.f64 x 2/3)) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 x)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3)) (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x)))) (neg.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3))))))"]],"rules":[["egg-rr",38],["egg-rr",76],["egg-rr",44],["egg-rr",63]],"time":47.31689453125,"type":"rewrite"},{"count":[[317,368]],"inputs":[["(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))))","(+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (*.f64 2 (cbrt.f64 1/2))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (*.f64 2 (cbrt.f64 1/2))))))))","(+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2))) (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6)))) (pow.f64 p 6))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))))","(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))))","(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 p 2))) (*.f64 1/1024 (/.f64 (cbrt.f64 4) (pow.f64 p 7)))) (pow.f64 x 7))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(*.f64 -1 (cbrt.f64 4))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -1 (cbrt.f64 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2)))) (pow.f64 p 6))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))))) (*.f64 1/1024 (*.f64 (cbrt.f64 4) (pow.f64 x 7)))) (pow.f64 p 7))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 x 2)) (pow.f64 p 7))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/1024 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 7)) (pow.f64 p 7))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))))","(/.f64 (cbrt.f64 1/2) (cbrt.f64 4))","(+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4))))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5)) (cbrt.f64 4))) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))))","(*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (*.f64 (cbrt.f64 4) (pow.f64 x 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (*.f64 (cbrt.f64 4) (pow.f64 x 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (*.f64 (cbrt.f64 4) (pow.f64 x 6)))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))))","(*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (cbrt.f64 4)))) (pow.f64 x 6))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4)) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4)) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2)))) (pow.f64 p 6)) (cbrt.f64 4))))))","(/.f64 (cbrt.f64 1/2) (cbrt.f64 4))","(+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4))))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (+.f64 (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (*.f64 (cbrt.f64 4) (pow.f64 p 5)))))))","(/.f64 (cbrt.f64 1/2) (cbrt.f64 4))","(+.f64 (*.f64 -1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 -1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4))))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 -1/4 (/.f64 x p)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (*.f64 (cbrt.f64 4) (pow.f64 p 5)))) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)))))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -5/2048 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))))))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))))) 1)","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 (*.f64 -20 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))))))","(*.f64 -1/2 (/.f64 x p))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/1024 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2)) (pow.f64 p 7))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))","(fma.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (neg.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 p 5)) -3/256) (pow.f64 x 5))) (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (cbrt.f64 4) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (cbrt.f64 4) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (pow.f64 x 4))) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 -2 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (pow.f64 x 4))) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (*.f64 2 (cbrt.f64 1/2))))))","(+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (neg.f64 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (neg.f64 (cbrt.f64 4))) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (*.f64 2 (cbrt.f64 1/2))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (+.f64 (neg.f64 (cbrt.f64 4)) (fma.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (*.f64 2 (cbrt.f64 1/2))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (*.f64 2 (cbrt.f64 1/2))))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (pow.f64 x 6)) (+.f64 (neg.f64 (cbrt.f64 4)) (fma.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6)) (fma.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (*.f64 2 (cbrt.f64 1/2))))))))","(+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (cbrt.f64 4) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (neg.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (*.f64 2 (cbrt.f64 1/2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2))) (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6)))) (pow.f64 p 6))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 2 (cbrt.f64 1/2))))))","(+.f64 (neg.f64 (*.f64 (fma.f64 -2 (/.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (*.f64 x x)) (/.f64 (*.f64 8 (cbrt.f64 4)) (pow.f64 x 6))) (pow.f64 p 6))) (+.f64 (neg.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (*.f64 2 (cbrt.f64 1/2))))))","(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))","(fma.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256) (pow.f64 p 5))) (fma.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2)))))","(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2)))","(fma.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 2 (cbrt.f64 1/2))))))","(fma.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (fma.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (*.f64 2 (cbrt.f64 1/2))))))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p)","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (neg.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 p 5)) -3/256) (pow.f64 x 5))) (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 p 2))) (*.f64 1/1024 (/.f64 (cbrt.f64 4) (pow.f64 p 7)))) (pow.f64 x 7))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(+.f64 (neg.f64 (*.f64 (fma.f64 -1/8 (/.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 p 5)) -3/256) (*.f64 p p)) (/.f64 (*.f64 1/1024 (cbrt.f64 4)) (pow.f64 p 7))) (pow.f64 x 7))) (+.f64 (neg.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 p 5)) -3/256) (pow.f64 x 5))) (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 4) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x)))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (cbrt.f64 4) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (pow.f64 x 4))) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 -2 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (pow.f64 x 4))) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x)))))","(*.f64 -1 (cbrt.f64 4))","(neg.f64 (cbrt.f64 4))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -1 (cbrt.f64 4)))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (neg.f64 (cbrt.f64 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (+.f64 (neg.f64 (cbrt.f64 4)) (/.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (pow.f64 x 6)) (+.f64 (neg.f64 (cbrt.f64 4)) (fma.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6)) (/.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (pow.f64 x 4)))))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 4) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (neg.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2)))) (pow.f64 p 6))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(+.f64 (neg.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (pow.f64 p 4))) (+.f64 (neg.f64 (*.f64 (fma.f64 -2 (/.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (*.f64 x x)) (/.f64 (*.f64 8 (cbrt.f64 4)) (pow.f64 x 6))) (pow.f64 p 6))) (+.f64 (cbrt.f64 4) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x)))))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p)","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256) (pow.f64 p 5))) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))))) (*.f64 1/1024 (*.f64 (cbrt.f64 4) (pow.f64 x 7)))) (pow.f64 p 7))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (neg.f64 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256)) (*.f64 1/1024 (*.f64 (cbrt.f64 4) (pow.f64 x 7)))) (pow.f64 p 7))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256) (pow.f64 p 5))) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p))))","(*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(/.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 4) x)) p)","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (/.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 4) x)) p))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (fma.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (/.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 4) x)) p))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 x 2)) (pow.f64 p 7))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/1024 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 7)) (pow.f64 p 7))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 -1/8 (/.f64 (*.f64 (*.f64 x x) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256)) (pow.f64 p 7)) (fma.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (fma.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (fma.f64 1/1024 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 7)) (pow.f64 p 7)) (/.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 4) x)) p))))))","(/.f64 (cbrt.f64 1/2) (cbrt.f64 4))","1/2","(+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))","(fma.f64 1/4 (/.f64 x p) 1/2)","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4))))","(fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/4 (/.f64 x p) 1/2))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5)) (cbrt.f64 4))) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))))","(fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/4 (/.f64 x p) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 p 5)) -3/256) (pow.f64 x 5)) (cbrt.f64 4)) 1/2)))","(*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)))","(/.f64 (*.f64 1/2 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2)))) (cbrt.f64 4))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(fma.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (*.f64 (cbrt.f64 4) (pow.f64 x 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 (cbrt.f64 4) (pow.f64 x 4))) (fma.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (*.f64 (cbrt.f64 4) (pow.f64 x 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (*.f64 (cbrt.f64 4) (pow.f64 x 6)))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 (cbrt.f64 4) (pow.f64 x 4))) (fma.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (fma.f64 -1/2 (/.f64 (fma.f64 -2 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (*.f64 (cbrt.f64 4) (pow.f64 x 6))) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))))","(*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)))","(/.f64 (*.f64 1/2 (+.f64 (neg.f64 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2)))) (cbrt.f64 4))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))))","(+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (/.f64 (*.f64 1/2 (+.f64 (neg.f64 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2)))) (cbrt.f64 4)))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/2 (+.f64 (/.f64 (+.f64 (neg.f64 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)))))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (cbrt.f64 4)))) (pow.f64 x 6))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))))))","(+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 1/2 (/.f64 (+.f64 (neg.f64 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (*.f64 1/2 (+.f64 (/.f64 (fma.f64 8 (pow.f64 p 6) (/.f64 (*.f64 (*.f64 -2 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6)) (*.f64 p p)) (cbrt.f64 4))) (pow.f64 x 6)) (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)))","(/.f64 (*.f64 1/2 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2)))) (cbrt.f64 4))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(fma.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4)) (cbrt.f64 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(fma.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (pow.f64 p 4)) (cbrt.f64 4)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4)) (cbrt.f64 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2)))) (pow.f64 p 6)) (cbrt.f64 4))))))","(fma.f64 1/2 (/.f64 (+.f64 (cbrt.f64 4) (*.f64 2 (cbrt.f64 1/2))) (cbrt.f64 4)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (pow.f64 p 4)) (cbrt.f64 4)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))) (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 -2 (/.f64 (*.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) -6) (*.f64 x x)) (/.f64 (*.f64 8 (cbrt.f64 4)) (pow.f64 x 6))) (pow.f64 p 6))) (cbrt.f64 4))))","(/.f64 (cbrt.f64 1/2) (cbrt.f64 4))","1/2","(+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))","(fma.f64 1/4 (/.f64 x p) 1/2)","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4))))","(fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/4 (/.f64 x p) 1/2))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (+.f64 (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (*.f64 (cbrt.f64 4) (pow.f64 p 5)))))))","(fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (+.f64 (fma.f64 1/4 (/.f64 x p) 1/2) (/.f64 (*.f64 -1/2 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256)) (*.f64 (cbrt.f64 4) (pow.f64 p 5)))))","(/.f64 (cbrt.f64 1/2) (cbrt.f64 4))","1/2","(+.f64 (*.f64 -1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))","(fma.f64 -1/4 (/.f64 x p) 1/2)","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 -1/4 (/.f64 x p)) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4))))","(fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 -1/4 (/.f64 x p) 1/2))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 -1/4 (/.f64 x p)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (*.f64 (cbrt.f64 4) (pow.f64 p 5)))) (/.f64 (cbrt.f64 1/2) (cbrt.f64 4)))))","(fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 -1/4 (/.f64 x p) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256) (*.f64 (cbrt.f64 4) (pow.f64 p 5))) 1/2)))","(*.f64 1/2 (/.f64 x p))","(/.f64 (*.f64 1/2 x) p)","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 1/2 (/.f64 x p) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3)))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)))))","(fma.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 1/2 (/.f64 x p) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3))))","(+.f64 (*.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -5/2048 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","(fma.f64 3/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 1/2 (/.f64 x p) (fma.f64 -5/2048 (/.f64 (pow.f64 x 7) (pow.f64 p 7)) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3)))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (/.f64 (*.f64 -2 (*.f64 p p)) (*.f64 x x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) -6) (*.f64 p p)))) (pow.f64 x 6))) (neg.f64 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4))))))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4)))) 1)","(+.f64 (fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) (neg.f64 (/.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x 4)))) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))))) 1)","(+.f64 (fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (neg.f64 (/.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p)))) (pow.f64 x 6))) (neg.f64 (/.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x 4))))) -1)","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (/.f64 (*.f64 -2 (*.f64 p p)) (*.f64 x x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (/.f64 (*.f64 6 (pow.f64 p 4)) (pow.f64 x 4))))","(+.f64 (*.f64 -20 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(fma.f64 -20 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (/.f64 (*.f64 6 (pow.f64 p 4)) (pow.f64 x 4)))))","(*.f64 1/2 (/.f64 x p))","(/.f64 (*.f64 1/2 x) p)","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 1/2 (/.f64 x p) (/.f64 (*.f64 -1/16 (pow.f64 x 3)) (pow.f64 p 3)))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5)))))","(fma.f64 1/2 (/.f64 x p) (fma.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (neg.f64 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))))))","(+.f64 (neg.f64 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 (pow.f64 x 5) -3/256) (*.f64 x x)) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (fma.f64 1/2 (/.f64 x p) (fma.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (neg.f64 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5))))))","(*.f64 -1/2 (/.f64 x p))","(/.f64 (*.f64 -1/2 x) p)","(+.f64 (*.f64 -1/2 (/.f64 x p)) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 -1/2 (/.f64 x p) (/.f64 (*.f64 1/16 (pow.f64 x 3)) (pow.f64 p 3)))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","(fma.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/2 (/.f64 x p) (fma.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (/.f64 (*.f64 1/16 (pow.f64 x 3)) (pow.f64 p 3)))))","(+.f64 (*.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/1024 (/.f64 (pow.f64 x 7) (pow.f64 p 7))) (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2)) (pow.f64 p 7))))))))","(fma.f64 -1/128 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/2 (/.f64 x p) (fma.f64 -1/256 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/1024 (/.f64 (pow.f64 x 7) (pow.f64 p 7)) (/.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 x 5) -3/256) (*.f64 x x))) (pow.f64 p 7)))))))"]],"time":286.899169921875,"type":"simplify"},{"compiler":[[11828,8849]],"time":142.41796875,"type":"eval"},{"alts":[["(sqrt.f64 (/.f64 (*.f64 p p) (*.f64 x x)))","fresh",52.37742629020167],["(sqrt.f64 (fma.f64 (*.f64 1/2 x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) 1/2))","fresh",18.566702635336455],["(sqrt.f64 (/.f64 (fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 4) 2)))","fresh",18.071608159571657],["(sqrt.f64 (/.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2)))) (*.f64 (cbrt.f64 4) 2)))","fresh",52.38455532852474],["(neg.f64 (/.f64 p x))","fresh",51.00610609737293],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","next",16.21845430824469],["(sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2)))","done",16.205695945742253]],"compiler":[[10,6],[15,11],[27,23],[30,28],[6,4],[18,14],[23,19],[10,6],[15,11],[27,23],[30,28],[6,4],[18,14]],"count":[[373,7]],"kept":[{"done":[0,0],"fresh":[4,3],"new":[368,3],"picked":[1,1]}],"min-error":[4.478985036078379],"time":151.72802734375,"type":"prune"},{"compiler":[[68,33]],"locations":[["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))",0.00390625,true],["(hypot.f64 (+.f64 p p) x)",0.00390625,true],["(/.f64 x (hypot.f64 (+.f64 p p) x))",0.0078125,false],["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))",0.47226590500975657,true]],"time":14.125,"type":"localize"},{"count":[[3,72]],"series":[["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","p","-inf",0.383056640625],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","p","inf",0.579833984375],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","p","0",1.066162109375],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","x","-inf",1.200927734375],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","x","inf",1.22412109375],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","x","0",0.738037109375],["(hypot.f64 (+.f64 p p) x)","x","-inf",0.1669921875],["(hypot.f64 (+.f64 p p) x)","x","inf",0.1669921875],["(hypot.f64 (+.f64 p p) x)","x","0",0.169921875],["(hypot.f64 (+.f64 p p) x)","p","-inf",0.173828125],["(hypot.f64 (+.f64 p p) x)","p","inf",0.197021484375],["(hypot.f64 (+.f64 p p) x)","p","0",0.171142578125],["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))","p","-inf",0.27197265625],["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))","p","inf",0.3720703125],["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))","p","0",0.375],["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))","x","-inf",0.470947265625],["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))","x","inf",1.541015625],["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))","x","0",0.39990234375]],"time":10.07080078125,"type":"series"},{"count":[[3,116]],"inputs":[["(fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))","(hypot.f64 (+.f64 p p) x)","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 0) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1/2) (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (*.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (*.f64 1/2 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) (*.f64 0 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 4) (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 2/3) (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16)) (+.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16)) (+.f64 (cbrt.f64 (cbrt.f64 4)) (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) 3) 4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) 3) 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (cbrt.f64 2) (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 16)) (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (cbrt.f64 -4) (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 16)) (cbrt.f64 (cbrt.f64 4)) (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (hypot.f64 (+.f64 p p) x))) (*.f64 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 4)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)) 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (cbrt.f64 4) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)) 1 (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) 1 (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 4) (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x (cbrt.f64 4)) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (+.f64 p p) x) 0) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (+.f64 p p) x) 1/2) (*.f64 (hypot.f64 (+.f64 p p) x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (hypot.f64 (+.f64 p p) x) (*.f64 (hypot.f64 (+.f64 p p) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (hypot.f64 (+.f64 p p) x)) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (hypot.f64 (+.f64 p p) x)) (*.f64 1/2 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (hypot.f64 (+.f64 p p) x) (*.f64 0 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) (sqrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (+.f64 p p) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))) (neg.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (hypot.f64 (+.f64 p p) x))) (*.f64 -1 (sqrt.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) -1) (*.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (+.f64 p p) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 0) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (+.f64 p p) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 (+.f64 p p) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 (+.f64 p p) x) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (+.f64 p p) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 (+.f64 p p) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (+.f64 p p) x)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 x (+.f64 p p))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 0) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 1/2) (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (*.f64 1/2 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (*.f64 0 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) (fabs.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (pow.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 0) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (cbrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) (cbrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 1/32 (*.f64 (pow.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) 3) 4))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (sqrt.f64 (*.f64 1/32 (*.f64 (pow.f64 (+.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 1) 3) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))))))))"]],"rules":[["egg-rr",39],["egg-rr",37],["egg-rr",40]],"time":35.092041015625,"type":"rewrite"},{"count":[[188,215]],"inputs":[["(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 3/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))))))","(*.f64 2 (cbrt.f64 4))","(+.f64 (*.f64 2 (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4)))))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (cbrt.f64 4)) (pow.f64 x 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4))))))","(+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cbrt.f64 4) (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4)))))))","(*.f64 2 (cbrt.f64 4))","(+.f64 (*.f64 2 (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -20 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (cbrt.f64 4)) (pow.f64 p 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (cbrt.f64 4)) (pow.f64 p 5)) (+.f64 (cbrt.f64 4) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(*.f64 -2 p)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 -2 p))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p)))","(+.f64 (*.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p))))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(*.f64 -1 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x)))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))","(+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (+.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 p 3))) (*.f64 -1/64 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 p 3)))) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (sqrt.f64 2)) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (*.f64 (sqrt.f64 2) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (sqrt.f64 2)) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (pow.f64 p 2)) (pow.f64 (sqrt.f64 2) 2)))) (*.f64 (sqrt.f64 2) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (sqrt.f64 2)) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (*.f64 (sqrt.f64 2) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))) (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (*.f64 (cbrt.f64 4) (pow.f64 p 2))) 2)) (pow.f64 x 4)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))) (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (*.f64 (cbrt.f64 4) (pow.f64 p 2))) 2)) (pow.f64 x 4)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))) (/.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))))) (/.f64 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (*.f64 (cbrt.f64 4) (pow.f64 p 2))) 2)) (pow.f64 p 2))) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (pow.f64 x 6)))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) (-.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2))) (sqrt.f64 2)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) (-.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2))) (sqrt.f64 2)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 -20 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 6))) (*.f64 -1 (/.f64 (-.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (pow.f64 x 2))))) (pow.f64 p 6)) (sqrt.f64 2)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))","(+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (+.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1/16 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3)))) (*.f64 -1/64 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3))))) (pow.f64 p 3)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))","(+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1/16 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3)))) (*.f64 -1/64 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3))))) (pow.f64 p 3)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))))"]],"method":["egg-herbie"],"outputs":[["(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (cbrt.f64 4) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (cbrt.f64 4) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (*.f64 3/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (cbrt.f64 4) (fma.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p) (/.f64 (*.f64 3/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (pow.f64 p 5)))))","(*.f64 2 (cbrt.f64 4))","(+.f64 (*.f64 2 (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(fma.f64 2 (cbrt.f64 4) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x)))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4)))))","(fma.f64 2 (cbrt.f64 4) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (/.f64 (*.f64 (cbrt.f64 (neg.f64 4)) (*.f64 (pow.f64 p 4) -6)) (pow.f64 x 4))))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (cbrt.f64 4)) (pow.f64 x 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4))))))","(fma.f64 2 (cbrt.f64 4) (-.f64 (-.f64 (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x)) (/.f64 (*.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) -6) (*.f64 p p)))) (cbrt.f64 4)) (pow.f64 x 6))) (/.f64 (*.f64 (*.f64 (pow.f64 p 4) -6) (cbrt.f64 4)) (pow.f64 x 4))))","(+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))","0","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) 0)","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (/.f64 (*.f64 (cbrt.f64 (neg.f64 4)) (*.f64 (pow.f64 p 4) 6)) (pow.f64 x 4)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (cbrt.f64 4) (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (cbrt.f64 4)) (pow.f64 x 4)))))))","(-.f64 (fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (/.f64 (*.f64 (cbrt.f64 (neg.f64 4)) (*.f64 (pow.f64 p 4) 6)) (pow.f64 x 4))) (/.f64 (*.f64 (cbrt.f64 4) (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p))))) (pow.f64 x 6)))","(*.f64 2 (cbrt.f64 4))","(+.f64 (*.f64 2 (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(fma.f64 2 (cbrt.f64 4) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x)))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(fma.f64 2 (cbrt.f64 4) (fma.f64 6 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (/.f64 (*.f64 -2 (*.f64 (cbrt.f64 4) (*.f64 p p))) (*.f64 x x))))","(+.f64 (*.f64 2 (cbrt.f64 4)) (+.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -20 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))))))","(fma.f64 2 (cbrt.f64 4) (fma.f64 6 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (/.f64 (*.f64 -20 (*.f64 (cbrt.f64 4) (pow.f64 p 6))) (pow.f64 x 6)))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (cbrt.f64 4) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (cbrt.f64 4) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (cbrt.f64 4)) (pow.f64 p 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(-.f64 (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (cbrt.f64 4) (/.f64 (*.f64 1/2 (*.f64 (cbrt.f64 4) x)) p))) (/.f64 (*.f64 (*.f64 (pow.f64 x 5) -3/256) (cbrt.f64 4)) (pow.f64 p 5)))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (cbrt.f64 4) (/.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 4) x)) p))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (cbrt.f64 4) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (cbrt.f64 4) (/.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 4) x)) p)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (cbrt.f64 4)) (pow.f64 p 5)) (+.f64 (cbrt.f64 4) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 x 5) -3/256) (cbrt.f64 4)) (pow.f64 p 5)) (cbrt.f64 4)) (/.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 4) x)) p)))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(fma.f64 2 (/.f64 (*.f64 p p) x) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 (*.f64 p p) x) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (*.f64 p p) x) x)))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p))))","(*.f64 -2 p)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 -2 p))","(fma.f64 -1/4 (/.f64 (*.f64 x x) p) (*.f64 -2 p))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p)))","(fma.f64 -1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 -2 p)))","(+.f64 (*.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p))))","(fma.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 -2 p))))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(fma.f64 2 (/.f64 (*.f64 p p) x) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 (*.f64 p p) x) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (*.f64 p p) x) x)))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))","(fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x))","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x)))","(fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x)))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))))","(fma.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x))))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))","(sqrt.f64 1/2)","(+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(fma.f64 1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(fma.f64 -1/32 (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2)))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (+.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 p 3))) (*.f64 -1/64 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 p 3)))) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))))","(+.f64 (fma.f64 -1/32 (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 -1/32 -1/128) (pow.f64 p 3)) (*.f64 (pow.f64 x 3) (sqrt.f64 2)))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","1","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(-.f64 1 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 2) (*.f64 x x))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (sqrt.f64 2)) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (*.f64 (sqrt.f64 2) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 2) (*.f64 x x)))) (/.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (pow.f64 (neg.f64 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (sqrt.f64 2))) 2)) (sqrt.f64 2))) (*.f64 (sqrt.f64 2) (pow.f64 x 4))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (sqrt.f64 2)) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (pow.f64 p 2)) (pow.f64 (sqrt.f64 2) 2)))) (*.f64 (sqrt.f64 2) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (sqrt.f64 2)) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (*.f64 (sqrt.f64 2) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 2) (*.f64 x x)))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (+.f64 (/.f64 (*.f64 1/2 (+.f64 (neg.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) -6) (*.f64 p p))))) (*.f64 (-.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (pow.f64 (neg.f64 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (sqrt.f64 2))) 2)) (*.f64 p p)))) (*.f64 (sqrt.f64 2) (pow.f64 x 6))) (/.f64 (-.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (pow.f64 (neg.f64 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (sqrt.f64 2))) 2)) (*.f64 (sqrt.f64 2) (pow.f64 x 4)))))))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))","(sqrt.f64 (+.f64 1/2 -1/2))","(+.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))))","(fma.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/32 0))) (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (sqrt.f64 (+.f64 1/2 -1/2)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))) (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (*.f64 (cbrt.f64 4) (pow.f64 p 2))) 2)) (pow.f64 x 4)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1/2 -1/2) -1/2) (-.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) 6)) (pow.f64 (*.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/32 0))) (*.f64 (cbrt.f64 4) (*.f64 p p))) 2))) (pow.f64 x 4)) (fma.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/32 0))) (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (sqrt.f64 (+.f64 1/2 -1/2))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))) (/.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (*.f64 (cbrt.f64 4) (pow.f64 p 2))) 2)) (pow.f64 x 4)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4)))))) (/.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))))))) (/.f64 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))) (pow.f64 (*.f64 (sqrt.f64 (/.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (*.f64 (cbrt.f64 4) (pow.f64 p 2))) 2)) (pow.f64 p 2))) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))) (pow.f64 x 6)))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (+.f64 (cbrt.f64 4) (*.f64 -1 (cbrt.f64 4))))))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1/2 -1/2) -1/2) (-.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) 6)) (pow.f64 (*.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/32 0))) (*.f64 (cbrt.f64 4) (*.f64 p p))) 2))) (pow.f64 x 4)) (fma.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/32 0))) (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1/2 -1/2) -1/2) (+.f64 (*.f64 -1/2 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 (pow.f64 p 4) 6) (*.f64 p p))))) (/.f64 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) 6)) (pow.f64 (*.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/32 0))) (*.f64 (cbrt.f64 4) (*.f64 p p))) 2))) (*.f64 p p)) 0))) (pow.f64 x 6)) (sqrt.f64 (+.f64 1/2 -1/2)))))","(*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","1","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(-.f64 1 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 2) (*.f64 x x))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) (-.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2))) (sqrt.f64 2)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 2) (*.f64 x x)))) (*.f64 (/.f64 (*.f64 (pow.f64 p 4) (-.f64 (/.f64 3 (pow.f64 x 4)) (pow.f64 (neg.f64 (/.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 2) (*.f64 x x)))) 2))) (sqrt.f64 8)) (sqrt.f64 2)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 p 2) (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) (-.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2))) (sqrt.f64 2)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 -20 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 6))) (*.f64 -1 (/.f64 (-.f64 (*.f64 6 (/.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (*.f64 (/.f64 1 (*.f64 (sqrt.f64 2) (pow.f64 x 2))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))) 2)) (*.f64 (pow.f64 (sqrt.f64 2) 2) (pow.f64 x 2))))) (pow.f64 p 6)) (sqrt.f64 2)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))","(+.f64 (*.f64 (sqrt.f64 2) (+.f64 (/.f64 (*.f64 (pow.f64 p 4) (-.f64 (/.f64 3 (pow.f64 x 4)) (pow.f64 (neg.f64 (/.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 2) (*.f64 x x)))) 2))) (sqrt.f64 8)) (/.f64 (*.f64 (+.f64 (/.f64 -10 (pow.f64 x 6)) (*.f64 (-.f64 (/.f64 3 (pow.f64 x 4)) (pow.f64 (neg.f64 (/.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 2) (*.f64 x x)))) 2)) (/.f64 1/2 (*.f64 x x)))) (pow.f64 p 6)) (sqrt.f64 8)))) (-.f64 1 (/.f64 (*.f64 (*.f64 p p) (sqrt.f64 1/2)) (*.f64 (sqrt.f64 2) (*.f64 x x)))))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))","(sqrt.f64 1/2)","(+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(fma.f64 1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(fma.f64 -1/32 (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2)))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (+.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1/16 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3)))) (*.f64 -1/64 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3))))) (pow.f64 p 3)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))))))","(+.f64 (fma.f64 -1/32 (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2))) (*.f64 (*.f64 1/2 (/.f64 (*.f64 1/2 (pow.f64 x 3)) (/.f64 (pow.f64 p 3) -3/64))) (sqrt.f64 2)))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))","(sqrt.f64 1/2)","(+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))","(fma.f64 -1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))","(fma.f64 -1/32 (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 -1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2)))","(+.f64 (*.f64 -1/32 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 -1/16 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3)))) (*.f64 -1/64 (*.f64 (cbrt.f64 1/32) (*.f64 (cbrt.f64 4) (pow.f64 x 3))))) (pow.f64 p 3)) (sqrt.f64 (/.f64 1 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4)))))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))) (/.f64 x p))) (sqrt.f64 (*.f64 (cbrt.f64 1/32) (cbrt.f64 4))))))","(fma.f64 -1/32 (*.f64 (sqrt.f64 1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 1/2 (pow.f64 x 3)) (/.f64 (pow.f64 p 3) -3/64)) (sqrt.f64 2)) (fma.f64 -1/4 (*.f64 (sqrt.f64 1/2) (/.f64 x p)) (sqrt.f64 1/2))))"]],"time":352.989990234375,"type":"simplify"},{"compiler":[[8696,6338]],"time":127.612060546875,"type":"eval"},{"alts":[["(sqrt.f64 (/.f64 (*.f64 p p) (*.f64 x x)))","fresh",52.37742629020167],["(sqrt.f64 (fma.f64 (*.f64 1/2 x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) 1/2))","fresh",18.566702635336455],["(sqrt.f64 (/.f64 (fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 4) 2)))","next",18.071608159571657],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) 0)))","fresh",52.37489153558897],["(neg.f64 (/.f64 p x))","fresh",51.00610609737293],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","done",16.21845430824469],["(sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2)))","done",16.205695945742253]],"compiler":[[10,6],[15,11],[27,23],[19,15],[6,4],[18,14],[23,19],[10,6],[15,11],[27,23],[19,15],[6,4]],"count":[[298,7]],"kept":[{"done":[1,1],"fresh":[5,4],"new":[291,1],"picked":[1,1]}],"min-error":[4.478985036078379],"time":101.840087890625,"type":"prune"},{"compiler":[[119,86]],"locations":[["(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))",0.40072250976844204,true],["(*.f64 (cbrt.f64 4) x)",0.421875,true],["(cbrt.f64 (cbrt.f64 1/4))",1.0,true],["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))",18.731219072470523,true]],"time":31.56982421875,"type":"localize"},{"count":[[4,48]],"series":[["(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))","p","-inf",0.262939453125],["(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))","p","inf",0.23388671875],["(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))","p","0",0.2431640625],["(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))","x","-inf",0.22314453125],["(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))","x","inf",0.239990234375],["(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))","x","0",0.25],["(*.f64 (cbrt.f64 4) x)","x","-inf",0.294189453125],["(*.f64 (cbrt.f64 4) x)","x","inf",0.2861328125],["(*.f64 (cbrt.f64 4) x)","x","0",1.286865234375],["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))","p","-inf",0.256103515625],["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))","p","inf",0.2900390625],["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))","p","0",0.489013671875],["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))","x","-inf",0.64013671875],["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))","x","inf",0.462158203125],["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))","x","0",0.906005859375]],"time":6.6669921875,"type":"series"},{"count":[[4,166]],"inputs":[["(fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))","(cbrt.f64 (cbrt.f64 1/4))","(*.f64 (cbrt.f64 4) x)","(/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 0) (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 0 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))) (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 8 1/2)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (*.f64 8 1/2)) (/.f64 (*.f64 (cbrt.f64 -4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))) (pow.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 2/3) (cbrt.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 512))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/2 512)))) (cbrt.f64 (*.f64 (*.f64 4 (cbrt.f64 (cbrt.f64 1/4))) (cbrt.f64 1/4))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 1/2 512)) (cbrt.f64 (cbrt.f64 1/4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 1/16))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (*.f64 8 (cbrt.f64 1/4))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (*.f64 8 1/2))) (cbrt.f64 (*.f64 4 (cbrt.f64 1/4))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 1/4)) (cbrt.f64 (cbrt.f64 (*.f64 1/2 512))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (/.f64 (cbrt.f64 4) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) (/.f64 (pow.f64 (*.f64 (cbrt.f64 4) x) 2/3) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 -4) x) (/.f64 -1 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (cbrt.f64 4) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (cbrt.f64 -4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 4 (hypot.f64 (+.f64 p p) x))) (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) -1/3) (/.f64 (*.f64 (cbrt.f64 4) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 4) x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 (+.f64 p p) x)) (*.f64 (cbrt.f64 4) x) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 (*.f64 8 1/2)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1 (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (cbrt.f64 (*.f64 8 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 8 1/2)) 1 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (cbrt.f64 (cbrt.f64 1/4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) 0) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 0 (cbrt.f64 (cbrt.f64 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (cbrt.f64 1/4))) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1/2 1/27) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/4) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (cbrt.f64 -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 -1/2)) (cbrt.f64 (cbrt.f64 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) -1) (*.f64 (cbrt.f64 (cbrt.f64 1/2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 1/4 1/27)) (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/16) 1/16)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 1/16))) (pow.f64 1/4 1/27))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1/4 1/27) (cbrt.f64 (cbrt.f64 (cbrt.f64 1/16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 1/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 1/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 1/2 1/27) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/64 1/27)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 1/4 1/27) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/4 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 1/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 1/4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/2 (*.f64 2 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 1/4 1/27) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/16 (/.f64 1/9 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/2 (+.f64 1/9 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 1/4 1/27) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/2 (*.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/2 (*.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 1/2 (*.f64 1/9 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (cbrt.f64 -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (cbrt.f64 (cbrt.f64 -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 1/4) 1/3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 1/2) 1/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 1/4) 1/9))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 4) x) (*.f64 (*.f64 (cbrt.f64 4) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 4) x) 0) (*.f64 (cbrt.f64 4) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 4) x) (*.f64 0 (*.f64 (cbrt.f64 4) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (cbrt.f64 -4) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 (*.f64 x x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) (pow.f64 (*.f64 (cbrt.f64 4) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 4) x) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 4) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 4 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 4) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (cbrt.f64 -4) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 4)) (*.f64 (cbrt.f64 (cbrt.f64 16)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 -4) x)) (neg.f64 (pow.f64 (*.f64 (cbrt.f64 4) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) 4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 4) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 -4) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) 4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 0) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) (*.f64 0 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (hypot.f64 (+.f64 p p) x))) (/.f64 (*.f64 (cbrt.f64 -4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (cbrt.f64 -4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 -4) x) (/.f64 -1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (/.f64 (cbrt.f64 4) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (cbrt.f64 4) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (hypot.f64 (+.f64 p p) x))) (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) (/.f64 (pow.f64 (*.f64 (cbrt.f64 4) x) 2/3) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 4) x) (/.f64 1 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (+.f64 p p) x)) (*.f64 (cbrt.f64 4) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) -1/3) (/.f64 (*.f64 (cbrt.f64 4) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (cbrt.f64 -4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (sqrt.f64 (hypot.f64 (+.f64 p p) x))) (sqrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (cbrt.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 (+.f64 p p) x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (*.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4) x) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 -4) x))) (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 4) x))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (pow.f64 (*.f64 (cbrt.f64 4) x) 2/3)) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (cbrt.f64 4)) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4 (hypot.f64 (+.f64 p p) x))) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) -1/3) (*.f64 (cbrt.f64 4) x)) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 -4) x)) (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3)) (cbrt.f64 (neg.f64 (hypot.f64 (+.f64 p p) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 4) x)) (pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 2/3)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (cbrt.f64 4) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 4) (/.f64 x (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 4) x) -1) (neg.f64 (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) 1) (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 -4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x))) (neg.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (cbrt.f64 (hypot.f64 (+.f64 p p) x)))) (neg.f64 (pow.f64 (hypot.f64 (+.f64 p p) x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 4 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (cbrt.f64 -4) x) (hypot.f64 (+.f64 p p) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 -4) x) (hypot.f64 (+.f64 p p) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 4 (pow.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) 3)))))))"]],"rules":[["egg-rr",53],["egg-rr",30],["egg-rr",38],["egg-rr",45]],"time":38.55322265625,"type":"rewrite"},{"count":[[214,239]],"inputs":[["(*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (cbrt.f64 4))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1 (cbrt.f64 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1 (cbrt.f64 4))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)))))))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (cbrt.f64 4))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2))) (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6)))) (pow.f64 p 6))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))))","(*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 p 2))) (*.f64 1/1024 (/.f64 (cbrt.f64 4) (pow.f64 p 7)))) (pow.f64 x 7))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(*.f64 -1 (cbrt.f64 4))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -1 (cbrt.f64 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2)))) (pow.f64 p 6))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))))) (*.f64 1/1024 (*.f64 (cbrt.f64 4) (pow.f64 x 7)))) (pow.f64 p 7))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 x 2)) (pow.f64 p 7))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/1024 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 7)) (pow.f64 p 7))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3))","(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 2 (cbrt.f64 1/2) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 2 (cbrt.f64 1/2) (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(-.f64 (fma.f64 2 (cbrt.f64 1/2) (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) -3/256) (pow.f64 p 5)) (pow.f64 x 5)))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (cbrt.f64 4))","(fma.f64 2 (cbrt.f64 1/2) (cbrt.f64 4))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (fma.f64 2 (cbrt.f64 1/2) (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(fma.f64 2 (cbrt.f64 1/2) (+.f64 (-.f64 (cbrt.f64 4) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -6))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))))","(fma.f64 2 (cbrt.f64 1/2) (-.f64 (+.f64 (-.f64 (cbrt.f64 4) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -6))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)))) (/.f64 (fma.f64 -2 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1 (cbrt.f64 4)))","(fma.f64 2 (cbrt.f64 1/2) (cbrt.f64 (neg.f64 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1 (cbrt.f64 4))))","(-.f64 (*.f64 2 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (cbrt.f64 1/2))) (cbrt.f64 4))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (fma.f64 2 (cbrt.f64 1/2) (-.f64 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -4)) (cbrt.f64 4)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)))))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (fma.f64 2 (cbrt.f64 1/2) (fma.f64 -2 (/.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (pow.f64 x 6)) (-.f64 (fma.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6)) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -4))) (cbrt.f64 4))))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (cbrt.f64 4))","(fma.f64 2 (cbrt.f64 1/2) (cbrt.f64 4))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (fma.f64 2 (cbrt.f64 1/2) (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(-.f64 (+.f64 (fma.f64 2 (cbrt.f64 1/2) (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)))) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) -6) (pow.f64 x 4)) (pow.f64 p 4)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2))) (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6)))) (pow.f64 p 6))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))))","(-.f64 (-.f64 (+.f64 (fma.f64 2 (cbrt.f64 1/2) (cbrt.f64 4)) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)))) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) -6) (pow.f64 x 4)) (pow.f64 p 4))) (*.f64 (fma.f64 -2 (/.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) (/.f64 (*.f64 x x) -6)) (/.f64 (*.f64 8 (cbrt.f64 4)) (pow.f64 x 6))) (pow.f64 p 6)))","(*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3))","(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 2 (cbrt.f64 1/2) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 2 (cbrt.f64 1/2) (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(fma.f64 2 (cbrt.f64 1/2) (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (/.f64 (pow.f64 p 5) -3/256)))))","(*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3))","(*.f64 2 (cbrt.f64 1/2))","(+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 2 (cbrt.f64 1/2) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 2 (cbrt.f64 1/2) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 2 (pow.f64 (*.f64 1 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))))","(fma.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5)) (fma.f64 2 (cbrt.f64 1/2) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(-.f64 (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) -3/256) (pow.f64 p 5)) (pow.f64 x 5)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 p 2))) (*.f64 1/1024 (/.f64 (cbrt.f64 4) (pow.f64 p 7)))) (pow.f64 x 7))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/256 (/.f64 (cbrt.f64 4) (pow.f64 p 5))) (*.f64 -1/128 (/.f64 (cbrt.f64 4) (pow.f64 p 5)))) (pow.f64 x 5))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(-.f64 (-.f64 (fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) -3/256) (pow.f64 p 5)) (pow.f64 x 5))) (*.f64 (fma.f64 -1/8 (/.f64 (/.f64 (cbrt.f64 4) (pow.f64 p 5)) (/.f64 (*.f64 p p) -3/256)) (/.f64 (*.f64 1/1024 (cbrt.f64 4)) (pow.f64 p 7))) (pow.f64 x 7)))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x))))","(+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(+.f64 (-.f64 (cbrt.f64 4) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -6))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6))) (+.f64 (cbrt.f64 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 x 4))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(-.f64 (+.f64 (-.f64 (cbrt.f64 4) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -6))) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)))) (/.f64 (fma.f64 -2 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (*.f64 8 (*.f64 (cbrt.f64 4) (pow.f64 p 6)))) (pow.f64 x 6)))","(*.f64 -1 (cbrt.f64 4))","(cbrt.f64 (neg.f64 4))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (*.f64 -1 (cbrt.f64 4)))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (cbrt.f64 (neg.f64 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (-.f64 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -4)) (cbrt.f64 4))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (cbrt.f64 4) (pow.f64 p 4))) (*.f64 -2 (*.f64 (cbrt.f64 4) (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (+.f64 (*.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6))) (*.f64 -4 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4))))))))","(fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) (+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (pow.f64 x 4)) (/.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) -6) (*.f64 p p)) (pow.f64 x 6)))) (-.f64 (fma.f64 8 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 6)) (pow.f64 x 6)) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 4)) (/.f64 (pow.f64 x 4) -4))) (cbrt.f64 4))))","(cbrt.f64 4)","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2)))))","(-.f64 (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)))) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) -6) (pow.f64 x 4)) (pow.f64 p 4)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 p 4))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (/.f64 (cbrt.f64 4) (pow.f64 x 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) (pow.f64 x 4))) (*.f64 -4 (/.f64 (cbrt.f64 4) (pow.f64 x 4)))) (pow.f64 x 2)))) (pow.f64 p 6))) (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))))))","(-.f64 (-.f64 (+.f64 (cbrt.f64 4) (*.f64 -2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)))) (*.f64 (fma.f64 -2 (/.f64 (/.f64 (cbrt.f64 4) (pow.f64 x 4)) (/.f64 (*.f64 x x) -6)) (/.f64 (*.f64 8 (cbrt.f64 4)) (pow.f64 x 6))) (pow.f64 p 6))) (*.f64 (/.f64 (*.f64 (cbrt.f64 4) -6) (pow.f64 x 4)) (pow.f64 p 4)))","(*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (/.f64 (pow.f64 p 5) -3/256))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))))) (*.f64 1/1024 (*.f64 (cbrt.f64 4) (pow.f64 x 7)))) (pow.f64 p 7))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 p 5))) (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(fma.f64 -1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (-.f64 (-.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)) (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (/.f64 (pow.f64 p 5) -3/256))) (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256)) (*.f64 1/1024 (*.f64 (cbrt.f64 4) (pow.f64 x 7)))) (pow.f64 p 7))))","(*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (+.f64 (*.f64 -1/128 (*.f64 (cbrt.f64 4) (pow.f64 x 5))) (*.f64 -1/256 (*.f64 (cbrt.f64 4) (pow.f64 x 5)))) (pow.f64 x 2)) (pow.f64 p 7))) (+.f64 (*.f64 -1/128 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 -1/256 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (pow.f64 p 5))) (+.f64 (*.f64 1/1024 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 7)) (pow.f64 p 7))) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p)))))))","(fma.f64 1/16 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 3)) (pow.f64 p 3)) (fma.f64 -1/8 (/.f64 (*.f64 (*.f64 x x) (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) -3/256)) (pow.f64 p 7)) (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 5)) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 1/1024 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 x 7)) (pow.f64 p 7)) (*.f64 -1/2 (/.f64 (*.f64 (cbrt.f64 4) x) p))))))"]],"time":202.52783203125,"type":"simplify"},{"compiler":[[8444,6710]],"time":106.9951171875,"type":"eval"},{"alts":[["(sqrt.f64 (/.f64 (*.f64 p p) (*.f64 x x)))","fresh",52.37742629020167],["(sqrt.f64 (fma.f64 (*.f64 1/2 x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) 1/2))","fresh",18.566702635336455],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) 0)))","fresh",52.37489153558897],["(neg.f64 (/.f64 p x))","fresh",51.00610609737293],["(sqrt.f64 (/.f64 (fma.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 1/2 512)) (cbrt.f64 (cbrt.f64 1/4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 1/16))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 4) 2)))","fresh",18.070162040904354],["(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","done",16.21845430824469],["(sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2)))","done",16.205695945742253]],"compiler":[[10,6],[15,11],[19,15],[6,4],[32,28],[18,14],[23,19]],"count":[[246,7]],"kept":[{"done":[2,2],"fresh":[4,4],"new":[239,1],"picked":[1,0]}],"min-error":[4.478950995901362],"time":68.4228515625,"type":"prune"},{"accuracy":[7.902520176878498],"baseline":[16.205695945742253],"branch":[["p",13.889209027451178,3],["x",13.609195585723148,4],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))",7.902520176878498,2],["(*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))))",7.902520176878498,2],["(+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))",7.902520176878498,2],["(/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))",7.902520176878498,2],["(*.f64 (*.f64 4 p) p)",16.20569594574225,1]],"compiler":[[3,2],[3,2],[19,14],[18,13],[16,11],[14,9],[7,5],[207,149]],"count":[[12,2]],"inputs":[["(sqrt.f64 (/.f64 (fma.f64 (cbrt.f64 (*.f64 (cbrt.f64 (*.f64 1/2 512)) (cbrt.f64 (cbrt.f64 1/4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 1/16))) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 4) 2)))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (*.f64 p p)) (*.f64 x x)) 0)))","(sqrt.f64 (/.f64 (fma.f64 (*.f64 2 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (*.f64 (cbrt.f64 4) x) (hypot.f64 (+.f64 p p) x))) (*.f64 (cbrt.f64 4) 2)))","(sqrt.f64 (/.f64 (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 4) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2)))) (*.f64 (cbrt.f64 4) 2)))","(sqrt.f64 (*.f64 (cbrt.f64 1/32) (fma.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4) (cbrt.f64 4))))","(sqrt.f64 (/.f64 (*.f64 p p) (*.f64 x x)))","(sqrt.f64 (fma.f64 (*.f64 1/2 x) (/.f64 1 (hypot.f64 (+.f64 p p) x)) 1/2))","(neg.f64 (/.f64 p x))","(sqrt.f64 (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (/.f64 (*.f64 1/2 x) (hypot.f64 (+.f64 p p) x))))","(sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2)))","(sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 (*.f64 2 p) x)) 1/2))","(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))"]],"link":["."],"name":["Given's Rotation SVD example"],"oracle":[62.2775352765506],"outputs":[["(neg.f64 (/.f64 p x))","(sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2)))"]],"time":54.4970703125,"times":[["p",13.43701171875],["x",17.462890625],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))",3.616943359375],["(*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))))",3.60595703125],["(+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))",3.6669921875],["(/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))",4.677001953125],["(*.f64 (*.f64 4 p) p)",3.703857421875]],"type":"regimes"},{"bstep":[[-0.9999999987005929,-0.999999995580661,0.1240234375]],"compiler":[[10,9],[14,9]],"method":["left-value"],"time":0.31396484375,"type":"bsearch"},{"compiler":[[42,31]],"inputs":[["(if (<=.f64 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))) -9007199218712195/9007199254740992) (neg.f64 (/.f64 p x)) (sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))) -9007199218712195/9007199254740992) (neg.f64 (/.f64 p x)) (sqrt.f64 (/.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)))) (*.f64 (cbrt.f64 4) 2))))","(if (<=.f64 (/.f64 x (hypot.f64 (+.f64 p p) x)) -9007199218712195/9007199254740992) (neg.f64 (/.f64 p x)) (sqrt.f64 (*.f64 (fma.f64 (cbrt.f64 4) (/.f64 x (hypot.f64 (+.f64 p p) x)) (cbrt.f64 4)) (cbrt.f64 1/32))))"]],"stop":[["fuel",1]],"time":26.578125,"type":"simplify"},{"time":0.02392578125,"type":"soundness"},{"compiler":[[42,31]],"remove-preprocessing":[[]],"time":16.863037109375,"type":"end"}]