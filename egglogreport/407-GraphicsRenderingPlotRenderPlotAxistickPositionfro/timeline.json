[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.1910326833876861,0.7914211168918424,0.017546199720471556],[11,0.14814779528024635,0.8499005097656238,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":137.578857421875,"type":"analyze"},{"outcomes":[["body",256,"invalid",128.368408203125,2648],["body",256,"valid",405.65869140625,8256]],"time":545.052001953125,"type":"sample"},{"compiler":[[13,8]],"inputs":[["0","1","2","3"],["(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))","(+.f64 y (*.f64 (-.f64 x y) (/.f64 z t)))","(+.f64 z (*.f64 (-.f64 y z) (/.f64 x t)))","(+.f64 t (*.f64 (-.f64 y t) (/.f64 z x)))","(+.f64 x (*.f64 (-.f64 z x) (/.f64 y t)))","(+.f64 x (*.f64 (-.f64 t x) (/.f64 z y)))","(+.f64 x (*.f64 (-.f64 y x) (/.f64 t z)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))","(fma.f64 (-.f64 y x) (/.f64 z t) x)","(+.f64 y (*.f64 (-.f64 x y) (/.f64 z t)))","(fma.f64 (-.f64 x y) (/.f64 z t) y)","(+.f64 z (*.f64 (-.f64 y z) (/.f64 x t)))","(fma.f64 (/.f64 x t) (-.f64 y z) z)","(+.f64 t (*.f64 (-.f64 y t) (/.f64 z x)))","(fma.f64 (-.f64 y t) (/.f64 z x) t)","(+.f64 x (*.f64 (-.f64 z x) (/.f64 y t)))","(fma.f64 (/.f64 y t) (-.f64 z x) x)","(+.f64 x (*.f64 (-.f64 t x) (/.f64 z y)))","(fma.f64 (/.f64 z y) (-.f64 t x) x)","(+.f64 x (*.f64 (-.f64 y x) (/.f64 t z)))","(fma.f64 (-.f64 y x) (/.f64 t z) x)"]],"symmetry":[[]],"time":91.615966796875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))","(fma.f64 (/.f64 z t) (-.f64 y x) x)"]],"time":18.837158203125,"type":"simplify"},{"compiler":[[21,9]],"time":0.333984375,"type":"eval"},{"alts":[["(fma.f64 (/.f64 z t) (-.f64 y x) x)","next",1.3648771650523426],["(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))","fresh",1.3726896650523426]],"compiler":[[12,7],[13,8],[12,7],[13,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[1.3609709150523426],"time":1.259033203125,"type":"prune"},{"compiler":[[22,7]],"locations":[["(fma.f64 (/.f64 z t) (-.f64 y x) x)",1.3075289342490213,true]],"time":5.927978515625,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 (/.f64 z t) (-.f64 y x) x)","x","-inf",0.3798828125],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","x","inf",0.343017578125],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","x","0",0.346923828125],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","y","-inf",0.556884765625],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","y","inf",0.3720703125],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","y","0",0.383056640625],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","t","-inf",0.338134765625],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","t","inf",0.446044921875],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","t","0",0.35302734375],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","z","-inf",0.39794921875],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","z","inf",0.498046875],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","z","0",0.48291015625]],"time":5.078857421875,"type":"series"},{"count":[[1,36]],"inputs":[["(fma.f64 (/.f64 z t) (-.f64 y x) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 (/.f64 z t) (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 0) (fma.f64 (/.f64 z t) (-.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) (*.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 z t) (-.f64 y x) x)) (fma.f64 (/.f64 z t) (-.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) (*.f64 0 (fma.f64 (/.f64 z t) (-.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (*.f64 y z) t)) (*.f64 (/.f64 z t) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 2)) (cbrt.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 z t) (-.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 z t) (-.f64 y x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z t) (-.f64 y x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 z t) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (/.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 z (-.f64 y x)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (-.f64 y x) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) x)))))"]],"rules":[["egg-rr",36]],"time":19.27197265625,"type":"rewrite"},{"count":[[84,51]],"inputs":[["x","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(/.f64 (*.f64 (-.f64 y x) z) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)"]],"time":167.537109375,"type":"simplify"},{"compiler":[[600,151]],"time":6.095947265625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x)) x)","fresh",8.720888675182554],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","next",5.0770042850285995],["(fma.f64 (*.f64 (/.f64 z t) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)) x)","fresh",25.76494739596635],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","done",1.3648771650523426],["(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","fresh",6.461315632889811]],"compiler":[[20,12],[15,9],[20,12],[12,7],[19,12],[20,12],[15,9],[20,12],[19,12]],"count":[[53,5]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[51,4],"picked":[1,1]}],"min-error":[0],"time":10.945068359375,"type":"prune"},{"compiler":[[41,9]],"locations":[["(-.f64 (/.f64 y t) (/.f64 x t))",0.015625,true],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)",0.01953125,true],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)",5.381560712118819,true]],"time":7.56689453125,"type":"localize"},{"count":[[3,111]],"series":[["(-.f64 (/.f64 y t) (/.f64 x t))","x","-inf",0.15380859375],["(-.f64 (/.f64 y t) (/.f64 x t))","x","inf",0.176025390625],["(-.f64 (/.f64 y t) (/.f64 x t))","x","0",0.156005859375],["(-.f64 (/.f64 y t) (/.f64 x t))","t","-inf",0.18994140625],["(-.f64 (/.f64 y t) (/.f64 x t))","t","inf",0.160888671875],["(-.f64 (/.f64 y t) (/.f64 x t))","t","0",0.151123046875],["(-.f64 (/.f64 y t) (/.f64 x t))","y","-inf",0.18310546875],["(-.f64 (/.f64 y t) (/.f64 x t))","y","inf",0.15380859375],["(-.f64 (/.f64 y t) (/.f64 x t))","y","0",0.177001953125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","z","-inf",0.173095703125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","z","inf",0.326904296875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","z","0",0.161865234375],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","x","-inf",0.203857421875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","x","inf",0.174072265625],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","x","0",0.1669921875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","t","-inf",0.2021484375],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","t","inf",0.162109375],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","t","0",0.184814453125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","y","-inf",0.175048828125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","y","inf",0.175048828125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","y","0",0.203125],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","z","-inf",0.289794921875],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","z","inf",0.31591796875],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","z","0",0.635009765625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","x","-inf",0.239990234375],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","x","inf",0.383056640625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","x","0",0.419189453125],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","t","-inf",0.654052734375],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","t","inf",1.22900390625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","t","0",0.56005859375],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","y","-inf",0.40185546875],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","y","inf",0.463134765625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","y","0",0.510986328125]],"time":10.30615234375,"type":"series"},{"count":[[3,195]],"inputs":[["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(-.f64 (/.f64 y t) (/.f64 x t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 z y) t)) (*.f64 1 (*.f64 z (neg.f64 (/.f64 x t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (/.f64 y t) z)) (*.f64 1 (*.f64 (neg.f64 (/.f64 x t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) (*.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 0) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (*.f64 z (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z y) t) 1) (*.f64 (*.f64 z (neg.f64 (/.f64 x t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 y t) z) 1) (*.f64 (*.f64 (neg.f64 (/.f64 x t)) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) t)) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y t) z) (*.f64 (neg.f64 (/.f64 x t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 x t)) z) (*.f64 (/.f64 y t) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 y x) t) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 y x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) t) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (/.f64 (-.f64 y x) t))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) t) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 y x)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (*.f64 t (-.f64 y x))) (pow.f64 t -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) (cbrt.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) (cbrt.f64 (*.f64 t t))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 y x)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 t (-.f64 y x))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 z (*.f64 t (-.f64 y x)))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 z (-.f64 y x))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 x y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 t (-.f64 x y))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (-.f64 y x) (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) t) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) (*.f64 t (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (-.f64 y x))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (*.f64 t (-.f64 y x)))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y t) z (*.f64 (neg.f64 (/.f64 x t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 y t) (*.f64 z (neg.f64 (/.f64 x t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y t) z) (+.f64 (*.f64 (neg.f64 (/.f64 x t)) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) (*.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 0) (fma.f64 (/.f64 (-.f64 y x) t) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) (*.f64 0 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (fma.f64 (/.f64 (-.f64 y x) t) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (*.f64 z y) t)) (*.f64 z (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (/.f64 y t) z)) (*.f64 (neg.f64 (/.f64 x t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 2)) (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 y x) t) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 z (-.f64 y x))) t)))) (+.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 z (-.f64 y x))) t)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 y x) t) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (-.f64 y x) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 z (-.f64 y x)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (/.f64 (-.f64 y x) t))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 z (-.f64 x y)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 y x) t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 y x) t) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 z (-.f64 y x)) t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 x t)) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 y x) t) 0) (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 x t)) (*.f64 (neg.f64 (/.f64 y t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) t) (*.f64 0 (/.f64 (-.f64 y x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 y x) t)) (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y t) (*.f64 t t)) (neg.f64 (/.f64 (*.f64 t x) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 x t)) (neg.f64 (/.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y t) (/.f64 x t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 y t) (*.f64 t t)) (/.f64 (*.f64 t x) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 y t) 0) (/.f64 x t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 (neg.f64 (*.f64 y t))) (*.f64 t t)) (/.f64 (*.f64 t x) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) (cbrt.f64 (/.f64 (-.f64 y x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (/.f64 y t)) (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (-.f64 (*.f64 y (cbrt.f64 (pow.f64 t -2))) (*.f64 x (cbrt.f64 (pow.f64 t -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (-.f64 x y) t))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) t)) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 y x)) (pow.f64 t -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 x y)) (/.f64 1 (neg.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 y t) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2)) (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 t t))))) (-.f64 (cbrt.f64 (/.f64 y t)) (cbrt.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 y x)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 x y)) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) (cbrt.f64 (*.f64 t (-.f64 y x)))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 t (-.f64 y x)) 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (cbrt.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 t (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (cbrt.f64 t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 x y)) t) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 t)) (neg.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) x)) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 t)) t) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 x))) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (*.f64 t t))) (*.f64 (neg.f64 t) (/.f64 y (cbrt.f64 t)))) (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (*.f64 t t))) (*.f64 t (/.f64 y (cbrt.f64 t)))) (*.f64 t (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y t) (*.f64 t t)) (*.f64 (*.f64 t t) (*.f64 t x))) (*.f64 (*.f64 t t) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 t)) t) (*.f64 (cbrt.f64 (*.f64 t t)) x)) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 t)) (neg.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 x))) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 t)) (cbrt.f64 (*.f64 t t))) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 x (cbrt.f64 t)))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (cbrt.f64 (*.f64 t t))) (*.f64 t (/.f64 x (cbrt.f64 t)))) (*.f64 t (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (cbrt.f64 (*.f64 t t))) (*.f64 (neg.f64 t) (/.f64 x (cbrt.f64 t)))) (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 y x) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (neg.f64 t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (-.f64 x y) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y t)) (cbrt.f64 (pow.f64 (/.f64 y t) 2)) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 t) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 x t))) (cbrt.f64 (pow.f64 (/.f64 x t) 2)) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x t)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2))) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 t) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 x t)) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y t) 1 (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y t) 2)) (cbrt.f64 (/.f64 y t)) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 y (cbrt.f64 (pow.f64 t -2))) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 t) y (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 -1 t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 y t)) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x t) (/.f64 y t))))))"]],"rules":[["egg-rr",95],["egg-rr",44],["egg-rr",56]],"time":36.139892578125,"type":"rewrite"},{"count":[[306,217]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 (-.f64 y x) z) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","x","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(*.f64 -1 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(*.f64 -1 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(*.f64 -1 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 x t))","(neg.f64 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 x t))","(neg.f64 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 x t))","(neg.f64 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)"]],"time":376.7529296875,"type":"simplify"},{"compiler":[[3186,942]],"time":25.709228515625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x)) x)","fresh",8.720888675182554],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","done",5.0770042850285995],["(fma.f64 (*.f64 (/.f64 z t) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)) x)","fresh",25.76494739596635],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","done",1.3648771650523426],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","next",6.929123751258942]],"compiler":[[20,12],[15,9],[20,12],[12,7],[18,11],[20,12],[20,12],[18,11]],"count":[[222,5]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[217,1],"picked":[1,1]}],"min-error":[0],"time":77.5888671875,"type":"prune"},{"compiler":[[55,11]],"locations":[["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))",0.015625,true],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)",0.01953125,true],["(*.f64 z (neg.f64 (/.f64 x t)))",5.19270156842124,true],["(/.f64 (*.f64 z y) t)",6.602505365039228,true]],"time":8.537109375,"type":"localize"},{"count":[[4,168]],"series":[["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","y","-inf",0.166015625],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","y","inf",0.180908203125],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","y","0",0.1669921875],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","t","-inf",0.193115234375],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","t","inf",0.16796875],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","t","0",0.1640625],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","x","-inf",0.175048828125],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","x","inf",0.1611328125],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","x","0",0.18603515625],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","z","-inf",0.169921875],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","z","inf",0.18798828125],["(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))","z","0",0.16796875],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","y","-inf",0.18896484375],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","y","inf",0.212158203125],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","y","0",1.75390625],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","t","-inf",0.203125],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","t","inf",0.18798828125],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","t","0",0.22216796875],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","x","-inf",0.19482421875],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","x","inf",0.2099609375],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","x","0",0.318115234375],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","z","-inf",0.215087890625],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","z","inf",0.208984375],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","z","0",0.18994140625],["(*.f64 z (neg.f64 (/.f64 x t)))","t","-inf",0.16015625],["(*.f64 z (neg.f64 (/.f64 x t)))","t","inf",0.453857421875],["(*.f64 z (neg.f64 (/.f64 x t)))","t","0",0.550048828125],["(*.f64 z (neg.f64 (/.f64 x t)))","x","-inf",0.158203125],["(*.f64 z (neg.f64 (/.f64 x t)))","x","inf",0.385009765625],["(*.f64 z (neg.f64 (/.f64 x t)))","x","0",0.426025390625],["(*.f64 z (neg.f64 (/.f64 x t)))","z","-inf",0.156982421875],["(*.f64 z (neg.f64 (/.f64 x t)))","z","inf",0.281005859375],["(*.f64 z (neg.f64 (/.f64 x t)))","z","0",0.471923828125],["(/.f64 (*.f64 z y) t)","t","-inf",0.31005859375],["(/.f64 (*.f64 z y) t)","t","inf",0.302978515625],["(/.f64 (*.f64 z y) t)","t","0",0.445068359375],["(/.f64 (*.f64 z y) t)","y","-inf",0.2958984375],["(/.f64 (*.f64 z y) t)","y","inf",0.347900390625],["(/.f64 (*.f64 z y) t)","y","0",0.367919921875],["(/.f64 (*.f64 z y) t)","z","-inf",0.302001953125],["(/.f64 (*.f64 z y) t)","z","inf",0.285888671875],["(/.f64 (*.f64 z y) t)","z","0",0.39990234375]],"time":12.7978515625,"type":"series"},{"count":[[4,253]],"inputs":[["(/.f64 (*.f64 z y) t)","(*.f64 z (neg.f64 (/.f64 x t)))","(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","(+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z y) t) 0) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (*.f64 (/.f64 (*.f64 z y) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z y) t)) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (*.f64 0 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (neg.f64 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (cbrt.f64 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z y) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z y) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z y)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 t)) (/.f64 y (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 t)) (/.f64 z (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z y) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (*.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (/.f64 (*.f64 z y) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z y) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z y) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) y) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) (cbrt.f64 (pow.f64 (*.f64 z y) 2))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (cbrt.f64 (*.f64 z y))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (cbrt.f64 (neg.f64 (*.f64 z y)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 z y)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 t)) z) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 z (cbrt.f64 (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z y) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 y (cbrt.f64 (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z y)) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z y) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z y) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z y) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z y) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z 0) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (*.f64 z x) t)) 0) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z x) t)) (*.f64 (neg.f64 (/.f64 (*.f64 z x) t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 z) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (/.f64 (*.f64 z x) t))) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z x) t)) (*.f64 0 (neg.f64 (/.f64 (*.f64 z x) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 z x) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 z x) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 x t))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 z x) t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (neg.f64 (/.f64 x t)))) (cbrt.f64 (pow.f64 (/.f64 x t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 x t)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 x t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 z x) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z x)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z (cbrt.f64 (/.f64 x t)))) (cbrt.f64 (pow.f64 (/.f64 x t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z x) t)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z x) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x t) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (/.f64 x t))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z x) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z x)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (*.f64 z x))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 z x)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (neg.f64 (*.f64 z x))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (neg.f64 x) (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z x) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) x) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (neg.f64 x)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 x (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2)) z)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 x) (cbrt.f64 t)) z) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x z) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 z x)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z x)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z x)) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z x)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (*.f64 z x))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (/.f64 (*.f64 z x) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (/.f64 (*.f64 z x) t) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z x) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (*.f64 z x) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (neg.f64 (pow.f64 (/.f64 (*.f64 z x) t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (neg.f64 (/.f64 (*.f64 z x) t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z x) t)) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 z t) x) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 0) (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) (*.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)) (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) (*.f64 0 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (neg.f64 (/.f64 x t)) x) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 z (neg.f64 (/.f64 x t)) x) 1) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (*.f64 (fma.f64 z (neg.f64 (/.f64 x t)) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 y (/.f64 z t) x) (/.f64 (*.f64 z x) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 y (/.f64 z t) x) 0) (/.f64 (*.f64 z x) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 z y) t) (-.f64 (/.f64 (*.f64 z x) t) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 (*.f64 z x) t) (fma.f64 y (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 z (neg.f64 (/.f64 x t)) x) (neg.f64 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)) (cbrt.f64 (pow.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))) (+.f64 (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 2)) (cbrt.f64 (*.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 2)) (cbrt.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) (cbrt.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 x t)) z (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (neg.f64 (/.f64 x t)) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 (*.f64 z x) t)) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 (*.f64 z x) t)) 1 (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (neg.f64 (/.f64 x t)))) (cbrt.f64 (pow.f64 (/.f64 x t) 2)) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 x t))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2)) z) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 (/.f64 x t))) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (/.f64 x t)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 z x) t) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 x t) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (fma.f64 y (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 y (/.f64 z t) x)) (cbrt.f64 (pow.f64 (fma.f64 y (/.f64 z t) x) 2)) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 y (/.f64 z t) x) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 2)) (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 t) (*.f64 z y) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z y) 2)) t) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 t)) (/.f64 (*.f64 z y) (cbrt.f64 (*.f64 t t))) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 z t) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z y)) (/.f64 -1 t) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (cbrt.f64 t)) (/.f64 y (cbrt.f64 (*.f64 t t))) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z y) t) 1 (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 t)) (/.f64 z (cbrt.f64 (*.f64 t t))) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z y) (/.f64 1 t) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (cbrt.f64 (/.f64 (*.f64 z y) t)) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (*.f64 z y) t)) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 y t) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 z y) t) (fma.f64 z (neg.f64 (/.f64 x t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 0) (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 0 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 z y) t) (/.f64 (*.f64 z x) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (*.f64 z y) t) 0) (/.f64 (*.f64 z x) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 (*.f64 z x) t) (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 (*.f64 z x) t)) (neg.f64 (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (+.f64 (/.f64 y t) (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (+.f64 (neg.f64 (/.f64 x t)) (/.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) (cbrt.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (cbrt.f64 (*.f64 (neg.f64 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 z y) t))))) (+.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (cbrt.f64 (/.f64 (*.f64 z y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)) (cbrt.f64 (*.f64 (neg.f64 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 z y) t))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 2)) (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (-.f64 (*.f64 z y) (*.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z x)) (cbrt.f64 (*.f64 t t))) (*.f64 t (/.f64 (*.f64 z y) (cbrt.f64 t)))) (*.f64 t (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) t) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 (*.f64 z x)))) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) t) (*.f64 (cbrt.f64 (*.f64 t t)) (*.f64 z x))) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 z y) (cbrt.f64 t)) (neg.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 (*.f64 z x)))) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z y) (*.f64 z x)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (*.f64 z y)) (neg.f64 (*.f64 z x))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z y) (neg.f64 (*.f64 z x))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 z x)) (*.f64 z y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z x)) t) (*.f64 t (*.f64 z y))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z x)) (neg.f64 t)) (*.f64 t (neg.f64 (*.f64 z y)))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 z y) t) (*.f64 t (neg.f64 (*.f64 z x)))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z y)) t) (*.f64 (neg.f64 t) (neg.f64 (*.f64 z x)))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 z y) t) (*.f64 t (*.f64 z x))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 z y) (neg.f64 t)) (*.f64 t (neg.f64 (*.f64 z x)))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 z y)) t) (*.f64 (neg.f64 t) (*.f64 z x))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 z y)) (neg.f64 t)) (*.f64 (neg.f64 t) (neg.f64 (*.f64 z x)))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (*.f64 z x) t) (/.f64 (*.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (-.f64 (/.f64 y t) (/.f64 x t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (neg.f64 (/.f64 x t)) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 x t)) z (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z y) (/.f64 1 t) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z y) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 z y) t) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 (*.f64 z x) t)) 1 (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (neg.f64 (/.f64 x t)))) (cbrt.f64 (pow.f64 (/.f64 x t) 2)) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 x t))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2)) z) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (/.f64 x t)) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 z x) t) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 x t) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z x) t) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z x) t))) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 t) (*.f64 z y) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z y) 2)) t) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 t)) (/.f64 (*.f64 z y) (cbrt.f64 (*.f64 t t))) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 z t) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z y)) (/.f64 -1 t) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (cbrt.f64 t)) (/.f64 y (cbrt.f64 (*.f64 t t))) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z y) t) 1 (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 t)) (/.f64 z (cbrt.f64 (*.f64 t t))) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) t) 2)) (cbrt.f64 (/.f64 (*.f64 z y) t)) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (*.f64 z y) t)) (neg.f64 (/.f64 (*.f64 z x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 y t) (neg.f64 (/.f64 (*.f64 z x) t)))))))"]],"rules":[["egg-rr",72],["egg-rr",72],["egg-rr",60],["egg-rr",49]],"time":42.760009765625,"type":"rewrite"},{"count":[[421,272]],"inputs":[["(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","x","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z)) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z)) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z)) x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","x","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t)) x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t)) x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(/.f64 (*.f64 y z) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","x","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z)) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z)) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z)) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t)) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t)) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t)) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (*.f64 (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 y t))) z))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x))) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)"]],"time":535.7861328125,"type":"simplify"},{"compiler":[[4802,1123]],"time":31.593017578125,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x)) x)","next",8.720888675182554],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","done",5.0770042850285995],["(fma.f64 (*.f64 (/.f64 z t) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)) x)","fresh",25.76494739596635],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","done",1.3648771650523426],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","done",6.929123751258942]],"compiler":[[20,12],[15,9],[20,12],[12,7],[18,11],[20,12],[20,12]],"count":[[277,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[272,0],"picked":[1,1]}],"min-error":[0],"time":115.181884765625,"type":"prune"},{"compiler":[[56,22]],"locations":[["(pow.f64 (/.f64 z t) 2)",0.27572250976844204,true],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))",1.641867276537162,true],["(cbrt.f64 (/.f64 z t))",12.170981029887722,true],["(cbrt.f64 (pow.f64 (/.f64 z t) 2))",25.292981783241327,true]],"time":12.23193359375,"type":"localize"},{"count":[[4,48]],"series":[["(pow.f64 (/.f64 z t) 2)","t","-inf",0.381103515625],["(pow.f64 (/.f64 z t) 2)","t","inf",0.2509765625],["(pow.f64 (/.f64 z t) 2)","t","0",0.322021484375],["(pow.f64 (/.f64 z t) 2)","z","-inf",0.40283203125],["(pow.f64 (/.f64 z t) 2)","z","inf",0.35009765625],["(pow.f64 (/.f64 z t) 2)","z","0",0.388916015625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","x","-inf",0.27001953125],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","x","inf",0.3359375],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","x","0",0.72900390625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","y","-inf",0.40087890625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","y","inf",0.2880859375],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","y","0",1.156005859375],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","t","-inf",0.289794921875],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","t","inf",0.31298828125],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","t","0",0.3330078125],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","z","-inf",0.286865234375],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","z","inf",0.284912109375],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","z","0",0.38916015625],["(cbrt.f64 (/.f64 z t))","t","-inf",0.411865234375],["(cbrt.f64 (/.f64 z t))","t","inf",0.192138671875],["(cbrt.f64 (/.f64 z t))","t","0",0.200927734375],["(cbrt.f64 (/.f64 z t))","z","-inf",0.39013671875],["(cbrt.f64 (/.f64 z t))","z","inf",0.205078125],["(cbrt.f64 (/.f64 z t))","z","0",0.19287109375],["(cbrt.f64 (pow.f64 (/.f64 z t) 2))","t","-inf",0.302001953125],["(cbrt.f64 (pow.f64 (/.f64 z t) 2))","t","inf",0.364013671875],["(cbrt.f64 (pow.f64 (/.f64 z t) 2))","t","0",0.337890625],["(cbrt.f64 (pow.f64 (/.f64 z t) 2))","z","-inf",0.301025390625],["(cbrt.f64 (pow.f64 (/.f64 z t) 2))","z","inf",0.361083984375],["(cbrt.f64 (pow.f64 (/.f64 z t) 2))","z","0",0.573974609375]],"time":11.35498046875,"type":"series"},{"count":[[4,225]],"inputs":[["(cbrt.f64 (pow.f64 (/.f64 z t) 2))","(cbrt.f64 (/.f64 z t))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(pow.f64 (/.f64 z t) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 z t) 2/3) (*.f64 (pow.f64 (/.f64 z t) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) 0) (pow.f64 (/.f64 z t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 z t) 2/3) (*.f64 0 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 z t) 2/3)) (pow.f64 (/.f64 z t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 z t))) (cbrt.f64 (neg.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z t)) (cbrt.f64 (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 4) (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 z t) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 z t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z t) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z t) (+.f64 2/3 1))) (cbrt.f64 (cbrt.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 z t) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (cbrt.f64 (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) (pow.f64 t -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 t))) (/.f64 (cbrt.f64 (/.f64 z t)) (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 (/.f64 z t)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 z t)) (cbrt.f64 (cbrt.f64 t))) (/.f64 (cbrt.f64 z) (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (pow.f64 t 2/3))) (/.f64 (cbrt.f64 z) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z 2/3)) 1) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 z 2/3)) 2) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 z 2/3)) (cbrt.f64 t)) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 z 2/3)) 2) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 z 2/3)) 2) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -1/3) (cbrt.f64 (/.f64 (*.f64 z z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 t 2/3))) (/.f64 (pow.f64 z 2/3) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 4)) (pow.f64 (/.f64 z t) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 (/.f64 z t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (*.f64 z z))) (cbrt.f64 (neg.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 z 2/3) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 z t) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 z t)) (cbrt.f64 (neg.f64 z))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) 1) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) (cbrt.f64 (/.f64 z t))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (pow.f64 (/.f64 z t) (+.f64 2/3 1)))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) 1) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 z 2/3) (cbrt.f64 (pow.f64 t 2/3))) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 z 2/3)) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 z z) t))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z z) t))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z t) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 z t) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (/.f64 z t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 z t)) 0) (cbrt.f64 (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 z t)) (*.f64 0 (cbrt.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 z t))) (cbrt.f64 (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (pow.f64 t -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 z t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -1/3) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 z)) (neg.f64 (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 t))) (/.f64 (cbrt.f64 z) (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 z)) 1) (/.f64 (cbrt.f64 (pow.f64 z 2/3)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (/.f64 (pow.f64 z 2/3) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t)))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t -1/3)) (cbrt.f64 (/.f64 z (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) 1) (*.f64 (cbrt.f64 (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 z (pow.f64 t 2/3))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 z) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 z)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (cbrt.f64 (cbrt.f64 z))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) 1) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (pow.f64 (/.f64 z t) 2/3))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 z (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z t) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 z t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) (*.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) 0) (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) y) (*.f64 (pow.f64 (/.f64 z t) 2/3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) (*.f64 0 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))) (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) y) 1) (*.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (neg.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (neg.f64 x)) (*.f64 (pow.f64 (/.f64 z t) 2/3) y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 x y) (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (pow.f64 (-.f64 y x) 2/3) (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (/.f64 z t) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 x y) (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (pow.f64 (/.f64 z t) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 y x) 2/3) (pow.f64 (/.f64 z t) 2/3)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 4) (*.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (/.f64 z t) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))) (pow.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (pow.f64 (/.f64 z t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (cbrt.f64 (-.f64 y x))) (pow.f64 (-.f64 y x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 4) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 y x) 2/3) (*.f64 (pow.f64 (/.f64 z t) 2/3) (cbrt.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z t))) 4) (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 z t) 2/3)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (neg.f64 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (pow.f64 z 2/3)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (cbrt.f64 (/.f64 (*.f64 z z) t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 z 2/3) (-.f64 y x)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) (-.f64 y x)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 y x) 3) (pow.f64 (/.f64 z t) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 z t) 2/3) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 x y) (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 x y) (pow.f64 (/.f64 z t) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 y x) 3) (pow.f64 (/.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (pow.f64 (/.f64 z t) 2/3) (*.f64 (pow.f64 (/.f64 z t) 2/3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 z t) 2/3) y (*.f64 (pow.f64 (/.f64 z t) 2/3) (neg.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 z t) 2) (*.f64 (pow.f64 (/.f64 z t) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 z t) 2) 0) (pow.f64 (/.f64 z t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 z t) 2) (*.f64 0 (pow.f64 (/.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 z t) 2)) (pow.f64 (/.f64 z t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z t) (/.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z t) 2/3) (cbrt.f64 (pow.f64 (/.f64 z t) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 4)) (pow.f64 (/.f64 z t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z z) t) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z t)) (pow.f64 (/.f64 z t) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (/.f64 z t) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 4)) (pow.f64 (/.f64 z t) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z z) (pow.f64 t -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 z t)) (neg.f64 (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 z t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z t) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 4)) (pow.f64 (/.f64 z t) 4))) (cbrt.f64 (pow.f64 (/.f64 z t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (/.f64 (*.f64 z z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 z t) t) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -2) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 z t) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z t) (+.f64 2/3 1)) (cbrt.f64 (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (*.f64 (/.f64 (pow.f64 z 2/3) t) (/.f64 (pow.f64 z 2/3) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z z) (*.f64 (/.f64 -1 t) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t -2)) (*.f64 (/.f64 z (pow.f64 t 2/3)) (/.f64 z (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 z t)) 1) (*.f64 (neg.f64 (/.f64 z t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z z)) (/.f64 1 (neg.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 z z) t)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 z t) (cbrt.f64 t)) (/.f64 z (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 z t) (pow.f64 t 2/3)) (/.f64 z (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 z t) -1) (neg.f64 (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 t)) (/.f64 (/.f64 z t) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (pow.f64 t 2/3)) (/.f64 (/.f64 z t) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z -1) (/.f64 (/.f64 z t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 z t) (cbrt.f64 (neg.f64 t))) (/.f64 (neg.f64 z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 z) (cbrt.f64 t)) (/.f64 (/.f64 z t) (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 (/.f64 z t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z t)) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 z t) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (/.f64 z t) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 z z)) 1) (*.f64 (neg.f64 (*.f64 t t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 z (cbrt.f64 t))) (*.f64 t (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 z (pow.f64 t 2/3))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (pow.f64 t 2/3)) z) (*.f64 (cbrt.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (pow.f64 t 2/3)) (neg.f64 z)) (*.f64 (cbrt.f64 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 z (cbrt.f64 t))) (*.f64 (neg.f64 t) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 z (pow.f64 t 2/3))) (*.f64 (neg.f64 t) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) z) (*.f64 (pow.f64 t 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) (neg.f64 z)) (*.f64 (pow.f64 t 2/3) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z z)) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z z) t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z z) t) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z z) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 z t) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 4)) (pow.f64 z 2/3)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 4)) (cbrt.f64 (/.f64 (*.f64 z z) t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z t) (/.f64 z (pow.f64 t 2/3))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z t) (/.f64 z (cbrt.f64 t))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z z) t) (pow.f64 t -1/3)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z z) t) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z z) t) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 z 2/3) (cbrt.f64 (pow.f64 (/.f64 z t) 4))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) (cbrt.f64 (pow.f64 (/.f64 z t) 4))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 z z) t)) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 z z)) 1) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (pow.f64 t 2/3)) (/.f64 z t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) (/.f64 z t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) (pow.f64 (/.f64 z t) (+.f64 2/3 1))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 z) (pow.f64 (/.f64 z t) (+.f64 2/3 1))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z z) t) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z z) t) (pow.f64 t 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z z) t) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z z) t) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 z z) t)) (cbrt.f64 (neg.f64 t))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 z z) t)) (cbrt.f64 t)) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 z z) t)) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 z z) t)) -1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 z z) t)) 3) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (pow.f64 t 2/3)) (/.f64 z (cbrt.f64 t))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (pow.f64 t 2/3)) (/.f64 z (pow.f64 t 2/3))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) (/.f64 z (cbrt.f64 t))) (*.f64 (pow.f64 t 2/3) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) (/.f64 z (pow.f64 t 2/3))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 z z) t))) t)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z t)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z t) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (/.f64 z t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 z t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 z t) (neg.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 z t) 6))))))"]],"rules":[["egg-rr",97],["egg-rr",41],["egg-rr",35],["egg-rr",52]],"time":37.878173828125,"type":"rewrite"},{"count":[[273,232]],"inputs":[["(*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x))","(*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 z t) 2))) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y)","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y)","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y)","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x))","(*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 z t) 2))) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x))","(*.f64 (cbrt.f64 (neg.f64 (pow.f64 (/.f64 z t) 2))) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) x)) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 z 2)) (pow.f64 t 2)) 1/3) y))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x))","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)","(/.f64 (pow.f64 z 2) (pow.f64 t 2))","(pow.f64 (/.f64 z t) 2)"]],"time":149.44287109375,"type":"simplify"},{"compiler":[[4960,1818]],"time":41.56494140625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x)) x)","done",8.720888675182554],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","done",5.0770042850285995],["(fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (*.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 (/.f64 z t)) (cbrt.f64 t))) (-.f64 y x)) x)","fresh",1.5644184142952315],["(fma.f64 (/.f64 z t) (-.f64 y x) x)","done",1.3648771650523426],["(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","done",6.929123751258942]],"compiler":[[20,12],[15,9],[24,13],[12,7],[18,11]],"count":[[237,5]],"kept":[{"done":[3,3],"fresh":[1,0],"new":[232,1],"picked":[1,1]}],"min-error":[0],"time":68.864013671875,"type":"prune"},{"accuracy":[1.3648771650523426],"baseline":[1.3648771650523426],"branch":[["x",1.3648771650523426,1],["y",1.3648771650523428,1],["z",1.3648771650523426,1],["t",1.3648771650523426,1],["(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))",1.3648771650523428,1],["(/.f64 z t)",1.3648771650523428,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[7,5],[113,46]],"count":[[8,1]],"inputs":[["(fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (*.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 (/.f64 z t)) (cbrt.f64 t))) (-.f64 y x)) x)","(+.f64 (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t)) x)","(fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (-.f64 y x)) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (*.f64 (/.f64 z t) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 z t) (-.f64 y x) x)","(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))"]],"link":["."],"name":["Graphics.Rendering.Plot.Render.Plot.Axis:tickPosition from plot-0.2.3.4"],"oracle":[34.80573900940961],"outputs":[["(fma.f64 (/.f64 z t) (-.f64 y x) x)"]],"time":25.068115234375,"times":[["x",3.803955078125],["y",3.89013671875],["z",3.781005859375],["t",3.861083984375],["(+.f64 x (*.f64 (-.f64 y x) (/.f64 z t)))",3.8251953125],["(/.f64 z t)",3.801025390625]],"type":"regimes"},{"compiler":[[12,7]],"inputs":[["(fma.f64 (/.f64 z t) (-.f64 y x) x)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (/.f64 z t) (-.f64 y x) x)"]],"stop":[["fuel",1]],"time":18.113037109375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[12,7]],"remove-preprocessing":[[]],"time":7.901123046875,"type":"end"}]