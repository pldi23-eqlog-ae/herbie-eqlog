[{"compiler":[[17,13]],"method":["search"],"sampling":[[12,0.0621950626373291,0.4373166561126709,0.50048828125],[11,0.0619511604309082,0.4375605583190918,0.50048828125],[10,0.061463356018066406,0.4380483627319336,0.50048828125],[9,0.06048774719238281,0.4390239715576172,0.50048828125],[8,0.058536529541015625,0.4409751892089844,0.50048828125],[7,0.05463409423828125,0.44487762451171875,0.50048828125],[6,0.0468292236328125,0.4526824951171875,0.50048828125],[5,0.031219482421875,0.468292236328125,0.50048828125],[4,0.0,0.49951171875,0.50048828125],[3,0.0,0.49951171875,0.50048828125],[2,0.0,0.49951171875,0.50048828125],[1,0.0,0.49951171875,0.50048828125],[0,0.0,0.49951171875,0.50048828125]],"time":204.22998046875,"type":"analyze"},{"outcomes":[["body",512,"valid",404.32958984375,2039],["body",1024,"valid",1832.337890625,4204],["body",2048,"valid",249.161376953125,412],["body",256,"valid",120.381103515625,1601]],"time":2614.81396484375,"type":"sample"},{"compiler":[[10,8]],"inputs":[["0"],["(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))","(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))"]],"symmetry":[[]],"time":51.0419921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))","(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))"]],"time":17.818115234375,"type":"simplify"},{"compiler":[[16,12]],"time":0.35888671875,"type":"eval"},{"alts":[["(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))","fresh",59.71430173934616],["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))","next",0.037441259768442016]],"compiler":[[10,8],[7,5],[10,8],[7,5]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.025722509768442016],"time":2.248046875,"type":"prune"},{"compiler":[[15,5]],"locations":[["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))",0.037441259768442016,true]],"time":4.131103515625,"type":"localize"},{"count":[[1,12]],"series":[["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))","x","-inf",1.590087890625],["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))","x","inf",1.383056640625],["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))","x","0",0.487060546875]],"time":3.5869140625,"type":"series"},{"count":[[1,52]],"inputs":[["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (/.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x)))) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) (*.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (log1p.f64 x)) (pow.f64 (log1p.f64 (neg.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))) (neg.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x)))) (/.f64 (neg.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) -1/3) (*.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (/.f64 -1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log1p.f64 x)) (log1p.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (log1p.f64 x)) (neg.f64 (log1p.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) -2/3)) (pow.f64 (log1p.f64 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (pow.f64 (log1p.f64 x) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) -2/3)) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) -2/3) (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))) (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -2/3)) (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))) (neg.f64 (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x))))) (neg.f64 (pow.f64 (log1p.f64 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (*.f64 0 (cbrt.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) -2/3)) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2) (neg.f64 (log1p.f64 (neg.f64 x))))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2) (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) -2/3)) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x))))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x)))))) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 3))))))"]],"rules":[["egg-rr",52]],"time":41.4130859375,"type":"rewrite"},{"count":[[64,75]],"inputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3)))) 1)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))) (/.f64 2 (*.f64 (log.f64 (/.f64 1 x)) x))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)) (*.f64 -1 (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(neg.f64 (+.f64 1 x))","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(fma.f64 -1/2 (*.f64 x x) (neg.f64 (+.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3)))) 1)","(fma.f64 -1/2 (*.f64 x x) (+.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) -1))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))","(/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))) (/.f64 2 (*.f64 (log.f64 (/.f64 1 x)) x))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)))","(+.f64 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)) (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))))))","(-.f64 (+.f64 (/.f64 -2 (*.f64 (log.f64 x) x)) (fma.f64 1/2 (/.f64 (pow.f64 x -2) (neg.f64 (log.f64 x))) (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)))) (+.f64 (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (*.f64 (log.f64 x) (*.f64 x x))) (fma.f64 -1/2 (*.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (neg.f64 (*.f64 (log.f64 x) x)) -2)) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 x) 2) x)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x))))))))","(-.f64 (+.f64 (/.f64 -2 (*.f64 (log.f64 x) x)) (fma.f64 1/2 (/.f64 (pow.f64 x -2) (neg.f64 (log.f64 x))) (+.f64 (/.f64 (neg.f64 1/3) (*.f64 (log.f64 x) (pow.f64 x 3))) (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x))))) (fma.f64 (/.f64 (-.f64 (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)) (/.f64 -2 (log.f64 x))) (*.f64 (log.f64 x) (pow.f64 x 3))) 1/2 (fma.f64 1/3 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 x) 2) (pow.f64 x 3))) (+.f64 (fma.f64 -1/2 (*.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (neg.f64 (*.f64 (log.f64 x) x)) -2)) (/.f64 (-.f64 (/.f64 (neg.f64 1/2) (log.f64 x)) (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x)))) (*.f64 (log.f64 x) (pow.f64 x 3)))) (fma.f64 (log.f64 -1) (/.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) x) (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (*.f64 (log.f64 x) (*.f64 x x))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(/.f64 (neg.f64 (log.f64 (neg.f64 x))) (+.f64 (neg.f64 (log.f64 -1)) (neg.f64 (log.f64 (neg.f64 x)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)))","(-.f64 (/.f64 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (neg.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) x) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x))))","(-.f64 (-.f64 (/.f64 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (neg.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) x) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 (-.f64 (*.f64 1/2 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (pow.f64 x -2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)) (*.f64 -1 (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (pow.f64 x 3))))))","(+.f64 (-.f64 (-.f64 (/.f64 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (neg.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) x) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 (-.f64 (*.f64 1/2 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (pow.f64 x -2))) (/.f64 (-.f64 (fma.f64 1/2 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)) (-.f64 (+.f64 (/.f64 (+.f64 (*.f64 1/3 (neg.f64 (log.f64 (neg.f64 x)))) 1/2) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)) (*.f64 -1/2 (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3))))) (/.f64 (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (/.f64 1/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (pow.f64 x 3)))"]],"time":64.804931640625,"type":"simplify"},{"compiler":[[2228,1372]],"time":23.4150390625,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))","fresh",33.60795437886776],["(fma.f64 -1/2 (*.f64 x x) (+.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) -1))","fresh",0.555782917876941],["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","next",0.05144501953688403],["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","fresh",0.166347509768442]],"compiler":[[14,9],[15,11],[10,8],[9,7],[14,9],[15,11],[10,8],[9,7]],"count":[[77,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[75,4],"picked":[1,0]}],"min-error":[0.00390625],"time":9.72998046875,"type":"prune"},{"compiler":[[32,9]],"locations":[["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))",0.037441259768442016,false],["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)",0.0390625,true]],"time":6.33203125,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","x","-inf",9.833984375],["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","x","inf",8.9208984375],["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","x","0",2.177001953125]],"time":21.39794921875,"type":"series"},{"count":[[1,71]],"inputs":[["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) (*.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 0) (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) (*.f64 0 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (log1p.f64 x))) (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) -1) (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (cbrt.f64 (log1p.f64 x)))) (/.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (cbrt.f64 (log1p.f64 x)))) (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) -1) (/.f64 (neg.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) -1/3) (/.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (/.f64 -1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log1p.f64 x)) (log1p.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 7/3) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) 2/3)) (pow.f64 (log1p.f64 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 4/3) 2) (cbrt.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (log1p.f64 x)) (neg.f64 (log1p.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (pow.f64 (cbrt.f64 (log1p.f64 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) -1) (/.f64 -1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))) (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 x)) -2) (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (log1p.f64 x)) (pow.f64 (log1p.f64 (neg.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) -1) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) 2/3)) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (log1p.f64 x)) -2)) (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (neg.f64 (pow.f64 (log1p.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x)))) 1) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))) (/.f64 (neg.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) (/.f64 (log1p.f64 (neg.f64 x)) (neg.f64 (pow.f64 (log1p.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (neg.f64 x)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 4/3) 2)) (cbrt.f64 (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) 2/3)) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x))))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log1p.f64 x) -1/3) (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x)))) (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3)) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) 2/3)) 1) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) 1) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) 1) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) -1) (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) 2/3)) 1) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) 2/3)) (cbrt.f64 (cbrt.f64 (log1p.f64 x)))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x)))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x)))) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x))))) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (log1p.f64 (neg.f64 x)))) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (log1p.f64 x) 2/3))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x)))) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 3))))))"]],"rules":[["egg-rr",71]],"time":25.86083984375,"type":"rewrite"},{"count":[[83,94]],"inputs":[["-1","(-.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)) (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) x) 1)","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)) (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) x) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (cbrt.f64 -1))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (cbrt.f64 -1)) (*.f64 2/9 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 5/12 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (cbrt.f64 -1))))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 5/12 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (cbrt.f64 -1))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)) (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) x) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (cbrt.f64 -1))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (cbrt.f64 -1)) (*.f64 2/9 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2)))) 1)","(*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 1) (log.f64 (/.f64 1 x))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))) (cbrt.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 5)) 1/9) (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2)))))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 2)) 1/9) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))) (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 1) (log.f64 (/.f64 1 x))) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2)))))))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 8)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 1) (log.f64 (/.f64 1 x))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2)))))))) (pow.f64 x 3)))))))))))))","(*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) x)) (*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (log.f64 (/.f64 -1 x)) 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) (pow.f64 (log.f64 (/.f64 -1 x)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2) (pow.f64 x 2)))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (log.f64 (/.f64 -1 x)) 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) (pow.f64 (log.f64 (/.f64 -1 x)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) (pow.f64 (log.f64 (/.f64 -1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (pow.f64 (log.f64 (/.f64 -1 x)) 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) (pow.f64 (log.f64 (/.f64 -1 x)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 8)) (pow.f64 (log.f64 (/.f64 -1 x)) 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (pow.f64 (log.f64 (/.f64 -1 x)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) (pow.f64 (log.f64 (/.f64 -1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))))) (cbrt.f64 -1))))) (cbrt.f64 -1)) (pow.f64 (/.f64 (*.f64 (log.f64 (/.f64 -1 x)) 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/3)) (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (pow.f64 (log.f64 (/.f64 -1 x)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) (pow.f64 (log.f64 (/.f64 -1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))))) (pow.f64 1 1/3)))))) (pow.f64 x 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2) (pow.f64 x 2))))))))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)) (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) x) 1)","(neg.f64 (+.f64 1 x))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)) (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) x) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (cbrt.f64 -1))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (cbrt.f64 -1)) (*.f64 2/9 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2))) 1)","(+.f64 (neg.f64 x) (fma.f64 (+.f64 (+.f64 (+.f64 -1/6 1/9) (neg.f64 (fma.f64 -2/3 (+.f64 -1/2 1/3) 1/9))) -2/9) (*.f64 x x) -1))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 5/12 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (cbrt.f64 -1))))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 5/12 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (cbrt.f64 -1))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)) (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) x) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (+.f64 1/2 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (cbrt.f64 -1))) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (cbrt.f64 -1)) (*.f64 2/9 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 x 2)))) 1)","(+.f64 (*.f64 (fma.f64 2/9 (+.f64 -1/2 1/3) (+.f64 (neg.f64 (fma.f64 2/9 (+.f64 1/2 -1/3) (*.f64 2/3 (+.f64 (*.f64 -2/3 (+.f64 1/2 -1/3)) (-.f64 5/12 1/27))))) (fma.f64 1/3 (+.f64 (-.f64 1/27 5/12) (*.f64 (+.f64 1/2 -1/3) 2/3)) (*.f64 -1/3 (fma.f64 -2/3 (+.f64 -1/2 1/3) 1/9))))) (pow.f64 x 3)) (+.f64 (neg.f64 x) (fma.f64 (+.f64 (+.f64 (+.f64 -1/6 1/9) (neg.f64 (fma.f64 -2/3 (+.f64 -1/2 1/3) 1/9))) -2/9) (*.f64 x x) -1)))","(*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3)))","(/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))))))","(fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) 4) (pow.f64 (neg.f64 (log.f64 x)) -4)) 1/9) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x)) (+.f64 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) 4) (pow.f64 (neg.f64 (log.f64 x)) -4)) 1/9) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 1) (log.f64 (/.f64 1 x))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))) (cbrt.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))))","(fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) 4) (pow.f64 (neg.f64 (log.f64 x)) -4)) 1/9) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x)) (fma.f64 1/3 (*.f64 (-.f64 (/.f64 -1/2 (log.f64 x)) (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2))))) (pow.f64 x -2)) (fma.f64 (cbrt.f64 (neg.f64 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)))) (/.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1))))) (-.f64 (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))) (/.f64 -1/2 (log.f64 x)))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 x)) 4) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -4)) 1/9) (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))) (neg.f64 (*.f64 x x))) (+.f64 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)) (fma.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) 4) (pow.f64 (neg.f64 (log.f64 x)) -4)) 1/9) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x)) (*.f64 (*.f64 2/9 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (*.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)) (pow.f64 x -2))))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))) (pow.f64 1 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4) (pow.f64 1 4)) (pow.f64 (log.f64 (/.f64 1 x)) 4)) 1/9) (*.f64 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) x) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2) (pow.f64 x 2)) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 5)) 1/9) (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2)))))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 2)) 1/9) (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))) (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 1) (log.f64 (/.f64 1 x))) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2)))))))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 8)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 1) (log.f64 (/.f64 1 x))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/3) (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (log.f64 (/.f64 1 x)) 5)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (log.f64 (/.f64 1 x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 2))))))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (log.f64 (/.f64 1 x)))) (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2)))))))) (pow.f64 x 3)))))))))))))","(fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) 4) (pow.f64 (neg.f64 (log.f64 x)) -4)) 1/9) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x)) (+.f64 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)) (fma.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) 4) (pow.f64 (neg.f64 (log.f64 x)) -4)) 1/9) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x)) (+.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 x) 2) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -2)) 1/9) (/.f64 (*.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1))))) (-.f64 (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))) (/.f64 -1/2 (log.f64 x)))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 x)) 4) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -4)) 1/9) (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))) (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)))) (pow.f64 x 3))) (*.f64 (-.f64 (/.f64 -1/2 (log.f64 x)) (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2))))) (pow.f64 x -2)))) (+.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)))) (+.f64 (/.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1))))) (-.f64 (fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -5)) 1/9) (*.f64 (-.f64 (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)) (/.f64 -2 (log.f64 x))) (-.f64 (/.f64 -1/2 (log.f64 x)) (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2))))))) (fma.f64 1/27 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -2))) (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 3)) (+.f64 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)))) (-.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (/.f64 -1/2 (log.f64 x)))) (neg.f64 (log.f64 x))) (/.f64 (*.f64 1/3 (+.f64 (log.f64 x) (log.f64 -1))) (pow.f64 (log.f64 x) 2))))) (/.f64 -1/3 (log.f64 x)))) (*.f64 (*.f64 2/9 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 x)) 8) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -8)) 1/9)) (*.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (-.f64 (/.f64 -1/2 (log.f64 x)) (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))))))) (neg.f64 (pow.f64 x 3))) (/.f64 (fma.f64 2/3 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1))))) (-.f64 (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))) (/.f64 -1/2 (log.f64 x)))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 x)) 4) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -4)) 1/9) (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))) (neg.f64 (*.f64 x x))))) (*.f64 1/3 (/.f64 (-.f64 (/.f64 -1/3 (log.f64 x)) (fma.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -5)) 1/9) (*.f64 (-.f64 (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)) (/.f64 -2 (log.f64 x))) (-.f64 (/.f64 -1/2 (log.f64 x)) (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2))))))) (fma.f64 1/27 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -2))) (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 3)) (+.f64 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)))) (-.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (/.f64 -1/2 (log.f64 x)))) (neg.f64 (log.f64 x))) (/.f64 (*.f64 1/3 (+.f64 (log.f64 x) (log.f64 -1))) (pow.f64 (log.f64 x) 2)))))) (pow.f64 x 3))))) (*.f64 2/9 (+.f64 (*.f64 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9) (*.f64 (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)) (pow.f64 x -2))) (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 x)) 5) (pow.f64 (+.f64 (log.f64 x) (log.f64 -1)) -5)) 1/9) (/.f64 (*.f64 (-.f64 (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)) (/.f64 -2 (log.f64 x))) (-.f64 (/.f64 -1/2 (log.f64 x)) (+.f64 (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x))) (*.f64 (*.f64 1/3 (pow.f64 (neg.f64 (/.f64 (log.f64 x) (+.f64 (log.f64 x) (log.f64 -1)))) 1/9)) (neg.f64 (pow.f64 (+.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) 2)))))) (pow.f64 x 3)))))))))","(*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3)))","(/.f64 (neg.f64 (log.f64 (neg.f64 x))) (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) x)) (*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3))))","(-.f64 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) 4) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4)) 1/9) (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))) x))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (log.f64 (/.f64 -1 x)) 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) (pow.f64 (log.f64 (/.f64 -1 x)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2) (pow.f64 x 2)))))))))","(-.f64 (fma.f64 -1/3 (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (pow.f64 x -2)) (fma.f64 (cbrt.f64 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (/.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x))))) (neg.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))))) (*.f64 (*.f64 1/9 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 4) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -4)) 1/9)) (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))) (neg.f64 (*.f64 x x))) (+.f64 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (*.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2)) (pow.f64 x -2)))))) (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) 4) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4)) 1/9) (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))) x))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 x)) 4) (pow.f64 1 4)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (log.f64 (/.f64 -1 x)) 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/3) (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) (pow.f64 (log.f64 (/.f64 -1 x)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) (pow.f64 (log.f64 (/.f64 -1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (pow.f64 (log.f64 (/.f64 -1 x)) 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (cbrt.f64 -1)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 4)) (pow.f64 (log.f64 (/.f64 -1 x)) 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 8)) (pow.f64 (log.f64 (/.f64 -1 x)) 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/3) (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (pow.f64 (log.f64 (/.f64 -1 x)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) (pow.f64 (log.f64 (/.f64 -1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))))) (cbrt.f64 -1))))) (cbrt.f64 -1)) (pow.f64 (/.f64 (*.f64 (log.f64 (/.f64 -1 x)) 1) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) 1/3)) (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) (pow.f64 (log.f64 (/.f64 -1 x)) 2)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 5)) (pow.f64 (log.f64 (/.f64 -1 x)) 5)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2))))))) (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))))))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))))) (pow.f64 1 1/3)))))) (pow.f64 x 3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (log.f64 (/.f64 -1 x))) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 (pow.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) 2) (pow.f64 x 2))))))))))","(-.f64 (fma.f64 -1/3 (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (pow.f64 x -2)) (fma.f64 (cbrt.f64 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (/.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x))))) (neg.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))))) (*.f64 (*.f64 1/9 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 4) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -4)) 1/9)) (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))) (neg.f64 (*.f64 x x))) (-.f64 (-.f64 (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (*.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2)) (pow.f64 x -2))) (/.f64 (fma.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -5)) 1/9) (neg.f64 (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))))) (fma.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -2)) 1/9) (*.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x))))) (neg.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))))) (*.f64 (*.f64 1/9 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 4) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -4)) 1/9)) (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (fma.f64 (neg.f64 (fma.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 8) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -8)) 1/9) (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x))))) (-.f64 (fma.f64 1/27 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -2))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 3)) (fma.f64 1/2 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)) (-.f64 (+.f64 (/.f64 (+.f64 1/2 (*.f64 1/3 (neg.f64 (log.f64 (neg.f64 x))))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)) (fma.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -5)) 1/9) (neg.f64 (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))))) (*.f64 -1/2 (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))))) (/.f64 (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (/.f64 1/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))))) (cbrt.f64 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 1/3 (-.f64 (/.f64 1/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (fma.f64 1/27 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -2))) (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 3)) (fma.f64 1/2 (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)) (-.f64 (+.f64 (/.f64 (+.f64 1/2 (*.f64 1/3 (neg.f64 (log.f64 (neg.f64 x))))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)) (fma.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 5) (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) -5)) 1/9) (neg.f64 (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (+.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (neg.f64 (log.f64 (neg.f64 x)))) 1/9)) (neg.f64 (pow.f64 (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2))) 2))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))) (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))))) (*.f64 -1/2 (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3)))))) (/.f64 (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 3))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))))))) (pow.f64 x 3))) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 (neg.f64 x))) 4) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -4)) 1/9) (-.f64 (/.f64 -1 (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)))) x))"]],"time":124.509033203125,"type":"simplify"},{"compiler":[[12697,9306]],"time":138.780029296875,"type":"eval"},{"alts":[["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","next",0.166347509768442],["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","done",0.05144501953688403],["(fma.f64 -1/2 (*.f64 x x) (+.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) -1))","fresh",0.555782917876941],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))) 3)","fresh",33.60733216964226]],"compiler":[[9,7],[10,8],[15,11],[17,12],[9,7],[15,11],[17,12]],"count":[[173,4]],"kept":[{"done":[0,0],"fresh":[3,1],"new":[169,2],"picked":[1,1]}],"min-error":[0],"time":23.236083984375,"type":"prune"},{"compiler":[[22,10]],"locations":[["(/.f64 1 (log1p.f64 x))",0.015625,true],["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))",0.150722509768442,true]],"time":5.614990234375,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 1 (log1p.f64 x))","x","-inf",0.7099609375],["(/.f64 1 (log1p.f64 x))","x","inf",0.656005859375],["(/.f64 1 (log1p.f64 x))","x","0",1.52001953125],["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","x","-inf",0.489990234375],["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","x","inf",0.444091796875],["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","x","0",0.214111328125]],"time":4.201904296875,"type":"series"},{"count":[[2,102]],"inputs":[["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","(/.f64 1 (log1p.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) -2/3)) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (cbrt.f64 (log1p.f64 x))) (*.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (log1p.f64 (neg.f64 x)))) (pow.f64 (log1p.f64 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (log1p.f64 x)) (pow.f64 (log1p.f64 (neg.f64 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (/.f64 (cbrt.f64 (log1p.f64 (neg.f64 x))) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) -1/3) (*.f64 (pow.f64 (log1p.f64 x) -2/3) (log1p.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))) (neg.f64 (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log1p.f64 (neg.f64 x)))) (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log1p.f64 x)) (log1p.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 x) -2/3) (log1p.f64 (neg.f64 x))) (pow.f64 (log1p.f64 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (/.f64 -1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) (*.f64 (log1p.f64 (neg.f64 x)) (neg.f64 (pow.f64 (log1p.f64 x) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (log1p.f64 x)) (neg.f64 (log1p.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -2/3)) (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (neg.f64 x)) (neg.f64 (pow.f64 (log1p.f64 x) -2/3))) (neg.f64 (pow.f64 (log1p.f64 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (pow.f64 (log1p.f64 x) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) -2/3) (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (pow.f64 (log1p.f64 x) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (pow.f64 (log1p.f64 (neg.f64 x)) 2/3)) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (log1p.f64 (neg.f64 x))))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) (pow.f64 (log1p.f64 (neg.f64 x)) 2/3))) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x))) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2) (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (/.f64 (log1p.f64 (neg.f64 x)) (cbrt.f64 (log1p.f64 x))) (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2) (neg.f64 (log1p.f64 (neg.f64 x))))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (neg.f64 x))) (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2/3) (cbrt.f64 (log1p.f64 (neg.f64 x)))) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log1p.f64 x) -2/3) (log1p.f64 (neg.f64 x))) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log1p.f64 (neg.f64 x)) (neg.f64 (pow.f64 (log1p.f64 x) -2/3))) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (log1p.f64 (neg.f64 x)) (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2))) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 2) (log1p.f64 (neg.f64 x)))) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (log1p.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (log1p.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) -1/3)) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) -2/3)) (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) -1/3)) (cbrt.f64 (log1p.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) -2/3)) (cbrt.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) (neg.f64 (pow.f64 (log1p.f64 x) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 x) -2/3)) (neg.f64 (pow.f64 (log1p.f64 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) -2/3)) (*.f64 (pow.f64 (log1p.f64 x) -1/3) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (log1p.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 x) -2/3) -1) (neg.f64 (pow.f64 (log1p.f64 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 x) -1/3) (cbrt.f64 (pow.f64 (log1p.f64 x) -2/3))) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) -1/3) (pow.f64 (log1p.f64 x) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 x) -2/3) (pow.f64 (log1p.f64 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 x) (pow.f64 (log1p.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log1p.f64 x) -1/3) (cbrt.f64 (pow.f64 (log1p.f64 x) -2/3))) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 x) (pow.f64 (log1p.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log1p.f64 x) -1/3) (pow.f64 (log1p.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log1p.f64 x) -2/3) -1) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (log1p.f64 x) -2/3)) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (log1p.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) 0) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 (log1p.f64 x) -1/3)) 0) (neg.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (log1p.f64 x) -2/3) -1)) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 x)) (neg.f64 (pow.f64 (log1p.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (log1p.f64 x) -1/3) (cbrt.f64 (pow.f64 (log1p.f64 x) -2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (log1p.f64 x) -2) -1)) (cbrt.f64 (neg.f64 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (pow.f64 (log1p.f64 x) -1/3) 7)) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (log1p.f64 x) -1/3) (pow.f64 (log1p.f64 x) -2))) (cbrt.f64 (pow.f64 (log1p.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log1p.f64 x) -2/3) (cbrt.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (log1p.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 x) -1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 x) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 x)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (log1p.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 x) -3))))))"]],"rules":[["egg-rr",45],["egg-rr",57]],"time":48.011962890625,"type":"rewrite"},{"count":[[126,147]],"inputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3)))) 1)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))) (/.f64 2 (*.f64 (log.f64 (/.f64 1 x)) x))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)) (*.f64 -1 (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (pow.f64 x 3))))))","(/.f64 1 x)","(+.f64 1/2 (/.f64 1 x))","(+.f64 1/2 (+.f64 (*.f64 -1/12 x) (/.f64 1 x)))","(+.f64 1/2 (+.f64 (*.f64 -1/12 x) (+.f64 (*.f64 1/24 (pow.f64 x 2)) (/.f64 1 x))))","(/.f64 -1 (log.f64 (/.f64 1 x)))","(neg.f64 (+.f64 (/.f64 1 (log.f64 (/.f64 1 x))) (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))) (+.f64 (/.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 3) (pow.f64 x 2))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 3) (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2))))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2))) (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 3))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (/.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 3)))) (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 3) (pow.f64 x 2))))))))","(/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))","(-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 2)))) (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (*.f64 1/3 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (pow.f64 x 3))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3) (pow.f64 x 2))) (+.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 2))))))) (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(neg.f64 (+.f64 1 x))","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(+.f64 (fma.f64 -1/2 (*.f64 x x) (neg.f64 x)) -1)","(-.f64 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x)) -1)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))","(/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))) (/.f64 2 (*.f64 (log.f64 (/.f64 1 x)) x))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)))","(+.f64 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)) (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) x))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))))))","(-.f64 (+.f64 (/.f64 -2 (*.f64 (log.f64 x) x)) (fma.f64 1/2 (/.f64 (pow.f64 x -2) (neg.f64 (log.f64 x))) (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x)))) (+.f64 (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (*.f64 (log.f64 x) (*.f64 x x))) (+.f64 (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 x) 2) x)) (*.f64 (*.f64 -1/2 (+.f64 (log.f64 x) (log.f64 -1))) (pow.f64 (neg.f64 (*.f64 (log.f64 x) x)) -2)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) x))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (log.f64 (/.f64 1 x))))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (log.f64 (/.f64 1 x)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 -1)) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (log.f64 (/.f64 1 x)))))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 (/.f64 1 (log.f64 (/.f64 1 x)))) (/.f64 (log.f64 -1) (pow.f64 (log.f64 (/.f64 1 x)) 2))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 2)))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x))))))))","(-.f64 (+.f64 (/.f64 -2 (*.f64 (log.f64 x) x)) (fma.f64 1/2 (/.f64 (pow.f64 x -2) (neg.f64 (log.f64 x))) (fma.f64 1/3 (/.f64 (pow.f64 x -3) (neg.f64 (log.f64 x))) (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (log.f64 x))))) (fma.f64 1/2 (/.f64 (-.f64 (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2)) (/.f64 -2 (log.f64 x))) (*.f64 (log.f64 x) (pow.f64 x 3))) (fma.f64 1/3 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (*.f64 (pow.f64 (log.f64 x) 2) (pow.f64 x 3))) (fma.f64 -1/2 (*.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (neg.f64 (*.f64 (log.f64 x) x)) -2)) (+.f64 (/.f64 (-.f64 (/.f64 (neg.f64 1/2) (log.f64 x)) (fma.f64 -1/2 (/.f64 (+.f64 (log.f64 x) (log.f64 -1)) (pow.f64 (log.f64 x) 2)) (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (log.f64 x)))) (*.f64 (log.f64 x) (pow.f64 x 3))) (+.f64 (/.f64 (-.f64 (/.f64 -2 (log.f64 x)) (/.f64 (log.f64 -1) (pow.f64 (log.f64 x) 2))) (*.f64 (log.f64 x) (*.f64 x x))) (/.f64 (log.f64 -1) (*.f64 (pow.f64 (log.f64 x) 2) x))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(/.f64 (neg.f64 (log.f64 (neg.f64 x))) (+.f64 (neg.f64 (log.f64 (neg.f64 x))) (neg.f64 (log.f64 -1))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)))","(-.f64 (/.f64 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (neg.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) x) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x))))","(-.f64 (-.f64 (/.f64 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (neg.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) x) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3)))) (pow.f64 x -2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 1/2 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) x)) (*.f64 -1 (/.f64 (-.f64 (*.f64 1/3 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/3 (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 (log.f64 (/.f64 -1 x)) (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))) (pow.f64 x 3))))))","(+.f64 (-.f64 (-.f64 (/.f64 (fma.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (neg.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) x) (/.f64 (neg.f64 (log.f64 (neg.f64 x))) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2)) (/.f64 1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3)))) (pow.f64 x -2))) (*.f64 (-.f64 (fma.f64 1/2 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3)) (-.f64 (+.f64 (/.f64 (+.f64 (*.f64 1/3 (neg.f64 (log.f64 (neg.f64 x)))) 1/2) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) 2)) (*.f64 -1/2 (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3))))) (-.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3) (/.f64 (*.f64 (neg.f64 (log.f64 (neg.f64 x))) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3)) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))) (/.f64 1/3 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))) (pow.f64 x -3)))","(/.f64 1 x)","(+.f64 1/2 (/.f64 1 x))","(+.f64 1/2 (+.f64 (*.f64 -1/12 x) (/.f64 1 x)))","(+.f64 1/2 (fma.f64 -1/12 x (/.f64 1 x)))","(+.f64 1/2 (+.f64 (*.f64 -1/12 x) (+.f64 (*.f64 1/24 (pow.f64 x 2)) (/.f64 1 x))))","(+.f64 1/2 (fma.f64 -1/12 x (fma.f64 1/24 (*.f64 x x) (/.f64 1 x))))","(/.f64 -1 (log.f64 (/.f64 1 x)))","(/.f64 1 (log.f64 x))","(neg.f64 (+.f64 (/.f64 1 (log.f64 (/.f64 1 x))) (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x))))","(-.f64 (/.f64 1 (log.f64 x)) (/.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) x))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2)))) (+.f64 (/.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 3) (pow.f64 x 2))))))","(-.f64 (fma.f64 (pow.f64 (neg.f64 (*.f64 (log.f64 x) x)) -2) 1/2 (/.f64 1 (log.f64 x))) (+.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) x) (/.f64 (pow.f64 x -2) (neg.f64 (pow.f64 (log.f64 x) 3)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 3) (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 2))))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2))) (/.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 3))) (*.f64 (log.f64 (/.f64 1 x)) (pow.f64 x 3)))) (+.f64 (/.f64 1 (log.f64 (/.f64 1 x))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) x)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 2) (pow.f64 x 3)))) (/.f64 1 (*.f64 (pow.f64 (log.f64 (/.f64 1 x)) 3) (pow.f64 x 2))))))))","(-.f64 (fma.f64 1/2 (+.f64 (pow.f64 (neg.f64 (*.f64 (log.f64 x) x)) -3) (pow.f64 (neg.f64 (*.f64 (log.f64 x) x)) -2)) (/.f64 (-.f64 (pow.f64 (neg.f64 (log.f64 x)) -3) (/.f64 1/2 (pow.f64 (log.f64 x) 2))) (*.f64 (log.f64 x) (pow.f64 x 3)))) (+.f64 (/.f64 -1 (log.f64 x)) (+.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 x)) -2) x) (fma.f64 1/3 (/.f64 (pow.f64 x -3) (pow.f64 (log.f64 x) 2)) (/.f64 (pow.f64 x -2) (neg.f64 (pow.f64 (log.f64 x) 3)))))))","(/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))","(/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))","(-.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)))","(-.f64 (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))) (/.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) x))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3) (pow.f64 x 2))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 2)))) (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)))","(-.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3) (pow.f64 x -2)) (fma.f64 1/2 (pow.f64 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) x) -2) (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (/.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (*.f64 1/3 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2))) (/.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (pow.f64 x 3))) (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 3) (pow.f64 x 2))) (+.f64 (/.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) (pow.f64 x 2))))))) (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2) x)))","(-.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3) (pow.f64 x -2)) (fma.f64 1/2 (pow.f64 (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) x) -2) (/.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3)) (fma.f64 1/3 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -3)) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))) (pow.f64 x -3))) (/.f64 (pow.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -2) x))"]],"time":125.05810546875,"type":"simplify"},{"compiler":[[3781,2319]],"time":39.284912109375,"type":"eval"},{"alts":[["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","done",0.166347509768442],["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","done",0.05144501953688403],["(+.f64 (fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x)) -1)","next",0.5557829161919554],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))) 3)","fresh",33.60733216964226]],"compiler":[[9,7],[10,8],[15,11],[17,12],[15,11],[17,12]],"count":[[151,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[147,1],"picked":[1,1]}],"min-error":[0],"time":20.134033203125,"type":"prune"},{"compiler":[[50,33]],"locations":[["(fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x))",0.0078125,true],["(*.f64 -5/12 (pow.f64 x 3))",0.0625,true]],"time":11.18701171875,"type":"localize"},{"count":[[2,12]],"series":[["(fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x))","x","-inf",0.2119140625],["(fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x))","x","inf",0.339111328125],["(fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x))","x","0",0.219970703125],["(*.f64 -5/12 (pow.f64 x 3))","x","-inf",0.345947265625],["(*.f64 -5/12 (pow.f64 x 3))","x","inf",0.3720703125],["(*.f64 -5/12 (pow.f64 x 3))","x","0",0.47802734375]],"time":2.051025390625,"type":"series"},{"count":[[2,72]],"inputs":[["(*.f64 -5/12 (pow.f64 x 3))","(fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -5/12 (pow.f64 x 3)) 0) (*.f64 -5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -5/12 (pow.f64 x 3)) (*.f64 (*.f64 -5/12 (pow.f64 x 3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -5/12 (pow.f64 x 3))) (*.f64 -5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -5/12 (pow.f64 x 3)) (*.f64 0 (*.f64 -5/12 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -5/12 (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 3) -5/12)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 -5/12)) (*.f64 (*.f64 x x) (cbrt.f64 25/144)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) (cbrt.f64 25/144)) (*.f64 x (cbrt.f64 -5/12)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 3) (cbrt.f64 -5/12)) (cbrt.f64 25/144))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -5/12 x) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -5/12) (*.f64 (cbrt.f64 25/144) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 -5/12 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 25/144) (*.f64 (pow.f64 x 3) (cbrt.f64 -5/12)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 25/144) (pow.f64 x 3)) (cbrt.f64 -5/12))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -5/12 (*.f64 x x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 -5/12 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -5/12 (pow.f64 x 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 5/12 (pow.f64 x 3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -5/12 (pow.f64 x 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -5/12 (pow.f64 x 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (cbrt.f64 -5/12)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -5/12 (pow.f64 x 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -5/12 (pow.f64 x 3)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 0) (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) (*.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (*.f64 x x)) (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)) (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) (*.f64 0 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) (*.f64 -1/2 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 x) (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2 (*.f64 x x)) (neg.f64 x)) (*.f64 -5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -5/12 (pow.f64 x 3)) (+.f64 (neg.f64 x) (*.f64 -1/2 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 -1/2 (*.f64 x x)) x) (*.f64 -5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 -1/2 (*.f64 x x)) 0) (+.f64 x (*.f64 5/12 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (*.f64 x x)) (+.f64 x (*.f64 5/12 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -5/12 (pow.f64 x 3)) (-.f64 x (*.f64 -1/2 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (*.f64 -1/2 (*.f64 x x)) x) (*.f64 5/12 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) 0) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 x (*.f64 5/12 (pow.f64 x 3))) (*.f64 -1/2 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)) (pow.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 2/3) (cbrt.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 x (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 x (*.f64 5/12 (pow.f64 x 3))) (*.f64 -1/2 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 -5/12 x))) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (pow.f64 x 2/3)) (pow.f64 x 4/3) (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 1/4) (*.f64 x x)) (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -1/2 (*.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 x 4) 1/4)) (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) 2/3) (cbrt.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x))) (*.f64 -1/2 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x))) (pow.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) 2/3) (*.f64 -1/2 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 x) x (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (*.f64 x x) (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) -1/2 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 x (*.f64 5/12 (pow.f64 x 3))) (*.f64 -1/2 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/2 (*.f64 x x)) (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (*.f64 x x)) 1 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) 1 (*.f64 -1/2 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) (*.f64 -1/2 (*.f64 x x)))))))"]],"rules":[["egg-rr",46],["egg-rr",26]],"time":27.156982421875,"type":"rewrite"},{"count":[[84,81]],"inputs":[["(*.f64 -1 x)","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -5/12 (pow.f64 x 3)) (*.f64 -1 x)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -5/12 (pow.f64 x 3)) (*.f64 -1 x)))","(*.f64 -5/12 (pow.f64 x 3))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -5/12 (pow.f64 x 3)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))","(*.f64 -5/12 (pow.f64 x 3))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -5/12 (pow.f64 x 3)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x))","(fma.f64 -1/2 (*.f64 x x) (neg.f64 x))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -5/12 (pow.f64 x 3)) (*.f64 -1 x)))","(-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12))) x)","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -5/12 (pow.f64 x 3)) (*.f64 -1 x)))","(-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12))) x)","(*.f64 -5/12 (pow.f64 x 3))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -5/12 (pow.f64 x 3)))","(*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))","(-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12))) x)","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))","(-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12))) x)","(*.f64 -5/12 (pow.f64 x 3))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -5/12 (pow.f64 x 3)))","(*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12)))","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))","(-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12))) x)","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -5/12 (pow.f64 x 3))))","(-.f64 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x -5/12))) x)"]],"time":53.235107421875,"type":"simplify"},{"compiler":[[1355,898]],"time":18.31982421875,"type":"eval"},{"alts":[["(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","done",0.166347509768442],["(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","done",0.05144501953688403],["(+.f64 (fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x)) -1)","done",0.5557829161919554],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))) 3)","fresh",33.60733216964226]],"compiler":[[9,7],[10,8],[15,11],[17,12]],"count":[[85,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[81,0],"picked":[1,1]}],"min-error":[0],"time":20.69921875,"type":"prune"},{"accuracy":[0.037441259768442016],"baseline":[0.037441259768442016],"branch":[["x",0.037441259768442016,1],["(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))",0.037441259768442016,1]],"compiler":[[2,1],[10,8],[98,51]],"count":[[9,1]],"inputs":[["(+.f64 (fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -5/12 (pow.f64 x 3)) x)) -1)","(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))) 3)","(*.f64 (/.f64 (pow.f64 (log1p.f64 (neg.f64 x)) 2/3) (log1p.f64 x)) (cbrt.f64 (log1p.f64 (neg.f64 x))))","(fma.f64 -1/2 (*.f64 x x) (+.f64 (fma.f64 -5/12 (pow.f64 x 3) (neg.f64 x)) -1))","(pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))) 3)","(*.f64 (log1p.f64 (neg.f64 x)) (/.f64 1 (log1p.f64 x)))","(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))","(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))"]],"link":["."],"name":["qlog (example 3.10)"],"oracle":[62.18395386053731],"outputs":[["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))"]],"time":8.298828125,"times":[["x",4.14599609375],["(/.f64 (log.f64 (-.f64 1 x)) (log.f64 (+.f64 1 x)))",2.27392578125]],"type":"regimes"},{"compiler":[[7,5]],"inputs":[["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (log1p.f64 (neg.f64 x)) (log1p.f64 x))"]],"stop":[["fuel",1]],"time":38.619140625,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[7,5]],"remove-preprocessing":[[]],"time":8.093994140625,"type":"end"}]