[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.4797652819565883,0.4319837802983102,0.08825093774510151],[11,0.40565519775191206,0.5129197933113119,0.08142500893677607],[10,0.34324670579007943,0.5928806736374099,0.06387262057251064],[9,0.2808382138282468,0.7176976575610752,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":98.1259765625,"type":"analyze"},{"outcomes":[["body",256,"invalid",64.793212890625,1330],["body",256,"valid",380.573974609375,8256]],"time":456.822021484375,"type":"sample"},{"compiler":[[12,8]],"inputs":[["0","1","2"],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","(+.f64 y (*.f64 (*.f64 (-.f64 x y) 6) z))","(+.f64 z (*.f64 (*.f64 (-.f64 y z) 6) x))","(+.f64 x (*.f64 (*.f64 (-.f64 z x) 6) y))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(+.f64 y (*.f64 (*.f64 (-.f64 x y) 6) z))","(fma.f64 z (*.f64 -6 (-.f64 y x)) y)","(+.f64 z (*.f64 (*.f64 (-.f64 y z) 6) x))","(fma.f64 (*.f64 -6 (-.f64 z y)) x z)","(+.f64 x (*.f64 (*.f64 (-.f64 z x) 6) y))","(fma.f64 (*.f64 -6 (-.f64 x z)) y x)"]],"symmetry":[[]],"time":73.237060546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","(fma.f64 (*.f64 -6 (-.f64 x y)) z x)"]],"time":18.492919921875,"type":"simplify"},{"compiler":[[20,12]],"time":0.37109375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","next",0.1328125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","fresh",0.13671875]],"compiler":[[11,7],[12,8],[11,7],[12,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.12890625],"time":1.40087890625,"type":"prune"},{"compiler":[[23,10]],"locations":[["(*.f64 -6 (-.f64 x y))",0.0234375,true],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)",0.125,true]],"time":4.972900390625,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 -6 (-.f64 x y))","y","-inf",0.166015625],["(*.f64 -6 (-.f64 x y))","y","inf",0.14208984375],["(*.f64 -6 (-.f64 x y))","y","0",0.143798828125],["(*.f64 -6 (-.f64 x y))","x","-inf",0.1630859375],["(*.f64 -6 (-.f64 x y))","x","inf",0.14697265625],["(*.f64 -6 (-.f64 x y))","x","0",0.152099609375],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","z","-inf",0.319091796875],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","z","inf",0.5361328125],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","z","0",0.344970703125],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","y","-inf",0.323974609375],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","y","inf",0.408935546875],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","y","0",1.093017578125],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","x","-inf",0.56591796875],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","x","inf",0.510009765625],["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","x","0",0.52490234375]],"time":5.72412109375,"type":"series"},{"count":[[2,67]],"inputs":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","(*.f64 -6 (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 0) (fma.f64 (*.f64 -6 (-.f64 x y)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) (*.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)) (fma.f64 (*.f64 -6 (-.f64 x y)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) (*.f64 0 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 -6 (-.f64 x y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)) (pow.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 2/3) (cbrt.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 -6 (-.f64 x y)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 -6 (-.f64 x y)) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (-.f64 x y)) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (*.f64 (*.f64 -6 (-.f64 x y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (*.f64 (*.f64 -6 (-.f64 x y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) (*.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (*.f64 -6 z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -6 (*.f64 (-.f64 x y) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -6 (-.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (cbrt.f64 z)) (pow.f64 z 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (*.f64 -6 (-.f64 x y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (*.f64 -6 (-.f64 x y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (*.f64 -6 (-.f64 x y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -6 (-.f64 x y)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z) 1 x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (-.f64 x y)) 0) (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (-.f64 x y)) (*.f64 (*.f64 -6 (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -6 (-.f64 x y))) (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (-.f64 x y)) (*.f64 0 (*.f64 -6 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 x) 1) (*.f64 (neg.f64 (*.f64 y -6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 x) (neg.f64 (*.f64 y -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 y -6)) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 y x) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -6 (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (pow.f64 (-.f64 x y) 2/3) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 x y) 2/3) -6) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 36) (-.f64 x y)) (cbrt.f64 -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3) (cbrt.f64 (*.f64 -6 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -216 (-.f64 x y))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (*.f64 -216 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 y x) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) -6) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) 6)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -6 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -6 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y x) -6))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 y x) -6) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x -6 (neg.f64 (*.f64 y -6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -6 x (neg.f64 (*.f64 y -6)))))))"]],"rules":[["egg-rr",35],["egg-rr",32]],"time":25.98095703125,"type":"rewrite"},{"count":[[127,84]],"inputs":[["(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","x","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(fma.f64 (*.f64 -6 z) x x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(fma.f64 (*.f64 -6 z) x x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(fma.f64 (*.f64 -6 z) x x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","x","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 (*.f64 -6 (-.f64 x y)) z)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 (*.f64 -6 (-.f64 x y)) z)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))"]],"time":208.234130859375,"type":"simplify"},{"compiler":[[959,496]],"time":13.135986328125,"type":"eval"},{"alts":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","done",0.1328125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","next",0.140625],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","fresh",0.1484375],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","fresh",0.18359375]],"compiler":[[11,7],[12,8],[11,7],[15,11],[12,8],[11,7],[15,11]],"count":[[86,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[84,3],"picked":[1,1]}],"min-error":[0],"time":19.572998046875,"type":"prune"},{"compiler":[[31,11]],"locations":[["(*.f64 z (-.f64 x y))",0.0078125,true],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)",0.01953125,true],["(*.f64 -6 (*.f64 z (-.f64 x y)))",0.25390625,true]],"time":5.64697265625,"type":"localize"},{"count":[[3,75]],"series":[["(*.f64 z (-.f64 x y))","y","-inf",0.171875],["(*.f64 z (-.f64 x y))","y","inf",0.14892578125],["(*.f64 z (-.f64 x y))","y","0",0.181884765625],["(*.f64 z (-.f64 x y))","x","-inf",0.203125],["(*.f64 z (-.f64 x y))","x","inf",0.254150390625],["(*.f64 z (-.f64 x y))","x","0",0.72216796875],["(*.f64 z (-.f64 x y))","z","-inf",0.27197265625],["(*.f64 z (-.f64 x y))","z","inf",0.142822265625],["(*.f64 z (-.f64 x y))","z","0",0.175048828125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","y","-inf",0.174072265625],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","y","inf",0.44189453125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","y","0",0.18896484375],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","x","-inf",0.173828125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","x","inf",0.2041015625],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","x","0",0.18017578125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","z","-inf",0.1630859375],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","z","inf",0.18701171875],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","z","0",0.157958984375],["(*.f64 -6 (*.f64 z (-.f64 x y)))","y","-inf",0.323974609375],["(*.f64 -6 (*.f64 z (-.f64 x y)))","y","inf",0.31396484375],["(*.f64 -6 (*.f64 z (-.f64 x y)))","y","0",0.31201171875],["(*.f64 -6 (*.f64 z (-.f64 x y)))","x","-inf",0.350830078125],["(*.f64 -6 (*.f64 z (-.f64 x y)))","x","inf",0.31201171875],["(*.f64 -6 (*.f64 z (-.f64 x y)))","x","0",0.303955078125],["(*.f64 -6 (*.f64 z (-.f64 x y)))","z","-inf",0.281982421875],["(*.f64 -6 (*.f64 z (-.f64 x y)))","z","inf",0.431884765625],["(*.f64 -6 (*.f64 z (-.f64 x y)))","z","0",0.52001953125]],"time":7.60888671875,"type":"series"},{"count":[[3,126]],"inputs":[["(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 z (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 z x)) (*.f64 -6 (neg.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 0) (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) (*.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z x) -6) (*.f64 (neg.f64 (*.f64 y z)) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -6 z) x) 1) (*.f64 (neg.f64 (*.f64 y (*.f64 -6 z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -6 (*.f64 z (-.f64 x y)))) (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) (*.f64 0 (*.f64 -6 (*.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 z) x) (neg.f64 (*.f64 y (*.f64 -6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 y (*.f64 -6 z))) (*.f64 (*.f64 -6 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -6 (*.f64 (-.f64 y x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -6 (*.f64 z (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 x y)) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 z) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (*.f64 -6 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (-.f64 x y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -216 (*.f64 z (-.f64 x y)))) (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)) -6) (cbrt.f64 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)) (cbrt.f64 (*.f64 -216 (*.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 36) (*.f64 z (-.f64 x y))) (cbrt.f64 -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))) (cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 2)) (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z (-.f64 x y)) (cbrt.f64 -6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -6 z) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -6 (*.f64 (-.f64 y x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (*.f64 (-.f64 y x) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (*.f64 (*.f64 -6 z) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 36) (*.f64 (*.f64 z (-.f64 x y)) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 -6 z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -6 (*.f64 (-.f64 y x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 z) x (neg.f64 (*.f64 y (*.f64 -6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 -6 z) (neg.f64 (*.f64 y (*.f64 -6 z))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 0) (fma.f64 -6 (*.f64 z (-.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) (*.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)) (fma.f64 -6 (*.f64 z (-.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) (*.f64 0 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (*.f64 -6 z) x)) (neg.f64 (*.f64 y (*.f64 -6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 z) x) (+.f64 (neg.f64 (*.f64 y (*.f64 -6 z))) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 -6 (*.f64 (-.f64 y x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)) (cbrt.f64 (pow.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)))) (+.f64 (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 2)) (cbrt.f64 (*.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 2)) (cbrt.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -6 (*.f64 z (-.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -6 (*.f64 z (-.f64 x y)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -6 (*.f64 z (-.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))) (cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 z) (-.f64 x y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (-.f64 x y)) -6 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (*.f64 -6 z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 2)) (cbrt.f64 (*.f64 -6 (*.f64 z (-.f64 x y)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 -6 (*.f64 (-.f64 y x) z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)) -6) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -216 (*.f64 z (-.f64 x y)))) (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -6 z) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -6 (-.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) (*.f64 z (-.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z (-.f64 x y)) (cbrt.f64 -6)) (cbrt.f64 36) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (-.f64 x y)) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 -6 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -6 (*.f64 z (-.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 -6 (*.f64 z (-.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (-.f64 x y)) 0) (*.f64 z (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 x y)) (*.f64 (*.f64 z (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z x) (neg.f64 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z x) 1) (*.f64 (neg.f64 (*.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 z (-.f64 x y))) (*.f64 z (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (-.f64 x y)) (*.f64 0 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 y z)) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (-.f64 x y))) (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 2)) (cbrt.f64 (*.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) z) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 x y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 z (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (*.f64 z (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (-.f64 x y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 y x) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z x (neg.f64 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x z (neg.f64 (*.f64 y z)))))))"]],"rules":[["egg-rr",37],["egg-rr",46],["egg-rr",43]],"time":28.85400390625,"type":"rewrite"},{"count":[[201,143]],"inputs":[["(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","x","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 -1 (*.f64 y z))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 -1 (*.f64 y z))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 -1 (*.f64 y z))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 6 (*.f64 y z))","(*.f64 (*.f64 6 z) y)","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 -6 (*.f64 z x))","(*.f64 (*.f64 -6 x) z)","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 -6 (*.f64 z x))","(*.f64 (*.f64 -6 x) z)","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 -6 (*.f64 z x))","(*.f64 (*.f64 -6 x) z)","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 y z))","(*.f64 (*.f64 6 z) y)","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 y z))","(*.f64 (*.f64 6 z) y)","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","x","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 y z))","(*.f64 (*.f64 6 z) y)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(fma.f64 -6 (*.f64 z x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(fma.f64 -6 (*.f64 z x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(fma.f64 -6 (*.f64 z x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 6 (*.f64 y z))","(*.f64 (*.f64 6 z) y)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 6 (*.f64 y z))","(*.f64 (*.f64 6 z) y)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 -1 (*.f64 y z))","(neg.f64 (*.f64 y z))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(*.f64 -1 (*.f64 y z))","(neg.f64 (*.f64 y z))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(*.f64 -1 (*.f64 y z))","(neg.f64 (*.f64 y z))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))","(+.f64 (*.f64 z x) (*.f64 -1 (*.f64 y z)))","(*.f64 z (-.f64 x y))"]],"time":242.744140625,"type":"simplify"},{"compiler":[[1880,848]],"time":20.64501953125,"type":"eval"},{"alts":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","done",0.1328125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","done",0.140625],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","next",0.1484375],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","fresh",0.18359375]],"compiler":[[11,7],[12,8],[11,7],[15,11],[11,7],[15,11]],"count":[[147,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[143,0],"picked":[1,1]}],"min-error":[0],"time":42.138916015625,"type":"prune"},{"compiler":[[21,10]],"locations":[["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)",0.1484375,true]],"time":4.843017578125,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","z","-inf",0.3349609375],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","z","inf",0.3388671875],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","z","0",0.283935546875],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","y","-inf",0.239990234375],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","y","inf",0.23486328125],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","y","0",0.263916015625],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","x","-inf",0.263916015625],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","x","inf",0.245849609375],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","x","0",0.383056640625]],"time":2.722900390625,"type":"series"},{"count":[[1,33]],"inputs":[["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 0) (fma.f64 (-.f64 x y) (*.f64 -6 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) (*.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)) (fma.f64 (-.f64 x y) (*.f64 -6 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) (*.f64 0 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x y) (*.f64 -6 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 x y) (*.f64 -6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 (-.f64 y x) (*.f64 -6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)) (pow.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 2/3) (cbrt.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 x y) (*.f64 -6 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 x y) (*.f64 -6 z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (*.f64 -6 z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x y) (cbrt.f64 (*.f64 -6 z))) (pow.f64 (*.f64 -6 z) 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (*.f64 -6 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 x y) (*.f64 -6 z))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 x y) (*.f64 -6 z)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x y) z) -6 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x y) -6) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 z) (-.f64 x y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (*.f64 (-.f64 x y) (*.f64 -6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (*.f64 (-.f64 x y) (*.f64 -6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (-.f64 x y) (*.f64 -6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 x y) (*.f64 -6 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x y) (*.f64 -6 z)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 x y) (*.f64 -6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 x y) (*.f64 -6 z)))))))"]],"rules":[["egg-rr",33]],"time":23.092041015625,"type":"rewrite"},{"count":[[69,45]],"inputs":[["(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","x","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(fma.f64 (*.f64 -6 z) x x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(fma.f64 (*.f64 -6 z) x x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(fma.f64 (*.f64 -6 z) x x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","x","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 (*.f64 -6 (-.f64 x y)) z)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 (*.f64 -6 (-.f64 x y)) z)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)","(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (*.f64 -6 z) (-.f64 x y) x)"]],"time":127.426025390625,"type":"simplify"},{"compiler":[[510,262]],"time":6.802001953125,"type":"eval"},{"alts":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","done",0.1328125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","done",0.140625],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","done",0.1484375],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","next",0.18359375]],"compiler":[[11,7],[12,8],[11,7],[15,11],[15,11]],"count":[[49,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[45,0],"picked":[1,1]}],"min-error":[0],"time":8.013916015625,"type":"prune"},{"compiler":[[42,26]],"locations":[["(*.f64 (-.f64 x y) (cbrt.f64 -6))",0.0625,true],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)",0.12890625,true],["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))",0.23828125,true]],"time":10.5,"type":"localize"},{"count":[[3,84]],"series":[["(*.f64 (-.f64 x y) (cbrt.f64 -6))","y","-inf",0.2080078125],["(*.f64 (-.f64 x y) (cbrt.f64 -6))","y","inf",0.22509765625],["(*.f64 (-.f64 x y) (cbrt.f64 -6))","y","0",0.22412109375],["(*.f64 (-.f64 x y) (cbrt.f64 -6))","x","-inf",0.3388671875],["(*.f64 (-.f64 x y) (cbrt.f64 -6))","x","inf",0.217041015625],["(*.f64 (-.f64 x y) (cbrt.f64 -6))","x","0",1.538818359375],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","z","-inf",0.281982421875],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","z","inf",0.277099609375],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","z","0",0.947021484375],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","y","-inf",0.26513671875],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","y","inf",0.301025390625],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","y","0",0.3291015625],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","x","-inf",0.303955078125],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","x","inf",0.308837890625],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","x","0",0.39697265625],["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))","y","-inf",0.328857421875],["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))","y","inf",0.33203125],["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))","y","0",0.882080078125],["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))","x","-inf",0.444091796875],["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))","x","inf",0.406982421875],["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))","x","0",1.3310546875]],"time":10.219970703125,"type":"series"},{"count":[[3,120]],"inputs":[["(*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))","(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","(*.f64 (-.f64 x y) (cbrt.f64 -6))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (neg.f64 y)) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 x) (*.f64 -6 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 36) (*.f64 (cbrt.f64 -6) x)) (*.f64 (cbrt.f64 36) (*.f64 (cbrt.f64 -6) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x y) -6) (*.f64 (*.f64 (-.f64 x y) -6) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 x y) -6) 0) (*.f64 (-.f64 x y) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 y) -6) (*.f64 x -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x -6) (*.f64 (neg.f64 y) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 36) x) (cbrt.f64 -6)) (*.f64 (*.f64 (cbrt.f64 36) (neg.f64 y)) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 -6) x) (cbrt.f64 36)) (*.f64 (*.f64 (cbrt.f64 -6) (neg.f64 y)) (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x y) -6) (*.f64 0 (*.f64 (-.f64 x y) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 x y) -6)) (*.f64 (-.f64 x y) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 x y) -6)) (pow.f64 (*.f64 (-.f64 x y) -6) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 x y) -6) 2/3) (cbrt.f64 (*.f64 (-.f64 x y) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 36)) (*.f64 (cbrt.f64 (cbrt.f64 1296)) (*.f64 (-.f64 x y) (cbrt.f64 -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 -36) (-.f64 y x)) (cbrt.f64 -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 -36) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 36 (*.f64 (-.f64 x y) (cbrt.f64 -6)))) (pow.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6))) (*.f64 (pow.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 2/3) (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 x y) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) -6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (-.f64 x y) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 -36) (-.f64 y x)) (cbrt.f64 (cbrt.f64 -6))) (cbrt.f64 (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -6 (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) (cbrt.f64 (cbrt.f64 36))) (cbrt.f64 (cbrt.f64 1296)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 2/3) (cbrt.f64 36)) (cbrt.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1296)) (*.f64 (-.f64 x y) (cbrt.f64 -6))) (cbrt.f64 (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (-.f64 x y) -6)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1296)) (*.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) (cbrt.f64 (cbrt.f64 36))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 2/3) (cbrt.f64 (*.f64 36 (*.f64 (-.f64 x y) (cbrt.f64 -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 36)) (*.f64 (*.f64 (cbrt.f64 -36) (-.f64 y x)) (cbrt.f64 (cbrt.f64 -6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) -6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 x y) -6)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 x y) -6)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 x y) -6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 x y) -6) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 x y) -6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y x) -6))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 y x) (cbrt.f64 -6)) (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (-.f64 x y) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (cbrt.f64 36) (-.f64 y x)) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -6 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 y x) (cbrt.f64 -6))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 x y) -6) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) (*.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 0) (fma.f64 (*.f64 (-.f64 x y) -6) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) (*.f64 0 (fma.f64 (*.f64 (-.f64 x y) -6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 (-.f64 x y) -6) z x)) (fma.f64 (*.f64 (-.f64 x y) -6) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 x y) -6) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 (-.f64 x y) -6) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)) (pow.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 2/3) (cbrt.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 (-.f64 x y) -6) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 (-.f64 x y) -6) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x y) -6) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (*.f64 (*.f64 (-.f64 x y) -6) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (*.f64 (*.f64 (-.f64 x y) -6) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (*.f64 (-.f64 x y) -6) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 x y) -6)) (*.f64 (pow.f64 (*.f64 (-.f64 x y) -6) 2/3) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 x y) -6) z)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 x y) -6) z) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) (*.f64 (cbrt.f64 36) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (-.f64 x y) -6) (cbrt.f64 z)) (pow.f64 z 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 -36) (-.f64 y x)) (*.f64 (cbrt.f64 -6) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 36) (*.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 (-.f64 x y) -6) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (-.f64 x y) -6) z) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (*.f64 (-.f64 x y) -6) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (*.f64 (-.f64 x y) -6) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 (-.f64 x y) -6) z) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) (*.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 0) (*.f64 (-.f64 x y) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 -6) x) (*.f64 (cbrt.f64 -6) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 -6) x) 1) (*.f64 (*.f64 (cbrt.f64 -6) (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) (*.f64 0 (*.f64 (-.f64 x y) (cbrt.f64 -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 x y) (cbrt.f64 -6))) (*.f64 (-.f64 x y) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 -6) (neg.f64 y)) (*.f64 (cbrt.f64 -6) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 y x) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (cbrt.f64 -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -6) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 -6)) (*.f64 (cbrt.f64 (cbrt.f64 36)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 -6)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 36)) (-.f64 x y)) (cbrt.f64 (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 6) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (cbrt.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6))) (pow.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 2/3) (cbrt.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 x y) -6)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 x y) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 y x) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (cbrt.f64 (cbrt.f64 -6))) (cbrt.f64 (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) 2/3) (cbrt.f64 (*.f64 (-.f64 x y) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 36)) (*.f64 (-.f64 x y) (cbrt.f64 (cbrt.f64 -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 -6)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -6 (pow.f64 (-.f64 x y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 x y) (cbrt.f64 -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y x) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 y x) (cbrt.f64 -6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 -6 (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (cbrt.f64 -6) (*.f64 (cbrt.f64 -6) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -6) x (*.f64 (cbrt.f64 -6) (neg.f64 y)))))))"]],"rules":[["egg-rr",37],["egg-rr",35],["egg-rr",48]],"time":30.834228515625,"type":"rewrite"},{"count":[[204,143]],"inputs":[["(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x)","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","x","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y))))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(*.f64 -1 (*.f64 y (cbrt.f64 -6)))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) x)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) x)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) x)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 -1 (*.f64 y (cbrt.f64 -6)))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 -1 (*.f64 y (cbrt.f64 -6)))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36))))","(*.f64 6 y)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x))","(*.f64 -6 x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x))","(*.f64 -6 x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x))","(*.f64 -6 x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36))))","(*.f64 6 y)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36))))","(*.f64 6 y)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (cbrt.f64 36)))))","(*.f64 -6 (-.f64 x y))","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))))","(*.f64 y (*.f64 6 z))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x)","(+.f64 (*.f64 (*.f64 -6 z) x) x)","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) (*.f64 (+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))) 1) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x))","(+.f64 (*.f64 (*.f64 -6 z) x) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))) 1) x)) (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) x)","(+.f64 (*.f64 (*.f64 -6 z) x) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))))","(*.f64 y (*.f64 6 z))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36)))))","(*.f64 y (*.f64 6 z))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) x))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 -6) (*.f64 z (cbrt.f64 36))))) x))","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","x","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y))))","(*.f64 z (*.f64 -6 (-.f64 x y)))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y))))","(*.f64 z (*.f64 -6 (-.f64 x y)))","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(+.f64 (*.f64 (cbrt.f64 -6) (*.f64 z (*.f64 (cbrt.f64 36) (-.f64 x y)))) x)","(+.f64 (*.f64 z (*.f64 -6 (-.f64 x y))) x)","(*.f64 -1 (*.f64 y (cbrt.f64 -6)))","(*.f64 (cbrt.f64 6) y)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(*.f64 (cbrt.f64 -6) x)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(*.f64 (cbrt.f64 -6) x)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(*.f64 (cbrt.f64 -6) x)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(*.f64 -1 (*.f64 y (cbrt.f64 -6)))","(*.f64 (cbrt.f64 6) y)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(*.f64 -1 (*.f64 y (cbrt.f64 -6)))","(*.f64 (cbrt.f64 6) y)","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (cbrt.f64 -6))) (*.f64 (cbrt.f64 -6) x))","(*.f64 (cbrt.f64 -6) (-.f64 x y))"]],"time":295.67578125,"type":"simplify"},{"compiler":[[2001,1227]],"time":26.984130859375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","done",0.1328125],["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","done",0.140625],["(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","done",0.1484375],["(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","done",0.18359375]],"compiler":[[11,7],[12,8],[11,7],[15,11]],"count":[[147,4]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[143,0],"picked":[1,1]}],"min-error":[0],"time":40.952880859375,"type":"prune"},{"accuracy":[0.1328125],"baseline":[0.1328125],"branch":[["x",0.1328125,1],["y",0.1328125,1],["z",0.1328125,1],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))",0.1328125,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[49,26]],"count":[[5,1]],"inputs":[["(+.f64 (*.f64 -6 (*.f64 z (-.f64 x y))) x)","(fma.f64 (-.f64 x y) (*.f64 -6 z) x)","(fma.f64 (*.f64 (cbrt.f64 36) (*.f64 (-.f64 x y) (cbrt.f64 -6))) z x)","(fma.f64 (*.f64 -6 (-.f64 x y)) z x)","(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))"]],"link":["."],"name":["Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, E"],"oracle":[0.375],"outputs":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)"]],"time":14.735107421875,"times":[["x",3.30615234375],["y",3.461181640625],["z",3.31689453125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))",3.485107421875]],"type":"regimes"},{"compiler":[[11,7]],"inputs":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (*.f64 -6 (-.f64 x y)) z x)"]],"stop":[["done",1]],"time":20.60595703125,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.377197265625,"type":"end"}]