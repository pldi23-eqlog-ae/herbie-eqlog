[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":162.93994140625,"type":"analyze"},{"outcomes":[["body",256,"invalid",142.42578125,2803],["body",256,"valid",410.8994140625,8256]],"time":564.2841796875,"type":"sample"},{"compiler":[[14,9]],"inputs":[["0","1","2","3","4"],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(-.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(-.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(-.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(-.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(-.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(-.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(-.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(-.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(-.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(-.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(-.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(+.f64 y (/.f64 (*.f64 (-.f64 t z) x) a))","(-.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(+.f64 z (/.f64 (*.f64 (-.f64 t x) y) a))","(-.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(+.f64 t (/.f64 (*.f64 (-.f64 x z) y) a))","(-.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(+.f64 a (/.f64 (*.f64 y (-.f64 t z)) x))","(-.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(+.f64 x (/.f64 (*.f64 (-.f64 t y) z) a))","(-.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(+.f64 x (/.f64 (*.f64 (-.f64 y z) t) a))","(-.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(+.f64 x (/.f64 (*.f64 (-.f64 t z) a) y))","(-.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(-.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(+.f64 x (/.f64 (*.f64 (-.f64 t a) y) z))","(-.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))","(+.f64 x (/.f64 (*.f64 (-.f64 a z) y) t))"]],"symmetry":[[]],"time":84.0830078125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))"]],"time":19.06787109375,"type":"simplify"},{"compiler":[[23,13]],"time":0.37109375,"type":"eval"},{"alts":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","next",4.38671875]],"compiler":[[14,9],[14,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[4.38671875],"time":0.868896484375,"type":"prune"},{"compiler":[[34,9]],"locations":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.0078125,true],["(/.f64 (*.f64 y (-.f64 z t)) a)",5.19918606625165,true]],"time":6.927001953125,"type":"localize"},{"count":[[2,84]],"series":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","-inf",0.206787109375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","inf",0.175048828125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","0",0.3349609375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","-inf",0.27880859375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","inf",0.2080078125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","0",0.33203125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","-inf",0.19189453125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","inf",0.18994140625],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","0",0.98486328125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","-inf",0.213134765625],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","inf",0.489990234375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","0",0.320068359375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","-inf",0.197021484375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","inf",0.27099609375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","0",0.384033203125],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","-inf",0.306884765625],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","inf",0.361083984375],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","0",0.44189453125],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","-inf",0.368896484375],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","inf",0.73388671875],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","0",0.385986328125],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","-inf",0.47509765625],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","inf",0.45703125],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","0",0.597900390625],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","-inf",0.30810546875],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","inf",0.516845703125],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","0",0.650146484375]],"time":10.701904296875,"type":"series"},{"count":[[2,106]],"inputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (*.f64 y z)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y z) (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 t y)) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) y) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 a)) (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (*.f64 y (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 t z) y) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) y) 2)) a) (cbrt.f64 (*.f64 y (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) a) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 a -2))) (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a -2))) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (*.f64 (-.f64 t z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y a) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 t z) y) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 t z) y) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 t z) y) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (*.f64 (-.f64 t z) y))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (*.f64 y (-.f64 z t)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) y) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) y) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a -2)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z t) (*.f64 y (cbrt.f64 (pow.f64 a -2)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 t z) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) (*.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 0) (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) (*.f64 0 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))) (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 t z) y) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 y (/.f64 (-.f64 z t) a) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (-.f64 t z) y) a) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 y (/.f64 (-.f64 z t) a) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (/.f64 (-.f64 z t) a) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 y (/.f64 (-.f64 z t) a) (neg.f64 x)))) (cbrt.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 y (-.f64 z t))) a)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))) (cbrt.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 2)) (cbrt.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (/.f64 (-.f64 z t) a) (neg.f64 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 y (/.f64 (-.f64 z t) a) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 y (/.f64 (-.f64 z t) a) (neg.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (-.f64 z t)) (/.f64 -1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 t z) y) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 t z) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 t z) y) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 x (/.f64 (*.f64 (-.f64 t z) y) a)))))))"]],"rules":[["egg-rr",46],["egg-rr",60]],"time":27.381103515625,"type":"rewrite"},{"count":[[190,130]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y t) a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)"]],"time":270.18896484375,"type":"simplify"},{"compiler":[[1791,495]],"time":14.97314453125,"type":"eval"},{"alts":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875],["(-.f64 x (/.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a))))","fresh",18.891197232466425],["(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","fresh",6.886892652631758],["(fma.f64 (*.f64 y (-.f64 z t)) (/.f64 -1 a) x)","fresh",4.41015625],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","next",2.863909357250731],["(-.f64 x (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))))","fresh",19.136768164137017],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 t z) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)","fresh",18.517701923621814]],"compiler":[[14,9],[20,13],[16,10],[15,10],[14,9],[20,13],[25,16],[20,13],[16,10],[15,10],[14,9],[20,13],[25,16]],"count":[[131,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[130,6],"picked":[1,1]}],"min-error":[0.0234375],"time":35.429931640625,"type":"prune"},{"compiler":[[32,9]],"locations":[["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))",0.0078125,true],["(*.f64 (/.f64 y a) (-.f64 z t))",8.053956013341862,true]],"time":5.993896484375,"type":"localize"},{"count":[[2,108]],"series":[["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","t","-inf",0.174072265625],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","t","inf",0.18896484375],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","t","0",0.176025390625],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","z","-inf",0.16796875],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","z","inf",0.193115234375],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","z","0",0.182861328125],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","a","-inf",0.203125],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","a","inf",0.169921875],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","a","0",0.19189453125],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","y","-inf",0.173095703125],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","y","inf",0.322998046875],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","y","0",0.169921875],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","x","-inf",0.198974609375],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","x","inf",0.169921875],["(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","x","0",0.3359375],["(*.f64 (/.f64 y a) (-.f64 z t))","t","-inf",0.166015625],["(*.f64 (/.f64 y a) (-.f64 z t))","t","inf",0.1689453125],["(*.f64 (/.f64 y a) (-.f64 z t))","t","0",0.18310546875],["(*.f64 (/.f64 y a) (-.f64 z t))","z","-inf",0.16796875],["(*.f64 (/.f64 y a) (-.f64 z t))","z","inf",0.193115234375],["(*.f64 (/.f64 y a) (-.f64 z t))","z","0",0.1640625],["(*.f64 (/.f64 y a) (-.f64 z t))","a","-inf",0.3369140625],["(*.f64 (/.f64 y a) (-.f64 z t))","a","inf",0.429931640625],["(*.f64 (/.f64 y a) (-.f64 z t))","a","0",0.282958984375],["(*.f64 (/.f64 y a) (-.f64 z t))","y","-inf",0.27001953125],["(*.f64 (/.f64 y a) (-.f64 z t))","y","inf",0.375],["(*.f64 (/.f64 y a) (-.f64 z t))","y","0",0.326171875]],"time":6.405029296875,"type":"series"},{"count":[[2,124]],"inputs":[["(*.f64 (/.f64 y a) (-.f64 z t))","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y z) a) (*.f64 (/.f64 y a) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y a) (neg.f64 t)) (/.f64 (*.f64 y z) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (neg.f64 (/.f64 (*.f64 y z) a))) (*.f64 -1 (*.f64 (neg.f64 (/.f64 y a)) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 y a)) t) (*.f64 (neg.f64 (/.f64 y a)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y z) a)) -1) (*.f64 (*.f64 (neg.f64 (/.f64 y a)) (neg.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y z) a) 1) (*.f64 (*.f64 (/.f64 y a) (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (neg.f64 (/.f64 y a))) (*.f64 (neg.f64 z) (neg.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2)) (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y a)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y a) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y a) (cbrt.f64 (-.f64 z t))) (cbrt.f64 (pow.f64 (-.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2)) (*.f64 (/.f64 y a) (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 (*.f64 a a))) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 t z)) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) a) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (-.f64 z t)) (cbrt.f64 (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2)) (/.f64 y a)) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 t z) (neg.f64 (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 y a)) (cbrt.f64 (-.f64 z t))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 t z)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 t z)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (-.f64 z t)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z t) (/.f64 y (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (*.f64 y (-.f64 z t)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (-.f64 z t))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (-.f64 z t))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (-.f64 t z)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 t z)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 t z)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 y a) 3)) (pow.f64 (-.f64 t z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) z (*.f64 (/.f64 y a) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 y a) (*.f64 (/.f64 y a) (neg.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 0) (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) (*.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) (*.f64 0 (fma.f64 (/.f64 y a) (-.f64 t z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (neg.f64 (/.f64 (*.f64 y z) a))) (*.f64 (neg.f64 (/.f64 y a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 y z) a)) (+.f64 (*.f64 (neg.f64 (/.f64 y a)) (neg.f64 t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 x (/.f64 (*.f64 y z) a)) (*.f64 (/.f64 y a) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 y (-.f64 t z)) a) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) (/.f64 (*.f64 y (-.f64 t z)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 y (-.f64 z t))) a)))) (-.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 2)) (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (neg.f64 (/.f64 y a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) (-.f64 t z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (/.f64 y a)) (cbrt.f64 (-.f64 z t))) (cbrt.f64 (pow.f64 (-.f64 z t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 t z) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 y (-.f64 t z)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (/.f64 y a) (-.f64 t z) x))))))"]],"rules":[["egg-rr",52],["egg-rr",72]],"time":29.779052734375,"type":"rewrite"},{"count":[[232,148]],"inputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (-.f64 t z) y) a)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 x (/.f64 (*.f64 y t) a))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 y (/.f64 (-.f64 t z) a) x)"]],"time":338.462890625,"type":"simplify"},{"compiler":[[1998,527]],"time":16.924072265625,"type":"eval"},{"alts":[["(-.f64 x (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2)))","fresh",4.592505187915726],["(-.f64 x (*.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2))))","fresh",12.37602853535669],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)","fresh",18.517701923621814],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","next",2.856096857250731],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875],["(-.f64 x (/.f64 (*.f64 (-.f64 z t) (/.f64 y (cbrt.f64 a))) (cbrt.f64 (*.f64 a a))))","fresh",18.891197232466425],["(-.f64 x (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))))","fresh",19.136768164137017],["(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","fresh",6.886892652631758]],"compiler":[[20,13],[22,14],[25,16],[13,8],[14,9],[20,13],[20,13],[16,10],[20,13],[22,14],[25,16],[13,8],[20,13],[20,13],[16,10]],"count":[[155,8]],"kept":[{"done":[1,1],"fresh":[5,0],"new":[148,7],"picked":[1,0]}],"min-error":[0.0078125],"time":46.589111328125,"type":"prune"},{"compiler":[[24,8]],"locations":[["(fma.f64 (/.f64 y a) (-.f64 t z) x)",2.7084470044127515,true]],"time":5.23095703125,"type":"localize"},{"count":[[1,60]],"series":[["(fma.f64 (/.f64 y a) (-.f64 t z) x)","x","-inf",0.239013671875],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","x","inf",0.18798828125],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","x","0",0.2890625],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","z","-inf",0.26806640625],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","z","inf",0.2880859375],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","z","0",0.31591796875],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","t","-inf",0.296875],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","t","inf",0.2861328125],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","t","0",0.38916015625],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","a","-inf",0.302978515625],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","a","inf",0.300048828125],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","a","0",0.3408203125],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","y","-inf",0.34814453125],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","y","inf",0.35693359375],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","y","0",0.4208984375]],"time":4.81396484375,"type":"series"},{"count":[[1,36]],"inputs":[["(fma.f64 (/.f64 y a) (-.f64 t z) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t y) a) (+.f64 (*.f64 (/.f64 y a) (neg.f64 z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) (*.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 0) (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) (*.f64 0 (fma.f64 (/.f64 y a) (-.f64 t z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (*.f64 t y) a)) (*.f64 (/.f64 y a) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 2)) (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 y a) (-.f64 t z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 t z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) (-.f64 t z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (-.f64 t z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (-.f64 t z) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 t z) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 t z)) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 y a) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y (-.f64 t z)) a) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 y (-.f64 t z)) a) x)))))"]],"rules":[["egg-rr",36]],"time":19.47900390625,"type":"rewrite"},{"count":[[96,49]],"inputs":[["x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(/.f64 (*.f64 y (-.f64 t z)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(/.f64 (*.f64 y (-.f64 t z)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(/.f64 (*.f64 y t) a)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(/.f64 (*.f64 y t) a)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(/.f64 (*.f64 y (-.f64 t z)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(/.f64 (*.f64 y (-.f64 t z)) a)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(/.f64 (*.f64 y (-.f64 t z)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(/.f64 (*.f64 y (-.f64 t z)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x)","(-.f64 x (/.f64 (*.f64 y z) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(/.f64 (*.f64 y t) a)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(/.f64 (*.f64 y t) a)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 (*.f64 y z) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 (*.f64 y z) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(/.f64 (*.f64 y (-.f64 t z)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 t z)) a) x)","(fma.f64 (/.f64 (-.f64 t z) a) y x)"]],"time":200.864990234375,"type":"simplify"},{"compiler":[[572,138]],"time":5.424072265625,"type":"eval"},{"alts":[["(-.f64 x (/.f64 (*.f64 (-.f64 z t) (/.f64 y (cbrt.f64 a))) (cbrt.f64 (*.f64 a a))))","fresh",18.891197232466425],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 t z)) a) 2)) x)","fresh",18.517701923621814],["(-.f64 x (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2)))","next",4.592505187915726],["(-.f64 x (*.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2))))","fresh",12.37602853535669],["(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","fresh",6.886892652631758],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","done",2.856096857250731],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875],["(-.f64 x (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))))","fresh",19.136768164137017]],"compiler":[[20,13],[25,13],[20,13],[22,14],[16,10],[13,8],[14,9],[20,13],[20,13],[25,13],[20,13],[22,14],[16,10],[20,13]],"count":[[57,8]],"kept":[{"done":[1,1],"fresh":[6,4],"new":[49,2],"picked":[1,1]}],"min-error":[0.0078125],"time":12.748046875,"type":"prune"},{"compiler":[[61,19]],"locations":[["(cbrt.f64 a)",0.07421875,true],["(pow.f64 (cbrt.f64 a) -2)",0.5081825683790941,true],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))",1.9459625871688548,true],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))",3.5667836802674713,true]],"time":11.2568359375,"type":"localize"},{"count":[[4,84]],"series":[["(cbrt.f64 a)","a","-inf",0.304931640625],["(cbrt.f64 a)","a","inf",0.223876953125],["(cbrt.f64 a)","a","0",0.25],["(pow.f64 (cbrt.f64 a) -2)","a","-inf",0.759033203125],["(pow.f64 (cbrt.f64 a) -2)","a","inf",0.351806640625],["(pow.f64 (cbrt.f64 a) -2)","a","0",0.635009765625],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","a","-inf",0.7158203125],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","a","inf",0.43017578125],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","a","0",0.545166015625],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","t","-inf",0.277099609375],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","t","inf",0.283935546875],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","t","0",0.642822265625],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","z","-inf",0.382080078125],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","z","inf",0.2548828125],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","z","0",0.68408203125],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","y","-inf",0.3330078125],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","y","inf",0.440185546875],["(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","y","0",1.489990234375],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","a","-inf",1.68408203125],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","a","inf",0.467041015625],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","a","0",1.322021484375],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","t","-inf",1.734130859375],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","t","inf",0.305908203125],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","t","0",0.5830078125],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","z","-inf",0.31591796875],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","z","inf",0.27197265625],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","z","0",0.618896484375],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","y","-inf",0.2470703125],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","y","inf",0.278076171875],["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","y","0",1.4580078125]],"time":18.6669921875,"type":"series"},{"count":[[4,165]],"inputs":[["(*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(pow.f64 (cbrt.f64 a) -2)","(cbrt.f64 a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 0) (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) (*.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))) (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) (*.f64 0 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))) (pow.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 a))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 a) -2) (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))) (pow.f64 (pow.f64 (cbrt.f64 a) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))) (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (*.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 2/3) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (*.f64 (pow.f64 (cbrt.f64 a) -2) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)) (*.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) (cbrt.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a) -2) (cbrt.f64 (pow.f64 a 2/3))) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 2/3) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 2/3) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) (neg.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (cbrt.f64 (pow.f64 a 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) -1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a)))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (-.f64 z t)) (/.f64 (pow.f64 (cbrt.f64 a) -2) (cbrt.f64 (pow.f64 a 2/3)))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 t z) y)) (*.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (pow.f64 (cbrt.f64 a) -2))) (neg.f64 (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2))) (pow.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 2/3)) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) 1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) -1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (pow.f64 a 2/3))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) 1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (cbrt.f64 a)))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 t z) y) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (-.f64 t z) y)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 y (-.f64 z t)) (pow.f64 (cbrt.f64 a) (+.f64 -1 -2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 a -1/3) (*.f64 y z)) (*.f64 (pow.f64 a -1/3) (neg.f64 (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 0) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y z) (pow.f64 a -1/3)) (*.f64 (neg.f64 (*.f64 t y)) (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 a))) (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 (pow.f64 (*.f64 y (-.f64 z t)) 2/3) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 (cbrt.f64 a))) (/.f64 y (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (cbrt.f64 a))) (/.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (*.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 t z) y) (neg.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -1/3)) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 y (-.f64 z t)) 2/3) (cbrt.f64 a)) (cbrt.f64 (*.f64 y (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 a 2/3))) (/.f64 (-.f64 z t) (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a 2/3))) (cbrt.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a 2/3))) (/.f64 y (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (*.f64 (-.f64 t z) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (cbrt.f64 (pow.f64 a 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 (cbrt.f64 a))) y) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (cbrt.f64 a))) (-.f64 z t)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -1/3)) (*.f64 y (-.f64 z t))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (pow.f64 (*.f64 y (-.f64 z t)) 2/3)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (cbrt.f64 (*.f64 (-.f64 t z) y))) (neg.f64 (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3) (cbrt.f64 (*.f64 y (-.f64 z t)))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 t z) y)) (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 2/3)) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z t) (/.f64 y (cbrt.f64 (pow.f64 a 2/3)))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a 2/3))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a 2/3)))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) -1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (cbrt.f64 a)))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 y (-.f64 z t)) 3) a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 t z) y) (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 t z) (/.f64 y (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 a -1/3) (*.f64 (-.f64 t z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 y (-.f64 z t)) 3) a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 a) -2) 0) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 (pow.f64 (cbrt.f64 a) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 a) -2)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 a) -2) (*.f64 0 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) (pow.f64 (pow.f64 (cbrt.f64 a) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 a) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 a) 0) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 a) (*.f64 0 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 a 2/3)) (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 a)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a 2/3)) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 a 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 a)))))"]],"rules":[["egg-rr",22],["egg-rr",19],["egg-rr",63],["egg-rr",61]],"time":37.553955078125,"type":"rewrite"},{"count":[[249,177]],"inputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y (-.f64 z t)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t)))","(/.f64 (neg.f64 (*.f64 y t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z))","(/.f64 (*.f64 y z) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z))","(/.f64 (*.f64 y z) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z))","(/.f64 (*.f64 y z) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t)))","(/.f64 (neg.f64 (*.f64 y t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t)))","(/.f64 (neg.f64 (*.f64 y t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y t))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 y z)))","(/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))"]],"time":261.922119140625,"type":"simplify"},{"compiler":[[3963,1599]],"time":33.965087890625,"type":"eval"},{"alts":[["(-.f64 x (*.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)))","fresh",3.4001173841263532],["(-.f64 x (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2)))","done",4.592505187915726],["(-.f64 x (*.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2))))","fresh",12.37602853535669],["(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","fresh",6.886892652631758],["(-.f64 x (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 3) -2)))","fresh",4.82016066736332],["(fma.f64 (/.f64 y a) (-.f64 t z) x)","done",2.856096857250731],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 t z)) a) 2)) x)","fresh",18.517701923621814],["(-.f64 x (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))))","fresh",19.136768164137017]],"compiler":[[20,13],[20,13],[22,14],[16,10],[23,16],[13,8],[14,9],[25,13],[20,13]],"count":[[207,9]],"kept":[{"done":[2,2],"fresh":[5,4],"new":[199,2],"picked":[1,1]}],"min-error":[0.00390625],"time":253.328857421875,"type":"prune"},{"accuracy":[0.150722509768442],"baseline":[2.856096857250731],"branch":[["x",2.856096857250731,1],["y",1.3484582598824892,2],["z",1.3785655553384137,3],["t",2.856096857250731,1],["a",0.150722509768442,3],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.15234375,3],["(/.f64 (*.f64 y (-.f64 z t)) a)",0.15234375,3],["(*.f64 y (-.f64 z t))",0.8792585950525846,2],["(*.f64 y (-.f64 z t))",0.8792585950525846,2],["(-.f64 z t)",0.6139093572507309,3],["(-.f64 z t)",0.6139093572507309,3]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[14,9],[12,8],[10,7],[10,7],[8,6],[8,6],[259,75]],"count":[[18,3]],"inputs":[["(-.f64 x (*.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (pow.f64 (cbrt.f64 a) -2)))","(-.f64 x (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 3) -2)))","(fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 t z)) a) 2)) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(-.f64 x (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2)))","(-.f64 x (*.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2))))","(fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 t z)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(-.f64 x (/.f64 (*.f64 (-.f64 z t) (/.f64 y (cbrt.f64 a))) (cbrt.f64 (*.f64 a a))))","(-.f64 x (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))))","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(-.f64 x (/.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a))))","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 (*.f64 y (-.f64 z t)) (/.f64 -1 a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))))","(fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 t z) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)","(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"link":["."],"name":["Optimisation.CirclePacking:place from circle-packing-0.1.0.4, F"],"oracle":[30.866251289762474],"outputs":[["(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(fma.f64 (/.f64 y a) (-.f64 t z) x)"]],"time":184.233154296875,"times":[["x",6.113037109375],["y",18.054931640625],["z",18.52294921875],["t",7.252197265625],["a",18.323974609375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",16.848876953125],["(/.f64 (*.f64 y (-.f64 z t)) a)",15.06103515625],["(*.f64 y (-.f64 z t))",15.98291015625],["(*.f64 y (-.f64 z t))",15.9609375],["(-.f64 z t)",22.468994140625],["(-.f64 z t)",24.3740234375]],"type":"regimes"},{"bstep":[[7.983281356943065e-83,2.391965517840435e-80,2.64697265625],[-2.9215722702753097e+96,-3.3303212961070424e+94,11.204833984375]],"compiler":[[14,9],[15,10],[16,11],[6,5]],"method":["binary-search","binary-search"],"time":14.058837890625,"type":"bsearch"},{"compiler":[[41,23]],"inputs":[["(if (<=.f64 a -2921572270275309678852683629875613228483200349135241857953336491335299358306333141767873720483840) (+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x) (if (<=.f64 a 213598703592091/2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576) (-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (fma.f64 (/.f64 y a) (-.f64 t z) x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 a -2921572270275309678852683629875613228483200349135241857953336491335299358306333141767873720483840) (+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x) (if (<=.f64 a 213598703592091/2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576) (-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (fma.f64 (/.f64 y a) (-.f64 t z) x)))","(if (<=.f64 a -2921572270275309678852683629875613228483200349135241857953336491335299358306333141767873720483840) (fma.f64 y (/.f64 (-.f64 t z) a) x) (if (<=.f64 a 213598703592091/2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576) (fma.f64 y (/.f64 (-.f64 t z) a) x) (fma.f64 y (/.f64 (-.f64 t z) a) x)))"]],"stop":[["fuel",1]],"time":28.01513671875,"type":"simplify"},{"time":0.0068359375,"type":"soundness"},{"compiler":[[41,23]],"remove-preprocessing":[[]],"time":14.7841796875,"type":"end"}]