[{"compiler":[[20,15]],"method":["search"],"sampling":[[12,0.47586475120897376,0.4744020521786183,0.04973319661240794],[11,0.4173567899947557,0.5489997027267464,0.033643507278497964],[10,0.3822520132662248,0.6065325312540608,0.011215455479714365],[9,0.26523609083778865,0.7293992498039188,0.005364659358292556],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":231.808837890625,"type":"analyze"},{"outcomes":[["body",512,"invalid",35.999755859375,237],["body",256,"invalid",216.13720703125,2807],["body",1024,"invalid",58.8046875,240],["body",1024,"valid",237.269287109375,961],["body",512,"valid",99.886962890625,640],["body",2048,"valid",1.8466796875,4],["body",256,"valid",532.584228515625,6651]],"time":1194.66796875,"type":"sample"},{"compiler":[[19,14]],"inputs":[["0","1","2"],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","(/.f64 (cos.f64 (*.f64 2 c)) (*.f64 (pow.f64 x 2) (*.f64 (*.f64 c (pow.f64 s 2)) c)))","(/.f64 (cos.f64 (*.f64 2 s)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 s (pow.f64 x 2)) s)))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (*.f64 x (pow.f64 c 2)) x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","(/.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 x (*.f64 c c)) x)) (*.f64 s s))","(/.f64 (cos.f64 (*.f64 2 c)) (*.f64 (pow.f64 x 2) (*.f64 (*.f64 c (pow.f64 s 2)) c)))","(/.f64 (/.f64 (cos.f64 (+.f64 c c)) (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) c)) c)","(/.f64 (cos.f64 (*.f64 2 s)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 s (pow.f64 x 2)) s)))","(/.f64 (/.f64 (cos.f64 (+.f64 s s)) (*.f64 (*.f64 (*.f64 x (*.f64 c c)) x) s)) s)","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (*.f64 x (pow.f64 c 2)) x)))","(/.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 x (*.f64 c c)) x)) (*.f64 s s))"]],"symmetry":[[]],"time":73.612060546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","(/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))"]],"time":19.72412109375,"type":"simplify"},{"compiler":[[35,22]],"time":0.4609375,"type":"eval"},{"alts":[["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","next",30.487372482353265]],"compiler":[[19,14],[19,14]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[30.487372482353265],"time":1.02490234375,"type":"prune"},{"compiler":[[59,38]],"locations":[["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))",0.44128896075744006,true],["(*.f64 (*.f64 x (pow.f64 s 2)) x)",5.982537873685134,true],["(*.f64 x (pow.f64 s 2))",8.662791898753063,true],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))",20.525599494570937,true]],"time":18.926025390625,"type":"localize"},{"count":[[4,120]],"series":[["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","s","-inf",0.181884765625],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","s","inf",0.39697265625],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","s","0",0.824951171875],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","c","-inf",0.19921875],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","c","inf",1.760009765625],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","c","0",1.716796875],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","x","-inf",0.629150390625],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","x","inf",0.675048828125],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))","x","0",0.546875],["(*.f64 (*.f64 x (pow.f64 s 2)) x)","s","-inf",0.16796875],["(*.f64 (*.f64 x (pow.f64 s 2)) x)","s","inf",0.30078125],["(*.f64 (*.f64 x (pow.f64 s 2)) x)","s","0",0.22998046875],["(*.f64 (*.f64 x (pow.f64 s 2)) x)","x","-inf",0.15185546875],["(*.f64 (*.f64 x (pow.f64 s 2)) x)","x","inf",0.27099609375],["(*.f64 (*.f64 x (pow.f64 s 2)) x)","x","0",0.236083984375],["(*.f64 x (pow.f64 s 2))","s","-inf",0.162841796875],["(*.f64 x (pow.f64 s 2))","s","inf",0.30810546875],["(*.f64 x (pow.f64 s 2))","s","0",0.23095703125],["(*.f64 x (pow.f64 s 2))","x","-inf",0.291015625],["(*.f64 x (pow.f64 s 2))","x","inf",0.307861328125],["(*.f64 x (pow.f64 s 2))","x","0",0.637939453125],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","s","-inf",0.197021484375],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","s","inf",0.391845703125],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","s","0",0.64013671875],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","x","-inf",0.194091796875],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","x","inf",0.448974609375],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","x","0",0.862060546875],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","c","-inf",0.223876953125],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","c","inf",0.467041015625],["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","c","0",0.983154296875]],"time":15.04296875,"type":"series"},{"count":[[4,209]],"inputs":[["(*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))","(*.f64 x (pow.f64 s 2))","(*.f64 (*.f64 x (pow.f64 s 2)) x)","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 0) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 0 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)) (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (*.f64 s s)) x) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) c) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) (cbrt.f64 (*.f64 c c))) (cbrt.f64 (pow.f64 c 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c c) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c c) x) (*.f64 x (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c c)) (*.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 s s)) (*.f64 (*.f64 c c) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)) (*.f64 c c)) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)) (*.f64 (*.f64 c c) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) (cbrt.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (*.f64 x (*.f64 s s)) x)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) (neg.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 c c)) (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2)) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 s s)) (*.f64 (*.f64 x (*.f64 s s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 s s)) 0) (*.f64 x (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 s s)) (*.f64 0 (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (*.f64 s s))) (*.f64 x (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 s s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s s) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x s) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s s) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 x s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (*.f64 s s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 s s)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 s s) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 s s))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 s s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 s s)) 2)) (cbrt.f64 (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (*.f64 s s))) (cbrt.f64 (pow.f64 s 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s s)) (*.f64 (cbrt.f64 (pow.f64 s 4)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 s s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 s 4)) x) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 s 4)) (*.f64 x (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 s s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 s s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 s s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 s s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 s s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 s s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 s s)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 s s)) x) (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 0) (*.f64 (*.f64 x (*.f64 s s)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 s s)) x) (*.f64 0 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 (*.f64 x (*.f64 s s)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 s s)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 x (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 s s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (*.f64 s s)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s s) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 s s))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 s s)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 x (*.f64 s s))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 s s)) 2)) x) (cbrt.f64 (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 x (*.f64 s s)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x s) (*.f64 x s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) x) (*.f64 (neg.f64 s) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (neg.f64 s)) (*.f64 x (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (*.f64 x (*.f64 s s)))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 s s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 s s)) 2)) (*.f64 x (cbrt.f64 (*.f64 x (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x)) (pow.f64 (cos.f64 x) 2)) (*.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x)) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 0) (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 x) 2) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 0 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 x) 2) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (neg.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (pow.f64 (cos.f64 x) 2) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 (pow.f64 (sin.f64 x) 2) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (cos.f64 (+.f64 x x)) (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 c -2)) (*.f64 (*.f64 x (*.f64 s s)) x)) (/.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 c -2)) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (/.f64 (cos.f64 (+.f64 x x)) (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2)) (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (+.f64 x x))) (neg.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) (pow.f64 c -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (pow.f64 c 6))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 x x)) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x)) (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) (/.f64 (cos.f64 (+.f64 x x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c -2) (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (/.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (cos.f64 (+.f64 x x)) (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) x) (/.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 x (*.f64 s s)) x)) (pow.f64 c -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (cbrt.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (neg.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (+.f64 x x)) x) (/.f64 1 (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (+.f64 x x)) (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) (*.f64 (*.f64 x (*.f64 s s)) x)) (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (pow.f64 c 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) (pow.f64 c -2)) (/.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2))) (cbrt.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x))) (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (+.f64 x x)) (neg.f64 (pow.f64 c -2))) (/.f64 -1 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) x) (/.f64 1 (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (+.f64 x x)) (neg.f64 (pow.f64 c -2))) 1) (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 (+.f64 x x)) c) 1) (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 c -2))) 1) (*.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 (+.f64 x x)) c) (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 c -2))) (*.f64 (cbrt.f64 (pow.f64 c 4)) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2))) (*.f64 (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (+.f64 x x)) (neg.f64 (pow.f64 c -2))) (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 x (*.f64 s s)) x))) (neg.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) x)) (neg.f64 (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) (*.f64 (*.f64 x (*.f64 s s)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (+.f64 x x))) (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) x) (*.f64 x (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (/.f64 (cos.f64 (+.f64 x x)) c)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 c -2)))) (cbrt.f64 (pow.f64 c 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (cos.f64 (+.f64 x x))) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (neg.f64 (cos.f64 (+.f64 x x)))) (neg.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2)) (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)))) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2)) (cbrt.f64 (cos.f64 (+.f64 x x)))) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2)) (cbrt.f64 (neg.f64 (cos.f64 (+.f64 x x))))) (cbrt.f64 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (*.f64 x (*.f64 s s)) x)) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2))) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (cos.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) (cos.f64 (+.f64 x x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (pow.f64 c 6))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2))) (*.f64 (*.f64 x (*.f64 s s)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 (+.f64 x x)) c) (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x))) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 c -2))) (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x))) (cbrt.f64 (pow.f64 c 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 x x))) (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x))) (neg.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 (+.f64 x x)) x) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2))) (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2))) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2))) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (cos.f64 (+.f64 x x)))) (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 2))) (cbrt.f64 (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2))) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s)))) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 x (*.f64 s s)) x)) 1) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) 1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) (cbrt.f64 (*.f64 (*.f64 x (*.f64 s s)) x))) 1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x (*.f64 s s)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) x) 1) (*.f64 x (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) (pow.f64 (sin.f64 x) 2))) (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cos.f64 (+.f64 x x)) (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 x x))) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (cos.f64 (+.f64 x x)) (neg.f64 (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x)) (neg.f64 (cos.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 c -2)) (neg.f64 (*.f64 (*.f64 x (*.f64 s s)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x))) (*.f64 (pow.f64 (cos.f64 x) 2) (/.f64 (pow.f64 c -2) (*.f64 (*.f64 x (*.f64 s s)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 x x)) (*.f64 (*.f64 c c) (*.f64 (*.f64 x (*.f64 s s)) x))) 3))))))"]],"rules":[["egg-rr",104],["egg-rr",33],["egg-rr",30],["egg-rr",42]],"time":42.9521484375,"type":"rewrite"},{"count":[[329,227]],"inputs":[["(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) x)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(-.f64 (/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 s 2) (pow.f64 c 2))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))","(-.f64 (+.f64 (*.f64 -4/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))","(pow.f64 (*.f64 (*.f64 c s) x) 2)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) x)","(*.f64 (*.f64 s x) s)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(*.f64 (pow.f64 s 2) (pow.f64 x 2))","(pow.f64 (*.f64 s x) 2)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (*.f64 (*.f64 c s) x) -2)","(-.f64 (/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))","(*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (pow.f64 x -2) -2))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 s 2) (pow.f64 c 2))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))","(+.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (*.f64 2/3 (*.f64 x x)) -2)))","(-.f64 (+.f64 (*.f64 -4/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (+.f64 (/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (pow.f64 x -2) -2)) (*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (*.f64 -4/45 (pow.f64 x 4)) (*.f64 2/3 (*.f64 x x)))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))"]],"time":447.31201171875,"type":"simplify"},{"compiler":[[5132,1774]],"time":35.742919921875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (/.f64 (cos.f64 (+.f64 x x)) c)) c)","fresh",25.391068673118234],["(/.f64 (/.f64 (cos.f64 (+.f64 x x)) c) (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) c))","fresh",24.951368327579708],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (pow.f64 (*.f64 s x) 2)))","fresh",21.574452103289563],["(/.f64 (*.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))","fresh",29.412398961102856],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 (*.f64 x s) s) x)))","fresh",24.1889630015094],["(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 (*.f64 c s) x) 2))","fresh",2.657421395479422],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","next",2.387194844178617],["(*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (pow.f64 x -2) -2))","fresh",39.53429038819182]],"compiler":[[21,13],[19,11],[17,13],[28,16],[19,13],[15,11],[15,10],[14,11],[21,13],[19,11],[17,13],[28,16],[19,13],[15,11],[15,10],[14,11]],"count":[[228,8]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[227,8],"picked":[1,0]}],"min-error":[1.3491376280268603],"time":63.073974609375,"type":"prune"},{"compiler":[[41,13]],"locations":[["(cos.f64 (+.f64 x x))",0.0078125,true],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))",0.1015625,true],["(pow.f64 (*.f64 (*.f64 c s) x) -2)",0.2396087890737681,true],["(*.f64 (*.f64 c s) x)",5.8296800470359065,true]],"time":8.678955078125,"type":"localize"},{"count":[[4,120]],"series":[["(cos.f64 (+.f64 x x))","x","-inf",0.143798828125],["(cos.f64 (+.f64 x x))","x","inf",0.156005859375],["(cos.f64 (+.f64 x x))","x","0",0.197021484375],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","s","-inf",0.19189453125],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","s","inf",0.179931640625],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","s","0",0.3359375],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","c","-inf",0.176025390625],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","c","inf",0.197998046875],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","c","0",0.322998046875],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","x","-inf",0.608154296875],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","x","inf",0.531982421875],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","x","0",0.428955078125],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","x","-inf",0.55615234375],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","x","inf",0.39501953125],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","x","0",2.31201171875],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","s","-inf",0.614990234375],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","s","inf",0.39501953125],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","s","0",0.5322265625],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","c","-inf",0.612060546875],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","c","inf",0.385009765625],["(pow.f64 (*.f64 (*.f64 c s) x) -2)","c","0",0.58203125],["(*.f64 (*.f64 c s) x)","x","-inf",0.595947265625],["(*.f64 (*.f64 c s) x)","x","inf",0.4130859375],["(*.f64 (*.f64 c s) x)","x","0",0.406005859375],["(*.f64 (*.f64 c s) x)","s","-inf",0.299072265625],["(*.f64 (*.f64 c s) x)","s","inf",0.406005859375],["(*.f64 (*.f64 c s) x)","s","0",0.4150390625],["(*.f64 (*.f64 c s) x)","c","-inf",0.264892578125],["(*.f64 (*.f64 c s) x)","c","inf",0.3330078125],["(*.f64 (*.f64 c s) x)","c","0",0.531005859375]],"time":13.89404296875,"type":"series"},{"count":[[4,114]],"inputs":[["(*.f64 (*.f64 c s) x)","(pow.f64 (*.f64 (*.f64 c s) x) -2)","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(cos.f64 (+.f64 x x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c s) x) (*.f64 (*.f64 (*.f64 c s) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 c s) x) 0) (*.f64 (*.f64 c s) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c s) x) (*.f64 0 (*.f64 (*.f64 c s) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 c s) x)) (*.f64 (*.f64 c s) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 s x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s x) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (*.f64 c s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x c) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (*.f64 (pow.f64 c 2/3) (*.f64 s x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 x c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c s)) (*.f64 (pow.f64 (*.f64 c s) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 c s) 2/3) x) (cbrt.f64 (*.f64 c s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (*.f64 c s)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 c 2/3) (*.f64 s x)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 c s) x)) (pow.f64 (*.f64 (*.f64 c s) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c s) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 c s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 c s) x) 2/3) (cbrt.f64 (*.f64 (*.f64 c s) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (*.f64 c s))) (pow.f64 (*.f64 c s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c s) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c s) 2/3) (*.f64 x (cbrt.f64 (*.f64 c s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (*.f64 c s) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 c s) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 c s) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 c s) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c s) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 c s) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 c s) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 c s) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 c s) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 0) (pow.f64 (*.f64 (*.f64 c s) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (*.f64 0 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (*.f64 c s) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 c s) x) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 0) (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 0 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))) (pow.f64 (cos.f64 (+.f64 x x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (cbrt.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (cos.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 2/3) (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 x x))) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (cos.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 2) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (cos.f64 x) 2) 1/2) (*.f64 1/2 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (cos.f64 x) 2) 1) (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 x x)) (*.f64 (cos.f64 (+.f64 x x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 x x)) 0) (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 x x)) (*.f64 0 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (+.f64 x x))) (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 1 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (pow.f64 (cos.f64 (+.f64 x x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (cbrt.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 x) (sin.f64 x)) (-.f64 (cos.f64 x) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 x) (sin.f64 x)) (+.f64 (cos.f64 x) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (+.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (+.f64 x x)) 1) 2) (*.f64 2 (-.f64 1 (cos.f64 (+.f64 x x))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (+.f64 x x)) 1) (-.f64 1 (cos.f64 (+.f64 x x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 x x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) (cos.f64 x) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 2)) (cbrt.f64 (pow.f64 (cos.f64 x) 4)) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (cos.f64 x) 2) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 x x))))))"]],"rules":[["egg-rr",35],["egg-rr",30],["egg-rr",17],["egg-rr",32]],"time":33.7861328125,"type":"rewrite"},{"count":[[234,137]],"inputs":[["(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(-.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 -4/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","1","(+.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) 1))","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 1 (*.f64 -4/45 (pow.f64 x 6)))))","(cos.f64 (*.f64 2 x))","(cos.f64 (*.f64 2 x))","(cos.f64 (*.f64 2 x))","(cos.f64 (*.f64 2 x))","(cos.f64 (neg.f64 (*.f64 -2 x)))","(cos.f64 (neg.f64 (*.f64 -2 x)))","(cos.f64 (neg.f64 (*.f64 -2 x)))","(cos.f64 (neg.f64 (*.f64 -2 x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 c (*.f64 s x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(*.f64 s (*.f64 c x))","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1)","(-.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(+.f64 (pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1) (*.f64 -2 (pow.f64 (*.f64 s c) -2)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(+.f64 (pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1) (/.f64 (-.f64 (*.f64 2/3 (*.f64 x x)) 2) (pow.f64 (*.f64 s c) 2)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 -4/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(+.f64 (+.f64 (pow.f64 (pow.f64 (*.f64 s (*.f64 c x)) 2) -1) (/.f64 (+.f64 (*.f64 -4/45 (pow.f64 x 4)) (*.f64 2/3 (*.f64 x x))) (pow.f64 (*.f64 s c) 2))) (*.f64 -2 (pow.f64 (*.f64 s c) -2)))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","1","(+.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(fma.f64 -2 (*.f64 x x) 1)","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) 1))","(fma.f64 (pow.f64 x 4) 2/3 (fma.f64 -2 (*.f64 x x) 1))","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 1 (*.f64 -4/45 (pow.f64 x 6)))))","(fma.f64 2/3 (pow.f64 x 4) (fma.f64 (*.f64 x x) -2 (fma.f64 -4/45 (pow.f64 x 6) 1)))","(cos.f64 (*.f64 2 x))","(cos.f64 (*.f64 2 x))","(cos.f64 (*.f64 2 x))","(cos.f64 (*.f64 2 x))","(cos.f64 (neg.f64 (*.f64 -2 x)))","(cos.f64 (*.f64 2 x))","(cos.f64 (neg.f64 (*.f64 -2 x)))","(cos.f64 (*.f64 2 x))","(cos.f64 (neg.f64 (*.f64 -2 x)))","(cos.f64 (*.f64 2 x))","(cos.f64 (neg.f64 (*.f64 -2 x)))","(cos.f64 (*.f64 2 x))"]],"time":338.951904296875,"type":"simplify"},{"compiler":[[2488,1061]],"time":22.865966796875,"type":"eval"},{"alts":[["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (pow.f64 (*.f64 s x) 2)))","fresh",21.574452103289563],["(/.f64 (*.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))","fresh",29.412398961102856],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 (*.f64 x s) s) x)))","fresh",24.1889630015094],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","next",2.439240064549515],["(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 (*.f64 c s) x) 2))","fresh",2.657421395479422],["(*.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))) (pow.f64 (cos.f64 (+.f64 x x)) 2/3))","fresh",19.96904066979387],["(/.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (/.f64 (cos.f64 (+.f64 x x)) c)) c)","fresh",25.391068673118234],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3))","fresh",2.512131235984857],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 c (*.f64 s x)) -2))","fresh",3.156382708339511],["(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","fresh",3.692331344175551],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","fresh",2.440632421102519],["(*.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))","fresh",19.975031861832115],["(*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (pow.f64 x -2) -2))","fresh",39.53429038819182],["(*.f64 (*.f64 (+.f64 (cos.f64 x) (sin.f64 x)) (-.f64 (cos.f64 x) (sin.f64 x))) (pow.f64 (*.f64 (*.f64 c s) x) -2))","fresh",2.4507047887653384]],"compiler":[[17,13],[28,16],[19,13],[18,13],[15,11],[23,14],[21,13],[18,13],[15,10],[15,11],[29,19],[25,15],[14,11],[22,13],[17,13],[28,16],[19,13],[18,13],[15,11],[23,14],[21,13],[18,13],[15,10],[15,11],[29,19],[25,15],[14,11],[22,13]],"count":[[145,14]],"kept":[{"done":[0,0],"fresh":[7,6],"new":[137,8],"picked":[1,0]}],"min-error":[0.0546875],"time":42.173095703125,"type":"prune"},{"compiler":[[57,19]],"locations":[["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))",0.1015625,true],["(pow.f64 (*.f64 (*.f64 c s) x) -2)",0.2396087890737681,false],["(pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3)",0.3766976074528622,true],["(*.f64 (*.f64 c s) x)",5.8296800470359065,false]],"time":11.285888671875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","s","-inf",0.197021484375],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","s","inf",0.38916015625],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","s","0",0.39501953125],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","c","-inf",0.19921875],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","c","inf",0.421142578125],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","c","0",0.4169921875],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","x","-inf",0.4619140625],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","x","inf",0.48486328125],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","x","0",0.284912109375],["(pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3)","x","-inf",1.412841796875],["(pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3)","x","inf",1.5390625],["(pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3)","x","0",0.43505859375]],"time":7.027099609375,"type":"series"},{"count":[[2,76]],"inputs":[["(pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3)","(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 2) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (cos.f64 x) 2) 1) (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (cos.f64 x) 2) 1/2) (*.f64 1/2 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 x x)) (*.f64 (cos.f64 (+.f64 x x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 x x)) 0) (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 x x)) (*.f64 0 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (+.f64 x x))) (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 1 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 x) (sin.f64 x)) (-.f64 (cos.f64 x) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (pow.f64 (cos.f64 (+.f64 x x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (cbrt.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (+.f64 x x)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3)) (pow.f64 (cos.f64 (+.f64 x x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 x) (sin.f64 x)) (+.f64 (cos.f64 x) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3)) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3)) (pow.f64 (cos.f64 (+.f64 x x)) 2/3)) (cbrt.f64 (cbrt.f64 (cos.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (+.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (+.f64 x x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (+.f64 x x)) 1) (-.f64 1 (cos.f64 (+.f64 x x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (+.f64 x x)) 1) 2) (*.f64 2 (-.f64 1 (cos.f64 (+.f64 x x))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 x x)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 x x)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 x x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 x) (cos.f64 x) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 x) 2)) (cbrt.f64 (pow.f64 (cos.f64 x) 4)) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (cos.f64 x) 2) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 x x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 0) (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 0 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 (+.f64 x x)) 2/3)) (cbrt.f64 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 2/3) (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 (+.f64 x x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 2/3) (cos.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cos.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 2/3) (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))) (pow.f64 (cos.f64 (+.f64 x x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 2/3) (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 x x))) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (cos.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3))))))"]],"rules":[["egg-rr",32],["egg-rr",44]],"time":26.50390625,"type":"rewrite"},{"count":[[124,98]],"inputs":[["1","(+.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) 1))","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 1 (*.f64 -4/45 (pow.f64 x 6)))))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(-.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 -4/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(fma.f64 -2 (*.f64 x x) 1)","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) 1))","(fma.f64 (pow.f64 x 4) 2/3 (fma.f64 -2 (*.f64 x x) 1))","(+.f64 (*.f64 2/3 (pow.f64 x 4)) (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 1 (*.f64 -4/45 (pow.f64 x 6)))))","(fma.f64 2/3 (pow.f64 x 4) (fma.f64 (*.f64 x x) -2 (fma.f64 -4/45 (pow.f64 x 6) 1)))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(cos.f64 (*.f64 2 x))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(cos.f64 (*.f64 2 x))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(cos.f64 (*.f64 2 x))","(*.f64 (cos.f64 (*.f64 2 x)) (pow.f64 1 1/3))","(cos.f64 (*.f64 2 x))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(cos.f64 (*.f64 2 x))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(cos.f64 (*.f64 2 x))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(cos.f64 (*.f64 2 x))","(*.f64 (pow.f64 1 1/3) (cos.f64 (neg.f64 (*.f64 -2 x))))","(cos.f64 (*.f64 2 x))","(/.f64 1 (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(pow.f64 (pow.f64 (*.f64 c (*.f64 s x)) 2) -1)","(-.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(+.f64 (pow.f64 (pow.f64 (*.f64 c (*.f64 s x)) 2) -1) (*.f64 -2 (pow.f64 (*.f64 s c) -2)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(+.f64 (pow.f64 (pow.f64 (*.f64 c (*.f64 s x)) 2) -1) (/.f64 (-.f64 (*.f64 2/3 (*.f64 x x)) 2) (pow.f64 (*.f64 s c) 2)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 -4/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))) (*.f64 2 (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2)))))","(+.f64 (pow.f64 (pow.f64 (*.f64 c (*.f64 s x)) 2) -1) (+.f64 (*.f64 (*.f64 -4/45 (pow.f64 x 4)) (pow.f64 (*.f64 s c) -2)) (/.f64 (-.f64 (*.f64 2/3 (*.f64 x x)) 2) (pow.f64 (*.f64 s c) 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (neg.f64 (*.f64 -2 x))) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2))))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 c (*.f64 s x)) 2))"]],"time":146.14501953125,"type":"simplify"},{"compiler":[[2919,1294]],"time":29.001953125,"type":"eval"},{"alts":[["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (pow.f64 (*.f64 s x) 2)))","fresh",21.574452103289563],["(/.f64 (*.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))","fresh",29.412398961102856],["(/.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (/.f64 (cos.f64 (+.f64 x x)) c)) c)","fresh",25.391068673118234],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3))","fresh",2.512131235984857],["(*.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))))","fresh",19.96904066979387],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 c (*.f64 s x)) -2))","fresh",3.156382708339511],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 (*.f64 x s) s) x)))","fresh",24.1889630015094],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 c (*.f64 s x)) -2))","fresh",3.1896240169501637],["(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 (*.f64 c s) x) 2))","fresh",2.657421395479422],["(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","fresh",3.692331344175551],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","next",2.440632421102519],["(*.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))","fresh",19.975031861832115],["(*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (pow.f64 x -2) -2))","fresh",39.53429038819182]],"compiler":[[17,13],[28,16],[21,13],[18,13],[23,14],[15,10],[19,13],[18,13],[15,11],[15,11],[29,19],[25,15],[14,11],[17,13],[28,16],[21,13],[18,13],[23,14],[15,10],[19,13],[18,13],[15,11],[15,11],[29,19],[25,15],[14,11]],"count":[[165,13]],"kept":[{"done":[0,0],"fresh":[13,11],"new":[151,2],"picked":[1,0]}],"min-error":[0.05078125],"time":47.197998046875,"type":"prune"},{"compiler":[[91,41]],"locations":[["(pow.f64 (sin.f64 x) 2)",0.278007519536884,true],["(pow.f64 (cos.f64 x) 2)",0.3046875,true],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))",3.605579579190822,true],["(*.f64 (*.f64 c s) x)",5.8296800470359065,false]],"time":19.01416015625,"type":"localize"},{"count":[[3,44]],"series":[["(pow.f64 (sin.f64 x) 2)","x","-inf",0.139892578125],["(pow.f64 (sin.f64 x) 2)","x","inf",0.161865234375],["(pow.f64 (sin.f64 x) 2)","x","0",0.2041015625],["(pow.f64 (cos.f64 x) 2)","x","-inf",0.31591796875],["(pow.f64 (cos.f64 x) 2)","x","inf",0.322998046875],["(pow.f64 (cos.f64 x) 2)","x","0",0.26318359375],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","x","-inf",1.02197265625],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","x","inf",0.92919921875],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","x","0",0.635986328125],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","s","-inf",0.194091796875],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","s","inf",0.489013671875],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","s","0",0.89892578125],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","c","-inf",0.2109375],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","c","inf",0.533935546875],["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","c","0",1.43798828125]],"time":7.974853515625,"type":"series"},{"count":[[3,178]],"inputs":[["(*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))","(pow.f64 (cos.f64 x) 2)","(pow.f64 (sin.f64 x) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 0) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))) (*.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))) 0) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))) (*.f64 0 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 x) 2/3)) (*.f64 (pow.f64 (sin.f64 x) 4/3) (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 x) 4/3) (pow.f64 (*.f64 (*.f64 c s) x) -2)) (neg.f64 (pow.f64 (sin.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (neg.f64 (pow.f64 (sin.f64 x) 2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (pow.f64 (sin.f64 x) 2/3))) (*.f64 (pow.f64 (sin.f64 x) 4/3) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (sin.f64 x))) (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (pow.f64 (*.f64 (*.f64 c s) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2/3)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (*.f64 (pow.f64 (sin.f64 x) 4/3) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 x) 4/3) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4))) (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2/3)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2/3))) (pow.f64 (sin.f64 x) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 x) 4/3) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)) (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (sin.f64 x) 2/3))) (pow.f64 (sin.f64 x) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (pow.f64 (sin.f64 x) 2/3)) (neg.f64 (*.f64 (pow.f64 (sin.f64 x) 4/3) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (sin.f64 x)) (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (sin.f64 x) 2/3)) (neg.f64 (pow.f64 (sin.f64 x) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (sin.f64 x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 6)) (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 2/3)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (sin.f64 x) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 x) 6)) (pow.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (pow.f64 (cos.f64 x) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 x) 2) 0) (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 x) 2) (*.f64 0 (pow.f64 (cos.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 x) 2)) (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 x) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 x)) (pow.f64 (cbrt.f64 (cos.f64 x)) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 x)) (neg.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 5) (cbrt.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (cos.f64 x)) 1) (*.f64 (neg.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (sin.f64 x)) (-.f64 -1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sin.f64 x)) (-.f64 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (neg.f64 (sin.f64 x))) (-.f64 -1 (neg.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (neg.f64 (sin.f64 x))) (-.f64 1 (neg.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (pow.f64 (sin.f64 x) 4/3) (pow.f64 (sin.f64 x) 2/3))) (-.f64 1 (pow.f64 (sin.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 2/3) (pow.f64 (cos.f64 x) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 4/3) (pow.f64 (cos.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (neg.f64 (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 3)) (+.f64 1/4 (-.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (*.f64 1/2 (cos.f64 (+.f64 x x)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (sin.f64 x) 6)) (+.f64 1 (+.f64 (pow.f64 (sin.f64 x) 4) (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cos.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (sin.f64 x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (sin.f64 x) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 x) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 -1/2 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (cos.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (cos.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (pow.f64 (cos.f64 x) 4/3)) (pow.f64 (cos.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cbrt.f64 (cos.f64 x))) (pow.f64 (cbrt.f64 (cos.f64 x)) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (pow.f64 (cos.f64 x) 2/3)) (pow.f64 (cos.f64 x) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (pow.f64 (cos.f64 x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cos.f64 x)) (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (cos.f64 x) (neg.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 0) 2) (*.f64 1/2 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (cos.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (sin.f64 x) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (+.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 (pow.f64 (cos.f64 x) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 x)) (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) (-.f64 (sin.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (sin.f64 x)) 0) (-.f64 (neg.f64 (sin.f64 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (cos.f64 x)) (-.f64 -1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cos.f64 x)) (-.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (neg.f64 (cos.f64 x))) (-.f64 -1 (neg.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (neg.f64 (cos.f64 x))) (-.f64 1 (neg.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (pow.f64 (sin.f64 x) 4/3) (*.f64 0 (pow.f64 (sin.f64 x) 2/3)))) (+.f64 0 (pow.f64 (sin.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (pow.f64 (cos.f64 x) 4/3) (pow.f64 (cos.f64 x) 2/3))) (-.f64 1 (pow.f64 (cos.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (sin.f64 x) 4/3) (+.f64 0 (*.f64 (pow.f64 (sin.f64 x) 2/3) 0))) (-.f64 (pow.f64 (sin.f64 x) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 x) 2/3) (pow.f64 (sin.f64 x) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 x) 4/3) (pow.f64 (sin.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (sin.f64 x)) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 5) (cbrt.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (neg.f64 (pow.f64 (cos.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (cos.f64 x) 6)) (+.f64 1 (+.f64 (pow.f64 (cos.f64 x) 4) (pow.f64 (cos.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 3)) (+.f64 1/4 (+.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (*.f64 1/2 (cos.f64 (+.f64 x x)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 x x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sin.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (cos.f64 x) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (cos.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 x) 2/3) (pow.f64 (sin.f64 x) 4/3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 x)) (neg.f64 (sin.f64 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (sin.f64 x)) 5) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 x) 4/3) (pow.f64 (sin.f64 x) 2/3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 x) (sin.f64 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (sin.f64 x) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (cos.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 x) 2) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (sin.f64 x) 2) 0)))))"]],"rules":[["egg-rr",79],["egg-rr",53],["egg-rr",46]],"time":35.777099609375,"type":"rewrite"},{"count":[[222,204]],"inputs":[["(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 -1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))","(-.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2))))","(-.f64 (+.f64 (*.f64 -2/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 1/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2))))) (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2))))","(-.f64 (+.f64 (*.f64 -2/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 1/315 (/.f64 (pow.f64 x 6) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))) (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","1","(+.f64 1 (*.f64 -1 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -2/45 (pow.f64 x 6)) (*.f64 1/3 (pow.f64 x 4)))))","(pow.f64 x 2)","(+.f64 (*.f64 -1/3 (pow.f64 x 4)) (pow.f64 x 2))","(+.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/45 (pow.f64 x 6)) (pow.f64 x 2)))","(+.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/315 (pow.f64 x 8)) (+.f64 (*.f64 2/45 (pow.f64 x 6)) (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 s 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(/.f64 -1 (*.f64 (pow.f64 c 2) (pow.f64 s 2)))","(neg.f64 (pow.f64 (*.f64 s c) (neg.f64 2)))","(-.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2))))","(/.f64 (-.f64 (*.f64 1/3 (*.f64 x x)) 1) (pow.f64 (*.f64 s c) 2))","(-.f64 (+.f64 (*.f64 -2/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 1/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2))))) (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2))))","(-.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 x x)) (*.f64 -2/45 (pow.f64 x 4))) (pow.f64 (*.f64 s c) 2)) (pow.f64 (*.f64 s c) (neg.f64 2)))","(-.f64 (+.f64 (*.f64 -2/45 (/.f64 (pow.f64 x 4) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))) (*.f64 1/315 (/.f64 (pow.f64 x 6) (*.f64 (pow.f64 c 2) (pow.f64 s 2)))))) (/.f64 1 (*.f64 (pow.f64 s 2) (pow.f64 c 2))))","(-.f64 (fma.f64 -2/45 (/.f64 (pow.f64 x 4) (pow.f64 (*.f64 s c) 2)) (/.f64 (+.f64 (*.f64 1/315 (pow.f64 x 6)) (*.f64 1/3 (*.f64 x x))) (pow.f64 (*.f64 s c) 2))) (pow.f64 (*.f64 s c) (neg.f64 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","(*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 s 2) (*.f64 (pow.f64 c 2) (pow.f64 x 2)))))","(/.f64 (pow.f64 (sin.f64 x) 2) (neg.f64 (pow.f64 (*.f64 (*.f64 c x) s) 2)))","1","(+.f64 1 (*.f64 -1 (pow.f64 x 2)))","(-.f64 1 (*.f64 x x))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 4))))","(+.f64 1 (fma.f64 1/3 (pow.f64 x 4) (neg.f64 (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -2/45 (pow.f64 x 6)) (*.f64 1/3 (pow.f64 x 4)))))","(+.f64 (-.f64 1 (*.f64 x x)) (fma.f64 -2/45 (pow.f64 x 6) (*.f64 1/3 (pow.f64 x 4))))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1/3 (pow.f64 x 4)) (pow.f64 x 2))","(fma.f64 -1/3 (pow.f64 x 4) (*.f64 x x))","(+.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 2/45 (pow.f64 x 6)) (pow.f64 x 2)))","(fma.f64 (pow.f64 x 4) -1/3 (fma.f64 2/45 (pow.f64 x 6) (*.f64 x x)))","(+.f64 (*.f64 -1/3 (pow.f64 x 4)) (+.f64 (*.f64 -1/315 (pow.f64 x 8)) (+.f64 (*.f64 2/45 (pow.f64 x 6)) (pow.f64 x 2))))","(fma.f64 (pow.f64 x 4) -1/3 (fma.f64 (pow.f64 x 8) -1/315 (fma.f64 2/45 (pow.f64 x 6) (*.f64 x x))))"]],"time":142.6640625,"type":"simplify"},{"compiler":[[8461,4247]],"time":73.962890625,"type":"eval"},{"alts":[["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (*.f64 (+.f64 -1 (sin.f64 x)) (-.f64 -1 (sin.f64 x)))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","fresh",2.5069750234175943],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 s (*.f64 x c)) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","fresh",5.309999774584998],["(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","fresh",3.692331344175551],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (/.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (cbrt.f64 4)) (cbrt.f64 2)))))","fresh",2.4448700843384876],["(/.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (/.f64 (cos.f64 (+.f64 x x)) c)) c)","fresh",25.391068673118234],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3))","fresh",2.512131235984857],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (pow.f64 (*.f64 s x) 2)))","fresh",21.574452103289563],["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 c (*.f64 s x)) -2))","fresh",3.156382708339511],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","fresh",2.6355149005096976],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (/.f64 (+.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 3)) (+.f64 1/4 (-.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (*.f64 1/2 (cos.f64 (+.f64 x x)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 x x)))))))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","fresh",2.4662661805721324],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (*.f64 (+.f64 1 (cos.f64 x)) (-.f64 1 (cos.f64 x))))))","fresh",2.4651847735199506],["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (+.f64 1 (*.f64 (neg.f64 (cbrt.f64 (cos.f64 x))) (pow.f64 (cbrt.f64 (cos.f64 x)) 5))))))","fresh",2.515024585631264],["(*.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))","fresh",19.975031861832115]],"compiler":[[34,21],[29,21],[15,11],[38,27],[21,13],[18,13],[17,13],[15,10],[38,27],[60,37],[34,21],[37,23],[25,15]],"count":[[283,13]],"kept":[{"done":[0,0],"fresh":[12,6],"new":[270,7],"picked":[1,0]}],"min-error":[0.03125],"time":105.89111328125,"type":"prune"},{"accuracy":[0.851075185784151],"baseline":[2.387194844178617],"branch":[["x",2.387194844178616,1],["c",1.3732952314571285,2],["s",2.387194844178616,1],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))",0.851075185784151,2],["(pow.f64 c 2)",2.387194844178617,1],["(pow.f64 c 2)",2.387194844178617,1],["(pow.f64 s 2)",2.3871948441786164,1]],"compiler":[[4,3],[4,3],[4,3],[19,14],[6,5],[6,5],[6,5],[568,269]],"count":[[26,2]],"inputs":[["(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (*.f64 (+.f64 -1 (sin.f64 x)) (-.f64 -1 (sin.f64 x)))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 s (*.f64 x c)) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (/.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (cbrt.f64 4)) (cbrt.f64 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (/.f64 (/.f64 (+.f64 (cos.f64 (+.f64 x x)) (cos.f64 0)) (cbrt.f64 2)) (cbrt.f64 4))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (/.f64 (+.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) 3)) (+.f64 1/4 (-.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 x x))) (*.f64 1/2 (cos.f64 (+.f64 x x)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 x x)))))))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (*.f64 (+.f64 1 (cos.f64 x)) (-.f64 1 (cos.f64 x))))))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (+.f64 1 (*.f64 (neg.f64 (cbrt.f64 (cos.f64 x))) (pow.f64 (cbrt.f64 (cos.f64 x)) 5))))))","(*.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2/3) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))))","(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 c (*.f64 s x)) -2))","(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(*.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cbrt.f64 (cos.f64 (+.f64 x x)))) (pow.f64 (cos.f64 (+.f64 x x)) 2/3))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2)) 3))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 c (*.f64 s x)) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 s (*.f64 c x)) 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (pow.f64 (sin.f64 x) 2))))","(*.f64 (*.f64 (cos.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c s) x) -4)))","(*.f64 (*.f64 (+.f64 (cos.f64 x) (sin.f64 x)) (-.f64 (cos.f64 x) (sin.f64 x))) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(/.f64 (*.f64 (/.f64 1 (*.f64 (*.f64 x (*.f64 s s)) x)) (/.f64 (cos.f64 (+.f64 x x)) c)) c)","(/.f64 (/.f64 (cos.f64 (+.f64 x x)) c) (*.f64 (*.f64 (*.f64 x (*.f64 s s)) x) c))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (pow.f64 (*.f64 s x) 2)))","(/.f64 (*.f64 (cbrt.f64 (cos.f64 (+.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 x x)) 2)) x)) (*.f64 (*.f64 c c) (*.f64 x (*.f64 s s))))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 (*.f64 x s) s) x)))","(/.f64 (cos.f64 (*.f64 2 x)) (pow.f64 (*.f64 (*.f64 c s) x) 2))","(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 (*.f64 c s) x) -2))","(*.f64 (pow.f64 (*.f64 c s) -2) (+.f64 (pow.f64 x -2) -2))","(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))"]],"link":["."],"name":["mixedcos"],"oracle":[51.68051357620364],"outputs":[["(*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 c (*.f64 s x)) -2))","(+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (/.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (cbrt.f64 4)) (cbrt.f64 2)))))"]],"time":86.73681640625,"times":[["x",8.093017578125],["c",22.314208984375],["s",8.10302734375],["(/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x)))",5.343017578125],["(pow.f64 c 2)",10.886962890625],["(pow.f64 c 2)",10.93310546875],["(pow.f64 s 2)",12.041015625]],"type":"regimes"},{"bstep":[[{"type":"real","value":"+inf"},{"type":"real","value":"NaN"},0.029052734375]],"compiler":[[6,5],[19,14]],"method":["left-value"],"time":0.27001953125,"type":"bsearch"},{"compiler":[[69,46]],"inputs":[["(if (<=.f64 (/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))) +inf.0) (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 c (*.f64 s x)) -2)) (+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (/.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (cbrt.f64 4)) (cbrt.f64 2))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (cos.f64 (*.f64 2 x)) (*.f64 (pow.f64 c 2) (*.f64 (*.f64 x (pow.f64 s 2)) x))) +inf.0) (*.f64 (cos.f64 (+.f64 x x)) (pow.f64 (*.f64 c (*.f64 s x)) -2)) (+.f64 (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (pow.f64 (cos.f64 x) 2)) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (neg.f64 (/.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 x x))) (cbrt.f64 4)) (cbrt.f64 2))))))","(if (<=.f64 (/.f64 (*.f64 (cos.f64 (*.f64 -2 x)) (pow.f64 c -2)) (pow.f64 (*.f64 s x) 2)) +inf.0) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cos.f64 (*.f64 -2 x))) (*.f64 (pow.f64 (*.f64 (*.f64 c s) x) -2) (cos.f64 (*.f64 -2 x))))"]],"stop":[["fuel",1]],"time":31.467041015625,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[69,46]],"remove-preprocessing":[[]],"time":23.052001953125,"type":"end"}]