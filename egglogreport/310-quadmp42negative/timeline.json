[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":145.714111328125,"type":"analyze"},{"outcomes":[["body",256,"invalid",90.467041015625,1595],["body",4096,"valid",99.165771484375,389],["body",1024,"valid",120.5537109375,780],["body",512,"valid",39.851806640625,374],["body",256,"valid",329.1015625,5562],["body",2048,"valid",235.05712890625,1151]],"time":925.326904296875,"type":"sample"},{"compiler":[[20,14]],"inputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (*.f64 (+.f64 a (sqrt.f64 (fma.f64 a a (*.f64 -4 (*.f64 b c))))) -1/2) b)","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) c)","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))","(/.f64 (*.f64 (+.f64 c (sqrt.f64 (fma.f64 c c (*.f64 -4 (*.f64 a b))))) -1/2) a)"]],"symmetry":[[]],"time":86.447021484375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)"]],"time":25.028076171875,"type":"simplify"},{"compiler":[[35,22]],"time":0.5390625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","next",34.01243765869663]],"compiler":[[18,12],[18,12]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[34.01243765869663],"time":0.993896484375,"type":"prune"},{"compiler":[[72,35]],"locations":[["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)",0.08984375,true],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))",0.6361625099398125,true],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))",0.9999889904222409,true],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))",24.12928135050271,true]],"time":16.819091796875,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","c","-inf",0.406982421875],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","c","inf",0.6240234375],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","c","0",0.34716796875],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","a","-inf",0.493896484375],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","a","inf",0.79296875],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","a","0",0.355224609375],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","b","-inf",0.614990234375],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","b","inf",0.412841796875],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","b","0",1.621826171875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","c","-inf",0.48095703125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","c","inf",0.47998046875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","c","0",0.24609375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","a","-inf",0.323974609375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","a","inf",0.3720703125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","a","0",0.256103515625],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","b","-inf",0.566162109375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","b","inf",0.26708984375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","b","0",0.281982421875],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","c","-inf",0.2509765625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","c","inf",0.302001953125],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","c","0",0.317138671875],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","a","-inf",0.261962890625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","a","inf",0.340087890625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","a","0",0.427978515625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","b","-inf",0.306884765625],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","b","inf",0.2919921875],["(fma.f64 b b (*.f64 -4 (*.f64 a c)))","b","0",0.336181640625],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","-inf",0.427978515625],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","inf",0.783935546875],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","c","0",0.3720703125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","-inf",0.4189453125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","inf",0.596923828125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","a","0",0.341064453125],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","-inf",0.47900390625],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","inf",0.489990234375],["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","b","0",1.01513671875]],"time":17.510009765625,"type":"series"},{"count":[[4,223]],"inputs":[["(sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))","(fma.f64 b b (*.f64 -4 (*.f64 a c)))","(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c)))))","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c -4) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2) (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 0 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 c -4) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 c -4) a) 2)) (cbrt.f64 (*.f64 (*.f64 c -4) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a c)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 a c) 2)) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (cbrt.f64 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 c -4) a)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c -4) a) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c -4) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 c -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 c -4) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 c -4) a) 1 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 c -4) a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 0) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)) (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (*.f64 -1/2 b)) (*.f64 (/.f64 1 a) (*.f64 -1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (*.f64 -1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (/.f64 1 a) (*.f64 -1/2 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 1/2) (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 0) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2 b) (/.f64 1 a)) (*.f64 (*.f64 -1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 1 a)) (*.f64 (*.f64 -1/2 b) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))) (*.f64 1/2 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) (*.f64 0 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (/.f64 1 (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (cbrt.f64 (/.f64 -1/8 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/8 a)) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) 2)) a) (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (/.f64 -1/8 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 a 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/8 (*.f64 a a))) (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 a) -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (cbrt.f64 (/.f64 (*.f64 a a) -1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (*.f64 a -2))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) 2))) (*.f64 (cbrt.f64 (*.f64 a -2)) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 2 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (*.f64 a 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 a) -1/2)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) -1/2) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1/8 a)) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2)) (cbrt.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) -1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (/.f64 -1/8 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 a) -1/2)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) (pow.f64 (cbrt.f64 a) -2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 a) -1/2)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (*.f64 a -2))) (cbrt.f64 (/.f64 (*.f64 a a) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 a) -1/2))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 a 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 3))))))"]],"rules":[["egg-rr",80],["egg-rr",38],["egg-rr",64],["egg-rr",41]],"time":45.384033203125,"type":"rewrite"},{"count":[[307,274]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (neg.f64 b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 -4 (*.f64 c a) (*.f64 b b))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 2 (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(*.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 16 (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -2 -2))) (pow.f64 b 7)) 1/2 (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (neg.f64 (/.f64 b a))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 (pow.f64 (*.f64 c a) 4) 16 (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -2 -2))) (*.f64 a (pow.f64 b 7))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -2 (neg.f64 (/.f64 c b)))) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (neg.f64 (/.f64 b a))))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (neg.f64 (/.f64 b a))))"]],"time":261.48095703125,"type":"simplify"},{"compiler":[[6087,3793]],"time":72.998046875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b)))) -1/2) a)","fresh",40.949192589195505],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",41.55258447210364],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","fresh",34.0910277323457],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",42.832209063377846],["(neg.f64 (/.f64 b a))","fresh",42.696244571949826],["(*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (cbrt.f64 (/.f64 -1/8 (*.f64 a a))))","fresh",45.65285962168912],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (pow.f64 b 2))) -1/2) a)","fresh",50.416469274163745],["(/.f64 (*.f64 -1/2 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 a))","fresh",34.25715797152049],["(neg.f64 (/.f64 c b))","fresh",40.88560856170871],["(pow.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 3) 1/3)","fresh",57.163680946888654],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))) -1/2) a)","next",34.0383203873389],["(/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) -1/2) a)","fresh",34.902595376526705]],"compiler":[[24,16],[17,10],[22,16],[10,6],[7,5],[24,16],[13,10],[24,16],[7,5],[22,16],[22,16],[28,18],[24,16],[17,10],[22,16],[10,6],[7,5],[24,16],[13,10],[24,16],[7,5],[22,16],[22,16],[28,18]],"count":[[275,12]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[274,12],"picked":[1,0]}],"min-error":[4.925405090066506],"time":84.52099609375,"type":"prune"},{"compiler":[[101,57]],"locations":[["(*.f64 (*.f64 a c) (cbrt.f64 -4))",0.377948779305326,true],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))",0.6361625099398125,true],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))",0.90625,true],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))",24.12928135050271,true]],"time":23.706787109375,"type":"localize"},{"count":[[4,97]],"series":[["(*.f64 (*.f64 a c) (cbrt.f64 -4))","c","-inf",0.239990234375],["(*.f64 (*.f64 a c) (cbrt.f64 -4))","c","inf",0.22998046875],["(*.f64 (*.f64 a c) (cbrt.f64 -4))","c","0",0.823974609375],["(*.f64 (*.f64 a c) (cbrt.f64 -4))","a","-inf",0.263916015625],["(*.f64 (*.f64 a c) (cbrt.f64 -4))","a","inf",0.286865234375],["(*.f64 (*.f64 a c) (cbrt.f64 -4))","a","0",1.001953125],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","c","-inf",0.51806640625],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","c","inf",0.6669921875],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","c","0",0.226806640625],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","a","-inf",0.3720703125],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","a","inf",0.4130859375],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","a","0",0.22900390625],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","b","-inf",0.506103515625],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","b","inf",0.285888671875],["(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","b","0",0.26708984375],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","b","-inf",0.18798828125],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","b","inf",0.23095703125],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","b","0",0.9560546875],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","c","-inf",0.30908203125],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","c","inf",0.321044921875],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","c","0",3.177978515625],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","a","-inf",0.43798828125],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","a","inf",0.380126953125],["(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","a","0",1.287109375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","b","-inf",0.34619140625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","b","inf",0.52197265625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","b","0",1.005859375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","c","-inf",0.596923828125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","c","inf",1.530029296875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","c","0",0.576171875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","a","-inf",0.60009765625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","a","inf",0.81201171875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","a","0",0.967041015625]],"time":21.37109375,"type":"series"},{"count":[[4,170]],"inputs":[["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))","(fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))","(+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))","(*.f64 (*.f64 a c) (cbrt.f64 -4))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1/2) (*.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (*.f64 1/2 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (pow.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 0) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 0) (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/2) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (*.f64 0 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (*.f64 1/2 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (sqrt.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 0) (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 2/3) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 a c) -4)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a c) -4) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (*.f64 a c) (cbrt.f64 16)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 16) (*.f64 (*.f64 a c) (cbrt.f64 -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (*.f64 a c) 2) (cbrt.f64 16)) 16)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 (cbrt.f64 16))) (cbrt.f64 (cbrt.f64 256)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 (*.f64 c (cbrt.f64 -4)) (cbrt.f64 16)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 b 2/3) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (pow.f64 b 2/3) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (neg.f64 b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 b 2/3) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 b b)) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 b b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 0) (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 1/2) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 2/3) (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 2/3) (-.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (-.f64 (pow.f64 b 2/3) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 b 2/3) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 b 2/3) (cbrt.f64 b) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) 1 b)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (*.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 0) (*.f64 (*.f64 a c) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 1/2) (*.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (*.f64 0 (*.f64 (*.f64 a c) (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 a c) (cbrt.f64 -4))) (*.f64 (*.f64 a c) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 a c) (cbrt.f64 -4))) (*.f64 1/2 (*.f64 (*.f64 a c) (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 c (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (cbrt.f64 -4)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 a (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a c)) (*.f64 (pow.f64 (*.f64 a c) 2/3) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (*.f64 c (cbrt.f64 -4)) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 -4)) (*.f64 (cbrt.f64 (cbrt.f64 16)) (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a c) -4)) (pow.f64 (*.f64 a c) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 -4)) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 a c) 2/3) (cbrt.f64 -4)) (cbrt.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 c (cbrt.f64 -4)) (pow.f64 a 2/3)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 16)) (*.f64 a c)) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a c) 2/3) (cbrt.f64 (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))) (pow.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a c) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 2/3) (cbrt.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a c) (cbrt.f64 (cbrt.f64 -4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 a c) (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16)) (*.f64 (*.f64 a c) (cbrt.f64 (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -4 (pow.f64 (*.f64 a c) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 -4 (pow.f64 (*.f64 a c) 3)))))))"]],"rules":[["egg-rr",37],["egg-rr",37],["egg-rr",57],["egg-rr",39]],"time":41.64892578125,"type":"rewrite"},{"count":[[267,214]],"inputs":[["b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -1 b)","(+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(pow.f64 b 2)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (pow.f64 c 4) (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -4) (pow.f64 b 5))))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -4) (pow.f64 b 5))))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(sqrt.f64 (*.f64 (*.f64 c a) -4))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (*.f64 c a)) -4)) (*.f64 b b)) (sqrt.f64 (*.f64 (*.f64 c a) -4)))","b","(+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) b)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) b) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (/.f64 (*.f64 (pow.f64 (*.f64 c a) 3) -4) (pow.f64 b 5))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) -1/2 (neg.f64 b))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) -1/2 (neg.f64 b)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -1 b) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) -1/2 (neg.f64 b))))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(*.f64 (*.f64 c a) -4)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(*.f64 (*.f64 c a) -4)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(*.f64 (*.f64 c a) -4)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(*.f64 (*.f64 c a) -4)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))","(*.f64 (*.f64 c a) -4)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) (pow.f64 b 2))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))","(sqrt.f64 (*.f64 (*.f64 c a) -4))","(+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b)","(+.f64 (sqrt.f64 (*.f64 (*.f64 c a) -4)) b)","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))))) (pow.f64 b 2))) (+.f64 (sqrt.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) b))","(+.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (/.f64 1 (*.f64 c a)) -4)) (*.f64 b b)) (sqrt.f64 (*.f64 (*.f64 c a) -4))) b)","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 2 b))))","(*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))","(*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b))))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4)))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (*.f64 (pow.f64 c 4) (*.f64 (pow.f64 a 4) (*.f64 (cbrt.f64 -4) (cbrt.f64 16))))) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2))))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) 1/8 (fma.f64 1/2 (/.f64 (fma.f64 -4 (*.f64 (pow.f64 (*.f64 c a) 4) -4) (pow.f64 (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 c a) 2) 16)) 2)) (pow.f64 b 7)) (fma.f64 4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 -1/2 (/.f64 (*.f64 c a) (/.f64 b -4))))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b))","(fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (*.f64 2 b)))","(fma.f64 -1/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) (fma.f64 1/2 (/.f64 (*.f64 c a) (/.f64 b -4)) (*.f64 2 b)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 (cbrt.f64 -4) 2) (pow.f64 (cbrt.f64 16) 2)))) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 c (*.f64 a (*.f64 (cbrt.f64 -4) (cbrt.f64 16)))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) 16) (pow.f64 b 3)) -1/8 (fma.f64 (/.f64 (*.f64 c a) (/.f64 b -4)) 1/2 (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 2 b))))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))","(*.f64 c (*.f64 a (cbrt.f64 -4)))"]],"time":311.736083984375,"type":"simplify"},{"compiler":[[5061,3000]],"time":55.174072265625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b)))) -1/2) a)","fresh",40.949192589195505],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",41.55258447210364],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","next",34.0910277323457],["(pow.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 3) 1/3)","fresh",57.163680946888654],["(/.f64 (*.f64 (fma.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) b) -1/2) a)","fresh",34.92166154994512],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",42.832209063377846],["(neg.f64 (/.f64 b a))","fresh",42.696244571949826],["(*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (cbrt.f64 (/.f64 -1/8 (*.f64 a a))))","fresh",45.65285962168912],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (pow.f64 b 2))) -1/2) a)","fresh",50.416469274163745],["(/.f64 (*.f64 -1/2 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 a))","fresh",34.25715797152049],["(neg.f64 (/.f64 c b))","fresh",40.88560856170871],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))) -1/2) a)","done",34.0383203873389]],"compiler":[[24,16],[17,10],[22,16],[22,16],[28,16],[10,6],[7,5],[24,16],[13,10],[24,16],[7,5],[22,16],[24,16],[17,10],[22,16],[22,16],[28,16],[10,6],[7,5],[24,16],[13,10],[24,16],[7,5]],"count":[[226,12]],"kept":[{"done":[0,0],"fresh":[11,10],"new":[214,1],"picked":[1,1]}],"min-error":[4.925405090066506],"time":54.472900390625,"type":"prune"},{"compiler":[[86,55]],"locations":[["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))",0.23828125,true],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))",0.6361625099398125,true],["(fma.f64 b b (*.f64 (*.f64 c -4) a))",0.9999889904222409,true],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))",24.12928135050271,true]],"time":21.697021484375,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","a","-inf",0.619873046875],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","a","inf",0.990966796875],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","a","0",0.55908203125],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","c","-inf",0.487060546875],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","c","inf",0.8359375],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","c","0",0.51318359375],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","b","-inf",0.634033203125],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","b","inf",0.751953125],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","b","0",1.108154296875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","a","-inf",0.253173828125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","a","inf",0.238037109375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","a","0",0.196044921875],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","c","-inf",0.239990234375],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","c","inf",0.260986328125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","c","0",0.180908203125],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","b","-inf",0.23291015625],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","b","inf",0.18603515625],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","b","0",0.211181640625],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","a","-inf",0.14892578125],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","a","inf",0.166015625],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","a","0",0.14501953125],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","c","-inf",0.1728515625],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","c","inf",0.1630859375],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","c","0",0.14697265625],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","b","-inf",0.14697265625],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","b","inf",0.164794921875],["(fma.f64 b b (*.f64 (*.f64 c -4) a))","b","0",0.151123046875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","a","-inf",0.258056640625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","a","inf",0.241943359375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","a","0",0.2021484375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","c","-inf",0.251220703125],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","c","inf",0.273193359375],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","c","0",0.18310546875],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","b","-inf",0.213134765625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","b","inf",0.19384765625],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","b","0",0.318115234375]],"time":12.534912109375,"type":"series"},{"count":[[4,252]],"inputs":[["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))","(fma.f64 b b (*.f64 (*.f64 c -4) a))","(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))","(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 0) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c -4) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2) (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (*.f64 1/2 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (*.f64 0 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2/3) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 0) (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (cbrt.f64 b)) (pow.f64 b 2/3) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (pow.f64 b 2/3) b) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 b 2/3) (*.f64 b (cbrt.f64 b)) (*.f64 (*.f64 c -4) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 c -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 (*.f64 c -4))) (pow.f64 (*.f64 c -4) 2/3) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 c -4) a) 1 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (pow.f64 c 2/3) (*.f64 -4 a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 c -4) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 c -4) (cbrt.f64 a)) (pow.f64 a 2/3) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 c a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 c -4) a)) (pow.f64 (*.f64 (*.f64 c -4) a) 2/3) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c -4)) (*.f64 (pow.f64 (*.f64 c -4) 2/3) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (*.f64 c -4) a) 2/3) (cbrt.f64 (*.f64 (*.f64 c -4) a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) (*.f64 c -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c -4) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 c -4) a)) (*.f64 b b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 0) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1/2) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 0 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 b) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (*.f64 (neg.f64 b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2/3) (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (-.f64 (pow.f64 b 2/3) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 2/3) (-.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 b 2/3) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 b 2/3) (cbrt.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 0) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 1/2) (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) (*.f64 1/2 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) (*.f64 0 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 a (cbrt.f64 -4))) (neg.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 2/3) (cbrt.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2))) (*.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) 2/3) (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 1/2)) (neg.f64 (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (/.f64 -1/2 (*.f64 (cbrt.f64 16) (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (/.f64 1 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2))) a) (*.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) 2/3) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (/.f64 (cbrt.f64 1/4) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/4) a) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (cbrt.f64 (*.f64 a (cbrt.f64 4)))) (pow.f64 (cbrt.f64 (*.f64 a (cbrt.f64 4))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 1 (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) a) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3) (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2))) (*.f64 (*.f64 a (cbrt.f64 4)) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 (*.f64 a (cbrt.f64 -4)) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 (cbrt.f64 4) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (cbrt.f64 (*.f64 a (cbrt.f64 4)))) 1) (*.f64 (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (*.f64 (cbrt.f64 -2) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (*.f64 (cbrt.f64 2) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2))) (/.f64 1 a)) (*.f64 (cbrt.f64 (cbrt.f64 4)) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2))) 1) (*.f64 (cbrt.f64 (cbrt.f64 4)) (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (*.f64 (cbrt.f64 (cbrt.f64 4)) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2))) -1) (*.f64 (cbrt.f64 (cbrt.f64 4)) (*.f64 a (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 1/2)) (*.f64 a (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (*.f64 a (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (cbrt.f64 (*.f64 a (cbrt.f64 4)))) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (*.f64 (cbrt.f64 -2) a) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) a) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/4) a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/4) a) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2)))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 -1/2)) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2))) a) (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) 2/3)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 2/3) (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 1/2)))) (cbrt.f64 (*.f64 a (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 2/3) (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)))) (cbrt.f64 (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2))) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (cbrt.f64 -1/2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2))) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) 2/3)) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (/.f64 -1/2 (*.f64 (cbrt.f64 16) (*.f64 a a))))) (cbrt.f64 (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) 2/3) (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) 2/3) (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (cbrt.f64 -1/2))) (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (cbrt.f64 1/4)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 1/2))) (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 2/3)) (cbrt.f64 (*.f64 a (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2))) (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 2/3)) (cbrt.f64 (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) a) 1) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) 1) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (cbrt.f64 (*.f64 a (cbrt.f64 4)))) 1) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3)) (cbrt.f64 (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2))) (*.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) 2/3) (cbrt.f64 1/4))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (/.f64 (*.f64 (cbrt.f64 -2) a) (cbrt.f64 1/4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 1 (/.f64 (*.f64 (cbrt.f64 -2) a) (cbrt.f64 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 1 (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (cbrt.f64 -2) (*.f64 a (cbrt.f64 -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 a (cbrt.f64 4)) (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 a (cbrt.f64 4)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 a (cbrt.f64 -4)) (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 a (cbrt.f64 -4)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 (cbrt.f64 2) (*.f64 a (cbrt.f64 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (/.f64 (*.f64 (cbrt.f64 -2) a) (cbrt.f64 1/4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) (cbrt.f64 (*.f64 a (cbrt.f64 4))))) (neg.f64 (pow.f64 (*.f64 a (cbrt.f64 4)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -1/2)) a)) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 1/4) a) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) 1) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 1 a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 1/2)) (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (cbrt.f64 1/4) a) (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1/2) a) 3))))))"]],"rules":[["egg-rr",111],["egg-rr",40],["egg-rr",61],["egg-rr",40]],"time":51.169189453125,"type":"rewrite"},{"count":[[336,305]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))))","(*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 1/4) (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))))) (*.f64 a (*.f64 (pow.f64 b 7) (cbrt.f64 -2))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))))))","(*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))))","(*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 a (cbrt.f64 1/4))) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 2) (cbrt.f64 1/4))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 a (cbrt.f64 1/4))) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (neg.f64 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(+.f64 (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (neg.f64 b)) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(fma.f64 (/.f64 (*.f64 c a) b) -2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(+.f64 (+.f64 b (/.f64 (*.f64 -4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))) (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 -4 c) a)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 -4 c) a)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 -4 c) a)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 -4 c) a)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 -4 c) a)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(*.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 1/2 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3))) (/.f64 (*.f64 4 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))))","(*.f64 2 b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 c a) b) (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)))) (*.f64 2 b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 -2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))))","(fma.f64 -2 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 -2 (/.f64 (*.f64 c a) b) (*.f64 2 b))))","(*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2))))","(*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(fma.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)) (*.f64 -2 (*.f64 (/.f64 c b) (cbrt.f64 (/.f64 1/4 -2)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))))","(fma.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))))","(fma.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (cbrt.f64 (/.f64 1/4 -2))) (fma.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)))))","(*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))","(*.f64 2 (*.f64 (/.f64 c b) (cbrt.f64 (/.f64 1/4 -2))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(*.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2))))))","(fma.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (cbrt.f64 (/.f64 1/4 -2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (cbrt.f64 1/4) (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))))) (*.f64 a (*.f64 (pow.f64 b 7) (cbrt.f64 -2))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))))))","(fma.f64 1/2 (*.f64 (/.f64 (fma.f64 16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (cbrt.f64 (/.f64 1/4 -2))) (fma.f64 2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (cbrt.f64 (/.f64 1/4 -2))))))","(*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2))))","(*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(fma.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)) (*.f64 -2 (*.f64 (/.f64 c b) (cbrt.f64 (/.f64 1/4 -2)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))))","(fma.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (cbrt.f64 1/4) a)) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (cbrt.f64 1/4) (pow.f64 a 2))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))))","(fma.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (cbrt.f64 (/.f64 1/4 -2))) (fma.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)))))","(*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2))))","(*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(fma.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)) (*.f64 -2 (*.f64 (/.f64 c b) (cbrt.f64 (/.f64 1/4 -2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 a (cbrt.f64 1/4))) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))))","(fma.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a))))","(+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 2) (cbrt.f64 1/4))) (*.f64 (pow.f64 b 5) (cbrt.f64 -2)))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 a (cbrt.f64 1/4))) (*.f64 (pow.f64 b 3) (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))))","(fma.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (cbrt.f64 (/.f64 1/4 -2))) (fma.f64 -2 (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 (*.f64 c c) a) (cbrt.f64 1/4)) (pow.f64 b 3)) (/.f64 (*.f64 c (cbrt.f64 1/4)) b)) (cbrt.f64 -2)) (*.f64 2 (*.f64 (cbrt.f64 (/.f64 1/4 -2)) (/.f64 b a)))))"]],"time":312.928955078125,"type":"simplify"},{"compiler":[[8000,5580]],"time":100.9140625,"type":"eval"},{"alts":[["(*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))","fresh",40.95201481170871],["(neg.f64 (/.f64 c b))","fresh",40.88560856170871],["(pow.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 3) 1/3)","fresh",57.163680946888654],["(/.f64 (*.f64 (fma.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) b) -1/2) a)","fresh",34.92166154994512],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))) -1/2) a)","done",34.0383203873389],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 3))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","fresh",34.50202800128582],["(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","fresh",42.941584063377846],["(/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 a (cbrt.f64 4)) (cbrt.f64 -2)))","fresh",34.17505035430322],["(neg.f64 (/.f64 b a))","fresh",42.696244571949826],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (pow.f64 b 2))) -1/2) a)","fresh",50.416469274163745],["(/.f64 (/.f64 (+.f64 b b) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","fresh",42.782182071949826],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 -2))","fresh",34.086164014583545],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",41.55258447210364],["(/.f64 (*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -2)","next",34.063683985282246]],"compiler":[[14,12],[7,5],[22,16],[28,16],[22,16],[25,19],[26,22],[22,16],[7,5],[13,10],[14,11],[22,16],[17,10],[20,14],[14,12],[7,5],[22,16],[28,16],[25,19],[26,22],[22,16],[7,5],[13,10],[14,11],[22,16],[17,10],[20,14]],"count":[[317,14]],"kept":[{"done":[1,1],"fresh":[10,6],"new":[305,7],"picked":[1,0]}],"min-error":[4.925405090066506],"time":92.847900390625,"type":"prune"},{"compiler":[[80,48]],"locations":[["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))",0.1953125,true],["(+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))",0.6361625099398125,false],["(fma.f64 b b (*.f64 (*.f64 c -4) a))",0.9999889904222409,false],["(sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))",24.12928135050271,false]],"time":19.9990234375,"type":"localize"},{"count":[[1,16]],"series":[["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","c","-inf",0.35400390625],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","c","inf",0.39892578125],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","c","0",0.238037109375],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","b","-inf",0.303955078125],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","b","inf",0.246826171875],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","b","0",0.30517578125],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","a","-inf",0.495849609375],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","a","inf",0.4150390625],["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))","a","0",0.39404296875]],"time":3.304931640625,"type":"series"},{"count":[[1,79]],"inputs":[["(*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 b a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 0) (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 1/2) (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (*.f64 0 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) (*.f64 1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 2)) (cbrt.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) a) (cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)) a) (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2)) (/.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 (/.f64 b (cbrt.f64 a)) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 a)) (/.f64 b (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (neg.f64 a)) (*.f64 a (neg.f64 b))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (*.f64 (neg.f64 a) b)) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 b))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 b) a) (*.f64 (neg.f64 a) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 b (neg.f64 a)) (*.f64 a (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 b) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 2)) (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) (cbrt.f64 (pow.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a) (*.f64 a b)) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 b a) (*.f64 a (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 1 a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) b (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a)) (cbrt.f64 (*.f64 (pow.f64 a -2) (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (/.f64 1 a) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) a) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 b) a) (cbrt.f64 (*.f64 b b)) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 b (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) b) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 b a)) (cbrt.f64 (pow.f64 (/.f64 b a) 2)) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (/.f64 (cbrt.f64 (*.f64 b b)) a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a) (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 b a) 1 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 b a) (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a))))))"]],"rules":[["egg-rr",79]],"time":28.991943359375,"type":"rewrite"},{"count":[[95,95]],"inputs":[["(*.f64 2 (/.f64 b a))","(+.f64 (*.f64 -2 (/.f64 c b)) (*.f64 2 (/.f64 b a)))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 2 (/.f64 b a))","(+.f64 (*.f64 -2 (/.f64 c b)) (*.f64 2 (/.f64 b a)))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 2 (/.f64 c b))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 2 (/.f64 c b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 2 (/.f64 c b)) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 2 (/.f64 c b)) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 2 (/.f64 b a))","(+.f64 (*.f64 -2 (/.f64 c b)) (*.f64 2 (/.f64 b a)))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (/.f64 b a))","(/.f64 (*.f64 2 b) a)","(+.f64 (*.f64 -2 (/.f64 c b)) (*.f64 2 (/.f64 b a)))","(fma.f64 -2 (/.f64 c b) (/.f64 (*.f64 2 b) a))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 (/.f64 c b) -2 (fma.f64 2 (/.f64 b a) (/.f64 (*.f64 -2 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -2 (/.f64 c b) (fma.f64 (/.f64 b a) 2 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (/.f64 (*.f64 -2 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 2 (/.f64 b a))","(/.f64 (*.f64 2 b) a)","(+.f64 (*.f64 -2 (/.f64 c b)) (*.f64 2 (/.f64 b a)))","(fma.f64 -2 (/.f64 c b) (/.f64 (*.f64 2 b) a))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 (/.f64 c b) -2 (fma.f64 2 (/.f64 b a) (/.f64 (*.f64 -2 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -2 (/.f64 c b) (fma.f64 (/.f64 b a) 2 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (/.f64 (*.f64 -2 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 2 (/.f64 c b))","(/.f64 (*.f64 2 c) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 2 (/.f64 c b)))","(*.f64 2 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 2 (/.f64 c b)) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 2 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (/.f64 (*.f64 4 (*.f64 (pow.f64 c 3) (*.f64 a a))) (pow.f64 b 5)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 2 (/.f64 c b)) (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(+.f64 (fma.f64 2 (fma.f64 (*.f64 (*.f64 c c) a) (pow.f64 b (neg.f64 3)) (/.f64 c b)) (/.f64 (*.f64 4 (*.f64 (pow.f64 c 3) (*.f64 a a))) (pow.f64 b 5))) (/.f64 (*.f64 1/2 (fma.f64 (pow.f64 (*.f64 c a) 4) 16 (*.f64 (*.f64 -2 -2) (pow.f64 (*.f64 c a) 4)))) (*.f64 a (pow.f64 b 7))))","(*.f64 2 (/.f64 b a))","(/.f64 (*.f64 2 b) a)","(+.f64 (*.f64 -2 (/.f64 c b)) (*.f64 2 (/.f64 b a)))","(fma.f64 -2 (/.f64 c b) (/.f64 (*.f64 2 b) a))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 (/.f64 c b) -2 (fma.f64 2 (/.f64 b a) (/.f64 (*.f64 -2 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -2 (/.f64 c b)) (+.f64 (*.f64 2 (/.f64 b a)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -2 (/.f64 c b) (fma.f64 (/.f64 b a) 2 (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (/.f64 (*.f64 -2 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))"]],"time":60.72607421875,"type":"simplify"},{"compiler":[[6527,4183]],"time":72.802978515625,"type":"eval"},{"alts":[["(neg.f64 (/.f64 b a))","fresh",42.696244571949826],["(/.f64 (*.f64 (/.f64 1 a) (+.f64 b b)) -2)","fresh",42.778275821949826],["(*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))","fresh",40.95201481170871],["(neg.f64 (/.f64 c b))","fresh",40.88560856170871],["(pow.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 3) 1/3)","fresh",57.163680946888654],["(/.f64 (*.f64 (fma.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) b) -1/2) a)","fresh",34.92166154994512],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))) -1/2) a)","done",34.0383203873389],["(/.f64 (/.f64 (+.f64 b (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 3))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","fresh",34.50202800128582],["(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","fresh",42.941584063377846],["(/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 a (cbrt.f64 4)) (cbrt.f64 -2)))","fresh",34.17505035430322],["(/.f64 (*.f64 (+.f64 b (sqrt.f64 (pow.f64 b 2))) -1/2) a)","fresh",50.416469274163745],["(/.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a) (/.f64 b a)) -2)","fresh",34.93096725408431],["(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","fresh",41.55258447210364]],"compiler":[[7,5],[12,9],[14,12],[7,5],[22,16],[28,16],[22,16],[25,19],[26,22],[22,16],[13,10],[30,19],[17,10]],"count":[[285,13]],"kept":[{"done":[1,1],"fresh":[12,10],"new":[271,2],"picked":[1,0]}],"min-error":[4.913568788190544],"time":68.35009765625,"type":"prune"},{"accuracy":[9.177455950494],"baseline":[34.01243765869663],"branch":[["a",30.868731818928236,3],["b",9.177455950494,3],["c",28.29951163784945,7],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",13.415129634164018,5]],"compiler":[[4,3],[4,3],[4,3],[20,14],[402,248]],"count":[[24,3]],"inputs":[["(/.f64 (*.f64 (/.f64 1 a) (+.f64 b b)) -2)","(/.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) a) (/.f64 b a)) -2)","(*.f64 2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2))))","(/.f64 (/.f64 (+.f64 b (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) 3))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 1/4) b) (*.f64 a (cbrt.f64 -2)))) (*.f64 -2 (/.f64 (*.f64 c (cbrt.f64 1/4)) (*.f64 b (cbrt.f64 -2)))))","(/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (*.f64 (*.f64 a (cbrt.f64 4)) (cbrt.f64 -2)))","(/.f64 (/.f64 (+.f64 b b) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 -2))","(/.f64 (*.f64 (/.f64 1 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))))) -2)","(/.f64 (*.f64 (fma.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) b) -1/2) a)","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 -4 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b)))) -1/2) a)","(-.f64 (neg.f64 (/.f64 c b)) (*.f64 (pow.f64 (/.f64 c b) 2) (/.f64 a b)))","(/.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 -2)) (/.f64 a (cbrt.f64 1/4)))","(-.f64 (/.f64 c b) (/.f64 b a))","(neg.f64 (/.f64 b a))","(*.f64 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 a)) (cbrt.f64 (/.f64 -1/8 (*.f64 a a))))","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (pow.f64 b 2))) -1/2) a)","(/.f64 (*.f64 -1/2 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 a))","(neg.f64 (/.f64 c b))","(pow.f64 (pow.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (/.f64 -1/2 a)) 3) 1/3)","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 (*.f64 a c) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 b b)))) -1/2) a)","(/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) -1/2) a)","(/.f64 (*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -4 (*.f64 a c))))) -1/2) a)","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"link":["."],"name":["quadm (p42, negative)"],"oracle":[63.6945076931368],"outputs":[["(neg.f64 (/.f64 c b))","(/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) -1/2) a)","(neg.f64 (/.f64 b a))"]],"time":121.81884765625,"times":[["a",21.469970703125],["b",21.72802734375],["c",49.113037109375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",22.294921875]],"type":"regimes"},{"bstep":[[2.329454310736128e+91,1.8504212049992524e+92,27.393798828125],[-6.127554384708505e-102,-6.631186446250369e-112,35.47802734375]],"compiler":[[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[29,19],[8,6],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":63.10009765625,"type":"bsearch"},{"compiler":[[44,28]],"inputs":[["(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (neg.f64 (/.f64 c b)) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) -1/2) a) (neg.f64 (/.f64 b a))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (neg.f64 (/.f64 c b)) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (*.f64 (fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 c -4) a))) b) -1/2) a) (neg.f64 (/.f64 b a))))","(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (neg.f64 (/.f64 c b)) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (*.f64 (+.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b))) b) (/.f64 -1/2 a)) (neg.f64 (/.f64 b a))))"]],"stop":[["fuel",1]],"time":23.79296875,"type":"simplify"},{"time":0.031005859375,"type":"soundness"},{"compiler":[[44,28]],"remove-preprocessing":[[]],"time":16.049072265625,"type":"end"}]