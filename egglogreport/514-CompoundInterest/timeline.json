[{"compiler":[[18,12]],"method":["search"],"sampling":[[12,0.40829239098820835,0.406828977400437,0.18487863161135465],[11,0.386341187171638,0.4409752944484353,0.17268351837992668],[10,0.3336582980118692,0.542438636533916,0.12390306545421481],[9,0.2926827175542712,0.5970727438107133,0.11024453863501549],[8,0.19512181170284748,0.7648775018751621,0.040000686421990395],[7,0.12487795948982239,0.8429262265563011,0.032195813953876495],[6,0.0,0.9990236759185791,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":151.02099609375,"type":"analyze"},{"outcomes":[["body",512,"invalid",46.338623046875,225],["body",1024,"invalid",67.321044921875,176],["body",512,"valid",206.041748046875,1200],["body",256,"invalid",78.014404296875,1153],["body",2048,"invalid",16.182861328125,18],["body",4096,"valid",59.15283203125,34],["body",1024,"valid",1024.695556640625,2715],["body",2048,"valid",1870.8154296875,1869],["body",256,"valid",167.699462890625,2438]],"time":3545.89208984375,"type":"sample"},{"compiler":[[17,11]],"inputs":[["0","1"],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 n i)) i) 1) (/.f64 n i)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","(*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 n i) n) n) -100) (/.f64 n i))","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 n i)) i) 1) (/.f64 n i)))","(*.f64 (fma.f64 (pow.f64 (/.f64 (+.f64 i n) i) i) 100 -100) (/.f64 i n))"]],"symmetry":[[]],"time":63.321044921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","(*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))"]],"time":21.259765625,"type":"simplify"},{"compiler":[[31,19]],"time":0.459228515625,"type":"eval"},{"alts":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","next",49.622052959550196],["(*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))","fresh",49.63894533781316]],"compiler":[[17,11],[16,10],[17,11],[16,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[49.602521709550196],"time":2.867919921875,"type":"prune"},{"compiler":[[58,29]],"locations":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))",0.0390625,true],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)",1.450017678136082,true],["(pow.f64 (+.f64 1 (/.f64 i n)) n)",5.328075444795735,true],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))",10.628847080745008,true]],"time":12.10693359375,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","n","-inf",0.362060546875],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","n","inf",0.406982421875],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","n","0",0.61181640625],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","i","-inf",0.580078125],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","i","inf",1.02294921875],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","i","0",0.409912109375],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","n","-inf",0.2890625],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","n","inf",0.2880859375],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","n","0",0.886962890625],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","i","-inf",0.367919921875],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","i","inf",0.3349609375],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","i","0",0.260009765625],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","n","-inf",0.30615234375],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","n","inf",0.30810546875],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","n","0",0.31298828125],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","i","-inf",0.45703125],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","i","inf",0.444091796875],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","i","0",0.218994140625],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","n","-inf",0.85009765625],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","n","inf",1.283935546875],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","n","0",2.010986328125],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","i","-inf",1.56689453125],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","i","inf",1.595947265625],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","i","0",1.12109375]],"time":16.904052734375,"type":"series"},{"count":[[4,279]],"inputs":[["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","(pow.f64 (+.f64 1 (/.f64 i n)) n)","(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 n i)) (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 0) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)) (*.f64 (/.f64 n i) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 n i) -1) (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) (*.f64 0 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)) (*.f64 (neg.f64 (/.f64 n i)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (/.f64 i n))) (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 n i)) (/.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) (/.f64 i n)) (/.f64 (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 i n)) (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 i n)) (pow.f64 (/.f64 i n) 2)) (/.f64 (/.f64 i n) (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 n i)) (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (pow.f64 (/.f64 i n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (/.f64 n i))) (pow.f64 (cbrt.f64 (/.f64 i n)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) i) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2) (pow.f64 (/.f64 i n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n i) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) (/.f64 n i)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) n) (/.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (cbrt.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2) (pow.f64 (/.f64 i n) 2))) (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 n i)) (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 i n) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (/.f64 1 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 1 (*.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))) (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 n i)) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) i) n)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 1 n)) (*.f64 (/.f64 i n) (/.f64 1 i))) (/.f64 (/.f64 i n) n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (*.f64 (/.f64 i n) (cbrt.f64 (/.f64 n i)))) (pow.f64 (cbrt.f64 (/.f64 i n)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 1 n)) (*.f64 (neg.f64 (/.f64 i n)) (/.f64 1 i))) (*.f64 (neg.f64 (/.f64 i n)) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 i n)) (neg.f64 (/.f64 i n))) (*.f64 (neg.f64 (/.f64 i n)) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (*.f64 (neg.f64 (/.f64 i n)) (cbrt.f64 (/.f64 n i)))) (*.f64 (neg.f64 (/.f64 i n)) (cbrt.f64 (pow.f64 (/.f64 i n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) i) (neg.f64 (/.f64 i n))) (*.f64 (/.f64 1 n) -1)) (*.f64 (/.f64 1 n) (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) i) (/.f64 1 n)) (*.f64 (/.f64 1 n) (/.f64 1 i))) (pow.f64 n -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) i) (/.f64 i n)) (/.f64 1 n)) (/.f64 (/.f64 i n) n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) i) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (*.f64 (/.f64 1 n) (cbrt.f64 (/.f64 n i)))) (*.f64 (/.f64 1 n) (cbrt.f64 (pow.f64 (/.f64 i n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (cbrt.f64 (/.f64 n i))) (neg.f64 (/.f64 i n))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 i n) 2)) -1)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 i n) 2)) (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (cbrt.f64 (/.f64 n i))) (/.f64 1 n)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 i n) 2)) (/.f64 1 i))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 i n) 2)) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (cbrt.f64 (/.f64 n i))) (/.f64 i n)) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (pow.f64 (cbrt.f64 (/.f64 i n)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (cbrt.f64 (/.f64 n i))) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 i n) 2)) (cbrt.f64 (/.f64 n i)))) (cbrt.f64 (pow.f64 (/.f64 i n) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (neg.f64 (/.f64 i n))) (neg.f64 (/.f64 i n))) (*.f64 (/.f64 i n) (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 i n) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))) (neg.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) i)) (/.f64 -1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3)) (neg.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))) (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (neg.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (/.f64 n i))) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 i n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 i n) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (pow.f64 (/.f64 i n) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (*.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) i) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) i) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2))) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2))) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 n i) (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3))) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 i) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)))) (cbrt.f64 (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) (/.f64 n i))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3)) (/.f64 n i)) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) n)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2) (pow.f64 (/.f64 i n) 2)))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2) (pow.f64 (/.f64 i n) 2)))) (cbrt.f64 (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2))) (cbrt.f64 (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) i) 1) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 i n) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) 1) (pow.f64 (/.f64 i n) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (/.f64 n i))) 1) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 (*.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))) (/.f64 i n)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (neg.f64 (/.f64 i n))) (/.f64 i n)) (pow.f64 (/.f64 i n) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (/.f64 n i)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 i n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 n i))) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 n i)) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3)) (neg.f64 (/.f64 n i))) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 n i)) 1) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 i n) 2))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)) 2)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 n i)) (/.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (/.f64 n i)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) i) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) n) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 i) (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) n) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)) (neg.f64 (/.f64 n i)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 0) (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 0) (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n))) (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (*.f64 0 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (+.f64 i n) n) n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (-.f64 0 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 0))) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 i n) n) n)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 0) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (*.f64 0 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) (neg.f64 (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) 1) (/.f64 (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3)) (/.f64 1 (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (-.f64 1 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1))) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n))))) (+.f64 -1 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (+.f64 1 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)))) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3)) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2)) (cbrt.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1)) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 2))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3)) 1) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) 3) -1) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))) (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 6) (+.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))) (*.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (+.f64 1 (-.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 i n) n) n)) -1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -1 (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 1 (pow.f64 (/.f64 (+.f64 i n) n) n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) (*.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 0) (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 100 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i))) (*.f64 100 (neg.f64 (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) (*.f64 0 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))) (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) (/.f64 n i)) 100) (*.f64 (neg.f64 (/.f64 n i)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 i) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1000000 (/.f64 i n))) (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (pow.f64 (/.f64 i n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) (cbrt.f64 100)) (cbrt.f64 10000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (*.f64 (cbrt.f64 10000) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) 100) (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (cbrt.f64 (/.f64 1000000 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 10000) (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) (cbrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n) (/.f64 100 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 10000) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i))) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (cbrt.f64 (/.f64 n i))) (pow.f64 (cbrt.f64 (/.f64 i n)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 2)) (cbrt.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) (sqrt.f64 100)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 100 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n i) (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) (*.f64 100 (cbrt.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (neg.f64 (/.f64 i n))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (/.f64 i n)) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) n)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1)) (*.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i)) (/.f64 -1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 i n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) (neg.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (cbrt.f64 (/.f64 n i))) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) -1) (neg.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 2)) (cbrt.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1000000 (/.f64 i n))) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 100 i) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) i)) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (*.f64 (/.f64 i n) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1))) (pow.f64 (/.f64 i n) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (/.f64 n i)))) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3)) (/.f64 100 (/.f64 i n))) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) 1) (neg.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (cbrt.f64 (/.f64 n i))) 1) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) 1) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 2))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) 100)) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 n i)) 2)) 100)) (cbrt.f64 (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) i) 100) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 i n) (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1)) 100) (pow.f64 (/.f64 i n) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (cbrt.f64 (/.f64 n i))) 100) (cbrt.f64 (pow.f64 (/.f64 i n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 (neg.f64 (/.f64 i n)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) (/.f64 (/.f64 i n) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (cbrt.f64 (/.f64 n i)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 i n) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 100 (/.f64 i n))) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 n i))) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1)) (/.f64 n i)) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) 3) -1) (/.f64 n i)) 100) (+.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) (+.f64 n n)) (pow.f64 (/.f64 (+.f64 i n) n) n))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (neg.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 100 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 100 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 100 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 i n) n) n)) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i)) 3))))))"]],"rules":[["egg-rr",79],["egg-rr",61],["egg-rr",32],["egg-rr",107]],"time":52.2490234375,"type":"rewrite"},{"count":[[375,440]],"inputs":[["n","(+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (+.f64 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3)))))","(/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (+.f64 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4)))))))) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (*.f64 n i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i)))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i)) (*.f64 -1/2 (*.f64 i (exp.f64 i))))))","1","(+.f64 1 i)","(+.f64 1 (+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 1 (+.f64 i (+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))))","1","(+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)))))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))))","i","(+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (+.f64 (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 4)) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))) 1)","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))) 1)","(*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(+.f64 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 2))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)) (+.f64 (*.f64 1/24 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4)) (*.f64 1/2 (/.f64 1 (pow.f64 i 2)))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(-.f64 (exp.f64 i) 1)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))) 1)","(-.f64 (exp.f64 i) 1)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (pow.f64 n 3)))))) 1)","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))"]],"method":["egg-herbie"],"outputs":[["n","(+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n)))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 n (*.f64 n (+.f64 (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))))))","(+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)","(/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (*.f64 i i)) (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (*.f64 i i)) (+.f64 (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) i) (/.f64 (*.f64 n (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (+.f64 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4)))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (*.f64 i i)) (+.f64 (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) i) (+.f64 (/.f64 (*.f64 n (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (/.f64 (*.f64 n (*.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4)))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) (pow.f64 i 4)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)","(/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (+.f64 (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) i) (/.f64 (*.f64 n (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) (pow.f64 i 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3)))))","(+.f64 (neg.f64 (/.f64 (*.f64 n (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (+.f64 (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) i) (/.f64 (*.f64 n (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) (pow.f64 i 3)))))","(/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)","(/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i)","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(fma.f64 (pow.f64 n 3) (+.f64 (pow.f64 i (neg.f64 2)) (/.f64 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2)) i)) (/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (pow.f64 i (neg.f64 2)) (/.f64 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2)) i)) (/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i)) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (neg.f64 (/.f64 (log.f64 n) (*.f64 i i))) (fma.f64 1/6 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (+.f64 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4)))))))) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3))))))))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (pow.f64 i (neg.f64 2)) (/.f64 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2)) i)) (/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i)) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) (pow.f64 i 3)) (fma.f64 1/2 (pow.f64 i (neg.f64 3)) (/.f64 1/3 (pow.f64 i 4)))))) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (neg.f64 (/.f64 (log.f64 n) (*.f64 i i))) (fma.f64 1/6 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 n (expm1.f64 i)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 (*.f64 n (expm1.f64 i)) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","(+.f64 (/.f64 (*.f64 (fma.f64 -1/48 (pow.f64 i 6) (fma.f64 -1/6 (pow.f64 i 5) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (*.f64 n n) i)) (+.f64 (/.f64 (*.f64 n (expm1.f64 i)) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 n (expm1.f64 i)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (*.f64 n i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i)))))","(+.f64 (/.f64 (*.f64 n (expm1.f64 i)) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i)) (*.f64 -1/2 (*.f64 i (exp.f64 i))))))","(+.f64 (/.f64 (*.f64 n (expm1.f64 i)) i) (+.f64 (neg.f64 (/.f64 (*.f64 (exp.f64 i) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (*.f64 n n) i))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","1","(+.f64 1 i)","(+.f64 1 (+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 1 (+.f64 i (*.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n)))))","(+.f64 1 (+.f64 i (+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 (+.f64 1 i) (fma.f64 (pow.f64 i 3) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n)) (*.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n)))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))","(pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))","(+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) i) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))","(+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) i) (+.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))))","(+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) i) (+.f64 (/.f64 (*.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4)))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (pow.f64 i 3)) (+.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i)))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))","(pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))","(+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) i) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))","(+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) i) (+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) i) (+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))))","1","(+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(+.f64 1 (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (+.f64 1 (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (+.f64 1 (fma.f64 (pow.f64 n 3) (-.f64 (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 3) (+.f64 (neg.f64 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (/.f64 1/2 (*.f64 i i))) (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))))))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n) (exp.f64 i)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)))))","(+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n) (exp.f64 i)) (/.f64 (*.f64 (fma.f64 -1/48 (pow.f64 i 6) (fma.f64 -1/6 (pow.f64 i 5) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3))))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n) (exp.f64 i)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))))","(+.f64 (neg.f64 (/.f64 (*.f64 (exp.f64 i) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4))))) (pow.f64 n 3))) (+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n) (exp.f64 i))))","i","(+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))","(+.f64 i (*.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n))))","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))","(+.f64 i (fma.f64 (pow.f64 i 3) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n)) (*.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n)))))","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (+.f64 (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 4)) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 i (fma.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n)) (fma.f64 (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n))) (pow.f64 i 4) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))))))","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)","(expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) 1)","(+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) i) (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))) 1)","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) i) (+.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i)))) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))) 1)","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) i) (+.f64 (/.f64 (*.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4)))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (pow.f64 i 3)) (+.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i))))) -1)","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)","(expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) 1)","(+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) i) (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) 1)","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) i) (+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))) 1)","(+.f64 (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (*.f64 n n) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) i) (+.f64 (/.f64 (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) -1)","(*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))","(*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (fma.f64 (pow.f64 n 3) (-.f64 (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 3) (+.f64 (neg.f64 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (/.f64 1/2 (*.f64 i i))) (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)))))","(+.f64 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 2))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)) (+.f64 (*.f64 1/24 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4)) (*.f64 1/2 (/.f64 1 (pow.f64 i 2)))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(fma.f64 (pow.f64 n 4) (fma.f64 1/3 (pow.f64 i (neg.f64 3)) (fma.f64 -1/2 (/.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) (*.f64 i i)) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) i) (fma.f64 1/24 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 4) (/.f64 1/2 (*.f64 i i)))))) (fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (fma.f64 (pow.f64 n 3) (-.f64 (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 3) (+.f64 (neg.f64 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (/.f64 1/2 (*.f64 i i))) (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))))))","(-.f64 (exp.f64 i) 1)","(expm1.f64 i)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n)) (expm1.f64 i))","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n)) (expm1.f64 i)))","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))) 1)","(+.f64 (/.f64 (*.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)) (+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n)) (expm1.f64 i))))","(-.f64 (exp.f64 i) 1)","(expm1.f64 i)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n)) (expm1.f64 i))","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n)) (expm1.f64 i)))","(-.f64 (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (pow.f64 n 3)))))) 1)","(+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n n)) (-.f64 (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 i i) (exp.f64 i)) n) (exp.f64 i)) (neg.f64 (/.f64 (*.f64 (exp.f64 i) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4))))) (pow.f64 n 3)))) 1))","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n)))))))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(fma.f64 100 (*.f64 (*.f64 n (pow.f64 i 3)) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n)))) (fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (*.f64 i i)) (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(fma.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (*.f64 i i)) (*.f64 100 (+.f64 (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) i) (/.f64 (*.f64 n (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(fma.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))) (*.f64 i i)) (fma.f64 100 (/.f64 (*.f64 n (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (*.f64 100 (+.f64 (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) i) (/.f64 (*.f64 n (*.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4)))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n)))))) (pow.f64 i 4))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) i)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(fma.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (*.f64 100 (+.f64 (/.f64 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) i) (/.f64 (*.f64 n (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) (pow.f64 i 3)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(fma.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (*.f64 i i)) (fma.f64 100 (/.f64 (*.f64 n (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))))) (pow.f64 i 3)) (fma.f64 -100 (/.f64 (*.f64 n (*.f64 (pow.f64 (exp.f64 n) (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4)) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) i))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(*.f64 100 (/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(*.f64 100 (fma.f64 (pow.f64 n 3) (+.f64 (pow.f64 i (neg.f64 2)) (/.f64 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2)) i)) (/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i)))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (pow.f64 i (neg.f64 2)) (/.f64 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2)) i))) (*.f64 100 (+.f64 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (neg.f64 (/.f64 (log.f64 n) (*.f64 i i))) (fma.f64 1/6 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))) (/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (pow.f64 i (neg.f64 2)) (/.f64 (*.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2)) i))) (fma.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (neg.f64 (/.f64 (log.f64 n) (*.f64 i i))) (fma.f64 1/6 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (*.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (+.f64 (neg.f64 (log.f64 n)) (log.f64 i)) (pow.f64 i 3)) (fma.f64 1/2 (pow.f64 i (neg.f64 3)) (/.f64 1/3 (pow.f64 i 4))))))) (/.f64 (*.f64 (*.f64 n n) (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)) (/.f64 (*.f64 n (expm1.f64 i)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (/.f64 (*.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (*.f64 n n) i)) (*.f64 100 (+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)) (/.f64 (*.f64 n (expm1.f64 i)) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)) (/.f64 (*.f64 n (expm1.f64 i)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 -100 (/.f64 (*.f64 (exp.f64 i) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (*.f64 n n) i)) (*.f64 100 (+.f64 (/.f64 (*.f64 (fma.f64 1/8 (pow.f64 i 4) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)) (/.f64 (*.f64 n (expm1.f64 i)) i)))))"]],"time":309.97705078125,"type":"simplify"},{"compiler":[[15063,7572]],"time":126.093017578125,"type":"eval"},{"alts":[["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)","fresh",55.46860887048435],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","next",20.596836220153023],["(/.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n)) i)","fresh",49.379290564076335],["(*.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) n)","fresh",49.375384314076335],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","fresh",20.94449245066699],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) i)","fresh",55.10582975046196],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (/.f64 i n)))","fresh",54.2500801665267],["(*.f64 100 (/.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) (/.f64 i n)))","fresh",55.22209721761883],["(*.f64 100 (+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n)))))))))","fresh",33.489959245023456],["(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","fresh",27.618419385317296]],"compiler":[[19,14],[10,7],[17,11],[16,10],[10,7],[21,16],[21,16],[16,11],[54,38],[15,11],[19,14],[10,7],[17,11],[16,10],[10,7],[21,16],[21,16],[16,11],[54,38],[15,11]],"count":[[442,10]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[440,10],"picked":[1,0]}],"min-error":[0.22125556503665061],"time":124.1259765625,"type":"prune"},{"compiler":[[25,8]],"locations":[["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))",0.04296875,true],["(/.f64 (*.f64 n (expm1.f64 i)) i)",8.833279408223568,true]],"time":4.73486328125,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","i","-inf",0.302001953125],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","i","inf",0.31494140625],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","i","0",0.27197265625],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","n","-inf",1.43896484375],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","n","inf",0.485107421875],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","n","0",0.27587890625],["(/.f64 (*.f64 n (expm1.f64 i)) i)","i","-inf",0.676025390625],["(/.f64 (*.f64 n (expm1.f64 i)) i)","i","inf",0.531005859375],["(/.f64 (*.f64 n (expm1.f64 i)) i)","i","0",0.323974609375],["(/.f64 (*.f64 n (expm1.f64 i)) i)","n","-inf",0.305908203125],["(/.f64 (*.f64 n (expm1.f64 i)) i)","n","inf",0.43408203125],["(/.f64 (*.f64 n (expm1.f64 i)) i)","n","0",0.614990234375]],"time":6.14208984375,"type":"series"},{"count":[[2,124]],"inputs":[["(/.f64 (*.f64 n (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) (*.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 0) (*.f64 (expm1.f64 i) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) (*.f64 0 (*.f64 (expm1.f64 i) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (expm1.f64 i) (/.f64 n i))) (*.f64 (expm1.f64 i) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 i)) (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))) (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 n) (expm1.f64 i)) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n (cbrt.f64 i)) (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (/.f64 (expm1.f64 i) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 i) (cbrt.f64 i)) (/.f64 n (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 i) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (expm1.f64 i))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 n (expm1.f64 i)) 2)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (expm1.f64 i)) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 n (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 i)) (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (expm1.f64 i) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i))) (/.f64 n (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n (cbrt.f64 (*.f64 i i))) (/.f64 (expm1.f64 i) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 n (expm1.f64 i)) 2)) i) (cbrt.f64 (*.f64 n (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n i) (expm1.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 i) i) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 i) (*.f64 (neg.f64 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 i) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 i 3)) -1) (/.f64 n i)) (fma.f64 (exp.f64 i) (exp.f64 i) (+.f64 (exp.f64 i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 n) (expm1.f64 i)) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (expm1.f64 i)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 i)) (*.f64 n (expm1.f64 i))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (expm1.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 i) (cbrt.f64 i)) n) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) (cbrt.f64 (*.f64 (neg.f64 n) (expm1.f64 i)))) (cbrt.f64 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) (cbrt.f64 (*.f64 n (expm1.f64 i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))) (cbrt.f64 (pow.f64 (*.f64 n (expm1.f64 i)) 2))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 i) (/.f64 n (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 n) (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2))) (cbrt.f64 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 n (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 n) (expm1.f64 i)) (cbrt.f64 i)) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 n (expm1.f64 i)) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i))) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (expm1.f64 i)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) (*.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 0) (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) (*.f64 0 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))) (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (*.f64 (cbrt.f64 10000) (*.f64 (expm1.f64 i) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1000000 i)) (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -100 (*.f64 n (expm1.f64 i))) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) 100) (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -100 (*.f64 n (expm1.f64 i))) i) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 10000) (*.f64 (expm1.f64 i) (/.f64 n i))) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 (/.f64 1000000 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 2)) (cbrt.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (*.f64 (expm1.f64 i) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (*.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i)))) (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) (cbrt.f64 100)) (cbrt.f64 10000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) (sqrt.f64 100)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 (*.f64 100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) (*.f64 100 (cbrt.f64 (*.f64 (expm1.f64 i) (/.f64 n i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 10000) (*.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) (cbrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 i) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -100 (*.f64 n (expm1.f64 i))) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -100 (*.f64 n (expm1.f64 i))) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1000000 i)) (*.f64 n (expm1.f64 i))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 2)) (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) 100) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 n) (expm1.f64 i))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) 100)) (cbrt.f64 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 n (expm1.f64 i))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (expm1.f64 i) (/.f64 n i)) 2)) 100)) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 2))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -100 (*.f64 n (expm1.f64 i))) 1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -100 (*.f64 n (expm1.f64 i))) (cbrt.f64 i)) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) (cbrt.f64 i)) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 n) (expm1.f64 i)) (/.f64 (neg.f64 i) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (expm1.f64 i)) (/.f64 i 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i))) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -100 (*.f64 n (expm1.f64 i))) i))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) (neg.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i)) 3))))))"]],"rules":[["egg-rr",64],["egg-rr",60]],"time":26.516845703125,"type":"rewrite"},{"count":[[172,140]],"inputs":[["(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","n","(+.f64 n (*.f64 1/2 (*.f64 n i)))","(+.f64 (*.f64 1/6 (*.f64 n (pow.f64 i 2))) (+.f64 n (*.f64 1/2 (*.f64 n i))))","(+.f64 (*.f64 1/6 (*.f64 n (pow.f64 i 2))) (+.f64 n (+.f64 (*.f64 1/2 (*.f64 n i)) (*.f64 1/24 (*.f64 n (pow.f64 i 3))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 n)","(+.f64 (*.f64 50 (*.f64 n i)) (*.f64 100 n))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n)))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","n","(+.f64 n (*.f64 1/2 (*.f64 n i)))","(fma.f64 (*.f64 1/2 n) i n)","(+.f64 (*.f64 1/6 (*.f64 n (pow.f64 i 2))) (+.f64 n (*.f64 1/2 (*.f64 n i))))","(fma.f64 1/6 (*.f64 n (*.f64 i i)) (fma.f64 (*.f64 1/2 n) i n))","(+.f64 (*.f64 1/6 (*.f64 n (pow.f64 i 2))) (+.f64 n (+.f64 (*.f64 1/2 (*.f64 n i)) (*.f64 1/24 (*.f64 n (pow.f64 i 3))))))","(+.f64 (fma.f64 1/6 (*.f64 n (*.f64 i i)) n) (fma.f64 (*.f64 1/24 n) (pow.f64 i 3) (*.f64 1/2 (*.f64 n i))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 (*.f64 n (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 n)","(+.f64 (*.f64 50 (*.f64 n i)) (*.f64 100 n))","(fma.f64 50 (*.f64 n i) (*.f64 100 n))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n)))","(fma.f64 50 (*.f64 n i) (fma.f64 50/3 (*.f64 n (*.f64 i i)) (*.f64 100 n)))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n))))","(fma.f64 (*.f64 n i) 50 (fma.f64 (*.f64 25/6 n) (pow.f64 i 3) (fma.f64 50/3 (*.f64 n (*.f64 i i)) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)"]],"time":139.295166015625,"type":"simplify"},{"compiler":[[1928,824]],"time":18.844970703125,"type":"eval"},{"alts":[["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)","fresh",55.46860887048435],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","done",20.596836220153023],["(/.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n)) i)","fresh",49.379290564076335],["(*.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) n)","fresh",49.375384314076335],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","next",20.94449245066699],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) i)","fresh",55.10582975046196],["(*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))","fresh",20.964023720153023],["(*.f64 100 (/.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) (/.f64 i n)))","fresh",55.22209721761883],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (/.f64 i n)))","fresh",54.2500801665267],["(*.f64 100 (+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n)))))))))","fresh",33.489959245023456],["(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","fresh",27.618419385317296]],"compiler":[[19,14],[10,7],[17,11],[16,10],[10,7],[21,16],[10,7],[16,11],[21,16],[54,38],[15,11],[19,14],[17,11],[16,10],[10,7],[21,16],[10,7],[16,11],[21,16],[54,38],[15,11]],"count":[[150,11]],"kept":[{"done":[0,0],"fresh":[9,9],"new":[140,1],"picked":[1,1]}],"min-error":[0.21734931503665061],"time":34.347900390625,"type":"prune"},{"compiler":[[25,10]],"locations":[["(*.f64 100 (*.f64 n (expm1.f64 i)))",0.09945090476030194,true],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)",9.170243031718146,true]],"time":5.06005859375,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 100 (*.f64 n (expm1.f64 i)))","i","-inf",0.404052734375],["(*.f64 100 (*.f64 n (expm1.f64 i)))","i","inf",0.40185546875],["(*.f64 100 (*.f64 n (expm1.f64 i)))","i","0",0.24609375],["(*.f64 100 (*.f64 n (expm1.f64 i)))","n","-inf",0.274169921875],["(*.f64 100 (*.f64 n (expm1.f64 i)))","n","inf",0.43701171875],["(*.f64 100 (*.f64 n (expm1.f64 i)))","n","0",0.319091796875],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","i","-inf",0.169921875],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","i","inf",0.169921875],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","i","0",0.18701171875],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","n","-inf",0.171875],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","n","inf",0.19189453125],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","n","0",0.214111328125]],"time":3.342041015625,"type":"series"},{"count":[[2,117]],"inputs":[["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (*.f64 n (expm1.f64 i)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 0) (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) (*.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))) (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) (*.f64 0 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 i)) (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 2)) (cbrt.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 n) (/.f64 (expm1.f64 i) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 2)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1000000 i)) (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 100 n) (cbrt.f64 i)) (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) (cbrt.f64 (/.f64 1000000 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 (*.f64 100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 i)) (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 i) (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 2)) i) (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (expm1.f64 i)) i) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 i) i) (*.f64 100 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i))) (/.f64 (*.f64 100 n) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 (/.f64 1000000 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1000000 (*.f64 i i))) (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 i) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (expm1.f64 i)) (/.f64 i 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 n) (expm1.f64 i)) (/.f64 (neg.f64 i) 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 n (expm1.f64 i)) (sqrt.f64 100)) (/.f64 i (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 n) (expm1.f64 i)) (neg.f64 (/.f64 i 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1000000 i)) (*.f64 n (expm1.f64 i))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 100 n) (cbrt.f64 i)) (expm1.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 2)) (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 2)) (cbrt.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)))) (cbrt.f64 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 2))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 i)) 100) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 i)) (*.f64 (*.f64 100 n) (expm1.f64 i))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 2))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 2))) (cbrt.f64 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (/.f64 1000000 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) (cbrt.f64 i)) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (cbrt.f64 i))) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 0) (*.f64 (*.f64 100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (*.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 100 n) (exp.f64 i)) (*.f64 (*.f64 100 n) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 100 n) (expm1.f64 i))) (*.f64 (*.f64 100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) (*.f64 0 (*.f64 (*.f64 100 n) (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 i) (*.f64 100 n)) (*.f64 -100 n))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (expm1.f64 i))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 n (expm1.f64 i)) 2)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (*.f64 (cbrt.f64 10000) (*.f64 n (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 n) (expm1.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 i) (*.f64 100 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 2)) (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 100 n) (cbrt.f64 (expm1.f64 i))) (cbrt.f64 (pow.f64 (expm1.f64 i) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (cbrt.f64 (*.f64 n (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 n (expm1.f64 i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (expm1.f64 i)) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 n (expm1.f64 i)) (sqrt.f64 100)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 100)) (cbrt.f64 10000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (*.f64 100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (*.f64 (*.f64 n (expm1.f64 i)) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (*.f64 n (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (expm1.f64 i)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 n (expm1.f64 i)) 2)) 100) (cbrt.f64 (*.f64 n (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (expm1.f64 i) 2)) (*.f64 (*.f64 100 n) (cbrt.f64 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 10000) (*.f64 n (expm1.f64 i))) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 10000) (*.f64 (*.f64 n (expm1.f64 i)) (cbrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 n (expm1.f64 i)) 2)) (*.f64 100 (cbrt.f64 (*.f64 n (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -100 n) (neg.f64 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 n) (expm1.f64 i)) -100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -100 (*.f64 (neg.f64 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) (+.f64 (exp.f64 (*.f64 i 3)) -1)) (fma.f64 (exp.f64 i) (exp.f64 i) (+.f64 (exp.f64 i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 i 3)) -1) (*.f64 100 n)) (fma.f64 (exp.f64 i) (exp.f64 i) (+.f64 (exp.f64 i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (expm1.f64 i)) (/.f64 1 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 n (expm1.f64 i)) (sqrt.f64 100)) (/.f64 1 (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 100 n) (expm1.f64 i))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) 3))))))"]],"rules":[["egg-rr",49],["egg-rr",68]],"time":26.37109375,"type":"rewrite"},{"count":[[165,133]],"inputs":[["(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 n)","(+.f64 (*.f64 50 (*.f64 n i)) (*.f64 100 n))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n)))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n i))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (*.f64 100 (*.f64 n i)))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (*.f64 100 (*.f64 n i))))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 4))) (*.f64 100 (*.f64 n i)))))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 n)","(+.f64 (*.f64 50 (*.f64 n i)) (*.f64 100 n))","(fma.f64 50 (*.f64 n i) (*.f64 100 n))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n)))","(fma.f64 (*.f64 n i) 50 (fma.f64 50/3 (*.f64 n (*.f64 i i)) (*.f64 100 n)))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n))))","(fma.f64 50 (*.f64 n i) (fma.f64 (*.f64 25/6 n) (pow.f64 i 3) (fma.f64 50/3 (*.f64 n (*.f64 i i)) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i)","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n i))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (*.f64 100 (*.f64 n i)))","(fma.f64 50 (*.f64 n (*.f64 i i)) (*.f64 100 (*.f64 n i)))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (*.f64 100 (*.f64 n i))))","(fma.f64 50 (*.f64 n (*.f64 i i)) (fma.f64 (*.f64 50/3 n) (pow.f64 i 3) (*.f64 100 (*.f64 n i))))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 4))) (*.f64 100 (*.f64 n i)))))","(fma.f64 50 (*.f64 n (*.f64 i i)) (fma.f64 (*.f64 50/3 n) (pow.f64 i 3) (fma.f64 (*.f64 25/6 n) (pow.f64 i 4) (*.f64 100 (*.f64 n i)))))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 (*.f64 100 n) (expm1.f64 i))"]],"time":138.4248046875,"type":"simplify"},{"compiler":[[1819,954]],"time":19.5400390625,"type":"eval"},{"alts":[["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)","fresh",55.46860887048435],["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","done",20.596836220153023],["(/.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n)) i)","fresh",49.379290564076335],["(*.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) n)","fresh",49.375384314076335],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","next",20.95607539825186],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (/.f64 i n)))","fresh",54.2500801665267],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) i)","fresh",55.10582975046196],["(*.f64 100 (/.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) (/.f64 i n)))","fresh",55.22209721761883],["(*.f64 100 (+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n)))))))))","fresh",33.489959245023456],["(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","fresh",27.618419385317296]],"compiler":[[19,14],[10,7],[17,11],[16,10],[10,7],[21,16],[21,16],[16,11],[54,38],[15,11],[19,14],[17,11],[16,10],[10,7],[21,16],[21,16],[16,11],[54,38],[15,11]],"count":[[144,10]],"kept":[{"done":[1,1],"fresh":[9,8],"new":[133,1],"picked":[1,0]}],"min-error":[0.21734931503665061],"time":31.64599609375,"type":"prune"},{"compiler":[[25,13]],"locations":[["(*.f64 100 (expm1.f64 i))",0.00390625,true],["(*.f64 n (*.f64 100 (expm1.f64 i)))",0.12890625,true],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)",9.170243031718146,true]],"time":5.694091796875,"type":"localize"},{"count":[[3,60]],"series":[["(*.f64 100 (expm1.f64 i))","i","-inf",0.274169921875],["(*.f64 100 (expm1.f64 i))","i","inf",0.2900390625],["(*.f64 100 (expm1.f64 i))","i","0",0.218994140625],["(*.f64 n (*.f64 100 (expm1.f64 i)))","i","-inf",0.156982421875],["(*.f64 n (*.f64 100 (expm1.f64 i)))","i","inf",0.149169921875],["(*.f64 n (*.f64 100 (expm1.f64 i)))","i","0",0.172119140625],["(*.f64 n (*.f64 100 (expm1.f64 i)))","n","-inf",0.18310546875],["(*.f64 n (*.f64 100 (expm1.f64 i)))","n","inf",0.148193359375],["(*.f64 n (*.f64 100 (expm1.f64 i)))","n","0",0.153076171875],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","i","-inf",0.19091796875],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","i","inf",0.16796875],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","i","0",0.195068359375],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","n","-inf",0.1669921875],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","n","inf",0.171142578125],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","n","0",0.224853515625]],"time":3.06494140625,"type":"series"},{"count":[[3,149]],"inputs":[["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","(*.f64 n (*.f64 100 (expm1.f64 i)))","(*.f64 100 (expm1.f64 i))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) (*.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 0) (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) (*.f64 0 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))) (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 i)) (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (expm1.f64 i)) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 i)) (pow.f64 (cbrt.f64 i) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 2)) (cbrt.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n 100) (/.f64 (expm1.f64 i) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 2)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n (cbrt.f64 i)) (/.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (/.f64 (*.f64 100 (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n 100) (cbrt.f64 i)) (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 i)) (/.f64 n (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 n (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 i)) (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 (*.f64 i i))) (cbrt.f64 (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i))) (/.f64 (*.f64 n 100) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 2)) i) (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 (*.f64 i i))) (/.f64 n (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n (cbrt.f64 (*.f64 i i))) (/.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 i) (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 i) i) (*.f64 n 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 100 (expm1.f64 i)) i) n)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 i)) (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 i)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (expm1.f64 i)) (/.f64 i 100))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 n 100) (cbrt.f64 i)) (expm1.f64 i)) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 i)) (*.f64 n (*.f64 100 (expm1.f64 i)))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 2)) (cbrt.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)))) (cbrt.f64 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 2)) (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i))))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 i)) n) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 2))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (*.f64 100 (expm1.f64 i))) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 (*.f64 i i))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 2))) (cbrt.f64 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 2))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 n 100) (/.f64 (expm1.f64 i) (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (/.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 (expm1.f64 i)) (/.f64 n (cbrt.f64 (*.f64 i i)))) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) -1) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 i)) 1) (cbrt.f64 (*.f64 i i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) (cbrt.f64 i)) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (cbrt.f64 i))) (neg.f64 (cbrt.f64 (*.f64 i i))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) i) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 n i) (*.f64 100 (expm1.f64 i))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (*.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 0) (*.f64 n (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 n 100) (exp.f64 i)) (*.f64 (*.f64 n 100) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) (*.f64 0 (*.f64 n (*.f64 100 (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 n (*.f64 100 (expm1.f64 i)))) (*.f64 n (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 i) (*.f64 n 100)) (*.f64 -100 n))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 100 (expm1.f64 i))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 2)) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 n) (*.f64 (cbrt.f64 (*.f64 n n)) (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (*.f64 100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (expm1.f64 i)) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n 100) (expm1.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 i) (*.f64 n 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 2)) (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 n 100) (cbrt.f64 (expm1.f64 i))) (cbrt.f64 (pow.f64 (expm1.f64 i) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (cbrt.f64 (*.f64 100 (expm1.f64 i)))) (cbrt.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (expm1.f64 i)) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 n)) (cbrt.f64 (*.f64 n n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (*.f64 n (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 n (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n n)) (*.f64 (*.f64 100 (expm1.f64 i)) (cbrt.f64 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 n n)) (*.f64 100 (expm1.f64 i))) (cbrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (expm1.f64 i) 2)) (*.f64 (*.f64 n 100) (cbrt.f64 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 2)) (*.f64 n (cbrt.f64 (*.f64 100 (expm1.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 2)) n) (cbrt.f64 (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -100 (expm1.f64 i)) (neg.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 n) (*.f64 -100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -100 n) (neg.f64 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 n 100) (+.f64 (exp.f64 (*.f64 i 3)) -1)) (fma.f64 (exp.f64 i) (exp.f64 i) (+.f64 1 (exp.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 i 3)) -1) (*.f64 n 100)) (fma.f64 (exp.f64 i) (exp.f64 i) (+.f64 1 (exp.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (expm1.f64 i)) (/.f64 1 100))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (*.f64 100 (expm1.f64 i)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -100 n) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 100 (expm1.f64 i)) (*.f64 (*.f64 100 (expm1.f64 i)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 100 (expm1.f64 i)) 0) (*.f64 100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 100 (exp.f64 i)) -100)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 100 (expm1.f64 i)) (*.f64 0 (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 100 (expm1.f64 i))) (*.f64 100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 i) 100) -100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 100) (*.f64 (cbrt.f64 10000) (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 i) (cbrt.f64 100)) (cbrt.f64 10000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 i)) (*.f64 (cbrt.f64 (pow.f64 (expm1.f64 i) 2)) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (expm1.f64 i) 2)) 100) (cbrt.f64 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 10000) (expm1.f64 i)) (cbrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 10000) (*.f64 (expm1.f64 i) (cbrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (expm1.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 i) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 100 (expm1.f64 i))) (cbrt.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 2)) (cbrt.f64 (*.f64 100 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1000000 (expm1.f64 i))) (cbrt.f64 (pow.f64 (expm1.f64 i) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 i) (sqrt.f64 100)) (sqrt.f64 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 100) (*.f64 (expm1.f64 i) (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (expm1.f64 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -100 (expm1.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (expm1.f64 i) 2)) (cbrt.f64 (*.f64 1000000 (expm1.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (+.f64 (exp.f64 (*.f64 i 3)) -1)) (fma.f64 (exp.f64 i) (exp.f64 i) (+.f64 1 (exp.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 i 3)) -1) 100) (fma.f64 (exp.f64 i) (exp.f64 i) (+.f64 1 (exp.f64 i))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 (expm1.f64 i)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 i) (sqrt.f64 100)) (/.f64 1 (sqrt.f64 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -100 (expm1.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (expm1.f64 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 i) (/.f64 1 100))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 100 (expm1.f64 i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 100 (expm1.f64 i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 100 (expm1.f64 i))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 100 (expm1.f64 i))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -100 (expm1.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 100 (expm1.f64 i)) 3))))))"]],"rules":[["egg-rr",38],["egg-rr",46],["egg-rr",65]],"time":29.669921875,"type":"rewrite"},{"count":[[209,174]],"inputs":[["(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 n)","(+.f64 (*.f64 50 (*.f64 n i)) (*.f64 100 n))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n)))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n i))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (*.f64 100 (*.f64 n i)))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (*.f64 100 (*.f64 n i))))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 4))) (*.f64 100 (*.f64 n i)))))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 i)","(+.f64 (*.f64 100 i) (*.f64 50 (pow.f64 i 2)))","(+.f64 (*.f64 100 i) (+.f64 (*.f64 50/3 (pow.f64 i 3)) (*.f64 50 (pow.f64 i 2))))","(+.f64 (*.f64 100 i) (+.f64 (*.f64 50/3 (pow.f64 i 3)) (+.f64 (*.f64 50 (pow.f64 i 2)) (*.f64 25/6 (pow.f64 i 4)))))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (-.f64 (exp.f64 i) 1))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 n)","(+.f64 (*.f64 50 (*.f64 n i)) (*.f64 100 n))","(fma.f64 50 (*.f64 n i) (*.f64 100 n))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n)))","(fma.f64 (*.f64 n i) 50 (fma.f64 50/3 (*.f64 n (*.f64 i i)) (*.f64 100 n)))","(+.f64 (*.f64 50 (*.f64 n i)) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 2))) (*.f64 100 n))))","(fma.f64 50 (*.f64 n i) (fma.f64 (*.f64 25/6 n) (pow.f64 i 3) (fma.f64 50/3 (*.f64 n (*.f64 i i)) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n i))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (*.f64 100 (*.f64 n i)))","(fma.f64 50 (*.f64 n (*.f64 i i)) (*.f64 100 (*.f64 n i)))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (*.f64 100 (*.f64 n i))))","(fma.f64 (*.f64 n (*.f64 i i)) 50 (fma.f64 (*.f64 50/3 n) (pow.f64 i 3) (*.f64 100 (*.f64 n i))))","(+.f64 (*.f64 50 (*.f64 n (pow.f64 i 2))) (+.f64 (*.f64 50/3 (*.f64 n (pow.f64 i 3))) (+.f64 (*.f64 25/6 (*.f64 n (pow.f64 i 4))) (*.f64 100 (*.f64 n i)))))","(fma.f64 50 (*.f64 n (*.f64 i i)) (fma.f64 50/3 (*.f64 n (pow.f64 i 3)) (fma.f64 (*.f64 25/6 n) (pow.f64 i 4) (*.f64 100 (*.f64 n i)))))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 (*.f64 n (-.f64 (exp.f64 i) 1)))","(*.f64 100 (*.f64 n (expm1.f64 i)))","(*.f64 100 i)","(+.f64 (*.f64 100 i) (*.f64 50 (pow.f64 i 2)))","(fma.f64 100 i (*.f64 50 (*.f64 i i)))","(+.f64 (*.f64 100 i) (+.f64 (*.f64 50/3 (pow.f64 i 3)) (*.f64 50 (pow.f64 i 2))))","(fma.f64 100 i (fma.f64 50/3 (pow.f64 i 3) (*.f64 50 (*.f64 i i))))","(+.f64 (*.f64 100 i) (+.f64 (*.f64 50/3 (pow.f64 i 3)) (+.f64 (*.f64 50 (pow.f64 i 2)) (*.f64 25/6 (pow.f64 i 4)))))","(fma.f64 i 100 (fma.f64 (pow.f64 i 3) 50/3 (fma.f64 (pow.f64 i 4) 25/6 (*.f64 50 (*.f64 i i)))))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))","(*.f64 100 (-.f64 (exp.f64 i) 1))","(*.f64 100 (expm1.f64 i))"]],"time":173.12109375,"type":"simplify"},{"compiler":[[2371,1316]],"time":26.9208984375,"type":"eval"},{"alts":[["(/.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n)) i)","fresh",49.379290564076335],["(*.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) n)","fresh",49.375384314076335],["(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","done",20.95607539825186],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)","fresh",55.46860887048435],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (/.f64 i n)))","fresh",54.2500801665267],["(*.f64 (*.f64 100 (expm1.f64 i)) (/.f64 n i))","fresh",27.886557426501017],["(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) i)","fresh",55.10582975046196],["(*.f64 100 (/.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) (/.f64 i n)))","fresh",55.22209721761883],["(*.f64 100 (+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n)))))))))","fresh",33.489959245023456],["(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","fresh",27.618419385317296]],"compiler":[[17,11],[16,10],[10,7],[19,14],[21,16],[10,7],[21,16],[16,11],[54,38],[15,11]],"count":[[184,10]],"kept":[{"done":[1,0],"fresh":[8,8],"new":[174,1],"picked":[1,1]}],"min-error":[0.21344306503665061],"time":38.39306640625,"type":"prune"},{"accuracy":[8.42794175391689],"baseline":[20.596836220153023],"branch":[["i",8.42794175391689,3],["n",9.599110083800076,5],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))",15.14046367650101,3],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))",15.14046367650101,3]],"compiler":[[3,2],[3,2],[17,11],[15,9],[234,137]],"count":[[15,3]],"inputs":[["(*.f64 (*.f64 100 (expm1.f64 i)) (/.f64 n i))","(/.f64 (*.f64 n (*.f64 100 (expm1.f64 i))) i)","(*.f64 (*.f64 n (expm1.f64 i)) (/.f64 100 i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)","(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","(/.f64 (*.f64 100 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 i n) n) n) -1) n)) i)","(*.f64 (/.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) i) n)","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))))) i)","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 (/.f64 -1 i))) (log.f64 (/.f64 -1 n))))) (/.f64 i n)))","(*.f64 100 (/.f64 (*.f64 n (+.f64 (neg.f64 (log.f64 n)) (log.f64 i))) (/.f64 i n)))","(*.f64 100 (+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (fma.f64 1/4 (pow.f64 n (neg.f64 3)) (/.f64 1/4 n)))))))))","(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","(*.f64 (fma.f64 100 (pow.f64 (/.f64 (+.f64 i n) n) n) -100) (/.f64 n i))","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))"]],"link":["."],"name":["Compound Interest"],"oracle":[64.0],"outputs":[["(*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i))","(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)"]],"time":57.4150390625,"times":[["i",14.863037109375],["n",25.85791015625],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))",6.026123046875],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))",6.481201171875]],"type":"regimes"},{"bstep":[[7.585928740813764e-18,4.366357184086708e-11,149.261962890625],[-2.9165176305263836e-156,-1.11177512945037e-161,540.611083984375]],"compiler":[[20,15],[16,12],[20,15],[16,12],[20,15],[16,12],[20,15],[16,12],[20,15],[16,12],[20,15],[16,12],[20,15],[16,12],[20,15],[16,12],[20,15],[16,12],[16,12],[11,8],[16,12],[11,8],[16,12],[11,8],[16,12],[11,8],[16,12],[11,8],[16,12],[11,8],[16,12],[11,8],[16,12],[11,8],[16,12],[11,8],[19,13],[3,2]],"method":["binary-search","binary-search"],"time":690.06689453125,"type":"bsearch"},{"compiler":[[48,34]],"inputs":[["(if (<=.f64 i -5603579408375025/1932268761508629172347675945465993672149463664853217499328617625725759571144780212268096883290961288981231808015751088588682539330521493827871454336733540374348490407411712) (*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i)) (if (<=.f64 i 6653927711158919/154742504910672534362390528) (*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n)))))) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 i -5603579408375025/1932268761508629172347675945465993672149463664853217499328617625725759571144780212268096883290961288981231808015751088588682539330521493827871454336733540374348490407411712) (*.f64 100 (/.f64 (*.f64 n (expm1.f64 i)) i)) (if (<=.f64 i 6653927711158919/154742504910672534362390528) (*.f64 100 (+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n)))))) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (+.f64 (neg.f64 (neg.f64 (log.f64 i))) (neg.f64 (log.f64 n))))))) i)))","(if (<=.f64 i -5603579408375025/1932268761508629172347675945465993672149463664853217499328617625725759571144780212268096883290961288981231808015751088588682539330521493827871454336733540374348490407411712) (/.f64 (*.f64 (*.f64 100 n) (expm1.f64 i)) i) (if (<=.f64 i 6653927711158919/154742504910672534362390528) (*.f64 100 (fma.f64 (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n n)) (/.f64 (*.f64 n (expm1.f64 (*.f64 n (log.f64 (/.f64 i n))))) (/.f64 i 100))))"]],"stop":[["fuel",1]],"time":29.087158203125,"type":"simplify"},{"time":0.02587890625,"type":"soundness"},{"compiler":[[48,34]],"remove-preprocessing":[[]],"time":17.322998046875,"type":"end"}]