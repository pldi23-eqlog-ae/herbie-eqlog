[{"compiler":[[16,11]],"method":["search"],"sampling":[[12,0.1676409262381735,0.8070156216581841,0.025343452103642417],[11,0.12475603813073377,0.8732922669151364,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":151.878173828125,"type":"analyze"},{"outcomes":[["body",256,"invalid",98.894287109375,1927],["body",256,"valid",413.020751953125,8256]],"time":521.791015625,"type":"sample"},{"compiler":[[15,10]],"inputs":[["0","1","2","3"],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","(*.f64 y (-.f64 (/.f64 x z) (/.f64 t (-.f64 1 z))))","(*.f64 z (-.f64 (/.f64 y x) (/.f64 t (-.f64 1 x))))","(*.f64 t (-.f64 (/.f64 y z) (/.f64 x (-.f64 1 z))))","(*.f64 x (-.f64 (/.f64 z y) (/.f64 t (-.f64 1 y))))","(*.f64 x (-.f64 (/.f64 t z) (/.f64 y (-.f64 1 z))))","(*.f64 x (-.f64 (/.f64 y t) (/.f64 z (-.f64 1 t))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","(*.f64 y (-.f64 (/.f64 x z) (/.f64 t (-.f64 1 z))))","(*.f64 z (-.f64 (/.f64 y x) (/.f64 t (-.f64 1 x))))","(*.f64 t (-.f64 (/.f64 y z) (/.f64 x (-.f64 1 z))))","(*.f64 x (-.f64 (/.f64 z y) (/.f64 t (-.f64 1 y))))","(*.f64 x (-.f64 (/.f64 t z) (/.f64 y (-.f64 1 z))))","(*.f64 x (-.f64 (/.f64 y t) (/.f64 z (-.f64 1 t))))"]],"symmetry":[[]],"time":71.291015625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","(*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))"]],"time":21.0830078125,"type":"simplify"},{"compiler":[[26,15]],"time":0.408935546875,"type":"eval"},{"alts":[["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","next",6.266019470859463]],"compiler":[[15,10],[15,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[6.266019470859463],"time":0.904052734375,"type":"prune"},{"compiler":[[40,20]],"locations":[["(/.f64 t (-.f64 1 z))",0.01171875,true],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))",0.0407927480306591,true],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))",5.934401491716056,true]],"time":9.72900390625,"type":"localize"},{"count":[[3,96]],"series":[["(/.f64 t (-.f64 1 z))","z","-inf",0.18896484375],["(/.f64 t (-.f64 1 z))","z","inf",0.2509765625],["(/.f64 t (-.f64 1 z))","z","0",0.2021484375],["(/.f64 t (-.f64 1 z))","t","-inf",0.375],["(/.f64 t (-.f64 1 z))","t","inf",0.420166015625],["(/.f64 t (-.f64 1 z))","t","0",0.27099609375],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","t","-inf",0.158935546875],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","t","inf",0.182861328125],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","t","0",0.205078125],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","z","-inf",0.2490234375],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","z","inf",0.237060546875],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","z","0",0.23193359375],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","y","-inf",0.1630859375],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","y","inf",0.158935546875],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","y","0",0.203857421875],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","t","-inf",0.263916015625],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","t","inf",0.489990234375],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","t","0",0.49609375],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","z","-inf",0.369873046875],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","z","inf",0.47509765625],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","z","0",0.72802734375],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","y","-inf",0.3720703125],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","y","inf",0.4580078125],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","y","0",0.716064453125],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","x","-inf",0.35400390625],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","x","inf",0.341064453125],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","x","0",1.0]],"time":9.913818359375,"type":"series"},{"count":[[3,182]],"inputs":[["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))","(/.f64 t (-.f64 1 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 0) (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (*.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 y x) z)) (*.f64 1 (/.f64 (*.f64 t x) (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 x y) z)) (*.f64 1 (/.f64 (*.f64 x t) (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))) (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (*.f64 0 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y x) z) 1) (*.f64 (/.f64 (*.f64 t x) (+.f64 -1 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) z) 1) (*.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t x) (+.f64 -1 z)) (/.f64 (*.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 2)) (cbrt.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (/.f64 -1 (*.f64 z (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (cbrt.f64 (*.f64 z (-.f64 1 z)))) (pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))))) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (fma.f64 t z (*.f64 y (+.f64 -1 z)))) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z))) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))))) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) x) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) x) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) 1) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)) x)) (cbrt.f64 (*.f64 z (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (-.f64 1 z)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (*.f64 z (cbrt.f64 (-.f64 1 z)))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) z) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) 1) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y z) x (/.f64 (*.f64 t x) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 0) (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) (*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (+.f64 -1 z)) (*.f64 (neg.f64 (/.f64 y z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) (*.f64 0 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (+.f64 -1 z)) (*.f64 z (+.f64 -1 z))) (neg.f64 (/.f64 (*.f64 z t) (*.f64 z (-.f64 1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 y (+.f64 -1 z)) (*.f64 z (+.f64 -1 z))) (/.f64 (*.f64 z t) (*.f64 z (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 t (+.f64 -1 z)) (neg.f64 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 y z) 0) (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 y z) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2)) (cbrt.f64 (/.f64 (*.f64 y t) (*.f64 z (-.f64 1 z)))))) (-.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (/.f64 t (-.f64 1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)) (cbrt.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (/.f64 1 (*.f64 z (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) (/.f64 1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) (/.f64 -1 (*.f64 z (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) 1) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) (cbrt.f64 (*.f64 z (-.f64 1 z)))) (pow.f64 (cbrt.f64 (*.f64 z (-.f64 1 z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (cbrt.f64 (*.f64 z z))) (*.f64 (+.f64 -1 z) (/.f64 y (cbrt.f64 z)))) (*.f64 (+.f64 -1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 z z))) (*.f64 (-.f64 1 z) (/.f64 y (cbrt.f64 z)))) (*.f64 (-.f64 1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (+.f64 -1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) t)) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (-.f64 1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 t))) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))) (*.f64 (neg.f64 z) (/.f64 t (cbrt.f64 (-.f64 1 z))))) (*.f64 (neg.f64 z) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (+.f64 -1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 t))) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 t (cbrt.f64 (-.f64 1 z))))) (*.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (-.f64 1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) t)) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))) (*.f64 z (/.f64 t (cbrt.f64 (-.f64 1 z))))) (*.f64 z (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y (-.f64 1 z)) (*.f64 z (-.f64 1 z))) (*.f64 (*.f64 z (-.f64 1 z)) (*.f64 z t))) (*.f64 (*.f64 z (-.f64 1 z)) (*.f64 z (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)) (cbrt.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))))) (cbrt.f64 (*.f64 z (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) 1) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) 1) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2))) (cbrt.f64 (*.f64 z (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) (-.f64 1 z)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) (*.f64 z (cbrt.f64 (-.f64 1 z)))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) z) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) -1) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) (cbrt.f64 (-.f64 1 z))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) (neg.f64 z)) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t))) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z))) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 t z (*.f64 y (+.f64 -1 z))) (neg.f64 z)) (-.f64 1 (pow.f64 z 3))) (/.f64 1 (fma.f64 (+.f64 1 z) z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (/.f64 t (-.f64 1 z)) (/.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) (/.f64 1 (-.f64 1 z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 t (+.f64 -1 z))) (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 t (-.f64 1 z))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2))) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 z) y (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 y (cbrt.f64 (*.f64 z z))) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 -1 z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y z) 1 (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y z) 2)) (cbrt.f64 (/.f64 y z)) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 t (-.f64 1 z)) (/.f64 y z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 t (-.f64 1 z)) 0) (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 1 z)) (*.f64 (/.f64 t (-.f64 1 z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 t (-.f64 1 z))) (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 1 z)) (*.f64 0 (/.f64 t (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 -1 z)) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 t (-.f64 1 z))) (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (/.f64 (cbrt.f64 (*.f64 t t)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (/.f64 1 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 1 z))) (/.f64 t (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (-.f64 1 z))) (pow.f64 (cbrt.f64 (-.f64 1 z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2)) (cbrt.f64 (/.f64 t (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (-.f64 1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 t) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (cbrt.f64 (-.f64 1 z))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 t (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2)) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2)) (cbrt.f64 t)) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (-.f64 1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 1 z))) t) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 1 z))) (cbrt.f64 (*.f64 t t))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2))) (cbrt.f64 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 t) (cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 2))) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 (-.f64 1 z))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 t (cbrt.f64 (-.f64 1 z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 t (cbrt.f64 (-.f64 1 z))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 t) (cbrt.f64 (-.f64 1 z))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t -1) (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 t (cbrt.f64 (-.f64 1 z)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (-.f64 1 (pow.f64 z 3))) (/.f64 1 (fma.f64 (+.f64 1 z) z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (-.f64 1 z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 t (-.f64 1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (-.f64 1 z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (-.f64 1 z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 t (-.f64 1 z)) 3))))))"]],"rules":[["egg-rr",42],["egg-rr",85],["egg-rr",55]],"time":38.321044921875,"type":"rewrite"},{"count":[[278,242]],"inputs":[["(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(/.f64 (*.f64 (-.f64 y (*.f64 -1 t)) x) z)","(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(*.f64 -1 (/.f64 t (-.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(/.f64 y z)","(+.f64 (*.f64 -1 t) (/.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (/.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (/.f64 y z))))","(/.f64 (-.f64 y (*.f64 -1 t)) z)","(-.f64 (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 y z)) (*.f64 -1 (/.f64 t z)))","(-.f64 (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (/.f64 y z))) (*.f64 -1 (/.f64 t z)))","(-.f64 (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 4)) (/.f64 y z)))) (*.f64 -1 (/.f64 t z)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z)))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z))))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 4)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z)))))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(*.f64 -1 (/.f64 t (-.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(*.f64 -1 (/.f64 t (-.f64 1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","t","(+.f64 t (*.f64 t z))","(+.f64 t (+.f64 (*.f64 t z) (*.f64 t (pow.f64 z 2))))","(+.f64 (*.f64 t (pow.f64 z 3)) (+.f64 t (+.f64 (*.f64 t z) (*.f64 t (pow.f64 z 2)))))","(*.f64 -1 (/.f64 t z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (*.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z)))))","(*.f64 -1 (/.f64 t z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (*.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) x)","(*.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) x)","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z)))","(/.f64 (*.f64 t x) (+.f64 -1 z))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(fma.f64 (neg.f64 t) x (/.f64 (*.f64 y x) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (neg.f64 (*.f64 x (fma.f64 t z t))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(+.f64 (/.f64 (*.f64 y x) z) (fma.f64 (neg.f64 t) x (neg.f64 (*.f64 x (*.f64 t (fma.f64 z z z))))))","(/.f64 (*.f64 (-.f64 y (*.f64 -1 t)) x) z)","(/.f64 (*.f64 (+.f64 y t) x) z)","(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (/.f64 (/.f64 (*.f64 t x) z) z))","(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 3)) (pow.f64 z (neg.f64 2)))))","(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (/.f64 (*.f64 t x) (pow.f64 z 3))) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 4)) (pow.f64 z (neg.f64 2)))))","(*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z))","(/.f64 (*.f64 (+.f64 y t) x) z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (/.f64 (/.f64 (*.f64 t x) z) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 3)) (pow.f64 z (neg.f64 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) t) x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (/.f64 (*.f64 t x) (pow.f64 z 3))) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 4)) (pow.f64 z (neg.f64 2)))))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z)))","(/.f64 (*.f64 t x) (+.f64 -1 z))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z)))","(/.f64 (*.f64 t x) (+.f64 -1 z))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 -1 z)))","(*.f64 -1 (/.f64 t (-.f64 1 z)))","(/.f64 t (+.f64 -1 z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(/.f64 y z)","(+.f64 (*.f64 -1 t) (/.f64 y z))","(-.f64 (/.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (/.f64 y z)))","(fma.f64 (neg.f64 t) z (-.f64 (/.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (/.f64 y z))))","(fma.f64 (neg.f64 t) z (-.f64 (fma.f64 (neg.f64 t) (*.f64 z z) (/.f64 y z)) t))","(/.f64 (-.f64 y (*.f64 -1 t)) z)","(/.f64 (+.f64 y t) z)","(-.f64 (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 y z)) (*.f64 -1 (/.f64 t z)))","(+.f64 (/.f64 (/.f64 t z) z) (/.f64 (+.f64 y t) z))","(-.f64 (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (/.f64 y z))) (*.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 (+.f64 y t) z))","(-.f64 (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 4)) (/.f64 y z)))) (*.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (fma.f64 t (pow.f64 z (neg.f64 4)) (/.f64 (+.f64 y t) z)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z))","(/.f64 (+.f64 y t) z)","(+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z)))","(+.f64 (/.f64 (/.f64 t z) z) (/.f64 (+.f64 y t) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 (+.f64 y t) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 4)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) t) z)))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (fma.f64 t (pow.f64 z (neg.f64 4)) (/.f64 (+.f64 y t) z)))","(/.f64 y z)","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(*.f64 -1 (/.f64 t (-.f64 1 z)))","(/.f64 t (+.f64 -1 z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(*.f64 -1 (/.f64 t (-.f64 1 z)))","(/.f64 t (+.f64 -1 z))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 1 z))) (/.f64 y z))","(+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))","t","(+.f64 t (*.f64 t z))","(fma.f64 t z t)","(+.f64 t (+.f64 (*.f64 t z) (*.f64 t (pow.f64 z 2))))","(fma.f64 t (fma.f64 z z z) t)","(+.f64 (*.f64 t (pow.f64 z 3)) (+.f64 t (+.f64 (*.f64 t z) (*.f64 t (pow.f64 z 2)))))","(fma.f64 (pow.f64 z 3) t (fma.f64 t (fma.f64 z z z) t))","(*.f64 -1 (/.f64 t z))","(neg.f64 (/.f64 t z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (*.f64 -1 (/.f64 t z)))","(-.f64 (neg.f64 (/.f64 t z)) (/.f64 (/.f64 t z) z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z))))","(-.f64 (neg.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3))))) (/.f64 t z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 3)) (pow.f64 z (neg.f64 4))))) (/.f64 t z)) (/.f64 (/.f64 t z) z))","(*.f64 -1 (/.f64 t z))","(neg.f64 (/.f64 t z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (*.f64 -1 (/.f64 t z)))","(-.f64 (neg.f64 (/.f64 t z)) (/.f64 (/.f64 t z) z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z))))","(-.f64 (neg.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3))))) (/.f64 t z))","(+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -1 (/.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 3)) (pow.f64 z (neg.f64 4))))) (/.f64 t z)) (/.f64 (/.f64 t z) z))"]],"time":319.2880859375,"type":"simplify"},{"compiler":[[4319,2284]],"time":43.5859375,"type":"eval"},{"alts":[["(*.f64 x (fma.f64 (/.f64 1 z) y (/.f64 t (+.f64 -1 z))))","fresh",6.298772064024445],["(*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))","fresh",29.639618003857368],["(/.f64 (*.f64 (cbrt.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)) x)) (cbrt.f64 (*.f64 z (-.f64 1 z))))","fresh",38.788509449450125],["(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","fresh",27.634507005511306],["(*.f64 x (fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) z) (/.f64 t (+.f64 -1 z))))","fresh",20.011647616105282],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","next",6.2929295047954446],["(+.f64 (/.f64 (*.f64 t x) (+.f64 -1 z)) (/.f64 (*.f64 y x) z))","fresh",7.955410405993333],["(*.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (/.f64 -1 (*.f64 z (+.f64 -1 z))))","fresh",26.03068559190508],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 2)) (cbrt.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))","fresh",26.207659861068784]],"compiler":[[16,11],[21,14],[36,25],[29,18],[20,13],[16,11],[17,11],[23,16],[31,20],[16,11],[21,14],[36,25],[29,18],[20,13],[16,11],[17,11],[23,16],[31,20]],"count":[[243,9]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[242,9],"picked":[1,0]}],"min-error":[0.01953125],"time":85.0419921875,"type":"prune"},{"compiler":[[43,24]],"locations":[["(/.f64 1 (+.f64 -1 z))",0.0078125,true],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))",0.09500753162065376,true],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))",5.934401491716056,true]],"time":9.633056640625,"type":"localize"},{"count":[[3,96]],"series":[["(/.f64 1 (+.f64 -1 z))","z","-inf",0.1708984375],["(/.f64 1 (+.f64 -1 z))","z","inf",0.23095703125],["(/.f64 1 (+.f64 -1 z))","z","0",0.18115234375],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","y","-inf",0.15087890625],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","y","inf",0.177001953125],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","y","0",0.156005859375],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","z","-inf",0.238037109375],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","z","inf",0.197021484375],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","z","0",0.18994140625],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","t","-inf",0.157958984375],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","t","inf",0.155029296875],["(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","t","0",0.18798828125],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","y","-inf",0.360107421875],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","y","inf",0.254150390625],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","y","0",0.35986328125],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","z","-inf",0.322021484375],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","z","inf",0.279052734375],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","z","0",0.264892578125],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","t","-inf",0.4169921875],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","t","inf",0.343017578125],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","t","0",0.428955078125],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","x","-inf",0.3359375],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","x","inf",0.35693359375],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","x","0",1.487060546875]],"time":7.7119140625,"type":"series"},{"count":[[3,122]],"inputs":[["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","(fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))","(/.f64 1 (+.f64 -1 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 0) (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (*.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) 1) (*.f64 (/.f64 (*.f64 x y) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (*.f64 0 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 2)) x) (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 2)) (*.f64 x (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (+.f64 -1 z)) x (/.f64 (*.f64 x y) z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 0) (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) (*.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) (*.f64 0 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 t (+.f64 -1 z)) (neg.f64 (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 2)) (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t z) (*.f64 (+.f64 -1 z) y)) (*.f64 (+.f64 -1 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (neg.f64 z)) (*.f64 (+.f64 -1 z) (neg.f64 y))) (*.f64 (+.f64 -1 z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (cbrt.f64 (*.f64 z z))) (*.f64 (+.f64 -1 z) (/.f64 y (cbrt.f64 z)))) (*.f64 (+.f64 -1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) z) (*.f64 (-.f64 1 z) y)) (*.f64 (-.f64 1 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (neg.f64 z)) (*.f64 (-.f64 1 z) (neg.f64 y))) (*.f64 (-.f64 1 z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 z z))) (*.f64 (-.f64 1 z) (/.f64 y (cbrt.f64 z)))) (*.f64 (-.f64 1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (+.f64 -1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) t)) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 z)) (-.f64 1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 t))) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (+.f64 -1 z)) (*.f64 (neg.f64 z) t)) (*.f64 (neg.f64 z) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (-.f64 1 z)) (*.f64 (neg.f64 z) (neg.f64 t))) (*.f64 (neg.f64 z) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (+.f64 -1 z)) (*.f64 z t)) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (-.f64 1 z)) (*.f64 z (neg.f64 t))) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 -1 (-.f64 1 z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 y (cbrt.f64 (*.f64 z z))) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y z) 2)) (cbrt.f64 (/.f64 y z)) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 z) y (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y z)) (cbrt.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 -1 z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 t (+.f64 -1 z))) (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) (cbrt.f64 (pow.f64 (+.f64 -1 z) -2)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (/.f64 (cbrt.f64 (*.f64 t t)) (+.f64 -1 z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 z)) t (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y z) 1 (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (+.f64 -1 z)) 1 (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 1 z)) 0) (/.f64 -1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 z)) (*.f64 (/.f64 -1 (-.f64 1 z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (-.f64 1 z))) (/.f64 -1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 z)) (*.f64 0 (/.f64 -1 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 1 z)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) (cbrt.f64 (pow.f64 (+.f64 -1 z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) -2)) (cbrt.f64 (/.f64 -1 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 1 z))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) -2))) (cbrt.f64 (/.f64 1 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 1 z)) (-.f64 1 z)) (*.f64 (-.f64 1 z) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 1 z))) -1) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) -2)) (cbrt.f64 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) -2)) -1) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) -2))) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) -2)))) (cbrt.f64 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 -1 (pow.f64 z 3))) (/.f64 1 (fma.f64 z (+.f64 1 z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 1 z))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 -1 z) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 -1 z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 -1 z)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 -1 z) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 1 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 -1 z) -3))))))"]],"rules":[["egg-rr",39],["egg-rr",50],["egg-rr",33]],"time":30.951171875,"type":"rewrite"},{"count":[[218,182]],"inputs":[["(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(/.f64 (*.f64 (+.f64 y t) x) z)","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 y z)","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(/.f64 t (-.f64 z 1))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(/.f64 t (-.f64 z 1))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(/.f64 y z)","(+.f64 (*.f64 -1 t) (/.f64 y z))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (/.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (/.f64 y z))))","(/.f64 (+.f64 y t) z)","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t z) (/.f64 y z)))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (/.f64 y z))))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (+.f64 (/.f64 t (pow.f64 z 4)) (/.f64 y z)))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z)))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z))))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z)) (/.f64 t (pow.f64 z 4)))))","(/.f64 t (-.f64 z 1))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(/.f64 y z)","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(/.f64 y z)","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","-1","(-.f64 (*.f64 -1 z) 1)","(-.f64 (+.f64 (*.f64 -1 z) (*.f64 -1 (pow.f64 z 2))) 1)","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (pow.f64 z 3)) (*.f64 -1 (pow.f64 z 2)))) 1)","(/.f64 1 z)","(+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (+.f64 (/.f64 1 (pow.f64 z 4)) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (+.f64 (/.f64 1 (pow.f64 z 4)) (/.f64 1 z))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(fma.f64 (neg.f64 t) x (/.f64 (*.f64 y x) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 (neg.f64 t) (+.f64 x (*.f64 z x))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(+.f64 (/.f64 (*.f64 y x) z) (fma.f64 (neg.f64 t) x (*.f64 (neg.f64 t) (+.f64 (*.f64 (*.f64 z z) x) (*.f64 z x)))))","(/.f64 (*.f64 (+.f64 y t) x) z)","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(fma.f64 (*.f64 t x) (pow.f64 z -2) (/.f64 (*.f64 (+.f64 y t) x) z))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z -3) (pow.f64 z -2))))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(+.f64 (fma.f64 (*.f64 t x) (pow.f64 z -3) (/.f64 (*.f64 (+.f64 y t) x) z)) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z -2) (pow.f64 z -4))))","(*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z))","(/.f64 (*.f64 (+.f64 y t) x) z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2)))","(fma.f64 (*.f64 t x) (pow.f64 z -2) (/.f64 (*.f64 (+.f64 y t) x) z))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z -3) (pow.f64 z -2))))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4)))))","(+.f64 (fma.f64 (*.f64 t x) (pow.f64 z -3) (/.f64 (*.f64 (+.f64 y t) x) z)) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z -2) (pow.f64 z -4))))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 y z)","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(/.f64 y z)","(+.f64 (*.f64 -1 t) (/.f64 y z))","(-.f64 (/.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (/.f64 y z)))","(-.f64 (-.f64 (/.f64 y z) t) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 2))) (/.f64 y z))))","(-.f64 (-.f64 (fma.f64 (neg.f64 t) (*.f64 z z) (/.f64 y z)) t) (*.f64 t z))","(/.f64 (+.f64 y t) z)","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t z) (/.f64 y z)))","(fma.f64 t (pow.f64 z -2) (/.f64 (+.f64 y t) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (/.f64 y z))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z -3) (pow.f64 z -2))) (/.f64 (+.f64 y t) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (+.f64 (/.f64 t (pow.f64 z 4)) (/.f64 y z)))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z -3) (pow.f64 z -2))) (fma.f64 t (pow.f64 z -4) (/.f64 (+.f64 y t) z)))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z))","(/.f64 (+.f64 y t) z)","(+.f64 (/.f64 t (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z)))","(fma.f64 t (pow.f64 z -2) (/.f64 (+.f64 y t) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z -3) (pow.f64 z -2))) (/.f64 (+.f64 y t) z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) z)) (/.f64 t (pow.f64 z 4)))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z -3) (pow.f64 z -2))) (fma.f64 t (pow.f64 z -4) (/.f64 (+.f64 y t) z)))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(/.f64 y z)","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(/.f64 y z)","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","(+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z))","(+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z))","-1","(-.f64 (*.f64 -1 z) 1)","(neg.f64 (+.f64 z 1))","(-.f64 (+.f64 (*.f64 -1 z) (*.f64 -1 (pow.f64 z 2))) 1)","(+.f64 (neg.f64 (*.f64 z (+.f64 z 1))) -1)","(-.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -1 (pow.f64 z 3)) (*.f64 -1 (pow.f64 z 2)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 z) (pow.f64 z 3)) (*.f64 z z)) -1)","(/.f64 1 z)","(+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (pow.f64 z -2) (/.f64 1 z))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (pow.f64 z -3) (+.f64 (pow.f64 z -2) (/.f64 1 z)))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (+.f64 (/.f64 1 (pow.f64 z 4)) (/.f64 1 z))))","(+.f64 (+.f64 (pow.f64 z -4) (/.f64 1 z)) (+.f64 (pow.f64 z -3) (pow.f64 z -2)))","(/.f64 1 z)","(+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (pow.f64 z -2) (/.f64 1 z))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (pow.f64 z -3) (+.f64 (pow.f64 z -2) (/.f64 1 z)))","(+.f64 (/.f64 1 (pow.f64 z 3)) (+.f64 (/.f64 1 (pow.f64 z 2)) (+.f64 (/.f64 1 (pow.f64 z 4)) (/.f64 1 z))))","(+.f64 (+.f64 (pow.f64 z -4) (/.f64 1 z)) (+.f64 (pow.f64 z -3) (pow.f64 z -2)))"]],"time":301.35400390625,"type":"simplify"},{"compiler":[[3081,1632]],"time":32.2119140625,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","fresh",27.634507005511306],["(*.f64 x (fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) z) (/.f64 t (+.f64 -1 z))))","fresh",20.011647616105282],["(*.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (/.f64 -1 (*.f64 z (+.f64 -1 z))))","fresh",26.03068559190508],["(/.f64 (*.f64 (cbrt.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)) x)) (cbrt.f64 (*.f64 z (-.f64 1 z))))","fresh",38.788509449450125],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","next",5.649219859642355],["(*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (cbrt.f64 x))","fresh",29.639618003857368],["(*.f64 x (fma.f64 (/.f64 1 z) y (/.f64 t (+.f64 -1 z))))","fresh",6.298772064024445],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","done",6.2929295047954446],["(*.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)))","fresh",26.207659861068784]],"compiler":[[27,16],[20,13],[23,16],[36,25],[16,10],[21,14],[16,11],[16,11],[31,20],[27,16],[20,13],[23,16],[36,25],[16,10],[21,14],[16,11],[31,20]],"count":[[191,9]],"kept":[{"done":[0,0],"fresh":[8,2],"new":[182,6],"picked":[1,1]}],"min-error":[0.01953125],"time":60.076904296875,"type":"prune"},{"compiler":[[37,16]],"locations":[["(/.f64 t (+.f64 -1 z))",0.01171875,true],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))",0.280951402985505,true],["(/.f64 (*.f64 x y) z)",7.609559474570496,true]],"time":8.091064453125,"type":"localize"},{"count":[[3,108]],"series":[["(/.f64 t (+.f64 -1 z))","z","-inf",0.194091796875],["(/.f64 t (+.f64 -1 z))","z","inf",0.19482421875],["(/.f64 t (+.f64 -1 z))","z","0",0.219970703125],["(/.f64 t (+.f64 -1 z))","t","-inf",0.22900390625],["(/.f64 t (+.f64 -1 z))","t","inf",0.275146484375],["(/.f64 t (+.f64 -1 z))","t","0",0.231201171875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","y","-inf",0.201904296875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","y","inf",0.174072265625],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","y","0",0.31787109375],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","z","-inf",0.403076171875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","z","inf",0.283203125],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","z","0",0.239990234375],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","t","-inf",0.401123046875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","t","inf",0.348876953125],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","t","0",1.909912109375],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","x","-inf",0.447998046875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","x","inf",0.373046875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","x","0",0.597900390625],["(/.f64 (*.f64 x y) z)","z","-inf",0.319091796875],["(/.f64 (*.f64 x y) z)","z","inf",0.362060546875],["(/.f64 (*.f64 x y) z)","z","0",0.407958984375],["(/.f64 (*.f64 x y) z)","y","-inf",0.280029296875],["(/.f64 (*.f64 x y) z)","y","inf",0.35107421875],["(/.f64 (*.f64 x y) z)","y","0",0.469970703125],["(/.f64 (*.f64 x y) z)","x","-inf",0.3349609375],["(/.f64 (*.f64 x y) z)","x","inf",0.40576171875],["(/.f64 (*.f64 x y) z)","x","0",0.422119140625]],"time":10.72509765625,"type":"series"},{"count":[[3,163]],"inputs":[["(/.f64 (*.f64 x y) z)","(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","(/.f64 t (+.f64 -1 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) z) 0) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (*.f64 (/.f64 (*.f64 x y) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x y) z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (*.f64 0 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (neg.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (cbrt.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x y)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 z)) (/.f64 y (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 z)) (/.f64 x (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (*.f64 x y) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (*.f64 z z))) (/.f64 x (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (*.f64 z z))) (/.f64 y (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (neg.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) z) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 x y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 x y)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 z)) y) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 z)) x) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (cbrt.f64 (*.f64 x y))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (cbrt.f64 (neg.f64 (*.f64 x y)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (cbrt.f64 (pow.f64 (*.f64 x y) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 y (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 x (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x y) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x y) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 0) (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (*.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (*.f64 0 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) (neg.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (-.f64 1 z)) (*.f64 z (neg.f64 (*.f64 x t)))) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (+.f64 -1 z)) (*.f64 z (*.f64 x t))) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (-.f64 1 z)) (*.f64 (neg.f64 z) (neg.f64 (*.f64 x t)))) (*.f64 (neg.f64 z) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (+.f64 -1 z)) (*.f64 (neg.f64 z) (*.f64 x t))) (*.f64 (neg.f64 z) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (-.f64 1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 x t)))) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (+.f64 -1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 x t))) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) z) (*.f64 (-.f64 1 z) (*.f64 x y))) (*.f64 (-.f64 1 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) (cbrt.f64 (*.f64 z z))) (*.f64 (-.f64 1 z) (/.f64 (*.f64 x y) (cbrt.f64 z)))) (*.f64 (-.f64 1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) (neg.f64 z)) (*.f64 (-.f64 1 z) (neg.f64 (*.f64 x y)))) (*.f64 (-.f64 1 z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) z) (*.f64 (+.f64 -1 z) (*.f64 x y))) (*.f64 (+.f64 -1 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) (cbrt.f64 (*.f64 z z))) (*.f64 (+.f64 -1 z) (/.f64 (*.f64 x y) (cbrt.f64 z)))) (*.f64 (+.f64 -1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) (neg.f64 z)) (*.f64 (+.f64 -1 z) (neg.f64 (*.f64 x y)))) (*.f64 (+.f64 -1 z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 z)) (/.f64 y (cbrt.f64 (*.f64 z z))) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 z)) (/.f64 x (cbrt.f64 (*.f64 z z))) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 x y)) (/.f64 -1 z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 x z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) (/.f64 1 z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (*.f64 x y) z)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 z) (*.f64 x y) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (cbrt.f64 (/.f64 (*.f64 x y) z)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (*.f64 x y) (cbrt.f64 (*.f64 z z))) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x t) (/.f64 -1 (-.f64 1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x t) (+.f64 -1 z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) 2)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (+.f64 -1 z)) x (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 t (+.f64 -1 z))) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (/.f64 t (+.f64 -1 z)))) (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) z) 1 (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x t) (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) 1 (/.f64 (*.f64 x y) z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 t (+.f64 -1 z)) 0) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (+.f64 -1 z)) (*.f64 (/.f64 t (+.f64 -1 z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 t (+.f64 -1 z))) (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (+.f64 -1 z)) (*.f64 0 (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 1 z)) (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 t (+.f64 -1 z))) (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2)) (cbrt.f64 (/.f64 t (+.f64 -1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (/.f64 (cbrt.f64 (*.f64 t t)) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (/.f64 1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 -1 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 1 z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) (/.f64 t (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 t (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (+.f64 -1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t t)) (+.f64 -1 z)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))) (cbrt.f64 (/.f64 -1 (-.f64 1 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (-.f64 1 z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) (pow.f64 (cbrt.f64 (+.f64 -1 z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 t (+.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 t) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (+.f64 -1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2)) (cbrt.f64 t)) (cbrt.f64 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2)) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 z))) t) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 t (+.f64 -1 z))) (cbrt.f64 (*.f64 t t))) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 t) (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2))) (cbrt.f64 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2))) (cbrt.f64 (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))) (cbrt.f64 (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (+.f64 -1 (pow.f64 z 3))) (/.f64 1 (fma.f64 z (+.f64 1 z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t -1) (-.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 t) (cbrt.f64 (+.f64 -1 z))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (+.f64 -1 z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (+.f64 -1 z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (+.f64 -1 z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 t (+.f64 -1 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 t (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 t (-.f64 1 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 3))))))"]],"rules":[["egg-rr",47],["egg-rr",57],["egg-rr",59]],"time":33.059814453125,"type":"rewrite"},{"count":[[271,207]],"inputs":[["(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(/.f64 (+.f64 (*.f64 t x) (*.f64 y x)) z)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(/.f64 t (-.f64 z 1))","(*.f64 -1 t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 -1 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (*.f64 -1 (*.f64 t (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 3))) (*.f64 -1 (*.f64 t (pow.f64 z 2))))))","(/.f64 t z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 t z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (/.f64 t z)))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (/.f64 t (pow.f64 z 4)))))","(/.f64 t z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 t z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (/.f64 t z)))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (/.f64 t (pow.f64 z 4)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(fma.f64 (neg.f64 t) x (/.f64 (*.f64 y x) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (neg.f64 (*.f64 x (fma.f64 z t t))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(+.f64 (/.f64 (*.f64 y x) z) (fma.f64 (neg.f64 t) x (neg.f64 (*.f64 x (*.f64 t (+.f64 z (*.f64 z z)))))))","(/.f64 (+.f64 (*.f64 t x) (*.f64 y x)) z)","(/.f64 (*.f64 x (+.f64 t y)) z)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (/.f64 (*.f64 t x) z) z) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(+.f64 (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4))))))","(+.f64 (+.f64 (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 (*.f64 x (+.f64 t y)) z)) (/.f64 (*.f64 t x) (pow.f64 z 4)))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))","(/.f64 (*.f64 x (+.f64 t y)) z)","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))","(+.f64 (/.f64 (/.f64 (*.f64 t x) z) z) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))))","(+.f64 (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))))","(+.f64 (+.f64 (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 (*.f64 x (+.f64 t y)) z)) (/.f64 (*.f64 t x) (pow.f64 z 4)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(/.f64 t (-.f64 z 1))","(/.f64 t (+.f64 z -1))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 -1 t))","(neg.f64 (fma.f64 z t t))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (*.f64 -1 (*.f64 t (pow.f64 z 2)))))","(-.f64 (neg.f64 (fma.f64 z t t)) (*.f64 t (*.f64 z z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 -1 (*.f64 t (pow.f64 z 3))) (*.f64 -1 (*.f64 t (pow.f64 z 2))))))","(+.f64 (neg.f64 (fma.f64 z t t)) (*.f64 (neg.f64 t) (+.f64 (pow.f64 z 3) (*.f64 z z))))","(/.f64 t z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 t z))","(+.f64 (/.f64 (/.f64 t z) z) (/.f64 t z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (/.f64 t z)))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 t z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (/.f64 t (pow.f64 z 4)))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (fma.f64 t (pow.f64 z (neg.f64 4)) (/.f64 t z)))","(/.f64 t z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 t z))","(+.f64 (/.f64 (/.f64 t z) z) (/.f64 t z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (/.f64 t z)))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (/.f64 t z))","(+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 t (pow.f64 z 3)) (+.f64 (/.f64 t z) (/.f64 t (pow.f64 z 4)))))","(+.f64 (*.f64 t (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 3)))) (fma.f64 t (pow.f64 z (neg.f64 4)) (/.f64 t z)))"]],"time":328.653076171875,"type":"simplify"},{"compiler":[[3722,1617]],"time":35.132080078125,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","fresh",27.634507005511306],["(fma.f64 x (*.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) (pow.f64 (cbrt.f64 (+.f64 -1 z)) -2)) (/.f64 (*.f64 x y) z))","fresh",5.762852435175734],["(fma.f64 y (/.f64 x z) (/.f64 (*.f64 x t) (+.f64 -1 z)))","fresh",8.721549175129432],["(*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (cbrt.f64 x))","fresh",29.639618003857368],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","next",5.676563609642355],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","done",6.2929295047954446],["(*.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)))","fresh",26.207659861068784]],"compiler":[[27,16],[24,17],[16,10],[21,14],[18,12],[16,11],[31,20],[27,16],[24,17],[16,10],[21,14],[18,12],[31,20]],"count":[[216,7]],"kept":[{"done":[1,1],"fresh":[7,3],"new":[207,3],"picked":[1,0]}],"min-error":[0.00390625],"time":73.23193359375,"type":"prune"},{"compiler":[[45,24]],"locations":[["(/.f64 t (+.f64 -1 z))",0.01171875,false],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))",0.280951402985505,true],["(*.f64 (*.f64 x y) (/.f64 1 z))",7.643095800668401,true]],"time":10.260009765625,"type":"localize"},{"count":[[2,84]],"series":[["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","y","-inf",0.162841796875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","y","inf",0.18994140625],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","y","0",0.161865234375],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","z","-inf",0.22998046875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","z","inf",0.197021484375],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","z","0",0.180908203125],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","t","-inf",0.19091796875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","t","inf",0.1640625],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","t","0",0.193115234375],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","x","-inf",0.173828125],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","x","inf",0.169921875],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","x","0",0.190185546875],["(*.f64 (*.f64 x y) (/.f64 1 z))","z","-inf",0.275146484375],["(*.f64 (*.f64 x y) (/.f64 1 z))","z","inf",0.179931640625],["(*.f64 (*.f64 x y) (/.f64 1 z))","z","0",0.14697265625],["(*.f64 (*.f64 x y) (/.f64 1 z))","y","-inf",0.154052734375],["(*.f64 (*.f64 x y) (/.f64 1 z))","y","inf",0.178955078125],["(*.f64 (*.f64 x y) (/.f64 1 z))","y","0",0.14501953125],["(*.f64 (*.f64 x y) (/.f64 1 z))","x","-inf",0.166015625],["(*.f64 (*.f64 x y) (/.f64 1 z))","x","inf",0.16796875],["(*.f64 (*.f64 x y) (/.f64 1 z))","x","0",0.18505859375]],"time":4.072021484375,"type":"series"},{"count":[[2,122]],"inputs":[["(*.f64 (*.f64 x y) (/.f64 1 z))","(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) z) 0) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (*.f64 (/.f64 (*.f64 x y) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x y) z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (*.f64 0 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (cbrt.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 z)) (*.f64 x (cbrt.f64 (pow.f64 z -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 z)) (*.f64 y (cbrt.f64 (pow.f64 z -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x y)) z) (cbrt.f64 (pow.f64 (*.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (cbrt.f64 (pow.f64 z -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 x y)) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 z -2))) (/.f64 y (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) z) (cbrt.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 z -2)) (/.f64 (*.f64 x y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y z)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 z -2))) (/.f64 x (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (/.f64 (cbrt.f64 (*.f64 x y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 x y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x y)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 z)) x) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (cbrt.f64 (*.f64 x y))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (cbrt.f64 (pow.f64 (*.f64 x y) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 z)) y) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 y (cbrt.f64 (pow.f64 z -2)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 x (cbrt.f64 (pow.f64 z -2)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 x y)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 x y))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x y) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 z) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 x y) (/.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 0) (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (*.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (*.f64 0 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (+.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 t (+.f64 -1 z))) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (+.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y z)) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 t (+.f64 -1 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) (neg.f64 z)) (*.f64 (+.f64 -1 z) (neg.f64 (*.f64 x y)))) (*.f64 (+.f64 -1 z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) (cbrt.f64 (*.f64 z z))) (*.f64 (+.f64 -1 z) (/.f64 (*.f64 x y) (cbrt.f64 z)))) (*.f64 (+.f64 -1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x t) z) (*.f64 (+.f64 -1 z) (*.f64 x y))) (*.f64 (+.f64 -1 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) (neg.f64 z)) (*.f64 (-.f64 1 z) (neg.f64 (*.f64 x y)))) (*.f64 (-.f64 1 z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) (cbrt.f64 (*.f64 z z))) (*.f64 (-.f64 1 z) (/.f64 (*.f64 x y) (cbrt.f64 z)))) (*.f64 (-.f64 1 z) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x t)) z) (*.f64 (-.f64 1 z) (*.f64 x y))) (*.f64 (-.f64 1 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (-.f64 1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 x t)))) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (+.f64 -1 z)) (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 x t))) (*.f64 (cbrt.f64 (*.f64 z z)) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (-.f64 1 z)) (*.f64 (neg.f64 z) (neg.f64 (*.f64 x t)))) (*.f64 (neg.f64 z) (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (+.f64 -1 z)) (*.f64 (neg.f64 z) (*.f64 x t))) (*.f64 (neg.f64 z) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (-.f64 1 z)) (*.f64 z (neg.f64 (*.f64 x t)))) (*.f64 z (-.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (+.f64 -1 z)) (*.f64 z (*.f64 x t))) (*.f64 z (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 z)) (*.f64 (cbrt.f64 (pow.f64 z -2)) (*.f64 x y)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) z)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x z) y (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 z)) (*.f64 x (cbrt.f64 (pow.f64 z -2))) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 x z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y z) x (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) (/.f64 1 z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) (cbrt.f64 z)) (cbrt.f64 (pow.f64 z -2)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) z) 2)) (cbrt.f64 (/.f64 (*.f64 x y) z)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y z)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 z)) (*.f64 y (cbrt.f64 (pow.f64 z -2))) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 z) (*.f64 x y) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 x y)) z) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (*.f64 x y) z)) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (/.f64 t (+.f64 -1 z)))) (cbrt.f64 (pow.f64 (/.f64 t (+.f64 -1 z)) 2)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (+.f64 -1 z)) x (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x t) (/.f64 1 (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 t (+.f64 -1 z))) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x t) (+.f64 -1 z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) 2)) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x y) z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) z) 1 (/.f64 (*.f64 x t) (+.f64 -1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x t) (+.f64 -1 z)) 1 (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x t) (+.f64 -1 z)) (/.f64 (*.f64 x y) z))))))"]],"rules":[["egg-rr",62],["egg-rr",60]],"time":28.73291015625,"type":"rewrite"},{"count":[[206,149]],"inputs":[["(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(/.f64 (+.f64 (*.f64 t x) (*.f64 y x)) z)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))))","(/.f64 (*.f64 t x) (-.f64 z 1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (-.f64 z 1)) (/.f64 y z)) x)","(*.f64 (+.f64 (/.f64 t (+.f64 z -1)) (/.f64 y z)) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (-.f64 z 1))) (*.f64 -1 (/.f64 y z))) x))","(*.f64 (neg.f64 x) (-.f64 (neg.f64 (/.f64 y z)) (/.f64 t (+.f64 z -1))))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 -1 (*.f64 t x)))","(fma.f64 (neg.f64 t) x (/.f64 (*.f64 y x) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 y x) z) (*.f64 (neg.f64 t) (+.f64 (*.f64 z x) x)))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (*.f64 -1 (*.f64 t x)) (+.f64 (*.f64 -1 (*.f64 t (*.f64 (pow.f64 z 2) x))) (*.f64 -1 (*.f64 t (*.f64 z x))))))","(+.f64 (/.f64 (*.f64 y x) z) (fma.f64 (neg.f64 t) x (neg.f64 (*.f64 x (+.f64 (*.f64 t (*.f64 z z)) (*.f64 t z))))))","(/.f64 (+.f64 (*.f64 t x) (*.f64 y x)) z)","(/.f64 (*.f64 x (+.f64 t y)) z)","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (/.f64 (/.f64 (*.f64 t x) z) z) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(+.f64 (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 3)) (pow.f64 z (neg.f64 2)))) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 y x) z) (+.f64 (/.f64 (*.f64 t x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (/.f64 (*.f64 t x) (pow.f64 z 4))))))","(+.f64 (fma.f64 (*.f64 t x) (pow.f64 z (neg.f64 3)) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 4))))) (/.f64 (*.f64 x (+.f64 t y)) z))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))","(/.f64 (*.f64 x (+.f64 t y)) z)","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))","(+.f64 (/.f64 (/.f64 (*.f64 t x) z) z) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z))))","(+.f64 (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 3)) (pow.f64 z (neg.f64 2)))) (/.f64 (*.f64 x (+.f64 t y)) z))","(+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 y x))) z)))))","(+.f64 (fma.f64 (*.f64 t x) (pow.f64 z (neg.f64 3)) (*.f64 (*.f64 t x) (+.f64 (pow.f64 z (neg.f64 2)) (pow.f64 z (neg.f64 4))))) (/.f64 (*.f64 x (+.f64 t y)) z))","(/.f64 (*.f64 t x) (-.f64 z 1))","(/.f64 (*.f64 t x) (+.f64 z -1))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(/.f64 (*.f64 y x) z)","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (-.f64 z 1)))","(+.f64 (/.f64 (*.f64 y x) z) (/.f64 (*.f64 t x) (+.f64 z -1)))"]],"time":251.083984375,"type":"simplify"},{"compiler":[[3959,1890]],"time":38.510009765625,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","fresh",27.634507005511306],["(fma.f64 x (*.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) (pow.f64 (cbrt.f64 (+.f64 -1 z)) -2)) (/.f64 (*.f64 x y) z))","fresh",5.762852435175734],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y z)) (cbrt.f64 x)))","fresh",23.586764742133823],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 y (/.f64 x z)))","fresh",5.1754383888393],["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","done",5.676563609642355],["(fma.f64 (*.f64 x t) (/.f64 1 (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","fresh",7.961974256214554],["(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","done",6.2929295047954446],["(*.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)))","fresh",26.207659861068784]],"compiler":[[27,16],[24,17],[22,14],[16,10],[18,12],[18,12],[16,11],[31,20]],"count":[[220,8]],"kept":[{"done":[1,1],"fresh":[5,3],"new":[213,3],"picked":[1,1]}],"min-error":[0.00390625],"time":72.38916015625,"type":"prune"},{"accuracy":[0.2176871892756375],"baseline":[5.1754383888393],"branch":[["x",2.3092675244150542,3],["y",3.2287089003122698,3],["z",2.7579383315552755,3],["t",1.917818613354678,5],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))",1.2738319708594639,3],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))",0.2176871892756375,5]],"compiler":[[5,4],[5,4],[5,4],[5,4],[15,10],[13,9],[385,196]],"count":[[22,5]],"inputs":[["(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y z)) (cbrt.f64 x)))","(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 y (/.f64 x z)))","(fma.f64 (*.f64 x t) (/.f64 1 (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","(fma.f64 x (*.f64 (/.f64 t (cbrt.f64 (+.f64 -1 z))) (pow.f64 (cbrt.f64 (+.f64 -1 z)) -2)) (/.f64 (*.f64 x y) z))","(fma.f64 y (/.f64 x z) (/.f64 (*.f64 x t) (+.f64 -1 z)))","(fma.f64 x (/.f64 t (+.f64 -1 z)) (*.f64 (*.f64 x y) (/.f64 1 z)))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(*.f64 x (fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) z) (/.f64 t (+.f64 -1 z))))","(fma.f64 x (/.f64 t (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","(*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) (cbrt.f64 x))","(*.f64 x (fma.f64 (/.f64 1 z) y (/.f64 t (+.f64 -1 z))))","(*.f64 (cbrt.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z)))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 t (+.f64 -1 z)) (/.f64 y z))) 2)))","(*.f64 x (fma.f64 (/.f64 1 z) y (/.f64 t (+.f64 -1 z))))","(*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))))","(/.f64 (*.f64 (cbrt.f64 (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 2)) x)) (cbrt.f64 (*.f64 z (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 x (-.f64 y (*.f64 -1 t))) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(*.f64 x (fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) z) (/.f64 t (+.f64 -1 z))))","(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","(+.f64 (/.f64 (*.f64 t x) (+.f64 -1 z)) (/.f64 (*.f64 y x) z))","(*.f64 (*.f64 x (fma.f64 y (-.f64 1 z) (neg.f64 (*.f64 z t)))) (/.f64 -1 (*.f64 z (+.f64 -1 z))))","(*.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) 2)) (cbrt.f64 (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))","(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))"]],"link":["."],"name":["Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, C"],"oracle":[55.862578782812534],"outputs":[["(fma.f64 (*.f64 x t) (/.f64 1 (+.f64 -1 z)) (/.f64 (*.f64 x y) z))","(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))","(+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))","(*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z)))","(fma.f64 y (/.f64 x z) (/.f64 (*.f64 x t) (+.f64 -1 z)))"]],"time":164.241943359375,"times":[["x",19.697998046875],["y",32.3369140625],["z",25.85693359375],["t",32.308837890625],["(*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))))",17.221923828125],["(-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))",30.099853515625]],"type":"regimes"},{"bstep":[[1.6351851019069966e+145,2.001362513301339e+156,0.031005859375],[3.393970165097482e-241,4.9718441943964103e-228,0.031982421875],[-1.1095930025396478e-242,-6.776702217259556e-257,0.0830078125],[{"type":"real","value":"-inf"},-1.4030311768177946e+306,0.032958984375]],"compiler":[[9,7],[13,9]],"method":["left-value","left-value","left-value","left-value"],"time":0.4140625,"type":"bsearch"},{"compiler":[[124,69]],"inputs":[["(if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) -inf.0) (fma.f64 (*.f64 x t) (/.f64 1 (+.f64 -1 z)) (/.f64 (*.f64 x y) z)) (if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) -75075168288047/7507516828804700229971157695509256861311759593549503536677899390762631562619231707947410198580331380848554019184705462619182690666302243261761460906639905160039726922590902577336628349889145412319979767917902626154330339044684617119264613887239597666074624) (*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))) (if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) 1876879207201175/3753758414402350114985578847754628430655879796774751768338949695381315781309615853973705099290165690424277009592352731309591345333151121630880730453319952580019863461295451288668314174944572706159989883958951313077165169522342308559632306943619798833037312) (+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))) (if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) 19999999999999999781741223642818392253569612520802717890360030929450604798220516297708225612915260122593317856641907797168065523046908674225209344) (*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))) (fma.f64 y (/.f64 x z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) -inf.0) (fma.f64 (*.f64 x t) (/.f64 1 (+.f64 -1 z)) (/.f64 (*.f64 x y) z)) (if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) -75075168288047/7507516828804700229971157695509256861311759593549503536677899390762631562619231707947410198580331380848554019184705462619182690666302243261761460906639905160039726922590902577336628349889145412319979767917902626154330339044684617119264613887239597666074624) (*.f64 x (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z)))) (if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) 1876879207201175/3753758414402350114985578847754628430655879796774751768338949695381315781309615853973705099290165690424277009592352731309591345333151121630880730453319952580019863461295451288668314174944572706159989883958951313077165169522342308559632306943619798833037312) (+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))) (if (<=.f64 (-.f64 (/.f64 y z) (/.f64 t (-.f64 1 z))) 19999999999999999781741223642818392253569612520802717890360030929450604798220516297708225612915260122593317856641907797168065523046908674225209344) (*.f64 x (fma.f64 t (/.f64 1 (+.f64 -1 z)) (/.f64 y z))) (fma.f64 y (/.f64 x z) (/.f64 (*.f64 x t) (+.f64 -1 z)))))))","(if (<=.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) -inf.0) (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (if (<=.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) -75075168288047/7507516828804700229971157695509256861311759593549503536677899390762631562619231707947410198580331380848554019184705462619182690666302243261761460906639905160039726922590902577336628349889145412319979767917902626154330339044684617119264613887239597666074624) (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (if (<=.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 1876879207201175/3753758414402350114985578847754628430655879796774751768338949695381315781309615853973705099290165690424277009592352731309591345333151121630880730453319952580019863461295451288668314174944572706159989883958951313077165169522342308559632306943619798833037312) (+.f64 (/.f64 (*.f64 (+.f64 y t) x) z) (*.f64 (*.f64 x t) (+.f64 (pow.f64 z -3) (pow.f64 z -2)))) (if (<=.f64 (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))) 19999999999999999781741223642818392253569612520802717890360030929450604798220516297708225612915260122593317856641907797168065523046908674225209344) (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z)))) (*.f64 x (+.f64 (/.f64 y z) (/.f64 t (+.f64 -1 z))))))))"]],"stop":[["fuel",1]],"time":32.575927734375,"type":"simplify"},{"time":0.008056640625,"type":"soundness"},{"compiler":[[124,69]],"remove-preprocessing":[[]],"time":29.952880859375,"type":"end"}]