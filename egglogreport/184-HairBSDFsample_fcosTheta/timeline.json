[{"compiler":[[32,24]],"method":["search"],"sampling":[[12,0.0009923077227122362,3.2009926539104397e-5,0.9989756823507487],[11,0.0009923077227122362,3.2009926539104397e-5,0.9989756823507487],[10,0.0009602977961731318,6.401985307820879e-5,0.9989756823507486],[9,0.0009602977961731318,6.401985307820879e-5,0.9989756823507486],[8,0.000896277943094923,0.00012803970615641759,0.9989756823507487],[7,0.000896277943094923,0.00012803970615641759,0.9989756823507487],[6,0.0007682382369385055,0.00025607941231283517,0.9989756823507486],[5,0.0007682382369385055,0.00025607941231283517,0.9989756823507486],[4,0.0005121588246256703,0.0005121588246256703,0.9989756823507487],[3,0.0005121588246256703,0.0005121588246256703,0.9989756823507487],[2,0.0,0.0010243176492513407,0.9989756823507486],[1,0.0,0.0010243176492513407,0.9989756823507486],[0,0.0,0.0010243176492513407,0.9989756823507486]],"time":14.56201171875,"type":"analyze"},{"outcomes":[["body",256,"valid",567.6689453125,8256]],"time":575.643798828125,"type":"sample"},{"compiler":[[17,13]],"inputs":[["0","1"],["(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)))))))","(+.f64 1 (*.f64 u (log.f64 (+.f64 v (*.f64 (-.f64 1 v) (exp.f64 (/.f64 -2 u)))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)))))))","(fma.f64 (log.f64 (fma.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)) u)) v 1)","(+.f64 1 (*.f64 u (log.f64 (+.f64 v (*.f64 (-.f64 1 v) (exp.f64 (/.f64 -2 u)))))))","(fma.f64 u (log.f64 (fma.f64 (-.f64 1 v) (exp.f64 (/.f64 -2 u)) v)) 1)"]],"symmetry":[[]],"time":75.881103515625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)))))))","(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)"]],"time":22.611083984375,"type":"simplify"},{"compiler":[[30,22]],"time":0.573974609375,"type":"eval"},{"alts":[["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","next",0.006191259768442017]],"compiler":[[15,11],[15,11]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.006191259768442017],"time":1.01904296875,"type":"prune"},{"compiler":[[48,33]],"locations":[["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)",0.00390625,true],["(exp.f64 (/.f64 -2 v))",0.03723195883014185,true]],"time":15.740966796875,"type":"localize"},{"count":[[2,32]],"series":[["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","u","-inf",0.802001953125],["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","u","inf",0.794921875],["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","u","0",1.692138671875],["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","v","-inf",0.844970703125],["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","v","inf",1.14599609375],["(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","v","0",4.281982421875],["(exp.f64 (/.f64 -2 v))","v","-inf",0.27197265625],["(exp.f64 (/.f64 -2 v))","v","inf",0.333984375],["(exp.f64 (/.f64 -2 v))","v","0",0.243896484375]],"time":10.630859375,"type":"series"},{"count":[[2,76]],"inputs":[["(exp.f64 (/.f64 -2 v))","(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 -2 v)) (*.f64 (exp.f64 (/.f64 -2 v)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (/.f64 -2 v)) 0) (exp.f64 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 -2 v)) (*.f64 0 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (/.f64 -2 v))) (exp.f64 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (/.f64 -2 v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (/.f64 -2 v))) (cbrt.f64 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 -2 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (/.f64 -2 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (/.f64 2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (/.f64 -2 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 6 (neg.f64 v))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (/.f64 2 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 2) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 4 (*.f64 v v)))) (cbrt.f64 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 1 v))) (cbrt.f64 (/.f64 -8 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -2) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 -2 v))) (cbrt.f64 (/.f64 4 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 -2 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 1 v)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (/.f64 6 (neg.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (/.f64 -2 v))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (/.f64 -2 v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (/.f64 6 (neg.f64 v)) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) (*.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0) (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) (*.f64 0 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) (/.f64 1 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (cbrt.f64 (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 2)) (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) 1) (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) (+.f64 1 (-.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) 1) (*.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1)) (neg.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) v 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))) (cbrt.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 v) (*.f64 (cbrt.f64 (*.f64 v v)) (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v (cbrt.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))) (cbrt.f64 (pow.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))))"]],"rules":[["egg-rr",44],["egg-rr",32]],"time":27.10107421875,"type":"rewrite"},{"count":[[108,119]],"inputs":[["1","(-.f64 1 (*.f64 2 (/.f64 1 v)))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (*.f64 2 (/.f64 1 v)))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 3))) (*.f64 2 (/.f64 1 v))))","1","(-.f64 1 (*.f64 2 (/.f64 1 v)))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (*.f64 2 (/.f64 1 v)))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 3))) (*.f64 2 (/.f64 1 v))))","1","(+.f64 1 (*.f64 (log.f64 (+.f64 (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))) u)) v))","(+.f64 1 (*.f64 (log.f64 (+.f64 (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))) u)) v))","(+.f64 1 (*.f64 (log.f64 (+.f64 (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))) u)) v))","(+.f64 1 (*.f64 -2 (-.f64 1 u)))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v))))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))))))","(+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -48 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 -96 (pow.f64 (-.f64 1 u) 4)) (+.f64 (*.f64 192 (pow.f64 (-.f64 1 u) 3)) (+.f64 (*.f64 16 (-.f64 1 u)) (*.f64 -64 (pow.f64 (-.f64 1 u) 2)))))) (pow.f64 v 3))) (+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2)))))))","(+.f64 1 (*.f64 -2 (-.f64 1 u)))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v))))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))))))","(+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -48 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 -96 (pow.f64 (-.f64 1 u) 4)) (+.f64 (*.f64 192 (pow.f64 (-.f64 1 u) 3)) (+.f64 (*.f64 16 (-.f64 1 u)) (*.f64 -64 (pow.f64 (-.f64 1 u) 2)))))) (pow.f64 v 3))) (+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2)))))))","-1","(-.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 -2 v))) 1))) 1)","(-.f64 (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 -2 v))) 1))) (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 -2 v)) 2)))) 1)","(-.f64 (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 -2 v))) 1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 -2 v)) 2))) (*.f64 1/3 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 3) (pow.f64 u 3))) (pow.f64 (exp.f64 (/.f64 -2 v)) 3))))) 1)","(+.f64 1 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v))))))))","(+.f64 1 (+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) u)) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))))))))","(+.f64 1 (+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) u)) (+.f64 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v))))))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2)))))))","(+.f64 1 (+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) u)) (+.f64 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v))))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 3)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 3) (pow.f64 u 3)))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2))))))))","(+.f64 1 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) u))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) u))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) 2) (pow.f64 u 2)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1)))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) u))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 3)) (*.f64 (pow.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) 3) (pow.f64 u 3)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) 2) (pow.f64 u 2)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1))))))))"]],"method":["egg-herbie"],"outputs":[["1","(-.f64 1 (*.f64 2 (/.f64 1 v)))","(+.f64 1 (/.f64 -2 v))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (*.f64 2 (/.f64 1 v)))","(+.f64 1 (fma.f64 (pow.f64 v -2) 2 (/.f64 -2 v)))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 3))) (*.f64 2 (/.f64 1 v))))","(-.f64 (+.f64 1 (/.f64 2 (*.f64 v v))) (fma.f64 4/3 (pow.f64 v -3) (/.f64 2 v)))","1","(-.f64 1 (*.f64 2 (/.f64 1 v)))","(+.f64 1 (/.f64 -2 v))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (*.f64 2 (/.f64 1 v)))","(+.f64 1 (fma.f64 (pow.f64 v -2) 2 (/.f64 -2 v)))","(-.f64 (+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 v 2)))) (+.f64 (*.f64 4/3 (/.f64 1 (pow.f64 v 3))) (*.f64 2 (/.f64 1 v))))","(-.f64 (+.f64 1 (/.f64 2 (*.f64 v v))) (fma.f64 4/3 (pow.f64 v -3) (/.f64 2 v)))","1","(+.f64 1 (*.f64 (log.f64 (+.f64 (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))) u)) v))","(+.f64 1 (*.f64 (log.f64 (fma.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)) u)) v))","(+.f64 1 (*.f64 (log.f64 (+.f64 (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))) u)) v))","(+.f64 1 (*.f64 (log.f64 (fma.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)) u)) v))","(+.f64 1 (*.f64 (log.f64 (+.f64 (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))) u)) v))","(+.f64 1 (*.f64 (log.f64 (fma.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)) u)) v))","(+.f64 1 (*.f64 -2 (-.f64 1 u)))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v))))","(+.f64 1 (fma.f64 -2 (-.f64 1 u) (/.f64 (*.f64 1/2 (fma.f64 -4 (pow.f64 (-.f64 1 u) 2) (*.f64 4 (-.f64 1 u)))) v)))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))))))","(+.f64 1 (fma.f64 -2 (-.f64 1 u) (fma.f64 1/2 (/.f64 (fma.f64 -4 (pow.f64 (-.f64 1 u) 2) (*.f64 4 (-.f64 1 u))) v) (*.f64 (*.f64 1/6 (fma.f64 -8 (-.f64 1 u) (fma.f64 24 (pow.f64 (-.f64 1 u) 2) (*.f64 -16 (pow.f64 (-.f64 1 u) 3))))) (pow.f64 v -2)))))","(+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -48 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 -96 (pow.f64 (-.f64 1 u) 4)) (+.f64 (*.f64 192 (pow.f64 (-.f64 1 u) 3)) (+.f64 (*.f64 16 (-.f64 1 u)) (*.f64 -64 (pow.f64 (-.f64 1 u) 2)))))) (pow.f64 v 3))) (+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2)))))))","(fma.f64 1/24 (*.f64 (fma.f64 -48 (pow.f64 (-.f64 1 u) 2) (fma.f64 -96 (pow.f64 (-.f64 1 u) 4) (fma.f64 192 (pow.f64 (-.f64 1 u) 3) (fma.f64 16 (-.f64 1 u) (*.f64 -64 (pow.f64 (-.f64 1 u) 2)))))) (pow.f64 v -3)) (+.f64 1 (fma.f64 -2 (-.f64 1 u) (fma.f64 1/2 (/.f64 (fma.f64 -4 (pow.f64 (-.f64 1 u) 2) (*.f64 4 (-.f64 1 u))) v) (*.f64 (*.f64 1/6 (fma.f64 -8 (-.f64 1 u) (fma.f64 24 (pow.f64 (-.f64 1 u) 2) (*.f64 -16 (pow.f64 (-.f64 1 u) 3))))) (pow.f64 v -2))))))","(+.f64 1 (*.f64 -2 (-.f64 1 u)))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v))))","(+.f64 1 (fma.f64 -2 (-.f64 1 u) (/.f64 (*.f64 1/2 (fma.f64 -4 (pow.f64 (-.f64 1 u) 2) (*.f64 4 (-.f64 1 u)))) v)))","(+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))))))","(+.f64 1 (fma.f64 -2 (-.f64 1 u) (fma.f64 1/2 (/.f64 (fma.f64 -4 (pow.f64 (-.f64 1 u) 2) (*.f64 4 (-.f64 1 u))) v) (*.f64 (*.f64 -1/6 (fma.f64 -24 (pow.f64 (-.f64 1 u) 2) (fma.f64 8 (-.f64 1 u) (*.f64 16 (pow.f64 (-.f64 1 u) 3))))) (pow.f64 v -2)))))","(+.f64 (*.f64 1/24 (/.f64 (+.f64 (*.f64 -48 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 -96 (pow.f64 (-.f64 1 u) 4)) (+.f64 (*.f64 192 (pow.f64 (-.f64 1 u) 3)) (+.f64 (*.f64 16 (-.f64 1 u)) (*.f64 -64 (pow.f64 (-.f64 1 u) 2)))))) (pow.f64 v 3))) (+.f64 1 (+.f64 (*.f64 -2 (-.f64 1 u)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -4 (pow.f64 (-.f64 1 u) 2)) (*.f64 4 (-.f64 1 u))) v)) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2)))))))","(fma.f64 1/24 (*.f64 (fma.f64 -48 (pow.f64 (-.f64 1 u) 2) (fma.f64 -96 (pow.f64 (-.f64 1 u) 4) (fma.f64 192 (pow.f64 (-.f64 1 u) 3) (fma.f64 16 (-.f64 1 u) (*.f64 -64 (pow.f64 (-.f64 1 u) 2)))))) (pow.f64 v -3)) (+.f64 1 (fma.f64 -2 (-.f64 1 u) (fma.f64 1/2 (/.f64 (fma.f64 -4 (pow.f64 (-.f64 1 u) 2) (*.f64 4 (-.f64 1 u))) v) (*.f64 (*.f64 -1/6 (fma.f64 -24 (pow.f64 (-.f64 1 u) 2) (fma.f64 8 (-.f64 1 u) (*.f64 16 (pow.f64 (-.f64 1 u) 3))))) (pow.f64 v -2))))))","-1","(-.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 -2 v))) 1))) 1)","(fma.f64 v (*.f64 u (expm1.f64 (/.f64 2 v))) -1)","(-.f64 (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 -2 v))) 1))) (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 -2 v)) 2)))) 1)","(+.f64 (*.f64 v (*.f64 u (expm1.f64 (/.f64 2 v)))) (fma.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (*.f64 (expm1.f64 (/.f64 -2 v)) u) 2)) (exp.f64 (/.f64 4 (neg.f64 v)))) -1))","(-.f64 (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 -2 v))) 1))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 -2 v)) 2))) (*.f64 1/3 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 3) (pow.f64 u 3))) (pow.f64 (exp.f64 (/.f64 -2 v)) 3))))) 1)","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (*.f64 (expm1.f64 (/.f64 -2 v)) u) 2)) (exp.f64 (/.f64 4 (neg.f64 v)))) (*.f64 1/3 (pow.f64 (*.f64 (*.f64 (*.f64 (neg.f64 u) (expm1.f64 (/.f64 -2 v))) (cbrt.f64 v)) (exp.f64 (/.f64 2 v))) 3))) (fma.f64 v (*.f64 u (expm1.f64 (/.f64 2 v))) -1))","(+.f64 1 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v))))))))","(+.f64 1 (*.f64 v (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v)))))))","(+.f64 1 (+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) u)) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (expm1.f64 (/.f64 -2 v)) u))) (*.f64 v (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v)))))))","(+.f64 1 (+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) u)) (+.f64 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v))))))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2)))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (expm1.f64 (/.f64 -2 v)) u))) (fma.f64 v (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v))))) (*.f64 -1/2 (*.f64 (*.f64 v (exp.f64 (/.f64 4 (neg.f64 v)))) (pow.f64 (*.f64 (expm1.f64 (/.f64 -2 v)) u) -2)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) u)) (+.f64 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v))))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 3)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 3) (pow.f64 u 3)))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 -2 v)))) 2) (pow.f64 u 2))))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (expm1.f64 (/.f64 -2 v)) u))) (fma.f64 v (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v))))) (fma.f64 1/3 (pow.f64 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) (cbrt.f64 v)) (*.f64 (neg.f64 u) (expm1.f64 (/.f64 -2 v)))) 3) (*.f64 -1/2 (*.f64 (*.f64 v (exp.f64 (/.f64 4 (neg.f64 v)))) (pow.f64 (*.f64 (expm1.f64 (/.f64 -2 v)) u) -2))))))","(+.f64 1 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1)))))","(+.f64 1 (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) u))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (expm1.f64 (/.f64 -2 v)) u))) (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) u))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) 2) (pow.f64 u 2)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1)))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (expm1.f64 (/.f64 -2 v)) u))) (fma.f64 -1/2 (*.f64 (*.f64 v (exp.f64 (/.f64 4 (neg.f64 v)))) (pow.f64 (*.f64 (expm1.f64 (/.f64 -2 v)) u) -2)) (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u)))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) u))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 3)) (*.f64 (pow.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) 3) (pow.f64 u 3)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 -2 v)) 2)) (*.f64 (pow.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1) 2) (pow.f64 u 2)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 -2 v)) 1))))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 v (exp.f64 (/.f64 -2 v))) (*.f64 (expm1.f64 (/.f64 -2 v)) u))) (fma.f64 -1/3 (pow.f64 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) (cbrt.f64 v)) (*.f64 (expm1.f64 (/.f64 -2 v)) u)) 3) (fma.f64 -1/2 (*.f64 (*.f64 v (exp.f64 (/.f64 4 (neg.f64 v)))) (pow.f64 (*.f64 (expm1.f64 (/.f64 -2 v)) u) -2)) (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u))))))))"]],"time":145.280029296875,"type":"simplify"},{"compiler":[[3242,2486]],"time":44.044921875,"type":"eval"},{"alts":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","next",0.00390625]],"compiler":[[19,15],[19,15]],"count":[[120,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[119,1],"picked":[1,0]}],"min-error":[0.00390625],"time":23.927001953125,"type":"prune"},{"compiler":[[73,58]],"locations":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)",0.00390625,true],["(pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v))",0.04603372986545906,true],["(/.f64 (cbrt.f64 4) v)",0.484375,true]],"time":24.10107421875,"type":"localize"},{"count":[[3,36]],"series":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","u","-inf",1.30322265625],["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","u","inf",0.950927734375],["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","u","0",0.927978515625],["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","v","-inf",1.01318359375],["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","v","inf",1.5400390625],["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","v","0",2.574951171875],["(pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v))","v","-inf",0.337158203125],["(pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v))","v","inf",0.56689453125],["(pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v))","v","0",0.277099609375],["(/.f64 (cbrt.f64 4) v)","v","-inf",0.31005859375],["(/.f64 (cbrt.f64 4) v)","v","inf",0.455078125],["(/.f64 (cbrt.f64 4) v)","v","0",1.541015625]],"time":12.06396484375,"type":"series"},{"count":[[3,120]],"inputs":[["(/.f64 (cbrt.f64 4) v)","(pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v))","(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (cbrt.f64 4) v) 0) (/.f64 (cbrt.f64 4) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (cbrt.f64 4) v) (*.f64 (/.f64 (cbrt.f64 4) v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (cbrt.f64 4) v)) (/.f64 (cbrt.f64 4) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (cbrt.f64 4) v) (*.f64 0 (/.f64 (cbrt.f64 4) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (cbrt.f64 -4) v))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 v)) (/.f64 (cbrt.f64 -4) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 4) v)) (pow.f64 (/.f64 (cbrt.f64 4) v) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (cbrt.f64 -4) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 v)) (pow.f64 (cbrt.f64 v) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 4) v) 2/3) (cbrt.f64 (/.f64 (cbrt.f64 4) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4) (/.f64 -1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 4)) (/.f64 (cbrt.f64 (cbrt.f64 16)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (cbrt.f64 4) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 v -1/3) (cbrt.f64 (/.f64 4 (*.f64 v v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 4) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 4) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (*.f64 v v))) (pow.f64 v -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 -4) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 v) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 16)) v) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 4 v)) (cbrt.f64 (pow.f64 v 2/3))) (pow.f64 (cbrt.f64 (pow.f64 v 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 -4) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 4) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 4 v)) (pow.f64 v 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 4) v) 2/3) (cbrt.f64 (cbrt.f64 -4))) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 4) v) 2/3) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 4) v)) (cbrt.f64 (cbrt.f64 16))) (pow.f64 v 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 4) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 v -1/3) (cbrt.f64 4)) (pow.f64 v 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4 v)) 1) (pow.f64 v 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 -4)) (pow.f64 (/.f64 (cbrt.f64 4) v) 2/3)) (cbrt.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 4)) (pow.f64 (/.f64 (cbrt.f64 4) v) 2/3)) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 4 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 4 v)) 1) (pow.f64 v 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 4) -1) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 -4) (cbrt.f64 v)) (neg.f64 (pow.f64 v 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 4 v))) (neg.f64 (pow.f64 v 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 4) v)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 4) v)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 4) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 4 (pow.f64 v -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 4) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cbrt.f64 -4) v))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (cbrt.f64 -4) v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 4 (pow.f64 v -3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (/.f64 -2 v)) 0) (exp.f64 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 -2 v)) (*.f64 (exp.f64 (/.f64 -2 v)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (/.f64 -2 v))) (exp.f64 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 -2 v)) (*.f64 0 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (/.f64 -2 v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) (pow.f64 (exp.f64 (/.f64 -2 v)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (/.f64 -2 v)) 2/3) (cbrt.f64 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 -2 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (/.f64 -2 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (cbrt.f64 4) v)) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (/.f64 -2 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 -2 (/.f64 (cbrt.f64 4) v)))) (pow.f64 (/.f64 (cbrt.f64 4) v) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (cbrt.f64 -2))) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 16)) 2) v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 -2 v))) (pow.f64 (cbrt.f64 (/.f64 -2 v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -2) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 -2 v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 6 (neg.f64 v))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 -2 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (/.f64 -2 v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (/.f64 6 (neg.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (/.f64 -2 v))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (/.f64 -2 v) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (/.f64 -2 v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (/.f64 6 (neg.f64 v)) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0) (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) (*.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) (*.f64 0 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 2/3) (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) (/.f64 1 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) 1) (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) (+.f64 1 (-.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1) 1) (*.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) v -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 3) 1)) (neg.f64 (+.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2) (neg.f64 (fma.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 3 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 v) (*.f64 (pow.f64 v 2/3) (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))) (cbrt.f64 (pow.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v (cbrt.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)))) (pow.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) v 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u))) 1 1)))))"]],"rules":[["egg-rr",45],["egg-rr",29],["egg-rr",46]],"time":32.72998046875,"type":"rewrite"},{"count":[[156,166]],"inputs":[["(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","1","(+.f64 1 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2)))))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2))))) (*.f64 4/3 (/.f64 1 (pow.f64 v 3))))","1","(+.f64 1 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2)))))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2))))) (*.f64 4/3 (/.f64 1 (pow.f64 v 3))))","1","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2)))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (+.f64 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -3 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 12 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 3) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 32 (*.f64 (cbrt.f64 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (cbrt.f64 -2)))) (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 4))) (*.f64 -6 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 4) (pow.f64 (cbrt.f64 -2) 4)))))))) (pow.f64 v 3)))))))","(+.f64 1 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2)))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (+.f64 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -3 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 12 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 3) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 32 (*.f64 (cbrt.f64 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (cbrt.f64 -2)))) (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 4))) (*.f64 -6 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 4) (pow.f64 (cbrt.f64 -2) 4)))))))) (pow.f64 v 3)))))))","(+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) 1)","(+.f64 1 (+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1)))))","(+.f64 1 (+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2))))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 3) (pow.f64 u 3))) (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 3))) (+.f64 1 (+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)))))))","(+.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v))","(+.f64 1 (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) u)) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v)))","(+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) u)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2)))))))","(+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) u)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v) (+.f64 (*.f64 1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 3)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 3) (pow.f64 u 3)))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2))))))))","(+.f64 1 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 u (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 u 2) (pow.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1) 2)))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 u (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 u 2) (pow.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1) 2)))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 u (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 3)) (*.f64 (pow.f64 u 3) (pow.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1) 3)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1))))))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(exp.f64 (/.f64 -2 v))","(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(exp.f64 (/.f64 -2 v))","(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(exp.f64 (/.f64 -2 v))","(exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(exp.f64 (/.f64 -2 v))","1","(+.f64 1 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(+.f64 1 (/.f64 -2 v))","(+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2)))))","(+.f64 1 (+.f64 (/.f64 -2 v) (/.f64 2 (*.f64 v v))))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2))))) (*.f64 4/3 (/.f64 1 (pow.f64 v 3))))","(+.f64 (+.f64 1 (+.f64 (/.f64 -2 v) (/.f64 2 (*.f64 v v)))) (*.f64 (pow.f64 v -3) -4/3))","1","(+.f64 1 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))","(+.f64 1 (/.f64 -2 v))","(+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2)))))","(+.f64 1 (+.f64 (/.f64 -2 v) (/.f64 2 (*.f64 v v))))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (pow.f64 (cbrt.f64 -2) 2)) (pow.f64 v 2))))) (*.f64 4/3 (/.f64 1 (pow.f64 v 3))))","(+.f64 (+.f64 1 (+.f64 (/.f64 -2 v) (/.f64 2 (*.f64 v v)))) (*.f64 (pow.f64 v -3) -4/3))","1","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u))))))","(+.f64 1 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))","(+.f64 1 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2)))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u)) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)) 2))) v) (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u)) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)) 2))) v) (fma.f64 1/6 (*.f64 (fma.f64 -8 (-.f64 1 u) (fma.f64 24 (pow.f64 (-.f64 1 u) 2) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v -2)) (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -8 (-.f64 1 u)) (+.f64 (*.f64 24 (pow.f64 (-.f64 1 u) 2)) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (+.f64 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -3 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 12 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 3) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 32 (*.f64 (cbrt.f64 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (cbrt.f64 -2)))) (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 4))) (*.f64 -6 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 4) (pow.f64 (cbrt.f64 -2) 4)))))))) (pow.f64 v 3)))))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u)) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)) 2))) v) (fma.f64 1/6 (*.f64 (fma.f64 -8 (-.f64 1 u) (fma.f64 24 (pow.f64 (-.f64 1 u) 2) (*.f64 -16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v -2)) (fma.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2)) (*.f64 (*.f64 1/24 (fma.f64 -3 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u))) 2) (fma.f64 12 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 3) (pow.f64 (cbrt.f64 -2) 4))) (fma.f64 32 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (-.f64 1 u) 2)) (cbrt.f64 -2)) (fma.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (cbrt.f64 -2) 4) (-.f64 1 u)) (*.f64 (*.f64 -6 (pow.f64 (cbrt.f64 4) 4)) (pow.f64 (*.f64 (-.f64 1 u) (cbrt.f64 -2)) 4))))))) (pow.f64 v -3))))))","(+.f64 1 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))","(+.f64 1 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2)))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u)) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)) 2))) v) (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u)) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)) 2))) v) (fma.f64 -1/6 (*.f64 (fma.f64 -24 (pow.f64 (-.f64 1 u) 2) (fma.f64 8 (-.f64 1 u) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v -2)) (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 2))) (*.f64 -1 (*.f64 (pow.f64 (cbrt.f64 4) 2) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 2))))) v)) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -24 (pow.f64 (-.f64 1 u) 2)) (+.f64 (*.f64 8 (-.f64 1 u)) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v 2))) (+.f64 (*.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 -3 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 12 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 3) (pow.f64 (cbrt.f64 -2) 4)))) (+.f64 (*.f64 32 (*.f64 (cbrt.f64 4) (*.f64 (pow.f64 (-.f64 1 u) 2) (cbrt.f64 -2)))) (+.f64 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (-.f64 1 u) (pow.f64 (cbrt.f64 -2) 4))) (*.f64 -6 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 4) (pow.f64 (cbrt.f64 -2) 4)))))))) (pow.f64 v 3)))))))","(+.f64 1 (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u)) (neg.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 4) (-.f64 1 u)) (cbrt.f64 -2)) 2))) v) (fma.f64 -1/6 (*.f64 (fma.f64 -24 (pow.f64 (-.f64 1 u) 2) (fma.f64 8 (-.f64 1 u) (*.f64 16 (pow.f64 (-.f64 1 u) 3)))) (pow.f64 v -2)) (fma.f64 (cbrt.f64 4) (*.f64 (-.f64 1 u) (cbrt.f64 -2)) (*.f64 (*.f64 1/24 (fma.f64 -3 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 -2) 4) (*.f64 (cbrt.f64 4) (-.f64 1 u))) 2) (fma.f64 12 (*.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (-.f64 1 u) 3) (pow.f64 (cbrt.f64 -2) 4))) (fma.f64 32 (*.f64 (*.f64 (cbrt.f64 4) (pow.f64 (-.f64 1 u) 2)) (cbrt.f64 -2)) (fma.f64 (pow.f64 (cbrt.f64 4) 4) (*.f64 (pow.f64 (cbrt.f64 -2) 4) (-.f64 1 u)) (*.f64 (*.f64 -6 (pow.f64 (cbrt.f64 4) 4)) (pow.f64 (*.f64 (-.f64 1 u) (cbrt.f64 -2)) 4))))))) (pow.f64 v -3))))))","(+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) 1)","-1","(+.f64 1 (+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1)))))","(+.f64 -1 (*.f64 v (*.f64 u (expm1.f64 (/.f64 2 v)))))","(+.f64 1 (+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2))))))","(+.f64 -1 (fma.f64 v (*.f64 u (expm1.f64 (/.f64 2 v))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (*.f64 u (expm1.f64 (/.f64 -2 v))) 2)) (exp.f64 (/.f64 -4 v))))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 3) (pow.f64 u 3))) (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 3))) (+.f64 1 (+.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) (+.f64 (*.f64 v (*.f64 u (-.f64 (/.f64 1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) (*.f64 -1/2 (/.f64 (*.f64 v (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2))) (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)))))))","(fma.f64 1/3 (*.f64 (*.f64 v (pow.f64 (*.f64 (neg.f64 u) (expm1.f64 (/.f64 -2 v))) 3)) (pow.f64 (exp.f64 (/.f64 2 v)) 3)) (+.f64 -1 (fma.f64 v (*.f64 u (expm1.f64 (/.f64 2 v))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (*.f64 u (expm1.f64 (/.f64 -2 v))) 2)) (exp.f64 (/.f64 -4 v)))))))","(+.f64 1 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v))","(+.f64 1 (*.f64 (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v))))) v))","(+.f64 1 (+.f64 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) u)) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v)))","(+.f64 (-.f64 1 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) v) (*.f64 u (expm1.f64 (/.f64 -2 v))))) (*.f64 (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v))))) v))","(+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) u)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2)))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) v) (*.f64 u (expm1.f64 (/.f64 -2 v))))) (fma.f64 (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v))))) v (*.f64 (*.f64 -1/2 (*.f64 v (exp.f64 (/.f64 -4 v)))) (pow.f64 (*.f64 u (expm1.f64 (/.f64 -2 v))) -2))))","(+.f64 (/.f64 (*.f64 v (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) (*.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) u)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (+.f64 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v))) 1))) v) (+.f64 (*.f64 1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 3)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 3) (pow.f64 u 3)))) (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)))) 2) (pow.f64 u 2))))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) v) (*.f64 u (expm1.f64 (/.f64 -2 v))))) (fma.f64 (+.f64 (log.f64 u) (log.f64 (neg.f64 (expm1.f64 (/.f64 -2 v))))) v (fma.f64 1/3 (*.f64 (*.f64 v (exp.f64 (/.f64 (*.f64 -2 3) v))) (pow.f64 (*.f64 (neg.f64 u) (expm1.f64 (/.f64 -2 v))) -3)) (*.f64 (*.f64 -1/2 (*.f64 v (exp.f64 (/.f64 -4 v)))) (pow.f64 (*.f64 u (expm1.f64 (/.f64 -2 v))) -2)))))","(+.f64 1 (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))))","(+.f64 1 (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 u (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1))))))","(+.f64 (-.f64 1 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) v) (*.f64 u (expm1.f64 (/.f64 -2 v))))) (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 u 2) (pow.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1) 2)))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 u (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))))))","(fma.f64 -1/2 (*.f64 (*.f64 v (exp.f64 (/.f64 -4 v))) (pow.f64 (*.f64 u (expm1.f64 (/.f64 -2 v))) -2)) (+.f64 (-.f64 1 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) v) (*.f64 u (expm1.f64 (/.f64 -2 v))))) (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u)))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 2)) (*.f64 (pow.f64 u 2) (pow.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1) 2)))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) v) (*.f64 u (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 v (pow.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 3)) (*.f64 (pow.f64 u 3) (pow.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1) 3)))) (*.f64 v (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (-.f64 (exp.f64 (/.f64 (*.f64 (cbrt.f64 4) (cbrt.f64 -2)) v)) 1))))))))","(fma.f64 -1/2 (*.f64 (*.f64 v (exp.f64 (/.f64 -4 v))) (pow.f64 (*.f64 u (expm1.f64 (/.f64 -2 v))) -2)) (+.f64 (-.f64 1 (/.f64 (*.f64 (exp.f64 (/.f64 -2 v)) v) (*.f64 u (expm1.f64 (/.f64 -2 v))))) (fma.f64 -1/3 (*.f64 (*.f64 v (exp.f64 (/.f64 (*.f64 -2 3) v))) (pow.f64 (*.f64 u (expm1.f64 (/.f64 -2 v))) -3)) (*.f64 v (-.f64 (log.f64 (expm1.f64 (/.f64 -2 v))) (neg.f64 (log.f64 (neg.f64 u))))))))"]],"time":167.408935546875,"type":"simplify"},{"compiler":[[4814,3857]],"time":63.92919921875,"type":"eval"},{"alts":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","done",0.00390625]],"compiler":[[19,15]],"count":[[167,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[166,0],"picked":[1,1]}],"min-error":[0.00390625],"time":39.81787109375,"type":"prune"},{"accuracy":[0.00390625],"baseline":[0.00390625],"branch":[["u",0.00390625,1],["v",0.00390625,1],["(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)))))))",0.00390625,1],["(*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))))))",0.00390625,1]],"compiler":[[3,2],[3,2],[17,13],[15,11],[47,35]],"count":[[3,1]],"inputs":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)","(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)))))))"]],"link":["."],"name":["HairBSDF, sample_f, cosTheta"],"oracle":[0.006191259768442017],"outputs":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)"]],"time":10.77197265625,"times":[["u",2.632080078125],["v",2.240966796875],["(+.f64 1 (*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v)))))))",1.858154296875],["(*.f64 v (log.f64 (+.f64 u (*.f64 (-.f64 1 u) (exp.f64 (/.f64 -2 v))))))",2.821044921875]],"type":"regimes"},{"compiler":[[19,15]],"inputs":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 v (log.f64 (fma.f64 (pow.f64 (exp.f64 (cbrt.f64 -2)) (/.f64 (cbrt.f64 4) v)) (-.f64 1 u) u)) 1)","(fma.f64 v (log.f64 (fma.f64 (exp.f64 (/.f64 -2 v)) (-.f64 1 u) u)) 1)"]],"stop":[["done",1]],"time":20.178955078125,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[19,15]],"remove-preprocessing":[[]],"time":14.175048828125,"type":"end"}]