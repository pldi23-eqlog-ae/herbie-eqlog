[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":176.010009765625,"type":"analyze"},{"outcomes":[["body",256,"invalid",146.196044921875,2803],["body",256,"valid",435.322021484375,8256]],"time":592.197021484375,"type":"sample"},{"compiler":[[14,9]],"inputs":[["0","1","2","3","4"],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(+.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(+.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(+.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(+.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(+.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(+.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(+.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(+.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(+.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(+.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(+.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(+.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(+.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(+.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(+.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(+.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(+.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(+.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))"]],"symmetry":[[]],"time":87.5048828125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(fma.f64 y (/.f64 (-.f64 z t) a) x)"]],"time":20.613037109375,"type":"simplify"},{"compiler":[[22,11]],"time":0.39892578125,"type":"eval"},{"alts":[["(fma.f64 y (/.f64 (-.f64 z t) a) x)","fresh",6.881414549645704],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","next",4.3828125]],"compiler":[[13,8],[14,9],[13,8],[14,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.10546875],"time":1.31103515625,"type":"prune"},{"compiler":[[34,9]],"locations":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.0078125,true],["(/.f64 (*.f64 y (-.f64 z t)) a)",5.19918606625165,true]],"time":8.324951171875,"type":"localize"},{"count":[[2,84]],"series":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","-inf",0.18310546875],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","inf",0.173095703125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","0",0.31298828125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","-inf",0.301025390625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","inf",0.18310546875],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","0",0.989990234375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","-inf",0.18212890625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","inf",0.199951171875],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","0",0.3349609375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","-inf",0.1689453125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","inf",0.52099609375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","0",0.316162109375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","-inf",0.19384765625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","inf",0.2451171875],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","0",0.364013671875],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","-inf",0.30810546875],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","inf",0.364013671875],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","0",0.445068359375],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","-inf",0.368896484375],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","inf",0.760986328125],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","0",0.364013671875],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","-inf",0.47607421875],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","inf",0.4560546875],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","0",0.60302734375],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","-inf",0.326904296875],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","inf",0.67578125],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","0",1.01708984375]],"time":11.302978515625,"type":"series"},{"count":[[2,101]],"inputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (*.f64 y z)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 t y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y z) (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 t y)) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) y) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 a)) (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (*.f64 y (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 t z) y) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 a -2))) (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) y) 2)) a) (cbrt.f64 (*.f64 y (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y a) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 t z) y) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a -2))) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) a) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (*.f64 (-.f64 t z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 t z) y) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) y) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (*.f64 y (-.f64 z t)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (*.f64 (-.f64 t z) y))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) y) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 t z) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z t) (*.f64 y (cbrt.f64 (pow.f64 a -2)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a -2)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) y) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 0) (fma.f64 (-.f64 z t) (/.f64 y a) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (fma.f64 (-.f64 z t) (/.f64 y a) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 0 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 y (-.f64 z t))) a)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 y (-.f64 z t))) a)))) (+.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 2)) (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 z t) (/.f64 y a) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (pow.f64 a -2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (*.f64 y (cbrt.f64 (pow.f64 a -2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) y) 2)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (-.f64 t z) y) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 a)) (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 a -2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (-.f64 z t) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 t z) y) (/.f64 -1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1 x)))))"]],"rules":[["egg-rr",42],["egg-rr",59]],"time":29.55810546875,"type":"rewrite"},{"count":[[185,114]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(-.f64 x (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)"]],"time":287.93310546875,"type":"simplify"},{"compiler":[[1600,459]],"time":13.3408203125,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (/.f64 y a) x)","next",2.8779748177492825],["(+.f64 x (/.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a))))","fresh",18.923173762143726],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","fresh",18.524452248384474],["(fma.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)) x)","fresh",4.40234375],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","fresh",6.877508299645704]],"compiler":[[13,8],[20,13],[14,9],[25,13],[15,10],[16,10],[13,8],[20,13],[25,13],[15,10],[16,10]],"count":[[116,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[114,5],"picked":[1,1]}],"min-error":[0.01953125],"time":29.487060546875,"type":"prune"},{"compiler":[[24,8]],"locations":[["(fma.f64 (-.f64 z t) (/.f64 y a) x)",2.712372679472843,true]],"time":6.43701171875,"type":"localize"},{"count":[[1,60]],"series":[["(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","-inf",0.256103515625],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","inf",0.162841796875],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","0",0.2880859375],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","a","-inf",0.314208984375],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","a","inf",0.277099609375],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","a","0",0.2958984375],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","y","-inf",0.35595703125],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","y","inf",0.291015625],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","y","0",0.320068359375],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","t","-inf",0.241943359375],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","t","inf",0.248046875],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","t","0",0.317138671875],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","z","-inf",0.26611328125],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","z","inf",0.260986328125],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","z","0",0.426025390625]],"time":4.501953125,"type":"series"},{"count":[[1,34]],"inputs":[["(fma.f64 (-.f64 z t) (/.f64 y a) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 0) (fma.f64 (-.f64 z t) (/.f64 y a) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 0 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (fma.f64 (-.f64 z t) (/.f64 y a) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 (-.f64 t z) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 2)) (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 z t) (/.f64 y a) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2)) (/.f64 y a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) (-.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 z t) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 z t) y) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 z t) y) a) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 z t) y) a) x)))))"]],"rules":[["egg-rr",34]],"time":19.635986328125,"type":"rewrite"},{"count":[[94,47]],"inputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(-.f64 x (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)"]],"time":207.83203125,"type":"simplify"},{"compiler":[[540,131]],"time":6.550048828125,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) x)","fresh",12.361162295541048],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","fresh",6.877508299645704],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","done",2.8779748177492825],["(+.f64 x (/.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a))))","fresh",18.923173762143726],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","next",4.40234375],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 z t) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 z t) y) a) 2)) x)","fresh",18.524452248384474]],"compiler":[[21,13],[16,10],[14,9],[13,8],[20,13],[15,10],[25,13],[21,13],[16,10],[20,13],[15,10],[25,13]],"count":[[53,7]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[47,4],"picked":[1,1]}],"min-error":[0.015625],"time":12.35595703125,"type":"prune"},{"compiler":[[32,13]],"locations":[["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)",4.146479908023917,true]],"time":7.885009765625,"type":"localize"},{"count":[[1,60]],"series":[["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","x","-inf",0.1630859375],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","x","inf",0.18701171875],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","x","0",0.346923828125],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","a","-inf",0.301025390625],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","a","inf",0.239990234375],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","a","0",0.296875],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","y","-inf",0.322021484375],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","y","inf",0.328857421875],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","y","0",0.27587890625],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","t","-inf",0.254150390625],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","t","inf",0.253173828125],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","t","0",0.31884765625],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","z","-inf",0.35107421875],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","z","inf",0.27099609375],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","z","0",0.408203125]],"time":4.528076171875,"type":"series"},{"count":[[1,34]],"inputs":[["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) (*.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 0) (fma.f64 y (/.f64 (-.f64 z t) a) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) (*.f64 0 (fma.f64 y (/.f64 (-.f64 z t) a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 y (/.f64 (-.f64 z t) a) x)) (fma.f64 y (/.f64 (-.f64 z t) a) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)) (cbrt.f64 (pow.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 2)) (cbrt.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 y (/.f64 (-.f64 z t) a) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (/.f64 (-.f64 z t) a) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 z t) y) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (-.f64 z t) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 z t) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 z t) y) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (*.f64 (-.f64 z t) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 z t) y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 z t) y) 2)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 z t) y) a) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 (-.f64 z t) y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 z t) y) a) x)))))"]],"rules":[["egg-rr",34]],"time":21.462890625,"type":"rewrite"},{"count":[[94,48]],"inputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(-.f64 x (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)"]],"time":203.823974609375,"type":"simplify"},{"compiler":[[548,130]],"time":5.509033203125,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) x)","fresh",12.361162295541048],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","next",6.877508299645704],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","done",2.8779748177492825],["(+.f64 x (/.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a))))","fresh",18.923173762143726],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","done",4.40234375],["(fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 z t) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 z t) y) a) 2)) x)","fresh",18.524452248384474]],"compiler":[[21,13],[16,10],[14,9],[13,8],[20,13],[15,10],[25,13],[21,13],[16,10],[20,13],[25,13]],"count":[[55,7]],"kept":[{"done":[2,2],"fresh":[4,4],"new":[48,0],"picked":[1,1]}],"min-error":[0.015625],"time":11.387939453125,"type":"prune"},{"compiler":[[43,10]],"locations":[["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)",0.0078125,true],["(-.f64 (/.f64 z a) (/.f64 t a))",0.21484375000000003,true],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)",7.265035693760935,true]],"time":7.72314453125,"type":"localize"},{"count":[[3,123]],"series":[["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","x","-inf",0.1708984375],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","x","inf",0.198974609375],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","x","0",0.330810546875],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","y","-inf",0.196044921875],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","y","inf",0.19091796875],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","y","0",0.18408203125],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","t","-inf",0.174072265625],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","t","inf",0.200927734375],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","t","0",0.175048828125],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","a","-inf",0.197998046875],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","a","inf",0.178955078125],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","a","0",0.162841796875],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","z","-inf",0.215087890625],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","z","inf",0.175048828125],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","z","0",0.2060546875],["(-.f64 (/.f64 z a) (/.f64 t a))","t","-inf",0.155029296875],["(-.f64 (/.f64 z a) (/.f64 t a))","t","inf",0.15087890625],["(-.f64 (/.f64 z a) (/.f64 t a))","t","0",0.184814453125],["(-.f64 (/.f64 z a) (/.f64 t a))","a","-inf",0.1669921875],["(-.f64 (/.f64 z a) (/.f64 t a))","a","inf",0.169921875],["(-.f64 (/.f64 z a) (/.f64 t a))","a","0",0.142822265625],["(-.f64 (/.f64 z a) (/.f64 t a))","z","-inf",0.158935546875],["(-.f64 (/.f64 z a) (/.f64 t a))","z","inf",0.182861328125],["(-.f64 (/.f64 z a) (/.f64 t a))","z","0",0.1669921875],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","y","-inf",0.302001953125],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","y","inf",0.338134765625],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","y","0",0.60791015625],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","t","-inf",0.279052734375],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","t","inf",0.342041015625],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","t","0",0.382080078125],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","a","-inf",0.689208984375],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","a","inf",0.619140625],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","a","0",1.888916015625],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","z","-inf",0.340087890625],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","z","inf",0.3662109375],["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","z","0",0.452880859375]],"time":11.468017578125,"type":"series"},{"count":[[3,195]],"inputs":[["(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(-.f64 (/.f64 z a) (/.f64 t a))","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y z) a) (*.f64 y (neg.f64 (/.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 y z) a)) (*.f64 1 (*.f64 y (neg.f64 (/.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (/.f64 z a) y)) (*.f64 1 (*.f64 (neg.f64 (/.f64 t a)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z a) y) (*.f64 (neg.f64 (/.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (*.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y z) a) 1) (*.f64 (*.f64 y (neg.f64 (/.f64 t a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 z a) y) 1) (*.f64 (*.f64 (neg.f64 (/.f64 t a)) y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (neg.f64 (/.f64 t a))) (/.f64 (*.f64 y z) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 t a)) y) (*.f64 (/.f64 z a) y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (-.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 (-.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 t z) a) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (/.f64 (-.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 z t) a) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) a) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (*.f64 a (-.f64 z t))) (pow.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 a (-.f64 z t))) (cbrt.f64 (*.f64 a a))) (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 a (-.f64 z t))) (cbrt.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 a (-.f64 z t))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 y (*.f64 a (-.f64 z t)))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 y (-.f64 z t))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 t z)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 a (-.f64 t z))) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 a (-.f64 z t))) (*.f64 a (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 a (-.f64 z t))) a) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 a (-.f64 z t))) 1) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (-.f64 z t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (*.f64 a (-.f64 z t)))) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z a) y (*.f64 (neg.f64 (/.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 z a) (*.f64 y (neg.f64 (/.f64 t a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z a) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 t a)) (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 z t) a) 0) (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z t) a) (*.f64 (/.f64 (-.f64 z t) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 z t) a)) (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z t) a) (*.f64 0 (/.f64 (-.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 t a)) (*.f64 (neg.f64 (/.f64 z a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z a) (*.f64 a a)) (neg.f64 (/.f64 (*.f64 a t) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 t a)) (neg.f64 (/.f64 z a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (neg.f64 z) (neg.f64 a)) (*.f64 a a)) (/.f64 (*.f64 a t) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z a) (/.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 z a) (*.f64 a a)) (/.f64 (*.f64 a t) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 z a) 0) (/.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) (cbrt.f64 (/.f64 (-.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (/.f64 z a)) (neg.f64 (/.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 (*.f64 z (cbrt.f64 (pow.f64 a -2))) (*.f64 t (cbrt.f64 (pow.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (-.f64 t z) a))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 t z) a)) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (-.f64 t z)) (/.f64 1 (neg.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (-.f64 z t)) (pow.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 t z) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 z a) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 t a) 2)) (cbrt.f64 (/.f64 (*.f64 z t) (*.f64 a a))))) (-.f64 (cbrt.f64 (/.f64 z a)) (cbrt.f64 (/.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 t z) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (-.f64 t z)) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (-.f64 z t)) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) (cbrt.f64 (*.f64 a (-.f64 z t)))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) (cbrt.f64 (-.f64 z t))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a (-.f64 z t)) 1) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 t z)) a) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 z t)) (*.f64 a (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 z t)) (cbrt.f64 (*.f64 a a))) (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 z t)) (cbrt.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 z t)) 1) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 t z) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 t z) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 z (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 t))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 z (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) t)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 z (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 z (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 t (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 t (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 z (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 t (cbrt.f64 a)))) (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 z (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) t)) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 z (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 t))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 z a) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a t))) (*.f64 (*.f64 a a) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 z t) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (-.f64 z t)) (neg.f64 a)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z t) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 t z) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (-.f64 t z) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 a) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z a)) (cbrt.f64 (pow.f64 (/.f64 z a) 2)) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z a) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 (*.f64 z z)) a) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 z a)) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 z a) 2)) (cbrt.f64 (/.f64 z a)) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z a) 1 (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 -1 a) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) z (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 z (cbrt.f64 (pow.f64 a -2))) (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 t a) 2)) (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 t a)) (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) (/.f64 1 a) (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 -1 a) (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 t a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 t a) 2))) (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 t a) (/.f64 z a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 y (neg.f64 (/.f64 t a))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z a) y) (+.f64 (*.f64 (neg.f64 (/.f64 t a)) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 0) (fma.f64 (/.f64 (-.f64 z t) a) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) (*.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (-.f64 z t) a) y x)) (fma.f64 (/.f64 (-.f64 z t) a) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) (*.f64 0 (fma.f64 (/.f64 (-.f64 z t) a) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (*.f64 y z) a)) (*.f64 y (neg.f64 (/.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (/.f64 z a) y)) (*.f64 (neg.f64 (/.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 2)) (cbrt.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 z t) a) y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (+.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 z t) a) y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z t) a) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (-.f64 z t) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 z t) a) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 y (-.f64 t z)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 (/.f64 (-.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (-.f64 z t) a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 y (-.f64 z t)) a))))))"]],"rules":[["egg-rr",44],["egg-rr",95],["egg-rr",56]],"time":36.37890625,"type":"rewrite"},{"count":[[318,216]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 z a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 z a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(/.f64 z a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) y) a)) x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","x","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))","(+.f64 x (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","(+.f64 x (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","(+.f64 x (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","x","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","x","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 t))) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(/.f64 z a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(/.f64 z a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(/.f64 (-.f64 z t) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(/.f64 (-.f64 z t) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(/.f64 (-.f64 z t) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(/.f64 (-.f64 z t) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) a))","(/.f64 (-.f64 z t) a)","(/.f64 z a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 t a)) (/.f64 z a))","(/.f64 (-.f64 z t) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(-.f64 x (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) y) a)) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) y) a)) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 t)) y) a)) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 x (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 x (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 x (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)"]],"time":382.509033203125,"type":"simplify"},{"compiler":[[3166,920]],"time":25.2080078125,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) x)","fresh",12.361162295541048],["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","done",6.877508299645704],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) 3) y) x)","fresh",7.0885985340883115],["(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","done",4.40234375],["(+.f64 (*.f64 (/.f64 (/.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a)) y) x)","fresh",7.048208495014542],["(fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","fresh",18.524452248384474],["(fma.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) y) x)","fresh",18.67827330910431],["(fma.f64 (-.f64 z t) (/.f64 y a) x)","done",2.8779748177492825]],"compiler":[[21,13],[16,10],[14,9],[17,12],[15,10],[21,12],[25,13],[23,13],[13,8]],"count":[[223,9]],"kept":[{"done":[3,3],"fresh":[3,1],"new":[216,4],"picked":[1,1]}],"min-error":[0.0078125],"time":77.77001953125,"type":"prune"},{"accuracy":[0.140625],"baseline":[2.8779748177492825],"branch":[["x",2.8779748177492825,1],["y",1.368764367394987,2],["z",1.3783920714124909,3],["t",1.384903545982496,3],["a",0.142910009768442,3],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.14453125,3],["(/.f64 (*.f64 y (-.f64 z t)) a)",0.14453125,3],["(/.f64 (*.f64 y (-.f64 z t)) a)",0.14453125,3],["(*.f64 y (-.f64 z t))",0.140625,3],["(*.f64 y (-.f64 z t))",0.140625,3],["(-.f64 z t)",0.6318810677492827,3]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[14,9],[12,8],[12,8],[10,7],[10,7],[8,6],[209,68]],"count":[[15,3]],"inputs":[["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) 3) y) x)","(+.f64 (*.f64 (/.f64 (/.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a)) y) x)","(fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (cbrt.f64 (/.f64 (-.f64 z t) a)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) a) 2)) y) x)","(fma.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (*.f64 (-.f64 z t) y) (/.f64 1 a) x)","(fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 z t) y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 z t) y) a) 2)) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 x (/.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (-.f64 z t)) (cbrt.f64 (*.f64 a a))))","(fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"link":["."],"name":["Optimisation.CirclePacking:place from circle-packing-0.1.0.4, E"],"oracle":[34.82732060397668],"outputs":[["(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)"]],"time":167.93603515625,"times":[["x",5.51708984375],["y",15.2509765625],["z",15.69482421875],["t",16.239013671875],["a",16.52685546875],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",15.912841796875],["(/.f64 (*.f64 y (-.f64 z t)) a)",14.639892578125],["(/.f64 (*.f64 y (-.f64 z t)) a)",14.700927734375],["(*.f64 y (-.f64 z t))",17.076904296875],["(*.f64 y (-.f64 z t))",15.468017578125],["(-.f64 z t)",16.458984375]],"type":"regimes"},{"bstep":[[8.435834510446666e+115,3.915540548134431e+116,0.033203125],[-6.869939027593383e+306,-2.07587109097832e+302,0.135986328125]],"compiler":[[12,9],[10,7]],"method":["left-value","left-value"],"time":0.31201171875,"type":"bsearch"},{"compiler":[[52,20]],"inputs":[["(if (<=.f64 (*.f64 y (-.f64 z t)) -4999999999999999930155298801282288858501320919063181937624830367941782926336371924532423207114480333393189640196327307696676586425126051668137976185307698505365345832344687589284519925536573169820811633035563360005510084776652009298228906344280973600585744230586460911069533464925641061001338333875010535424) (+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x) (if (<=.f64 (*.f64 y (-.f64 z t)) 100000000000000001555941612946684302426820139692106143336977058043083378116475570326498538991504744767620628086784000) (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 y (-.f64 z t)) -4999999999999999930155298801282288858501320919063181937624830367941782926336371924532423207114480333393189640196327307696676586425126051668137976185307698505365345832344687589284519925536573169820811633035563360005510084776652009298228906344280973600585744230586460911069533464925641061001338333875010535424) (+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x) (if (<=.f64 (*.f64 y (-.f64 z t)) 100000000000000001555941612946684302426820139692106143336977058043083378116475570326498538991504744767620628086784000) (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)))","(if (<=.f64 (*.f64 y (-.f64 z t)) -4999999999999999930155298801282288858501320919063181937624830367941782926336371924532423207114480333393189640196327307696676586425126051668137976185307698505365345832344687589284519925536573169820811633035563360005510084776652009298228906344280973600585744230586460911069533464925641061001338333875010535424) (fma.f64 (/.f64 (-.f64 z t) a) y x) (if (<=.f64 (*.f64 y (-.f64 z t)) 100000000000000001555941612946684302426820139692106143336977058043083378116475570326498538991504744767620628086784000) (fma.f64 (/.f64 (-.f64 z t) a) y x) (fma.f64 (/.f64 (-.f64 z t) a) y x)))"]],"stop":[["fuel",1]],"time":26.06884765625,"type":"simplify"},{"time":0.007080078125,"type":"soundness"},{"compiler":[[52,20]],"remove-preprocessing":[[]],"time":12.60693359375,"type":"end"}]