[{"compiler":[[41,30]],"method":["search"],"sampling":[[12,0.0029196885760769935,0.8690939661455851,0.12798634527833797],[11,0.0,0.9965870339676138,0.0034129660323861666],[10,0.0,0.9965870339676138,0.0034129660323861666],[9,0.0,0.9965870339676138,0.0034129660323861666],[8,0.0,0.9965870339676138,0.0034129660323861666],[7,0.0,0.9965870339676138,0.0034129660323861666],[6,0.0,0.9965870339676138,0.0034129660323861666],[5,0.0,0.9965870339676138,0.0034129660323861666],[4,0.0,0.9965870339676138,0.0034129660323861666],[3,0.0,0.9965870339676138,0.0034129660323861666],[2,0.0,0.9965870339676138,0.0034129660323861666],[1,0.0,0.9965870339676138,0.0034129660323861666],[0,0.0,0.9965870339676138,0.0034129660323861666]],"time":326.572998046875,"type":"analyze"},{"outcomes":[["body",256,"invalid",623.91162109375,6047],["body",256,"valid",857.49951171875,8256]],"time":1497.260986328125,"type":"sample"},{"compiler":[[40,29]],"inputs":[["0","1","2","3","4","5","6"],["(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 y (+.f64 y (*.f64 x (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 z (+.f64 z (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 x (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 t (+.f64 t (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 x a))) x) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 x 3))))))))))","(/.f64 a (+.f64 a (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t x))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 x (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 b (+.f64 b (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 x c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 c (+.f64 c (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b x) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 z (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 y (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 t (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 y a))) y) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 y 3))))))))))","(/.f64 x (+.f64 x (*.f64 a (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t y))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 y (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 b (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 y c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 c (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b y) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 t (sqrt.f64 (+.f64 z a))) z) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 z 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 a (sqrt.f64 (+.f64 t z))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 z (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 b (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 z c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 c (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b z) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 a t))) a) (*.f64 (-.f64 b c) (-.f64 (+.f64 t (/.f64 5 6)) (/.f64 2 (*.f64 a 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 b a))) b) (*.f64 (-.f64 t c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 b 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 c a))) c) (*.f64 (-.f64 b t) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 c 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t b))) t) (*.f64 (-.f64 a c) (-.f64 (+.f64 b (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t c))) t) (*.f64 (-.f64 b a) (-.f64 (+.f64 c (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4","5","6"],["(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3)))))))))","(/.f64 y (+.f64 y (*.f64 x (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 y (+.f64 y (*.f64 x (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3)))))))))","(/.f64 z (+.f64 z (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 x (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 z (+.f64 z (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 x (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3)))))))))","(/.f64 t (+.f64 t (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 x a))) x) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 x 3))))))))))","(/.f64 t (+.f64 t (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 x a))) x) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 x 3)))))))))","(/.f64 a (+.f64 a (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t x))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 x (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 a (+.f64 a (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t x))) t) (*.f64 (-.f64 (/.f64 2 (*.f64 t 3)) (+.f64 x 5/6)) (-.f64 b c)))))))","(/.f64 b (+.f64 b (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 x c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 b (+.f64 b (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 c x)))))))","(/.f64 c (+.f64 c (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b x) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 c (+.f64 c (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 x b)))))))","(/.f64 x (+.f64 x (*.f64 z (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 y (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 z (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 y (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3)))))))))","(/.f64 x (+.f64 x (*.f64 t (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 y a))) y) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 y 3))))))))))","(/.f64 x (+.f64 x (*.f64 t (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 y a))) y) (*.f64 (-.f64 (/.f64 2 (*.f64 y 3)) (+.f64 a 5/6)) (-.f64 b c)))))))","(/.f64 x (+.f64 x (*.f64 a (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t y))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 y (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 a (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t y))) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 y 5/6) (/.f64 -2 (*.f64 t 3)))))))))","(/.f64 x (+.f64 x (*.f64 b (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 y c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 b (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 c y)))))))","(/.f64 x (+.f64 x (*.f64 c (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b y) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 c (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 y b)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 t (sqrt.f64 (+.f64 z a))) z) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 z 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 t (sqrt.f64 (+.f64 z a))) z) (*.f64 (-.f64 (/.f64 2 (*.f64 z 3)) (+.f64 a 5/6)) (-.f64 b c)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 a (sqrt.f64 (+.f64 t z))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 z (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 a (sqrt.f64 (+.f64 t z))) t) (*.f64 (-.f64 (/.f64 2 (*.f64 t 3)) (+.f64 z 5/6)) (-.f64 b c)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 b (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 z c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 b (sqrt.f64 (+.f64 t a))) t) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 c z)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 c (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b z) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 c (sqrt.f64 (+.f64 t a))) t) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 z b)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 a t))) a) (*.f64 (-.f64 b c) (-.f64 (+.f64 t (/.f64 5 6)) (/.f64 2 (*.f64 a 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) a) (*.f64 (-.f64 (/.f64 2 (*.f64 a 3)) (+.f64 t 5/6)) (-.f64 b c)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 b a))) b) (*.f64 (-.f64 t c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 b 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 b a))) b) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 b 3))) (-.f64 c t)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 c a))) c) (*.f64 (-.f64 b t) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 c 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 c a))) c) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 c 3))) (-.f64 t b)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t b))) t) (*.f64 (-.f64 a c) (-.f64 (+.f64 b (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t b))) t) (*.f64 (+.f64 (+.f64 b 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 c a)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t c))) t) (*.f64 (-.f64 b a) (-.f64 (+.f64 c (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t c))) t) (*.f64 (+.f64 (+.f64 c 5/6) (/.f64 -2 (*.f64 t 3))) (-.f64 a b)))))))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (+.f64 x (*.f64 y (pow.f64 (exp.f64 2) (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (+.f64 (+.f64 a 5/6) (/.f64 -2 (*.f64 t 3)))))))))"]],"symmetry":[[]],"time":171.301025390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))"]],"time":34.139892578125,"type":"simplify"},{"compiler":[[68,43]],"time":1.09521484375,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))","next",1.9569982131971562],["(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))","fresh",3.5031482240304803]],"compiler":[[35,23],[40,29],[35,23],[40,29]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.9726342254647707],"time":3.1728515625,"type":"prune"},{"compiler":[[158,66]],"locations":[["(/.f64 (sqrt.f64 (+.f64 t a)) t)",0.22265625,true],["(/.f64 2/3 t)",0.37890625,true],["(*.f64 (E.f64) (E.f64))",1.0,true],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))",2.4765582629901797,true]],"time":34.612060546875,"type":"localize"},{"count":[[4,56]],"series":[["(/.f64 (sqrt.f64 (+.f64 t a)) t)","a","-inf",0.453857421875],["(/.f64 (sqrt.f64 (+.f64 t a)) t)","a","inf",0.49609375],["(/.f64 (sqrt.f64 (+.f64 t a)) t)","a","0",0.3330078125],["(/.f64 (sqrt.f64 (+.f64 t a)) t)","t","-inf",0.451904296875],["(/.f64 (sqrt.f64 (+.f64 t a)) t)","t","inf",0.81103515625],["(/.f64 (sqrt.f64 (+.f64 t a)) t)","t","0",0.30810546875],["(/.f64 2/3 t)","t","-inf",0.240966796875],["(/.f64 2/3 t)","t","inf",0.279052734375],["(/.f64 2/3 t)","t","0",0.287841796875],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","b","-inf",1.012939453125],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","b","inf",0.474853515625],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","b","0",0.575927734375],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","c","-inf",0.492919921875],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","c","inf",0.455810546875],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","c","0",0.68505859375],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","a","-inf",0.458984375],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","a","inf",0.572998046875],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","a","0",0.73095703125],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","t","-inf",0.630859375],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","t","inf",0.8740234375],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","t","0",0.76806640625],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","z","-inf",0.382080078125],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","z","inf",0.489013671875],["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","z","0",1.14404296875]],"time":14.04296875,"type":"series"},{"count":[[4,177]],"inputs":[["(fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))","(*.f64 (E.f64) (E.f64))","(/.f64 2/3 t)","(/.f64 (sqrt.f64 (+.f64 t a)) t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))) (+.f64 (*.f64 (neg.f64 b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))) (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)) c) (+.f64 (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)) (neg.f64 b)) (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 c b) a) (+.f64 (*.f64 (-.f64 c b) (+.f64 (/.f64 -2/3 t) 5/6)) (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (-.f64 c b)) (+.f64 (*.f64 (+.f64 (/.f64 -2/3 t) 5/6) (-.f64 c b)) (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) (*.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 0) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 1/2) (*.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) (*.f64 0 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))) (*.f64 1/2 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))) (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 a (-.f64 c b))) (*.f64 (+.f64 (/.f64 -2/3 t) 5/6) (-.f64 c b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)) c)) (*.f64 (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 c b) a)) (*.f64 (-.f64 c b) (+.f64 (/.f64 -2/3 t) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 c (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) (*.f64 (neg.f64 b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))) (cbrt.f64 (pow.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 2)) (cbrt.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (+.f64 (+.f64 a 5/6) (/.f64 -2/3 t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (E.f64) (E.f64)) (*.f64 (*.f64 (E.f64) (E.f64)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (E.f64) (E.f64)) 0) (*.f64 (E.f64) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (E.f64) (E.f64)) 1/2) (*.f64 (*.f64 (E.f64) (E.f64)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (E.f64) (E.f64)) (*.f64 0 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (E.f64) (E.f64))) (*.f64 (E.f64) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (E.f64) (E.f64))) (*.f64 1/2 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (E.f64)) (neg.f64 (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (E.f64) (E.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (E.f64) (cbrt.f64 (E.f64))) (cbrt.f64 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (E.f64)) (*.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (E.f64) (E.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (E.f64) (E.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (*.f64 (E.f64) (cbrt.f64 (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (E.f64)) -1) (*.f64 (neg.f64 (E.f64)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (E.f64) -1) (*.f64 (E.f64) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (E.f64)) 1) (*.f64 (neg.f64 (E.f64)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (E.f64))) (*.f64 1 (neg.f64 (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (E.f64) (E.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (E.f64) (E.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (E.f64)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (E.f64) (E.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (E.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (E.f64) (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (E.f64) (E.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (E.f64) (E.f64)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 2)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 2/3 t) (*.f64 (/.f64 2/3 t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 2/3 t) 0) (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 2/3 t) 1/2) (*.f64 (/.f64 2/3 t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 2/3 t) (*.f64 0 (/.f64 2/3 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 2/3 t)) (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 2/3 t)) (*.f64 1/2 (/.f64 2/3 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 2/3 t) (/.f64 0 (/.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 t 2/3)) (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8/27 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2/3 t)) (cbrt.f64 (/.f64 4/9 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (cbrt.f64 (/.f64 2/3 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2/3 (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2/3 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2/3 (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2/3) (/.f64 (cbrt.f64 4/9) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2/3) (cbrt.f64 t)) (/.f64 (sqrt.f64 2/3) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2/3) (/.f64 (sqrt.f64 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (cbrt.f64 (/.f64 8/27 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2/3 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2/3 (cbrt.f64 (neg.f64 t))) (pow.f64 (cbrt.f64 (neg.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2/3 (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 8/27 t)) (cbrt.f64 (cbrt.f64 (*.f64 t t)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 t -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 t 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 8/27 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2/3 (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 8/27 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2/3 t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2/3 t)) (cbrt.f64 4/9)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (cbrt.f64 -2/3)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (cbrt.f64 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2/3) (cbrt.f64 t)) (sqrt.f64 2/3)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) 2/3) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2/3) (cbrt.f64 (/.f64 4/9 (*.f64 t t)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2/3) (cbrt.f64 (/.f64 4/9 (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8/27 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 8/27 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2/3) (/.f64 (sqrt.f64 2/3) (cbrt.f64 (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2/3 -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 8/27 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (/.f64 t 2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 2/3 t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2/3 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 t 2/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2/3 t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2/3 t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 2/3 t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 0) (/.f64 (sqrt.f64 (+.f64 t a)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 1/2) (*.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 0 (/.f64 (sqrt.f64 (+.f64 t a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (sqrt.f64 (+.f64 t a)) t)) (/.f64 (sqrt.f64 (+.f64 t a)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (sqrt.f64 (+.f64 t a)) t)) (*.f64 1/2 (/.f64 (sqrt.f64 (+.f64 t a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (sqrt.f64 (+.f64 t a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (/.f64 (sqrt.f64 (+.f64 t a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (+.f64 t a))) (/.f64 (sqrt.f64 (sqrt.f64 (+.f64 t a))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (sqrt.f64 (+.f64 t a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t)) (cbrt.f64 (*.f64 (+.f64 t a) (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 t a) (pow.f64 t -2))) (cbrt.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sqrt.f64 (+.f64 t a)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 t a))) (/.f64 (cbrt.f64 (+.f64 t a)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (+.f64 t a))) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 t)) (/.f64 (sqrt.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t)) (cbrt.f64 (/.f64 (+.f64 t a) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 t a)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (sqrt.f64 (+.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 (neg.f64 t))) (pow.f64 (cbrt.f64 (neg.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 t)) (cbrt.f64 (cbrt.f64 (*.f64 t t)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 t a)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (+.f64 t a))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 t)) (sqrt.f64 (sqrt.f64 (+.f64 t a)))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) (sqrt.f64 (+.f64 t a))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t)) (cbrt.f64 (+.f64 t a))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 t a) (pow.f64 t -2))) (cbrt.f64 (neg.f64 (sqrt.f64 (+.f64 t a))))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 t a) (pow.f64 t -2))) (cbrt.f64 (sqrt.f64 (+.f64 t a)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (sqrt.f64 (+.f64 t a))) (/.f64 (sqrt.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (+.f64 t a)))) (cbrt.f64 (/.f64 (+.f64 t a) (*.f64 t t)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (+.f64 t a)))) (cbrt.f64 (*.f64 (+.f64 t a) (pow.f64 t -2)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 (/.f64 (+.f64 t a) (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sqrt.f64 (+.f64 t a))) (cbrt.f64 (*.f64 (+.f64 t a) (pow.f64 t -2)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sqrt.f64 (+.f64 t a)) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 t a)) (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sqrt.f64 (+.f64 t a)) t) 3))))))"]],"rules":[["egg-rr",52],["egg-rr",56],["egg-rr",37],["egg-rr",32]],"time":43.68408203125,"type":"rewrite"},{"count":[[233,227]],"inputs":[["(*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 (-.f64 c b))) t)","(+.f64 (*.f64 (-.f64 c b) (+.f64 5/6 a)) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 c b) t)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 (-.f64 c b) (+.f64 5/6 a)) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 c b) t)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 (-.f64 c b) (+.f64 5/6 a)) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 c b) t)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 (-.f64 c b) (+.f64 5/6 a))","(*.f64 (-.f64 c b) (+.f64 5/6 a))","(+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(+.f64 (*.f64 (-.f64 (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z))) b) a) (+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(+.f64 (*.f64 (-.f64 (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z))) b) a) (+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(+.f64 (*.f64 (-.f64 (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z))) b) a) (+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(*.f64 a (-.f64 c b))","(*.f64 a (-.f64 c b))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(*.f64 (sqrt.f64 a) (/.f64 1 t))","(+.f64 (*.f64 (sqrt.f64 a) (/.f64 1 t)) (*.f64 1/2 (sqrt.f64 (/.f64 1 a))))","(+.f64 (*.f64 (sqrt.f64 a) (/.f64 1 t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) t)) (*.f64 1/2 (sqrt.f64 (/.f64 1 a)))))","(+.f64 (*.f64 (sqrt.f64 a) (/.f64 1 t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) t)) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 a))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (pow.f64 t 2))))))","(sqrt.f64 (/.f64 1 t))","(+.f64 (*.f64 1/2 (*.f64 a (sqrt.f64 (/.f64 1 (pow.f64 t 3))))) (sqrt.f64 (/.f64 1 t)))","(+.f64 (*.f64 1/2 (*.f64 a (sqrt.f64 (/.f64 1 (pow.f64 t 3))))) (+.f64 (sqrt.f64 (/.f64 1 t)) (*.f64 -1/8 (*.f64 (pow.f64 a 2) (sqrt.f64 (/.f64 1 (pow.f64 t 5)))))))","(+.f64 (*.f64 1/2 (*.f64 a (sqrt.f64 (/.f64 1 (pow.f64 t 3))))) (+.f64 (*.f64 1/16 (*.f64 (pow.f64 a 3) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (+.f64 (sqrt.f64 (/.f64 1 t)) (*.f64 -1/8 (*.f64 (pow.f64 a 2) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b))","(*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 (-.f64 c b))) t)","(/.f64 (fma.f64 (sqrt.f64 a) z (*.f64 -2/3 (-.f64 c b))) t)","(+.f64 (*.f64 (-.f64 c b) (+.f64 5/6 a)) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 c b) t)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(fma.f64 (+.f64 5/6 a) (-.f64 c b) (fma.f64 (/.f64 (-.f64 c b) t) -2/3 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 (-.f64 c b) (+.f64 5/6 a)) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 c b) t)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) (fma.f64 (+.f64 5/6 a) (-.f64 c b) (fma.f64 (/.f64 (-.f64 c b) t) -2/3 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 (-.f64 c b) (+.f64 5/6 a)) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 c b) t)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) (fma.f64 (+.f64 5/6 a) (-.f64 c b) (fma.f64 (/.f64 (-.f64 c b) t) -2/3 (fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -5)) (*.f64 (*.f64 t t) z)) 1/16 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 (-.f64 c b) (+.f64 5/6 a))","(*.f64 (-.f64 c b) (+.f64 5/6 a))","(+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(fma.f64 (+.f64 5/6 (/.f64 -2/3 t)) (-.f64 c b) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(+.f64 (*.f64 (-.f64 (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z))) b) a) (+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(fma.f64 (-.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) b) a (fma.f64 (+.f64 5/6 (/.f64 -2/3 t)) (-.f64 c b) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(+.f64 (*.f64 (-.f64 (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z))) b) a) (+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(fma.f64 (-.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) b) a (fma.f64 (-.f64 c b) (+.f64 5/6 (/.f64 -2/3 t)) (fma.f64 -1/8 (*.f64 (*.f64 (*.f64 a a) z) (sqrt.f64 (pow.f64 t -5))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(+.f64 (*.f64 (-.f64 (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z))) b) a) (+.f64 (*.f64 (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))) (-.f64 c b)) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(fma.f64 (-.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) b) a (fma.f64 (+.f64 5/6 (/.f64 -2/3 t)) (-.f64 c b) (fma.f64 (*.f64 -1/8 (*.f64 (*.f64 a a) z)) (sqrt.f64 (pow.f64 t -5)) (fma.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (pow.f64 t -7))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(*.f64 a (-.f64 c b))","(*.f64 a (-.f64 c b))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (-.f64 (/.f64 2/3 t) (+.f64 5/6 a)) b))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))","(*.f64 (-.f64 (/.f64 2/3 t) (+.f64 5/6 a)) b)","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))","(*.f64 (-.f64 (/.f64 2/3 t) (+.f64 5/6 a)) b)","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 -1 (*.f64 (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))) b))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (-.f64 c b)))","(*.f64 (sqrt.f64 a) (/.f64 1 t))","(/.f64 (sqrt.f64 a) t)","(+.f64 (*.f64 (sqrt.f64 a) (/.f64 1 t)) (*.f64 1/2 (sqrt.f64 (/.f64 1 a))))","(fma.f64 (sqrt.f64 (/.f64 1 a)) 1/2 (/.f64 (sqrt.f64 a) t))","(+.f64 (*.f64 (sqrt.f64 a) (/.f64 1 t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) t)) (*.f64 1/2 (sqrt.f64 (/.f64 1 a)))))","(+.f64 (/.f64 (sqrt.f64 a) t) (fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) t) (*.f64 1/2 (sqrt.f64 (/.f64 1 a)))))","(+.f64 (*.f64 (sqrt.f64 a) (/.f64 1 t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) t)) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 a))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (pow.f64 t 2))))))","(+.f64 (/.f64 (sqrt.f64 a) t) (fma.f64 (*.f64 -1/8 (sqrt.f64 (pow.f64 a -3))) t (fma.f64 1/2 (sqrt.f64 (/.f64 1 a)) (*.f64 (*.f64 1/16 (sqrt.f64 (pow.f64 a -5))) (*.f64 t t)))))","(sqrt.f64 (/.f64 1 t))","(+.f64 (*.f64 1/2 (*.f64 a (sqrt.f64 (/.f64 1 (pow.f64 t 3))))) (sqrt.f64 (/.f64 1 t)))","(fma.f64 (*.f64 1/2 a) (sqrt.f64 (pow.f64 t -3)) (sqrt.f64 (/.f64 1 t)))","(+.f64 (*.f64 1/2 (*.f64 a (sqrt.f64 (/.f64 1 (pow.f64 t 3))))) (+.f64 (sqrt.f64 (/.f64 1 t)) (*.f64 -1/8 (*.f64 (pow.f64 a 2) (sqrt.f64 (/.f64 1 (pow.f64 t 5)))))))","(fma.f64 (*.f64 1/2 a) (sqrt.f64 (pow.f64 t -3)) (fma.f64 (*.f64 -1/8 (*.f64 a a)) (sqrt.f64 (pow.f64 t -5)) (sqrt.f64 (/.f64 1 t))))","(+.f64 (*.f64 1/2 (*.f64 a (sqrt.f64 (/.f64 1 (pow.f64 t 3))))) (+.f64 (*.f64 1/16 (*.f64 (pow.f64 a 3) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (+.f64 (sqrt.f64 (/.f64 1 t)) (*.f64 -1/8 (*.f64 (pow.f64 a 2) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))))))","(fma.f64 1/2 (*.f64 a (sqrt.f64 (pow.f64 t -3))) (fma.f64 1/16 (*.f64 (pow.f64 a 3) (sqrt.f64 (pow.f64 t -7))) (fma.f64 (*.f64 -1/8 (*.f64 a a)) (sqrt.f64 (pow.f64 t -5)) (sqrt.f64 (/.f64 1 t)))))"]],"time":193.48193359375,"type":"simplify"},{"compiler":[[7866,3395]],"time":63.468994140625,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))","done",1.9569982131971562],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (-.f64 (/.f64 2/3 t) (+.f64 5/6 a)) b))) y x))","fresh",16.96937344775587],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) y x))","next",13.56377741731783]],"compiler":[[35,23],[33,22],[33,22],[33,22],[33,22]],"count":[[229,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[227,2],"picked":[1,1]}],"min-error":[0.00390625],"time":103.632080078125,"type":"prune"},{"compiler":[[139,63]],"locations":[["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))",0.1328125,true],["(/.f64 -2/3 t)",0.37890625,true],["(*.f64 (E.f64) (E.f64))",1.0,false],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))",3.014130407261306,true]],"time":32.4189453125,"type":"localize"},{"count":[[3,72]],"series":[["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","t","-inf",0.27587890625],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","t","inf",0.30712890625],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","t","0",0.385009765625],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","a","-inf",0.253173828125],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","a","inf",0.3330078125],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","a","0",0.364013671875],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","c","-inf",0.215087890625],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","c","inf",0.265869140625],["(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","c","0",0.43798828125],["(/.f64 -2/3 t)","t","-inf",0.137939453125],["(/.f64 -2/3 t)","t","inf",0.135009765625],["(/.f64 -2/3 t)","t","0",0.2939453125],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","c","-inf",0.276123046875],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","c","inf",0.2958984375],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","c","0",0.470947265625],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","z","-inf",0.404052734375],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","z","inf",0.3740234375],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","z","0",0.423095703125],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","t","-inf",0.408935546875],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","t","inf",0.3720703125],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","t","0",0.3837890625],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","a","-inf",0.349853515625],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","a","inf",0.64111328125],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","a","0",0.511962890625]],"time":8.864990234375,"type":"series"},{"count":[[3,188]],"inputs":[["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(/.f64 -2/3 t)","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (/.f64 (*.f64 -2/3 c) t)) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 5/6 a))) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5/6 c) (+.f64 (*.f64 (+.f64 a (/.f64 -2/3 t)) c) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c 5/6) (+.f64 (*.f64 c (+.f64 a (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (/.f64 (*.f64 -2/3 c) t) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 0) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 1/2) (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (*.f64 0 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) (*.f64 1/2 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 5/6 a))) 1) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2/3 c) t) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 5/6 c)) (*.f64 (+.f64 a (/.f64 -2/3 t)) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c 5/6)) (*.f64 c (+.f64 a (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 2)) (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (cbrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (cbrt.f64 (/.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 2) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (/.f64 1 t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) c (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 1 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 2)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 2)) (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) 2)) c) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) 2)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -2/3 t) 0) (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2/3 t) (*.f64 (/.f64 -2/3 t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -2/3 t) 1/2) (*.f64 (/.f64 -2/3 t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -2/3 t)) (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2/3 t) (*.f64 0 (/.f64 -2/3 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 -2/3 t)) (*.f64 1/2 (/.f64 -2/3 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 t -2/3)) (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -2/3 t) (/.f64 0 (/.f64 t -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -2/3) (/.f64 (cbrt.f64 4/9) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -2/3 t)) (cbrt.f64 (/.f64 4/9 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (cbrt.f64 (/.f64 -2/3 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2/3 (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2/3 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) -2/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2/3 (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (cbrt.f64 (/.f64 -8/27 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -8/27 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2/3 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -8/27 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 t) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 t -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 t -2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 t -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2/3 (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -8/27 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2/3 t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) -2/3) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (cbrt.f64 -2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (cbrt.f64 2/3)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -2/3 t)) (cbrt.f64 4/9)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2/3) (cbrt.f64 (/.f64 4/9 (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2/3) (cbrt.f64 (/.f64 4/9 (*.f64 t t)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -8/27 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -8/27 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2/3 (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -8/27 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2/3 -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (/.f64 t -2/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 -8/27 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -2/3 t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -2/3 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 t -2/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -2/3 t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -2/3 t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -2/3 t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 2/3 t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -2/3 t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 5/6 a)) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2/3 c) t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 -2/3 c) t) (*.f64 5/6 c)) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 -2/3 c) t) (*.f64 c 5/6)) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (+.f64 (*.f64 5/6 c) (/.f64 (*.f64 -2/3 c) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c a) (+.f64 (*.f64 c 5/6) (/.f64 (*.f64 -2/3 c) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 0) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 1/2) (*.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 5/6 c)) (*.f64 1 (*.f64 (+.f64 a (/.f64 -2/3 t)) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 c 5/6)) (*.f64 1 (*.f64 c (+.f64 a (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c a) (*.f64 c (+.f64 (/.f64 -2/3 t) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c 5/6) (*.f64 c (+.f64 a (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 0 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (*.f64 1/2 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 5/6 c) 1) (*.f64 (*.f64 (+.f64 a (/.f64 -2/3 t)) c) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c 5/6) 1) (*.f64 (*.f64 c (+.f64 a (/.f64 -2/3 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a c) (*.f64 (+.f64 (/.f64 -2/3 t) 5/6) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5/6 c) (*.f64 (+.f64 a (/.f64 -2/3 t)) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 a (/.f64 -2/3 t)) c) (*.f64 5/6 c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 a (/.f64 -2/3 t))) (*.f64 c 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 a (/.f64 -2/3 t))) (*.f64 5/6 c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5/6 c) (*.f64 c (+.f64 a (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) 5/6)) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 -2/3 t) 5/6) c) (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) 2)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c c)) (+.f64 (*.f64 (+.f64 5/6 a) (cbrt.f64 c)) (*.f64 (/.f64 -2/3 t) (cbrt.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c c)) (+.f64 (*.f64 (/.f64 -2/3 t) (cbrt.f64 c)) (*.f64 (+.f64 5/6 a) (cbrt.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 2)) (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (cbrt.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (fma.f64 -2/3 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 t (+.f64 125/216 (pow.f64 a 3))))) (*.f64 t (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (fma.f64 (+.f64 125/216 (pow.f64 a 3)) (neg.f64 t) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) 2/3))) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (fma.f64 2/3 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 (neg.f64 t) (+.f64 125/216 (pow.f64 a 3))))) (*.f64 (neg.f64 t) (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (fma.f64 (+.f64 125/216 (pow.f64 a 3)) t (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) -2/3))) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 -2/3 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 t (+.f64 125/216 (pow.f64 a 3)))) c) (*.f64 t (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 125/216 (pow.f64 a 3)) (neg.f64 t) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) 2/3)) c) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 2/3 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 (neg.f64 t) (+.f64 125/216 (pow.f64 a 3)))) c) (*.f64 (neg.f64 t) (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 125/216 (pow.f64 a 3)) t (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) -2/3)) c) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -2/3 c) (fma.f64 a (+.f64 a -5/6) 25/36)) (*.f64 t (*.f64 (+.f64 125/216 (pow.f64 a 3)) c))) (*.f64 t (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 2/3 c) (fma.f64 a (+.f64 a -5/6) 25/36)) (*.f64 (neg.f64 t) (*.f64 (+.f64 125/216 (pow.f64 a 3)) c))) (*.f64 (neg.f64 t) (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 125/216 (pow.f64 a 3)) c) t) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 -2/3 c))) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 125/216 (pow.f64 a 3)) c) (neg.f64 t)) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 2/3 c))) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (+.f64 125/216 (pow.f64 (+.f64 a (/.f64 -2/3 t)) 3))) (+.f64 25/36 (*.f64 (+.f64 a (/.f64 -2/3 t)) (-.f64 (+.f64 a (/.f64 -2/3 t)) 5/6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 125/216 (pow.f64 (+.f64 a (/.f64 -2/3 t)) 3)) c) (+.f64 25/36 (*.f64 (+.f64 a (/.f64 -2/3 t)) (-.f64 (+.f64 a (/.f64 -2/3 t)) 5/6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 5/6 a) c (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (+.f64 5/6 a) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 -2/3 t) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2/3 t) c (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 -2/3 c) t)) (pow.f64 (cbrt.f64 (/.f64 (*.f64 -2/3 c) t)) 2) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (/.f64 -2/3 t))) (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 -2/3 c) t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -2/3 t)) (*.f64 (cbrt.f64 (/.f64 4/9 (*.f64 t t))) c) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (/.f64 -2/3 t)) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2/3 c) (/.f64 1 t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 5/6 c (*.f64 (+.f64 a (/.f64 -2/3 t)) c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (+.f64 5/6 a)) 1 (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c 5/6 (*.f64 c (+.f64 a (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 5/6 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (+.f64 5/6 a)) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (+.f64 5/6 a)) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c (+.f64 5/6 a))) (pow.f64 (cbrt.f64 (*.f64 c (+.f64 5/6 a))) 2) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (+.f64 5/6 a))) (cbrt.f64 (pow.f64 (+.f64 5/6 a) 2)) (/.f64 (*.f64 -2/3 c) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 5/6 a)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 5/6 a) 2)) c) (/.f64 (*.f64 -2/3 c) t))))))"]],"rules":[["egg-rr",84],["egg-rr",52],["egg-rr",52]],"time":44.298095703125,"type":"rewrite"},{"count":[[260,217]],"inputs":[["(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(*.f64 c a)","(*.f64 c a)","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 c)) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c a)","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 -2/3 (/.f64 c t))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(fma.f64 c (+.f64 5/6 (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(fma.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) a (fma.f64 c (+.f64 5/6 (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(fma.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) a (fma.f64 (*.f64 (*.f64 (*.f64 a a) z) -1/8) (sqrt.f64 (pow.f64 t -5)) (fma.f64 c (+.f64 5/6 (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(fma.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) a (fma.f64 (*.f64 (*.f64 (*.f64 a a) z) -1/8) (sqrt.f64 (pow.f64 t -5)) (fma.f64 (+.f64 5/6 (/.f64 -2/3 t)) c (fma.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (pow.f64 t -7))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(*.f64 c a)","(*.f64 c a)","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 c)) t)","(/.f64 (fma.f64 (sqrt.f64 a) z (*.f64 -2/3 c)) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 (+.f64 5/6 a) c (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) (fma.f64 (+.f64 5/6 a) c (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) (fma.f64 (+.f64 5/6 a) c (fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -5)) (*.f64 (*.f64 t t) z)) 1/16 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 5/6 (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c a)","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c a)","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 c a))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 -2/3 (/.f64 c t))","(/.f64 (*.f64 -2/3 c) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))"]],"time":238.3837890625,"type":"simplify"},{"compiler":[[8178,3678]],"time":69.314208984375,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))","done",1.9569982131971562],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))) y x))","fresh",14.055959411184023],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) y x))","next",12.774687386648793]],"compiler":[[35,23],[34,22],[33,22],[34,22],[33,22]],"count":[[257,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[254,2],"picked":[1,0]}],"min-error":[0.00390625],"time":126.0,"type":"prune"},{"compiler":[[138,54]],"locations":[["(/.f64 -2/3 t)",0.37890625,false],["(*.f64 (E.f64) (E.f64))",1.0,false],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))",1.0663952404222408,true],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))",5.173363914023029,true]],"time":31.138916015625,"type":"localize"},{"count":[[2,44]],"series":[["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","z","-inf",0.239990234375],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","z","inf",0.214111328125],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","z","0",0.235107421875],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","t","-inf",0.2568359375],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","t","inf",0.2919921875],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","t","0",0.26806640625],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","a","-inf",0.294189453125],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","a","inf",0.27392578125],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","a","0",0.347900390625],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","c","-inf",0.330078125],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","c","inf",0.2861328125],["(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","c","0",0.340087890625],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","z","-inf",0.31591796875],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","z","inf",0.410888671875],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","z","0",0.39501953125],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","t","-inf",0.4189453125],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","t","inf",0.359130859375],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","t","0",1.77099609375],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","a","-inf",0.375],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","a","inf",0.465087890625],["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","a","0",0.403076171875]],"time":8.76708984375,"type":"series"},{"count":[[2,117]],"inputs":[["(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1/2) (*.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 0) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 0 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (sqrt.f64 (+.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 a t)) (cbrt.f64 t)) (/.f64 z (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (cbrt.f64 (*.f64 (+.f64 a t) (pow.f64 (/.f64 z t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (cbrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 a t) (pow.f64 (/.f64 z t) 2))) (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (cbrt.f64 (/.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z t) (sqrt.f64 (sqrt.f64 (+.f64 a t)))) (sqrt.f64 (sqrt.f64 (+.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z t) (cbrt.f64 (sqrt.f64 (+.f64 a t)))) (cbrt.f64 (+.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (sqrt.f64 (+.f64 a t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 a t) (pow.f64 (/.f64 z t) 2))) (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 (+.f64 a t)) (cbrt.f64 t)) z) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z)) (cbrt.f64 (*.f64 (+.f64 a t) (pow.f64 (/.f64 z t) 2)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) (sqrt.f64 (+.f64 a t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z (cbrt.f64 (*.f64 t t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 z)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (sqrt.f64 (+.f64 a t)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (sqrt.f64 (+.f64 a t)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 t)) (cbrt.f64 t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 z t)) (sqrt.f64 (+.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (/.f64 c (/.f64 t -2/3))) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))) (/.f64 c (/.f64 t -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 (+.f64 5/6 a) c)) (/.f64 c (/.f64 t -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (/.f64 c (/.f64 t -2/3)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 c (/.f64 t -2/3)) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5/6 c) (+.f64 (*.f64 (+.f64 a (/.f64 -2/3 t)) c) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c 5/6) (+.f64 (*.f64 c (+.f64 a (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 c (/.f64 t -2/3)) (+.f64 (*.f64 (+.f64 5/6 a) c) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 1/2) (*.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (*.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 0) (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) (*.f64 1/2 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (*.f64 0 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c 5/6)) (*.f64 c (+.f64 a (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 5/6 c)) (*.f64 (+.f64 a (/.f64 -2/3 t)) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (/.f64 c (/.f64 t -2/3))) (*.f64 (+.f64 5/6 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 5/6 a) c) (+.f64 (/.f64 c (/.f64 t -2/3)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) (cbrt.f64 (pow.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 2)) (cbrt.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) 1 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) 2)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) c (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) (pow.f64 (cbrt.f64 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))) 2) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (/.f64 1 t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 a t) (pow.f64 (/.f64 z t) 2))) (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (cbrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (neg.f64 z)) t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1 (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (cbrt.f64 (/.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 z t) (cbrt.f64 (sqrt.f64 (+.f64 a t)))) (cbrt.f64 (+.f64 a t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (sqrt.f64 (+.f64 a t)) t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 a t)) (cbrt.f64 t)) (/.f64 z (cbrt.f64 (*.f64 t t))) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (cbrt.f64 (*.f64 (+.f64 a t) (pow.f64 (/.f64 z t) 2))) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 z t) (sqrt.f64 (sqrt.f64 (+.f64 a t)))) (sqrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (sqrt.f64 (+.f64 a t))) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (/.f64 z t)) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))))))"]],"rules":[["egg-rr",58],["egg-rr",59]],"time":36.52099609375,"type":"rewrite"},{"count":[[161,154]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 1 t)) z)","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 t)) z) (*.f64 1/2 (*.f64 (*.f64 a z) (sqrt.f64 (/.f64 1 (pow.f64 t 3))))))","(+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 t)) z) (*.f64 1/2 (*.f64 (*.f64 a z) (sqrt.f64 (/.f64 1 (pow.f64 t 3)))))))","(+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 t)) z) (*.f64 1/2 (*.f64 (*.f64 a z) (sqrt.f64 (/.f64 1 (pow.f64 t 3))))))))","(*.f64 (sqrt.f64 a) (/.f64 z t))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(*.f64 c a)","(*.f64 c a)","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 c)) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 1 t)) z)","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 t)) z) (*.f64 1/2 (*.f64 (*.f64 a z) (sqrt.f64 (/.f64 1 (pow.f64 t 3))))))","(fma.f64 (sqrt.f64 (/.f64 1 t)) z (*.f64 (*.f64 1/2 (*.f64 a z)) (sqrt.f64 (pow.f64 t -3))))","(+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 t)) z) (*.f64 1/2 (*.f64 (*.f64 a z) (sqrt.f64 (/.f64 1 (pow.f64 t 3)))))))","(fma.f64 -1/8 (*.f64 (*.f64 (*.f64 a a) z) (sqrt.f64 (pow.f64 t -5))) (fma.f64 (sqrt.f64 (/.f64 1 t)) z (*.f64 (*.f64 1/2 (*.f64 a z)) (sqrt.f64 (pow.f64 t -3)))))","(+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 t)) z) (*.f64 1/2 (*.f64 (*.f64 a z) (sqrt.f64 (/.f64 1 (pow.f64 t 3))))))))","(fma.f64 (*.f64 (*.f64 (*.f64 a a) z) (sqrt.f64 (pow.f64 t -5))) -1/8 (fma.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (pow.f64 t -7))) (fma.f64 (sqrt.f64 (/.f64 1 t)) z (*.f64 (*.f64 1/2 (*.f64 a z)) (sqrt.f64 (pow.f64 t -3))))))","(*.f64 (sqrt.f64 a) (/.f64 z t))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))","(fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) -1/8 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) (fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -5)) (*.f64 (*.f64 t t) z)) 1/16 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(fma.f64 c (+.f64 5/6 (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (/.f64 1 t)) z))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(fma.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (pow.f64 t -3)) z) c) a (fma.f64 c (+.f64 5/6 (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(fma.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (pow.f64 t -3)) z) c) a (fma.f64 (*.f64 (*.f64 (*.f64 a a) z) (sqrt.f64 (pow.f64 t -5))) -1/8 (fma.f64 c (+.f64 5/6 (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 c (-.f64 5/6 (*.f64 2/3 (/.f64 1 t)))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(fma.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 (pow.f64 t -3)) z) c) a (fma.f64 (*.f64 (*.f64 (*.f64 a a) z) (sqrt.f64 (pow.f64 t -5))) -1/8 (fma.f64 c (+.f64 5/6 (/.f64 -2/3 t)) (fma.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (pow.f64 t -7))) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(*.f64 c a)","(*.f64 c a)","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 c)) t)","(/.f64 (fma.f64 (sqrt.f64 a) z (*.f64 -2/3 c)) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(fma.f64 (/.f64 c t) -2/3 (fma.f64 (+.f64 5/6 a) c (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) (fma.f64 (+.f64 5/6 a) c (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) (fma.f64 c (+.f64 5/6 a) (fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -5)) (*.f64 (*.f64 t t) z)) 1/16 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t))))"]],"time":149.69677734375,"type":"simplify"},{"compiler":[[7878,3361]],"time":64.981201171875,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))","done",1.9569982131971562],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))) y x))","next",14.055959411184023],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) y x))","done",12.774687386648793]],"compiler":[[35,23],[34,22],[33,22],[34,22]],"count":[[246,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[243,0],"picked":[1,1]}],"min-error":[0.00390625],"time":104.7099609375,"type":"prune"},{"compiler":[[142,61]],"locations":[["(/.f64 -2/3 t)",0.37890625,false],["(*.f64 (E.f64) (E.f64))",1.0,false],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))",1.5859209856333614,true],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))",3.014130407261306,true]],"time":32.328857421875,"type":"localize"},{"count":[[2,72]],"series":[["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","a","-inf",0.219970703125],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","a","inf",0.2490234375],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","a","0",0.324951171875],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","t","-inf",0.212158203125],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","t","inf",0.24609375],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","t","0",0.241943359375],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","c","-inf",0.35693359375],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","c","inf",0.3330078125],["(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))","c","0",0.409912109375],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","c","-inf",0.35693359375],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","c","inf",0.37109375],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","c","0",0.422119140625],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","z","-inf",0.22900390625],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","z","inf",0.424072265625],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","z","0",0.449951171875],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","t","-inf",0.26806640625],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","t","inf",0.279052734375],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","t","0",0.285888671875],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","a","-inf",0.300048828125],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","a","inf",0.35498046875],["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","a","0",0.4638671875]],"time":7.135009765625,"type":"series"},{"count":[[2,101]],"inputs":[["(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))","(fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (*.f64 c -2/3)) t) (*.f64 c a)) (*.f64 c 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (*.f64 c -2/3)) t) (*.f64 c 5/6)) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (*.f64 c -2/3)) t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (/.f64 -2/3 t) 5/6))) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 c -2/3) t) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 1/2) (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 0) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (*.f64 c -2/3)) t) 1) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))) (*.f64 1/2 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (*.f64 0 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 5/6 a)) (/.f64 (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (*.f64 c -2/3)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) 5/6)) (+.f64 (*.f64 c a) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))) (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 2)) (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) z) (/.f64 1 t) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (cbrt.f64 (/.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 z t) 2)) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))) 2) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (sqrt.f64 (sqrt.f64 (+.f64 a t))) (/.f64 z t)) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 a t))) (*.f64 (cbrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) 1 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 2)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 2)) (cbrt.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 1 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 c -2/3) t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 5/6 a)) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 c -2/3) t) (*.f64 c a)) (*.f64 c 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) 5/6)) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c 5/6) (+.f64 (*.f64 c a) (/.f64 (*.f64 c -2/3) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 1/2) (*.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 0) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) (*.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) 5/6)) 1) (*.f64 c a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (*.f64 1/2 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) (*.f64 0 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c a) (*.f64 c (+.f64 (/.f64 -2/3 t) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 2)) (cbrt.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (+.f64 (*.f64 (cbrt.f64 (*.f64 c c)) (/.f64 -2/3 t)) (*.f64 (cbrt.f64 (*.f64 c c)) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (+.f64 (*.f64 (cbrt.f64 (*.f64 c c)) (+.f64 5/6 a)) (*.f64 (cbrt.f64 (*.f64 c c)) (/.f64 -2/3 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 125/216 (pow.f64 a 3)) c) (neg.f64 t)) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 c 2/3))) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 125/216 (pow.f64 a 3)) c) t) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) (*.f64 c -2/3))) (*.f64 (fma.f64 a (+.f64 a -5/6) 25/36) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 c -2/3) (fma.f64 a (+.f64 a -5/6) 25/36)) (*.f64 t (*.f64 (+.f64 125/216 (pow.f64 a 3)) c))) (*.f64 t (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 c 2/3) (fma.f64 a (+.f64 a -5/6) 25/36)) (*.f64 (neg.f64 t) (*.f64 (+.f64 125/216 (pow.f64 a 3)) c))) (*.f64 (neg.f64 t) (fma.f64 a (+.f64 a -5/6) 25/36)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c (+.f64 (/.f64 -2/3 t) (+.f64 5/6 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 c -2/3) t) 1 (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (+.f64 5/6 a)) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 5/6 a) c (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 c (+.f64 5/6 a))) (cbrt.f64 (pow.f64 (*.f64 c (+.f64 5/6 a)) 2)) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 5/6 a)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 5/6 a) 2)) c) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (+.f64 5/6 a)) 1 (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 c (+.f64 5/6 a))) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 c (+.f64 5/6 a)) 2)) (cbrt.f64 (*.f64 c (+.f64 5/6 a))) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (+.f64 5/6 a))) (cbrt.f64 (pow.f64 (+.f64 5/6 a) 2)) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (+.f64 5/6 a) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 5/6 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (+.f64 5/6 a)) (/.f64 (*.f64 c -2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2/3 t) c (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (/.f64 -2/3 t))) (cbrt.f64 (/.f64 4/9 (*.f64 t t))) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (/.f64 -2/3 t)) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 c -2/3) t)) (pow.f64 (cbrt.f64 (/.f64 (*.f64 c -2/3) t)) 2) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c -2/3) (/.f64 1 t) (*.f64 c (+.f64 5/6 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 c -2/3) t) (*.f64 c (+.f64 5/6 a)))))))"]],"rules":[["egg-rr",54],["egg-rr",47]],"time":32.01806640625,"type":"rewrite"},{"count":[[173,138]],"inputs":[["(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))))","(*.f64 c a)","(*.f64 c a)","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 c)) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t)))))","(+.f64 (*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t))))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t))))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(+.f64 (*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t))))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 -2/3 (/.f64 c t))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 5/6 c))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(*.f64 c a)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(*.f64 c a)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))","(fma.f64 (/.f64 c t) -2/3 (fma.f64 (sqrt.f64 (/.f64 1 t)) z (*.f64 5/6 c)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) a (fma.f64 (sqrt.f64 (/.f64 1 t)) z (*.f64 5/6 c))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z)))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) a (fma.f64 -1/8 (*.f64 (*.f64 (*.f64 a a) z) (sqrt.f64 (pow.f64 t -5))) (fma.f64 (sqrt.f64 (/.f64 1 t)) z (*.f64 5/6 c)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 a (+.f64 c (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 t 3))) z)))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 a 2) z) (sqrt.f64 (/.f64 1 (pow.f64 t 5))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (/.f64 1 (pow.f64 t 7))))) (+.f64 (*.f64 5/6 c) (*.f64 (sqrt.f64 (/.f64 1 t)) z))))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 (fma.f64 (*.f64 1/2 (sqrt.f64 (pow.f64 t -3))) z c) a (fma.f64 -1/8 (*.f64 (*.f64 (*.f64 a a) z) (sqrt.f64 (pow.f64 t -5))) (fma.f64 1/16 (*.f64 (*.f64 (pow.f64 a 3) z) (sqrt.f64 (pow.f64 t -7))) (fma.f64 (sqrt.f64 (/.f64 1 t)) z (*.f64 5/6 c))))))","(*.f64 c a)","(*.f64 c a)","(/.f64 (+.f64 (*.f64 (sqrt.f64 a) z) (*.f64 -2/3 c)) t)","(/.f64 (fma.f64 (sqrt.f64 a) z (*.f64 -2/3 c)) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 (+.f64 5/6 a) c (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) -1/8 (fma.f64 (+.f64 5/6 a) c (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t))))))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 3))) (*.f64 t z))) (+.f64 (*.f64 c (+.f64 5/6 a)) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 a 5))) (*.f64 (pow.f64 t 2) z))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z)) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(fma.f64 -2/3 (/.f64 c t) (fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -3)) (*.f64 t z)) -1/8 (fma.f64 c (+.f64 5/6 a) (fma.f64 (*.f64 (sqrt.f64 (pow.f64 a -5)) (*.f64 (*.f64 t t) z)) 1/16 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 a)) z) (*.f64 (sqrt.f64 a) (/.f64 z t)))))))","(*.f64 c (+.f64 5/6 a))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (+.f64 5/6 a))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 c (+.f64 5/6 a)) (*.f64 (/.f64 z t) (sqrt.f64 (+.f64 a t)))))","(+.f64 (/.f64 (+.f64 (*.f64 -2/3 c) (*.f64 z (sqrt.f64 (+.f64 a t)))) t) (*.f64 c (+.f64 5/6 a)))","(*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)) (*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t)))))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t)))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(+.f64 (*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t))))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(+.f64 (*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t))))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(+.f64 (*.f64 -1 (*.f64 c (+.f64 (*.f64 -1 (+.f64 5/6 a)) (*.f64 2/3 (/.f64 1 t))))) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))","(fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 c (-.f64 (+.f64 5/6 a) (*.f64 2/3 (/.f64 1 t))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 -1 (*.f64 c (+.f64 (*.f64 2/3 (/.f64 1 t)) (*.f64 -1 (+.f64 5/6 a)))))","(*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)))","(*.f64 -2/3 (/.f64 c t))","(/.f64 (*.f64 -2/3 c) t)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(*.f64 c (+.f64 5/6 a))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 c (+.f64 5/6 a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (*.f64 5/6 c))","(fma.f64 -2/3 (/.f64 c t) (*.f64 5/6 c))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(*.f64 c a)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(*.f64 c a)","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))","(+.f64 (*.f64 -2/3 (/.f64 c t)) (+.f64 (*.f64 5/6 c) (*.f64 c a)))","(fma.f64 -2/3 (/.f64 c t) (*.f64 c (+.f64 5/6 a)))"]],"time":239.81591796875,"type":"simplify"},{"compiler":[[7274,3221]],"time":63.47802734375,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))","done",1.9569982131971562],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))) y x))","done",14.055959411184023],["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) y x))","done",12.774687386648793]],"compiler":[[35,23],[34,22],[33,22]],"count":[[230,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[227,0],"picked":[1,1]}],"min-error":[0.00390625],"time":95.358154296875,"type":"prune"},{"accuracy":[1.956998213197156],"baseline":[1.9569982131971562],"branch":[["x",1.956998213197156,1],["y",1.956998213197156,1],["z",1.9569982131971562,1],["t",1.956998213197156,1],["a",1.956998213197156,1],["b",1.956998213197156,1],["c",1.956998213197156,1],["(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))",1.956998213197156,1],["(*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))",1.956998213197156,1],["(exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3)))))))",1.956998213197156,1],["(*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))",1.956998213197156,1],["(-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3)))))",1.956998213197156,1],["(-.f64 b c)",1.956998213197156,1]],"compiler":[[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[40,29],[36,27],[34,26],[33,25],[31,23],[10,8],[173,86]],"count":[[6,1]],"inputs":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (fma.f64 c (/.f64 -2/3 t) (*.f64 c (+.f64 5/6 a))))) y x))","(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t)) (*.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t)))) y x))","(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 (-.f64 (/.f64 2/3 t) (+.f64 5/6 a)) b))) y x))","(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 (sqrt.f64 (+.f64 a t)) (/.f64 z t) (*.f64 c (+.f64 (+.f64 5/6 a) (/.f64 -2/3 t))))) y x))","(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))","(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))"]],"link":["."],"name":["Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, I"],"oracle":[29.360258706993147],"outputs":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))"]],"time":47.885009765625,"times":[["x",4.02099609375],["y",4.155029296875],["z",3.583984375],["t",3.613037109375],["a",3.69189453125],["b",3.554931640625],["c",3.7119140625],["(/.f64 x (+.f64 x (*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))))",2.248046875],["(*.f64 y (exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))))",2.291015625],["(exp.f64 (*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3)))))))",2.223876953125],["(*.f64 2 (-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3))))))",3.39404296875],["(-.f64 (/.f64 (*.f64 z (sqrt.f64 (+.f64 t a))) t) (*.f64 (-.f64 b c) (-.f64 (+.f64 a (/.f64 5 6)) (/.f64 2 (*.f64 t 3)))))",3.471923828125],["(-.f64 b c)",3.705078125]],"type":"regimes"},{"compiler":[[35,23]],"inputs":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 c b) (-.f64 a (+.f64 (/.f64 2/3 t) -5/6))))) y x))","(/.f64 x (fma.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) (fma.f64 z (/.f64 (sqrt.f64 (+.f64 t a)) t) (*.f64 (-.f64 b c) (+.f64 (/.f64 2/3 t) (-.f64 -5/6 a))))) y x))"]],"stop":[["done",1]],"time":28.2978515625,"type":"simplify"},{"time":0.02294921875,"type":"soundness"},{"compiler":[[35,23]],"remove-preprocessing":[[]],"time":13.78515625,"type":"end"}]