[{"compiler":[[19,13]],"method":["search"],"sampling":[[12,0.3003408675663195,0.56070129496959,0.13895783746409052],[11,0.27303715233301773,0.629935715739748,0.09702713192723422],[10,0.23793237560448688,0.6669907578420862,0.09507686655342695],[9,0.19502653738072695,0.795708272513366,0.009265190105907095],[8,0.1404191069141234,0.8581167644751986,0.0014641286106780171],[7,0.09361273794274894,0.904923133446573,0.0014641286106780171],[6,0.062408491961832624,0.9361273794274894,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":217.788818359375,"type":"analyze"},{"outcomes":[["body",256,"invalid",415.566650390625,6081],["body",256,"valid",606.563232421875,8256]],"time":1037.8671875,"type":"sample"},{"compiler":[[18,12]],"inputs":[["0","1","2"],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 k (pow.f64 a m)) (+.f64 (+.f64 1 (*.f64 10 a)) (*.f64 a a)))","(/.f64 (*.f64 m (pow.f64 k a)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 a (pow.f64 m k)) (+.f64 (+.f64 1 (*.f64 10 m)) (*.f64 m m)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 1 (*.f64 k (+.f64 10 k))))","(/.f64 (*.f64 k (pow.f64 a m)) (+.f64 (+.f64 1 (*.f64 10 a)) (*.f64 a a)))","(/.f64 (*.f64 k (pow.f64 a m)) (+.f64 1 (*.f64 a (+.f64 10 a))))","(/.f64 (*.f64 m (pow.f64 k a)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 (pow.f64 k a) m) (+.f64 1 (*.f64 k (+.f64 10 k))))","(/.f64 (*.f64 a (pow.f64 m k)) (+.f64 (+.f64 1 (*.f64 10 m)) (*.f64 m m)))","(/.f64 (*.f64 a (pow.f64 m k)) (+.f64 1 (*.f64 m (+.f64 10 m))))"]],"symmetry":[[]],"time":84.408935546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))"]],"time":20.60791015625,"type":"simplify"},{"compiler":[[30,17]],"time":0.505126953125,"type":"eval"},{"alts":[["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","next",1.2466182248680318]],"compiler":[[15,10],[15,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[1.2466182248680318],"time":2.56103515625,"type":"prune"},{"compiler":[[37,18]],"locations":[["(*.f64 a (pow.f64 k m))",0.015625,true],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))",1.2388057248680318,true]],"time":8.47998046875,"type":"localize"},{"count":[[2,72]],"series":[["(*.f64 a (pow.f64 k m))","m","-inf",0.181884765625],["(*.f64 a (pow.f64 k m))","m","inf",0.158935546875],["(*.f64 a (pow.f64 k m))","m","0",0.31298828125],["(*.f64 a (pow.f64 k m))","k","-inf",8.625],["(*.f64 a (pow.f64 k m))","k","inf",4.40283203125],["(*.f64 a (pow.f64 k m))","k","0",6.27587890625],["(*.f64 a (pow.f64 k m))","a","-inf",0.26904296875],["(*.f64 a (pow.f64 k m))","a","inf",0.317138671875],["(*.f64 a (pow.f64 k m))","a","0",0.2861328125],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","m","-inf",0.63623046875],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","m","inf",0.683837890625],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","m","0",0.62109375],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","k","-inf",0.993896484375],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","k","inf",0.844970703125],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","k","0",0.5439453125],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","a","-inf",0.377197265625],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","a","inf",0.552978515625],["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","a","0",22.970947265625]],"time":49.385009765625,"type":"series"},{"count":[[2,92]],"inputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","(*.f64 a (pow.f64 k m))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) (*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 0) (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) (*.f64 0 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 a (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (*.f64 k (+.f64 10 k)))) (/.f64 (*.f64 a (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 a (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (pow.f64 k m)) (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 2)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (pow.f64 k m)) (/.f64 1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 10 k) 1)) (*.f64 a (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) (neg.f64 1/3)) (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 2)) (fma.f64 k (+.f64 10 k) 1)) (cbrt.f64 (*.f64 a (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)) (*.f64 (neg.f64 a) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 a) (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 2))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (*.f64 a (pow.f64 k m)))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 k m)))) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) a) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) (neg.f64 1/3)) (*.f64 a (pow.f64 k m))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k m) (/.f64 a (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 2))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 k m))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 2))) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 a) (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 a (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (pow.f64 k m)) (*.f64 (*.f64 a (pow.f64 k m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (pow.f64 k m)) 0) (*.f64 a (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (pow.f64 k m)) (*.f64 0 (*.f64 a (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 a (pow.f64 k m))) (*.f64 a (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 a) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (pow.f64 k m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 2)) (cbrt.f64 (*.f64 a (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (pow.f64 k m))) (cbrt.f64 (pow.f64 k (*.f64 2 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 k m) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 (cbrt.f64 (pow.f64 k (*.f64 2 m))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 a) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 a a)) (pow.f64 k m)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (pow.f64 k m) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (pow.f64 k m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 k (*.f64 2 m))) a) (cbrt.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k (*.f64 2 m))) (*.f64 a (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a) (neg.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 k m)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 k m))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 a) (pow.f64 k m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 a) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 3))))))"]],"rules":[["egg-rr",34],["egg-rr",58]],"time":27.86083984375,"type":"rewrite"},{"count":[[164,135]],"inputs":[["(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","a","(+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))","(+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m))))","(+.f64 (*.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (*.f64 -10 k) 1))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (*.f64 -10 k) 1)) (*.f64 (*.f64 -99 (*.f64 (neg.f64 a) (pow.f64 k m))) (*.f64 k k)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(fma.f64 (neg.f64 (pow.f64 k 3)) (*.f64 -10 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 -99))) (+.f64 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (*.f64 -10 k) 1)) (*.f64 (*.f64 -99 (*.f64 (neg.f64 a) (pow.f64 k m))) (*.f64 k k))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(fma.f64 (/.f64 (*.f64 (pow.f64 k m) a) (pow.f64 k 3)) -10 (/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 k m) a) (pow.f64 k 3)) -10 (/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k))) (/.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 k m) a) (pow.f64 k 3)) -10 (/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k))) (/.f64 (*.f64 -10 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 -99))) (pow.f64 k 5))) (/.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (pow.f64 k 4)))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 3)) (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(-.f64 (fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 3)) (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k))) (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))) (pow.f64 k 4)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 3)) (+.f64 (/.f64 (+.f64 (*.f64 10 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))) (*.f64 10 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))))) (pow.f64 k 5)) (-.f64 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k)) (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))) (pow.f64 k 4)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 a (fma.f64 (+.f64 k 10) k 1))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (fma.f64 (*.f64 a (log.f64 k)) m a) (fma.f64 (+.f64 k 10) k 1))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(/.f64 (fma.f64 (*.f64 1/2 a) (pow.f64 (*.f64 (log.f64 k) m) 2) (fma.f64 (*.f64 a (log.f64 k)) m a)) (fma.f64 (+.f64 k 10) k 1))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (/.f64 (fma.f64 (*.f64 1/2 a) (pow.f64 (*.f64 (log.f64 k) m) 2) (fma.f64 (*.f64 a (log.f64 k)) m a)) (fma.f64 (+.f64 k 10) k 1)) (/.f64 (*.f64 1/6 (*.f64 a (pow.f64 (*.f64 (log.f64 k) m) 3))) (fma.f64 (+.f64 k 10) k 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 (+.f64 k 10) k 1))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","a","(+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))","(fma.f64 (*.f64 a (log.f64 k)) m a)","(+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m))))","(fma.f64 (*.f64 1/2 a) (pow.f64 (*.f64 (log.f64 k) m) 2) (fma.f64 (*.f64 a (log.f64 k)) m a))","(+.f64 (*.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))))","(fma.f64 1/6 (*.f64 a (pow.f64 (*.f64 (log.f64 k) m) 3)) (fma.f64 (*.f64 1/2 a) (pow.f64 (*.f64 (log.f64 k) m) 2) (fma.f64 (*.f64 a (log.f64 k)) m a)))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)"]],"time":271.462158203125,"type":"simplify"},{"compiler":[[3287,1823]],"time":35.669921875,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))) (fma.f64 k (+.f64 10 k) 1))","fresh",32.60549906857066],["(*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))","fresh",1.303297033478684],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","next",1.2505244748680318]],"compiler":[[31,21],[26,19],[15,10],[31,21],[26,19],[15,10]],"count":[[136,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[135,3],"picked":[1,0]}],"min-error":[1.2192744748680318],"time":35.924072265625,"type":"prune"},{"compiler":[[42,23]],"locations":[["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))",0.31361820483038144,true],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)",1.1356983503977487,true]],"time":9.98193359375,"type":"localize"},{"count":[[2,60]],"series":[["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))","m","-inf",0.458984375],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))","m","inf",0.4609375],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))","m","0",0.423828125],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))","k","-inf",0.818115234375],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))","k","inf",0.56689453125],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))","k","0",0.43896484375],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","a","-inf",0.20703125],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","a","inf",0.179931640625],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","a","0",0.198974609375],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","m","-inf",0.18603515625],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","m","inf",0.192138671875],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","m","0",0.289794921875],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","k","-inf",0.3720703125],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","k","inf",0.320068359375],["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","k","0",0.343994140625]],"time":5.77392578125,"type":"series"},{"count":[[2,142]],"inputs":[["(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 0) (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) (*.f64 0 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) (cbrt.f64 a)) (fma.f64 k (+.f64 10 k) 1)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a -1) (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k))))) (/.f64 (neg.f64 (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) (cbrt.f64 a)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) (cbrt.f64 a)) 1) (/.f64 (cbrt.f64 (*.f64 a a)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) (cbrt.f64 a)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) (cbrt.f64 a)) -1) (/.f64 (cbrt.f64 (*.f64 a a)) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) (fma.f64 k (+.f64 10 k) 1)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 k m) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) -1) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 k m) a) (/.f64 1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (/.f64 (*.f64 (pow.f64 k m) (cbrt.f64 a)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) (*.f64 a (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) a) (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 10 k) 1)) (*.f64 (pow.f64 k m) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (fma.f64 k (+.f64 10 k) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 k m)) (/.f64 a (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) -1) (/.f64 a (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2) (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) (neg.f64 1/3)) (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (*.f64 (pow.f64 k m) a))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) a) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 k m) a) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k m) (/.f64 a (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a (neg.f64 (pow.f64 k m))) 1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) a)) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) a)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (neg.f64 (pow.f64 k m))) 1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 a (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 k m) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 0) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) (*.f64 0 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (*.f64 k (+.f64 10 k)))) (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) (neg.f64 1/3)) (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))) 1) (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (neg.f64 (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 k (+.f64 m m)))) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k))))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 k (+.f64 m m)))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) -1) (/.f64 (cbrt.f64 (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 k m)) (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (/.f64 1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (fma.f64 k (+.f64 10 k) 1)) (cbrt.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)) (neg.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (pow.f64 k m) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (/.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (cbrt.f64 (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) -1) (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2)) (/.f64 (neg.f64 (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2) (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) -1) (/.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)) (cbrt.f64 (pow.f64 k (+.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 k m)) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) (neg.f64 1/3)) (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 k (+.f64 m m)))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (neg.f64 (pow.f64 k m)))) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (pow.f64 k m))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 2))) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 k m) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (pow.f64 k m) (-.f64 -1 (*.f64 k (+.f64 10 k)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) 3))))))"]],"rules":[["egg-rr",60],["egg-rr",82]],"time":36.405029296875,"type":"rewrite"},{"count":[[202,208]],"inputs":[["(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(exp.f64 (*.f64 (log.f64 k) m))","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m)))))) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (*.f64 -10 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 5))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (*.f64 10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 5)))))))","(/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (*.f64 -10 k) 1))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (*.f64 -10 k) 1)) (*.f64 (neg.f64 (*.f64 k k)) (*.f64 -99 (*.f64 (pow.f64 k m) a))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(-.f64 (+.f64 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (*.f64 -10 k) 1)) (*.f64 (neg.f64 (*.f64 k k)) (*.f64 -99 (*.f64 (pow.f64 k m) a)))) (*.f64 (pow.f64 k 3) (*.f64 -10 (*.f64 (+.f64 -99 1) (*.f64 (pow.f64 k m) a)))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k)) (/.f64 (*.f64 (pow.f64 k m) a) (/.f64 (pow.f64 k 3) -10)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k)) (/.f64 (*.f64 (pow.f64 k m) a) (/.f64 (pow.f64 k 3) -10))) (/.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 k m) a) (*.f64 k k)) (fma.f64 -10 (/.f64 (*.f64 (pow.f64 k m) a) (pow.f64 k 3)) (/.f64 (*.f64 (neg.f64 -10) (*.f64 (+.f64 -99 1) (*.f64 (pow.f64 k m) a))) (pow.f64 k 5)))) (/.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (pow.f64 k 4)))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 3)) (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(-.f64 (fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 3)) (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k))) (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))) (pow.f64 k 4)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 3)) (+.f64 (/.f64 (+.f64 (*.f64 10 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))) (*.f64 10 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))))) (pow.f64 k 5)) (-.f64 (/.f64 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 k k)) (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))) (pow.f64 k 4)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 a (+.f64 (*.f64 (log.f64 k) m) 1)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(/.f64 (+.f64 (*.f64 1/2 (*.f64 a (pow.f64 (*.f64 (log.f64 k) m) 2))) (*.f64 a (+.f64 (*.f64 (log.f64 k) m) 1))) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (/.f64 (+.f64 (*.f64 1/2 (*.f64 a (pow.f64 (*.f64 (log.f64 k) m) 2))) a) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (+.f64 (*.f64 (*.f64 a (log.f64 k)) m) (*.f64 1/6 (*.f64 a (pow.f64 (*.f64 (log.f64 k) m) 3)))) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(exp.f64 (*.f64 (log.f64 k) m))","(pow.f64 k m)","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))","(*.f64 (pow.f64 k m) (+.f64 1 (*.f64 -10 k)))","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m))))))","(+.f64 (*.f64 (pow.f64 k m) (+.f64 1 (*.f64 -10 k))) (*.f64 (neg.f64 (*.f64 k k)) (*.f64 -99 (pow.f64 k m))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m)))))) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))))","(-.f64 (+.f64 (*.f64 (pow.f64 k m) (+.f64 1 (*.f64 -10 k))) (*.f64 (neg.f64 (*.f64 k k)) (*.f64 -99 (pow.f64 k m)))) (*.f64 (pow.f64 k 3) (*.f64 -10 (*.f64 (pow.f64 k m) (+.f64 -99 1)))))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))","(/.f64 (pow.f64 k m) (*.f64 k k))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 (pow.f64 k m) (pow.f64 k 3)) (/.f64 (pow.f64 k m) (*.f64 k k)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))))","(-.f64 (fma.f64 -10 (/.f64 (pow.f64 k m) (pow.f64 k 3)) (/.f64 (pow.f64 k m) (*.f64 k k))) (/.f64 (*.f64 -99 (pow.f64 k m)) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (*.f64 -10 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 5))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))))","(-.f64 (-.f64 (fma.f64 -10 (/.f64 (pow.f64 k m) (pow.f64 k 3)) (/.f64 (pow.f64 k m) (*.f64 k k))) (/.f64 (*.f64 -10 (*.f64 (pow.f64 k m) (+.f64 -99 1))) (pow.f64 k 5))) (/.f64 (*.f64 -99 (pow.f64 k m)) (pow.f64 k 4)))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))","(/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (*.f64 k k))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (*.f64 k k)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))))","(-.f64 (fma.f64 -10 (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (*.f64 k k))) (/.f64 (*.f64 -99 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (*.f64 10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 5)))))))","(+.f64 (-.f64 (fma.f64 -10 (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (*.f64 k k))) (/.f64 (*.f64 -99 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 4))) (*.f64 10 (/.f64 (+.f64 (*.f64 -99 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (pow.f64 k 5))))","(/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (+.f64 (*.f64 (log.f64 k) m) 1) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(/.f64 (+.f64 (+.f64 (*.f64 (log.f64 k) m) 1) (*.f64 1/2 (pow.f64 (*.f64 (log.f64 k) m) 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(+.f64 (/.f64 (+.f64 (*.f64 (log.f64 k) m) 1) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (+.f64 (*.f64 1/6 (pow.f64 (*.f64 (log.f64 k) m) 3)) (*.f64 1/2 (pow.f64 (*.f64 (log.f64 k) m) 2))) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))"]],"time":244.506103515625,"type":"simplify"},{"compiler":[[5503,3195]],"time":54.708984375,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) 3) a)","fresh",1.2909145139418],["(*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))","fresh",1.303297033478684],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","next",1.2505244748680318]],"compiler":[[18,13],[26,19],[23,15],[18,13],[26,19],[23,15]],"count":[[211,3]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[208,2],"picked":[1,0]}],"min-error":[1.2192744748680318],"time":79.696044921875,"type":"prune"},{"compiler":[[81,28]],"locations":[["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))",0.0078125,true],["(cbrt.f64 (pow.f64 k (+.f64 m m)))",0.0078125,true],["(cbrt.f64 (pow.f64 k m))",0.23627713485282867,true],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))",1.2388057248680318,true]],"time":18.741943359375,"type":"localize"},{"count":[[4,120]],"series":[["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","a","-inf",0.498046875],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","a","inf",1.51904296875],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","a","0",1.527099609375],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","m","-inf",1.580078125],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","m","inf",1.765869140625],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","m","0",1.29296875],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","k","-inf",1.111083984375],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","k","inf",1.02197265625],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","k","0",0.89990234375],["(cbrt.f64 (pow.f64 k (+.f64 m m)))","m","-inf",1.0],["(cbrt.f64 (pow.f64 k (+.f64 m m)))","m","inf",0.993896484375],["(cbrt.f64 (pow.f64 k (+.f64 m m)))","m","0",0.6630859375],["(cbrt.f64 (pow.f64 k (+.f64 m m)))","k","-inf",1.6669921875],["(cbrt.f64 (pow.f64 k (+.f64 m m)))","k","inf",1.18603515625],["(cbrt.f64 (pow.f64 k (+.f64 m m)))","k","0",0.984130859375],["(cbrt.f64 (pow.f64 k m))","m","-inf",0.97509765625],["(cbrt.f64 (pow.f64 k m))","m","inf",0.97119140625],["(cbrt.f64 (pow.f64 k m))","m","0",0.89892578125],["(cbrt.f64 (pow.f64 k m))","k","-inf",1.0888671875],["(cbrt.f64 (pow.f64 k m))","k","inf",2.2509765625],["(cbrt.f64 (pow.f64 k m))","k","0",1.10693359375],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","a","-inf",0.489013671875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","a","inf",0.7119140625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","a","0",2.1640625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","m","-inf",1.83984375],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","m","inf",11.22900390625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","m","0",1.214111328125],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","k","-inf",1.071044921875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","k","inf",1.05615234375],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","k","0",1.244140625]],"time":47.0830078125,"type":"series"},{"count":[[4,156]],"inputs":[["(/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1))","(cbrt.f64 (pow.f64 k m))","(cbrt.f64 (pow.f64 k (+.f64 m m)))","(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 0) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) (*.f64 0 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (*.f64 k (+.f64 10 k)))) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (pow.f64 (pow.f64 k m) 2/3) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)) (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k (+.f64 m m)) (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (pow.f64 (pow.f64 k m) 2/3) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (/.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) 2/3) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (/.f64 1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 10 k) 1)) (*.f64 (pow.f64 (pow.f64 k m) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) -1/3) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (*.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)))) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) -1/3) (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (pow.f64 k m) 2/3)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) 2/3)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k (+.f64 m m)) (fma.f64 k (+.f64 10 k) 1))) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3))) (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3)) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (/.f64 (pow.f64 (pow.f64 k m) 2/3) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (neg.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))) (neg.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 (cbrt.f64 (pow.f64 k m)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) 0) (cbrt.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 0 (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 k m))) (cbrt.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)) (pow.f64 (pow.f64 k m) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 k m)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k m) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (cbrt.f64 (neg.f64 (pow.f64 k m)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 k m))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (pow.f64 k m) 2/3) (*.f64 (pow.f64 (pow.f64 k m) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) 0) (pow.f64 (pow.f64 k m) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (pow.f64 k m) 2/3) (*.f64 0 (pow.f64 (pow.f64 k m) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (pow.f64 k m) 2/3)) (pow.f64 (pow.f64 k m) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k m)) (cbrt.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))) (cbrt.f64 (neg.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (pow.f64 k m) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 k m) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (pow.f64 k m) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (pow.f64 k m) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 k m) 2/3) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (pow.f64 k m) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k (+.f64 m m)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k m) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 k m)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 k m) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (pow.f64 k m) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 k (+.f64 m m)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 0) (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) (*.f64 0 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)) (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 k m) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)))) (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) (fma.f64 k (+.f64 10 k) 1)) (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) (cbrt.f64 (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 k m) a) (/.f64 1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (/.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (*.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 k m) a) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (*.f64 (pow.f64 k m) a))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 k m))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) 1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (pow.f64 k m)))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3))) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1)) 2/3) (cbrt.f64 (pow.f64 k m)))) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) 1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (neg.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 k m) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))) (neg.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))) (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 k m) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 10 k) 1)) 3))))))"]],"rules":[["egg-rr",56],["egg-rr",26],["egg-rr",22],["egg-rr",52]],"time":43.243896484375,"type":"rewrite"},{"count":[[276,244]],"inputs":[["(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a)","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a))))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3)))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3)))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 10 a) (*.f64 10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (*.f64 4/3 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 4/3 (*.f64 (log.f64 k) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (*.f64 8/27 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","1","(+.f64 1 (*.f64 1/3 (*.f64 (log.f64 k) m)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (*.f64 1/3 (*.f64 (log.f64 k) m))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/6 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 2/3 (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (pow.f64 (log.f64 k) 2))))) (*.f64 1/27 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3))) (*.f64 1/3 (*.f64 (log.f64 k) m)))))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","1","(+.f64 (*.f64 2/3 (*.f64 (log.f64 k) m)) 1)","(+.f64 (*.f64 2/3 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2)))))))","(+.f64 (*.f64 2/3 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 4/3 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 4/3 (*.f64 (log.f64 k) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (*.f64 8/27 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3))) (+.f64 1 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))))))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a)","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a))))) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3)))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (*.f64 (/.f64 (+.f64 (*.f64 10 a) (*.f64 10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 1/2 (pow.f64 (log.f64 k) 2))) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 2))) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 k) 3)) (+.f64 (pow.f64 (log.f64 k) 3) (+.f64 (*.f64 2 (pow.f64 (log.f64 k) 3)) (*.f64 4/3 (pow.f64 (log.f64 k) 3))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 3)) (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 1/2 (pow.f64 (log.f64 k) 2))) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 2))) (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))))))) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 1/2 (pow.f64 (log.f64 k) 2))) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 2))) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a)","(*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a)","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))))","(*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) (+.f64 a (*.f64 -10 (*.f64 k a))))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3)))))","(fma.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) (+.f64 (neg.f64 (*.f64 (*.f64 k k) (*.f64 -99 a))) (*.f64 -10 (*.f64 k a)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a))))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) (+.f64 (neg.f64 (*.f64 (pow.f64 k 3) (*.f64 -10 (*.f64 a (+.f64 1 -99))))) a)) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) (+.f64 (neg.f64 (*.f64 (*.f64 k k) (*.f64 -99 a))) (*.f64 -10 (*.f64 k a)))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))","(*.f64 (/.f64 a (*.f64 k k)) (cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3)))","(*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m))))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) (+.f64 (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)) (/.f64 a (*.f64 k k)))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m)))) 1/3)))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 (*.f64 (neg.f64 -10) (*.f64 a (+.f64 1 -99))) (pow.f64 k 5)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) (+.f64 (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)) (/.f64 a (*.f64 k k)))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))","(*.f64 (/.f64 a (*.f64 k k)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))","(*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 -10 a) (pow.f64 k 3))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (+.f64 (*.f64 (/.f64 (+.f64 (*.f64 10 a) (*.f64 10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 -10 a) (pow.f64 k 3)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))) (+.f64 (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)) (/.f64 (*.f64 10 (*.f64 a (+.f64 1 -99))) (pow.f64 k 5)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (+.f64 (*.f64 2/3 (*.f64 a (*.f64 (log.f64 k) m))) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(fma.f64 2/3 (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (+.f64 a (*.f64 1/3 (*.f64 (*.f64 a (*.f64 m m)) (*.f64 (pow.f64 (log.f64 k) 2) 2/3)))) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (*.f64 4/3 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 4/3 (*.f64 (log.f64 k) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (*.f64 8/27 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(+.f64 (/.f64 (+.f64 (*.f64 2/3 (*.f64 a (*.f64 (log.f64 k) m))) a) (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/3 (/.f64 (+.f64 (*.f64 a (*.f64 (-.f64 (*.f64 4/3 (-.f64 (pow.f64 (log.f64 k) 3) (*.f64 (log.f64 k) (*.f64 (pow.f64 (log.f64 k) 2) 2/3)))) (*.f64 8/27 (pow.f64 (log.f64 k) 3))) (pow.f64 m 3))) (*.f64 (*.f64 a (*.f64 m m)) (*.f64 (pow.f64 (log.f64 k) 2) 2/3))) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","(pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","1","(+.f64 1 (*.f64 1/3 (*.f64 (log.f64 k) m)))","(+.f64 1 (*.f64 (*.f64 1/3 (log.f64 k)) m))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (*.f64 1/3 (*.f64 (log.f64 k) m))))","(fma.f64 1/3 (*.f64 (*.f64 m m) (*.f64 (pow.f64 (log.f64 k) 2) 1/6)) (+.f64 1 (*.f64 (*.f64 1/3 (log.f64 k)) m)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (pow.f64 (log.f64 k) 2))))) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 1/6 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 2/3 (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (pow.f64 (log.f64 k) 2))))) (*.f64 1/27 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3))) (*.f64 1/3 (*.f64 (log.f64 k) m)))))","(fma.f64 1/3 (*.f64 (*.f64 m m) (*.f64 (pow.f64 (log.f64 k) 2) 1/6)) (+.f64 1 (*.f64 1/3 (+.f64 (*.f64 (-.f64 (*.f64 1/6 (pow.f64 (log.f64 k) 3)) (fma.f64 2/3 (*.f64 (log.f64 k) (*.f64 (pow.f64 (log.f64 k) 2) 1/6)) (*.f64 1/27 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3)) (*.f64 (log.f64 k) m)))))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m))))","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m))))","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m))))","(pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m))))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)))","1","(+.f64 (*.f64 2/3 (*.f64 (log.f64 k) m)) 1)","(fma.f64 2/3 (*.f64 (log.f64 k) m) 1)","(+.f64 (*.f64 2/3 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2)))))))","(+.f64 (fma.f64 2/3 (*.f64 (log.f64 k) m) 1) (*.f64 (*.f64 1/3 (*.f64 m m)) (*.f64 (pow.f64 (log.f64 k) 2) 2/3)))","(+.f64 (*.f64 2/3 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 4/3 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 4/3 (*.f64 (log.f64 k) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))) (*.f64 8/27 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3))) (+.f64 1 (*.f64 1/3 (*.f64 (pow.f64 m 2) (-.f64 (*.f64 2 (pow.f64 (log.f64 k) 2)) (*.f64 4/3 (pow.f64 (log.f64 k) 2))))))))","(fma.f64 2/3 (*.f64 (log.f64 k) m) (fma.f64 1/3 (*.f64 (-.f64 (*.f64 4/3 (-.f64 (pow.f64 (log.f64 k) 3) (*.f64 (log.f64 k) (*.f64 (pow.f64 (log.f64 k) 2) 2/3)))) (*.f64 8/27 (pow.f64 (log.f64 k) 3))) (pow.f64 m 3)) (+.f64 1 (*.f64 (*.f64 1/3 (*.f64 m m)) (*.f64 (pow.f64 (log.f64 k) 2) 2/3)))))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1/3)","(cbrt.f64 (pow.f64 (pow.f64 k m) 2))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a)","(*.f64 (pow.f64 k m) a)","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))))","(*.f64 (pow.f64 k m) (+.f64 a (*.f64 -10 (*.f64 k a))))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3)))))","(fma.f64 (pow.f64 k m) a (*.f64 (pow.f64 k m) (+.f64 (neg.f64 (*.f64 (*.f64 k k) (*.f64 -99 a))) (*.f64 -10 (*.f64 k a)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) a) (+.f64 (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 a) a)) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))) (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a))))) (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3))))))","(+.f64 (*.f64 (pow.f64 k m) (+.f64 a (*.f64 -10 (*.f64 k a)))) (neg.f64 (*.f64 (pow.f64 k m) (+.f64 (*.f64 (*.f64 k k) (*.f64 -99 a)) (*.f64 (pow.f64 k 3) (*.f64 -10 (*.f64 a (+.f64 1 -99))))))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))","(*.f64 (/.f64 a (*.f64 k k)) (cbrt.f64 (exp.f64 (*.f64 (neg.f64 (*.f64 (log.f64 k) m)) (+.f64 -1 -2)))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3)))","(*.f64 (cbrt.f64 (exp.f64 (*.f64 (neg.f64 (*.f64 (log.f64 k) m)) (+.f64 -1 -2)))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 -10 a) (pow.f64 k 3))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))))","(-.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (neg.f64 (*.f64 (log.f64 k) m)) (+.f64 -1 -2)))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 -10 a) (pow.f64 k 3)))) (*.f64 (/.f64 (*.f64 -99 a) (pow.f64 k 4)) (cbrt.f64 (exp.f64 (*.f64 (neg.f64 (*.f64 (log.f64 k) m)) (+.f64 -1 -2))))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))))) 1/3)))))","(+.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (neg.f64 (*.f64 (log.f64 k) m)) (+.f64 -1 -2)))) (+.f64 (/.f64 (*.f64 (neg.f64 -10) (*.f64 a (+.f64 1 -99))) (pow.f64 k 5)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (neg.f64 (*.f64 (log.f64 k) m)) (+.f64 -1 -2)))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 -10 a) (pow.f64 k 3)))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))","(*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))","(*.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 -10 a) (pow.f64 k 3))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))))) (*.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)) (*.f64 (/.f64 (+.f64 (*.f64 10 a) (*.f64 10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))) 1/3)))))","(+.f64 (*.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))) (*.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k))))) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 10 (*.f64 a (+.f64 1 -99))) (pow.f64 k 5)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (+.f64 (*.f64 1/3 (*.f64 a (*.f64 (*.f64 3 (log.f64 k)) m))) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 1/2 (pow.f64 (log.f64 k) 2))) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 2))) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(fma.f64 1/3 (/.f64 (*.f64 a (*.f64 (*.f64 3 (log.f64 k)) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (*.f64 a (fma.f64 (pow.f64 (log.f64 k) 2) 9/2 (*.f64 -1/3 (pow.f64 (*.f64 3 (log.f64 k)) 2)))) (*.f64 m m))) a) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (log.f64 k) 3)) (+.f64 (pow.f64 (log.f64 k) 3) (+.f64 (*.f64 2 (pow.f64 (log.f64 k) 3)) (*.f64 4/3 (pow.f64 (log.f64 k) 3))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 3)) (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 1/2 (pow.f64 (log.f64 k) 2))) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 2))) (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))))))) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/3 (/.f64 (*.f64 a (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 1/2 (pow.f64 (log.f64 k) 2))) (*.f64 1/3 (pow.f64 (+.f64 (log.f64 k) (*.f64 2 (log.f64 k))) 2))) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(+.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 a (*.f64 (*.f64 3 (log.f64 k)) m))) (*.f64 1/3 (*.f64 a (*.f64 (-.f64 (+.f64 (*.f64 (pow.f64 (log.f64 k) 3) (+.f64 1/6 1)) (*.f64 (pow.f64 (log.f64 k) 3) 10/3)) (fma.f64 1/27 (pow.f64 (*.f64 3 (log.f64 k)) 3) (*.f64 2/3 (*.f64 (fma.f64 (pow.f64 (log.f64 k) 2) 9/2 (*.f64 -1/3 (pow.f64 (*.f64 3 (log.f64 k)) 2))) (*.f64 3 (log.f64 k)))))) (pow.f64 m 3))))) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (*.f64 a (fma.f64 (pow.f64 (log.f64 k) 2) 9/2 (*.f64 -1/3 (pow.f64 (*.f64 3 (log.f64 k)) 2)))) (*.f64 m m))) a) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 1)) 1/3) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))"]],"time":556.364013671875,"type":"simplify"},{"compiler":[[8105,4750]],"time":87.133056640625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) 3) a)","fresh",1.2909145139418],["(*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))","fresh",1.303297033478684],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1)))","next",1.2696920162571275],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","done",1.2505244748680318]],"compiler":[[18,13],[26,19],[41,26],[23,15],[18,13],[26,19],[41,26]],"count":[[247,4]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[244,1],"picked":[1,1]}],"min-error":[1.2153682248680318],"time":99.195068359375,"type":"prune"},{"compiler":[[223,100]],"locations":[["(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)",0.04690792430496321,true],["(cbrt.f64 (pow.f64 k m))",0.23627713485282867,false],["(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))",0.2507043704565597,true],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))",1.2388057248680318,true]],"time":43.23681640625,"type":"localize"},{"count":[[3,84]],"series":[["(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)","m","-inf",70.576904296875],["(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)","m","inf",8.22705078125],["(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)","m","0",0.6640625],["(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)","k","-inf",9.248046875],["(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)","k","inf",11.594970703125],["(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)","k","0",8.257080078125],["(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))","m","-inf",8.751953125],["(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))","m","inf",8.527099609375],["(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))","m","0",0.7978515625],["(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))","k","-inf",12.9970703125],["(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))","k","inf",9.93603515625],["(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))","k","0",31.083984375],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","a","-inf",0.411865234375],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","a","inf",0.419189453125],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","a","0",20.2109375],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","m","-inf",13.403076171875],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","m","inf",11.68603515625],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","m","0",10.630126953125],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","k","-inf",1.453125],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","k","inf",1.2041015625],["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","k","0",13.588134765625]],"time":254.293212890625,"type":"series"},{"count":[[3,123]],"inputs":[["(/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1))","(cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))","(pow.f64 (pow.f64 k (+.f64 m m)) 2/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 0) (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) (*.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))) (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) (*.f64 0 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (*.f64 k (+.f64 10 k)))) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 (pow.f64 (pow.f64 k m) 2/3) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))) (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)) (/.f64 -1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (pow.f64 (pow.f64 k m) 2/3) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (/.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) 2/3) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k (+.f64 m m)) (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (/.f64 1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 10 k) 1)) (*.f64 (pow.f64 (pow.f64 k m) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) -1/3) (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) a) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (neg.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k))))) (pow.f64 (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (*.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3))) (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) 2/3)) (*.f64 (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))) (neg.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (fma.f64 k (+.f64 10 k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))) (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) 2/3)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 2/3) (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3)))) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 k (+.f64 m m)) (fma.f64 k (+.f64 10 k) 1))) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (pow.f64 k m) 2/3)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) -1/3) (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) (fma.f64 k (+.f64 10 k) 1))) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) a)) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 a) (pow.f64 (pow.f64 k m) 2/3))) (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 2/3)) (cbrt.f64 (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a)) (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (/.f64 (pow.f64 (pow.f64 k m) 2/3) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) -1) (-.f64 -1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) 1) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) a) (-.f64 -1 (*.f64 k (+.f64 10 k)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 2/3) (/.f64 a (fma.f64 k (+.f64 10 k) 1))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) 0) (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3)) (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) (*.f64 0 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) (cbrt.f64 (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) -1) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3)) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 k m) 2/3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) 0) (pow.f64 (cbrt.f64 (pow.f64 k m)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4)) (pow.f64 (cbrt.f64 (pow.f64 k m)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) (*.f64 0 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 k m) 2/3) (pow.f64 (pow.f64 k m) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) (+.f64 2/3 1)) (pow.f64 (cbrt.f64 (pow.f64 k m)) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4))) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4)))) (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (pow.f64 k m) 2/3)) (neg.f64 (pow.f64 (pow.f64 k m) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 8) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 8)) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) 2/3) (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3)) (*.f64 (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3))) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m)))) 4) 4) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3)))) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 k m) 2/3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k (*.f64 2 (+.f64 m m))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2/3) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k m) (*.f64 2 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 k m)) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 k m) (+.f64 2/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 4) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 k (*.f64 2 (+.f64 m m))))))))"]],"rules":[["egg-rr",35],["egg-rr",30],["egg-rr",58]],"time":37.4599609375,"type":"rewrite"},{"count":[[207,179]],"inputs":[["(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a)","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 a (*.f64 -100 a))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 a (*.f64 -100 a))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a) (+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 a) a)) (*.f64 -10 a))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))) (*.f64 -1 (*.f64 (/.f64 (+.f64 a (*.f64 -100 a)) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 10 (+.f64 (*.f64 -100 a) a)) (*.f64 10 a)) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))) (*.f64 -1 (*.f64 (/.f64 (+.f64 a (*.f64 -100 a)) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (*.f64 a m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (*.f64 a m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 2 (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))))) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(+.f64 (/.f64 (*.f64 a (*.f64 (pow.f64 m 2) (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 2 (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))))))) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (*.f64 a m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (pow.f64 m 3) (+.f64 (*.f64 1/4374 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 3)) (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 2 (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))))) (*.f64 1/54 (+.f64 (*.f64 -6 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))) (+.f64 (*.f64 6 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 k) 3)) (+.f64 (pow.f64 (log.f64 k) 3) (+.f64 (*.f64 32 (pow.f64 (log.f64 k) 3)) (*.f64 8/3 (pow.f64 (log.f64 k) 3)))))) (*.f64 2 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 3))))))))) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","1","(+.f64 1 (*.f64 2/9 (*.f64 (log.f64 k) m)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 2/81 (pow.f64 (log.f64 k) 2)) (*.f64 1/18 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)) (*.f64 2/9 (*.f64 (log.f64 k) m))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 2/81 (pow.f64 (log.f64 k) 2)) (*.f64 1/18 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)) (+.f64 (*.f64 2/9 (*.f64 (log.f64 k) m)) (*.f64 (+.f64 (*.f64 1/81 (*.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))) (log.f64 k))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 -24 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 3)) (*.f64 6 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 k) 3)) (pow.f64 (log.f64 k) 3)))))) (*.f64 4/2187 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3)))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","1","(+.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)) 1)","(+.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 (+.f64 (*.f64 8/9 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2))))","(+.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 32/81 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 1/9 (+.f64 (*.f64 -24 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 8 (pow.f64 (log.f64 k) 3)) (*.f64 16 (pow.f64 (log.f64 k) 3))))) (*.f64 4/9 (*.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))) (log.f64 k))))) (pow.f64 m 3)) (*.f64 (+.f64 (*.f64 8/9 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)))))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a)","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) a)","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (+.f64 (*.f64 -10 (*.f64 k a)) a))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 a (*.f64 -100 a))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9)))))","(-.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (+.f64 (*.f64 -10 (*.f64 k a)) a)) (*.f64 (*.f64 (*.f64 k k) (*.f64 -99 a)) (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 2) (+.f64 a (*.f64 -100 a))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) a) (+.f64 (*.f64 -1 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 a) a)) (*.f64 -10 a))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))) (*.f64 -10 (*.f64 (*.f64 k a) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (+.f64 (neg.f64 (*.f64 (*.f64 k k) (*.f64 -99 a))) a)) (*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (+.f64 (neg.f64 (*.f64 (pow.f64 k 3) (*.f64 -10 (*.f64 a (+.f64 -99 1))))) (*.f64 -10 (*.f64 k a)))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))","(*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (pow.f64 (*.f64 (pow.f64 k m) (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) 2) 1/9))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))))","(*.f64 (pow.f64 (pow.f64 (*.f64 (pow.f64 k m) (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) 2) 1/9) (+.f64 (/.f64 a (*.f64 k k)) (/.f64 (*.f64 -10 a) (pow.f64 k 3))))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)))))","(fma.f64 (/.f64 a (*.f64 k k)) (pow.f64 (pow.f64 (*.f64 (pow.f64 k m) (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) 2) 1/9) (*.f64 (pow.f64 (pow.f64 (*.f64 (pow.f64 k m) (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) 2) 1/9) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -10 a) (*.f64 -10 (+.f64 a (*.f64 -100 a)))) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (+.f64 (*.f64 -100 a) a) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) (pow.f64 (exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 k)) m))) 2))) 1/9))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 (*.f64 (pow.f64 k m) (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) 2) 1/9) (+.f64 (/.f64 (*.f64 (neg.f64 -10) (*.f64 a (+.f64 -99 1))) (pow.f64 k 5)) (/.f64 a (*.f64 k k)))) (*.f64 (pow.f64 (pow.f64 (*.f64 (pow.f64 k m) (pow.f64 (exp.f64 -2) (neg.f64 (*.f64 (log.f64 k) m)))) 2) 1/9) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))))","(*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))","(*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 3) 1/9))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 3) 1/9) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))) (*.f64 -1 (*.f64 (/.f64 (+.f64 a (*.f64 -100 a)) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)))))","(fma.f64 (/.f64 a (*.f64 k k)) (pow.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 3) 1/9) (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 3) 1/9) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))))","(+.f64 (*.f64 (/.f64 (+.f64 (*.f64 10 (+.f64 (*.f64 -100 a) a)) (*.f64 10 a)) (pow.f64 k 5)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (+.f64 (*.f64 (/.f64 a (pow.f64 k 2)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9)) (+.f64 (*.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))) (*.f64 -1 (*.f64 (/.f64 (+.f64 a (*.f64 -100 a)) (pow.f64 k 4)) (pow.f64 (*.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2))) 1/9))))))","(+.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 3) 1/9) (+.f64 (/.f64 (*.f64 10 (*.f64 a (+.f64 -99 1))) (pow.f64 k 5)) (/.f64 a (*.f64 k k)))) (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 3) 1/9) (+.f64 (/.f64 (*.f64 -10 a) (pow.f64 k 3)) (/.f64 (neg.f64 (*.f64 -99 a)) (pow.f64 k 4)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (*.f64 a m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 (+.f64 (*.f64 1/9 (*.f64 (*.f64 (log.f64 k) 6) (*.f64 a m))) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (*.f64 a m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 2 (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))))) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(/.f64 (+.f64 (*.f64 1/9 (*.f64 (*.f64 (log.f64 k) 6) (*.f64 a m))) (+.f64 a (*.f64 (*.f64 a (*.f64 m m)) (fma.f64 1/162 (pow.f64 (*.f64 (log.f64 k) 6) 2) (*.f64 1/18 (-.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 k) 2) 18)) (pow.f64 (*.f64 (log.f64 k) 6) 2))))))) (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 (*.f64 a (*.f64 (pow.f64 m 2) (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 2 (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))))))) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (*.f64 a m)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (pow.f64 m 3) (+.f64 (*.f64 1/4374 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 3)) (+.f64 (*.f64 1/162 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 2)) (*.f64 2 (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))))) (*.f64 1/54 (+.f64 (*.f64 -6 (*.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 2)) (*.f64 2 (pow.f64 (log.f64 k) 2))))) (+.f64 (*.f64 6 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 k) 3)) (+.f64 (pow.f64 (log.f64 k) 3) (+.f64 (*.f64 32 (pow.f64 (log.f64 k) 3)) (*.f64 8/3 (pow.f64 (log.f64 k) 3)))))) (*.f64 2 (pow.f64 (+.f64 (*.f64 4 (log.f64 k)) (*.f64 2 (log.f64 k))) 3))))))))) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (/.f64 (+.f64 (*.f64 1/9 (*.f64 (*.f64 (log.f64 k) 6) (*.f64 a m))) (+.f64 a (*.f64 (*.f64 a (*.f64 m m)) (fma.f64 1/162 (pow.f64 (*.f64 (log.f64 k) 6) 2) (*.f64 1/18 (-.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 k) 2) 18)) (pow.f64 (*.f64 (log.f64 k) 6) 2))))))) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (pow.f64 m 3) (fma.f64 1/4374 (pow.f64 (*.f64 (log.f64 k) 6) 3) (fma.f64 1/162 (*.f64 (*.f64 (log.f64 k) 6) (-.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 k) 2) 18)) (pow.f64 (*.f64 (log.f64 k) 6) 2))) (*.f64 1/54 (fma.f64 -6 (*.f64 (*.f64 (log.f64 k) 6) (*.f64 (pow.f64 (log.f64 k) 2) 18)) (fma.f64 6 (+.f64 (*.f64 4/3 (pow.f64 (log.f64 k) 3)) (*.f64 (pow.f64 (log.f64 k) 3) 104/3)) (*.f64 2 (pow.f64 (*.f64 (log.f64 k) 6) 3))))))))) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (log.f64 k) m))) 2) 1)) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(*.f64 (pow.f64 (pow.f64 (pow.f64 (pow.f64 k m) 2) 3) 1/9) (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 2) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m)) 1/9)","1","(+.f64 1 (*.f64 2/9 (*.f64 (log.f64 k) m)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 2/81 (pow.f64 (log.f64 k) 2)) (*.f64 1/18 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)) (*.f64 2/9 (*.f64 (log.f64 k) m))))","(+.f64 1 (fma.f64 (fma.f64 2/81 (pow.f64 (log.f64 k) 2) (*.f64 1/18 0)) (*.f64 m m) (*.f64 2/9 (*.f64 (log.f64 k) m))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 2/81 (pow.f64 (log.f64 k) 2)) (*.f64 1/18 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)) (+.f64 (*.f64 2/9 (*.f64 (log.f64 k) m)) (*.f64 (+.f64 (*.f64 1/81 (*.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))) (log.f64 k))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 -24 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 16 (pow.f64 (log.f64 k) 3)) (*.f64 6 (+.f64 (*.f64 1/3 (pow.f64 (log.f64 k) 3)) (pow.f64 (log.f64 k) 3)))))) (*.f64 4/2187 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3)))))","(+.f64 1 (fma.f64 (fma.f64 2/81 (pow.f64 (log.f64 k) 2) (*.f64 1/18 0)) (*.f64 m m) (fma.f64 2/9 (*.f64 (log.f64 k) m) (*.f64 (fma.f64 1/81 (*.f64 0 (log.f64 k)) (fma.f64 1/54 (+.f64 (*.f64 (pow.f64 (log.f64 k) 3) (+.f64 -24 16)) (*.f64 6 (*.f64 4/3 (pow.f64 (log.f64 k) 3)))) (*.f64 4/2187 (pow.f64 (log.f64 k) 3)))) (pow.f64 m 3)))))","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(pow.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2) 1/9)","(pow.f64 (pow.f64 (pow.f64 k m) 2) 1/9)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(pow.f64 (exp.f64 -4/3) (neg.f64 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(pow.f64 (exp.f64 -4/3) (neg.f64 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(pow.f64 (exp.f64 -4/3) (neg.f64 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 -4/3 (*.f64 (log.f64 (/.f64 1 k)) m)))","(pow.f64 (exp.f64 -4/3) (neg.f64 (*.f64 (log.f64 k) m)))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(pow.f64 (exp.f64 4/3) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(pow.f64 (exp.f64 4/3) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(pow.f64 (exp.f64 4/3) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))","(exp.f64 (*.f64 4/3 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(pow.f64 (exp.f64 4/3) (*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 k)))) m))","1","(+.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)) 1)","(fma.f64 4/3 (*.f64 (log.f64 k) m) 1)","(+.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 (+.f64 (*.f64 8/9 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2))))","(+.f64 (fma.f64 4/3 (*.f64 (log.f64 k) m) 1) (*.f64 (fma.f64 8/9 (pow.f64 (log.f64 k) 2) (*.f64 1/3 0)) (*.f64 m m)))","(+.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 32/81 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 1/9 (+.f64 (*.f64 -24 (pow.f64 (log.f64 k) 3)) (+.f64 (*.f64 8 (pow.f64 (log.f64 k) 3)) (*.f64 16 (pow.f64 (log.f64 k) 3))))) (*.f64 4/9 (*.f64 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))) (log.f64 k))))) (pow.f64 m 3)) (*.f64 (+.f64 (*.f64 8/9 (pow.f64 (log.f64 k) 2)) (*.f64 1/3 (+.f64 (*.f64 4 (pow.f64 (log.f64 k) 2)) (*.f64 -4 (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)))))","(+.f64 (fma.f64 4/3 (*.f64 (log.f64 k) m) 1) (fma.f64 (fma.f64 32/81 (pow.f64 (log.f64 k) 3) (fma.f64 1/9 (*.f64 (pow.f64 (log.f64 k) 3) (+.f64 24 -24)) (*.f64 (*.f64 4/9 0) (log.f64 k)))) (pow.f64 m 3) (*.f64 (fma.f64 8/9 (pow.f64 (log.f64 k) 2) (*.f64 1/3 0)) (*.f64 m m))))","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)","(exp.f64 (*.f64 4/3 (*.f64 (log.f64 k) m)))","(pow.f64 (pow.f64 k m) 4/3)"]],"time":612.7578125,"type":"simplify"},{"compiler":[[11350,6356]],"time":109.570068359375,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) 3) a)","fresh",1.2909145139418],["(*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))","fresh",1.303297033478684],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1)))","done",1.2696920162571275],["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","done",1.2505244748680318]],"compiler":[[18,13],[26,19],[41,26],[23,15]],"count":[[249,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[245,0],"picked":[1,1]}],"min-error":[1.2153682248680318],"time":98.4521484375,"type":"prune"},{"accuracy":[1.2466182248680318],"baseline":[1.2466182248680318],"branch":[["a",1.2466182248680318,1],["k",1.2466182248680318,1],["m",1.2466182248680318,1],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))",1.2466182248680318,1]],"compiler":[[4,3],[4,3],[4,3],[18,12],[166,94]],"count":[[8,1]],"inputs":[["(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 k m) 2/3))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 k m))) 4) (pow.f64 (pow.f64 k (+.f64 m m)) 2/3)))) a) (fma.f64 k (+.f64 10 k) 1)))","(*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1))) 3) a)","(*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 k (+.f64 m m))) a) (fma.f64 k (+.f64 10 k) 1)))","(/.f64 (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))) (fma.f64 k (+.f64 10 k) 1))","(*.f64 (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) -2))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)) a)","(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))","(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))"]],"link":["."],"name":["Falkner and Boettcher, Appendix A"],"oracle":[32.70875917602353],"outputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))"]],"time":17.3798828125,"times":[["a",3.926025390625],["k",3.805908203125],["m",3.960205078125],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))",2.7587890625]],"type":"regimes"},{"compiler":[[15,10]],"inputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 10 k) 1))"]],"stop":[["fuel",1]],"time":19.08203125,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[15,10]],"remove-preprocessing":[[]],"time":9.38916015625,"type":"end"}]