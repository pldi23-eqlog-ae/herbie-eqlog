[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.4680636897137447,0.4573372301578047,0.07459908012845062],[11,0.41345625924714113,0.52852191630177,0.05802182445108883],[10,0.34324670579007943,0.6279854503659408,0.02876784384397979],[9,0.2496339678473305,0.7332997805515333,0.017066251601136173],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":95.779052734375,"type":"analyze"},{"outcomes":[["body",256,"invalid",64.95654296875,1490],["body",512,"valid",15.665283203125,208],["body",1024,"valid",19.965087890625,183],["body",256,"valid",337.03515625,7865]],"time":447.388916015625,"type":"sample"},{"compiler":[[14,9]],"inputs":[["0","1","2"],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))","(+.f64 (+.f64 (*.f64 d2 3) (*.f64 d2 d1)) (*.f64 d2 d3))","(+.f64 (+.f64 (*.f64 d3 3) (*.f64 d3 d2)) (*.f64 d3 d1))","(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d3)) (*.f64 d1 d2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (+.f64 (*.f64 d2 3) (*.f64 d2 d1)) (*.f64 d2 d3))","(*.f64 d2 (+.f64 (+.f64 d1 d3) 3))","(+.f64 (+.f64 (*.f64 d3 3) (*.f64 d3 d2)) (*.f64 d3 d1))","(*.f64 d3 (+.f64 (+.f64 d2 d1) 3))","(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d3)) (*.f64 d1 d2))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))"]],"symmetry":[[]],"time":71.2861328125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))"]],"time":18.31201171875,"type":"simplify"},{"compiler":[[21,13]],"time":0.385009765625,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","next",0.046875]],"compiler":[[10,7],[10,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.046875],"time":0.83984375,"type":"prune"},{"compiler":[[22,13]],"locations":[["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))",0.0078125,true]],"time":5.171142578125,"type":"localize"},{"count":[[1,36]],"series":[["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d2","-inf",0.2880859375],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d2","inf",0.303955078125],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d2","0",0.27197265625],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d3","-inf",0.275146484375],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d3","inf",1.3291015625],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d3","0",0.28515625],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d1","-inf",0.4189453125],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d1","inf",0.4169921875],["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","d1","0",0.656982421875]],"time":4.386962890625,"type":"series"},{"count":[[1,60]],"inputs":[["(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 d3) (*.f64 d1 d2)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (+.f64 (*.f64 d1 d2) (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 0) (*.f64 d1 (+.f64 d2 (+.f64 d3 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) (*.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))) (*.f64 d1 (+.f64 d2 (+.f64 d3 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) (*.f64 0 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (*.f64 (+.f64 d3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d3 3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 d3 3)) 1) (*.f64 (*.f64 d1 d2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 3 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d3 d2)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d3 d2) d1) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 d2 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 d2 (+.f64 d3 3)) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (*.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 d2 (+.f64 d3 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 d2 (+.f64 d3 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 d2 (+.f64 d3 3)) 2)) d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 d2 (+.f64 d3 3)) 2)) d1) (cbrt.f64 (+.f64 d2 (+.f64 d3 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 d2 (+.f64 d3 3))) (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))) (cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 2)) (cbrt.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 d2 (+.f64 d3 3)) (cbrt.f64 d1)) (cbrt.f64 (*.f64 d1 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (cbrt.f64 (+.f64 d2 (+.f64 d3 3)))) (cbrt.f64 (pow.f64 (+.f64 d2 (+.f64 d3 3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 d2 (+.f64 d3 3)) 2)) (*.f64 d1 (cbrt.f64 (+.f64 d2 (+.f64 d3 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 d1)) (*.f64 (+.f64 d2 (+.f64 d3 3)) (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 (*.f64 (+.f64 3 d2) (cbrt.f64 d1)) (*.f64 d3 (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 (*.f64 d3 (cbrt.f64 d1)) (*.f64 (+.f64 3 d2) (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 (+.f64 d3 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d3 (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d3 d1 (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (cbrt.f64 (*.f64 d1 d1)) d3) (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d3) (*.f64 (cbrt.f64 (*.f64 d3 d3)) d1) (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d3 (cbrt.f64 d1)) (cbrt.f64 (*.f64 d1 d1)) (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 d3)) (cbrt.f64 (*.f64 d3 d3)) (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d3)) (cbrt.f64 (pow.f64 (*.f64 d1 d3) 2)) (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 (+.f64 3 d2))) (cbrt.f64 (pow.f64 (+.f64 3 d2) 2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 3 d2) (cbrt.f64 d1)) (cbrt.f64 (*.f64 d1 d1)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 3 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 d2))) (cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 d2)) 2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 3 d2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 3 d2) 2)) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 3 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d3 3) d1 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 3 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d3) 1 (*.f64 d1 (+.f64 3 d2)))))))"]],"rules":[["egg-rr",60]],"time":21.18603515625,"type":"rewrite"},{"count":[[96,68]],"inputs":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 (+.f64 d2 3) d1)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 (+.f64 d2 3) d1)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))"]],"time":123.587890625,"type":"simplify"},{"compiler":[[778,423]],"time":10.14599609375,"type":"eval"},{"alts":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","fresh",0.03125],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","next",0.03125]],"compiler":[[11,7],[11,7],[11,7],[11,7]],"count":[[69,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[68,2],"picked":[1,0]}],"min-error":[0.00390625],"time":13.35498046875,"type":"prune"},{"compiler":[[21,10]],"locations":[["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))",0.03125,true]],"time":4.985107421875,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d2","-inf",0.242919921875],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d2","inf",0.27490234375],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d2","0",0.27001953125],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d3","-inf",0.27197265625],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d3","inf",0.239990234375],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d3","0",0.31884765625],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d1","-inf",0.575927734375],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d1","inf",0.820068359375],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","d1","0",0.52392578125]],"time":3.65185546875,"type":"series"},{"count":[[1,44]],"inputs":[["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 d2) (*.f64 d1 3)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 d2) (*.f64 d1 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (+.f64 (*.f64 d1 3) (*.f64 d1 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (+.f64 (*.f64 d1 d3) (*.f64 d1 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 0) (*.f64 d1 (+.f64 3 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) (*.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))) (*.f64 d1 (+.f64 3 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) (*.f64 0 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d3 3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 3 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 3 (+.f64 d3 d2)) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (+.f64 (*.f64 (pow.f64 d1 2/3) d2) (*.f64 (pow.f64 d1 2/3) (+.f64 d3 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (+.f64 (*.f64 (pow.f64 d1 2/3) (+.f64 d3 3)) (*.f64 (pow.f64 d1 2/3) d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))) (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d3 d2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 (+.f64 d3 3))) (cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d3 3)) 2)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d3 3) d1 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 (+.f64 d3 3))) (pow.f64 (+.f64 d3 3) 2/3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) (+.f64 d3 3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d2) (*.f64 (pow.f64 d2 2/3) d1) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d2 d1 (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d2 (cbrt.f64 d1)) (pow.f64 d1 2/3) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 d2)) (pow.f64 d2 2/3) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d2 (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) d2) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 d1 d2) 2/3) (cbrt.f64 (*.f64 d1 d2)) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d2)) (pow.f64 (*.f64 d1 d2) 2/3) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 d1 d2)) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 d3 3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d2) 1 (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (+.f64 d3 3)) 1 (*.f64 d1 d2))))))"]],"rules":[["egg-rr",44]],"time":20.878173828125,"type":"rewrite"},{"count":[[80,53]],"inputs":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(+.f64 (*.f64 3 d1) (*.f64 d2 d1))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 (+.f64 3 d3)) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 d2))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))"]],"time":124.262939453125,"type":"simplify"},{"compiler":[[585,309]],"time":8.322021484375,"type":"eval"},{"alts":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","next",0.03125],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","done",0.03125]],"compiler":[[11,7],[11,7],[11,7]],"count":[[55,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[53,0],"picked":[1,1]}],"min-error":[0.00390625],"time":9.300048828125,"type":"prune"},{"compiler":[[21,10]],"locations":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))",0.046875,true]],"time":4.886962890625,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d3","-inf",0.198974609375],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d3","inf",0.2421875],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d3","0",0.26416015625],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d1","-inf",0.4501953125],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d1","inf",1.1650390625],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d1","0",0.487060546875],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d2","-inf",0.223876953125],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d2","inf",0.44189453125],["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","d2","0",0.35205078125]],"time":3.93798828125,"type":"series"},{"count":[[1,40]],"inputs":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 0) (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) (*.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) (*.f64 0 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 3 d2) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 3 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 3 (+.f64 d2 d3)) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 2/3) (+.f64 (*.f64 (+.f64 3 d2) (cbrt.f64 d1)) (*.f64 d3 (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 2/3) (+.f64 (*.f64 d3 (cbrt.f64 d1)) (*.f64 (+.f64 3 d2) (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d3) (*.f64 (pow.f64 d3 2/3) d1) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 d3)) (pow.f64 d3 2/3) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) d3) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d3 (cbrt.f64 d1)) (pow.f64 d1 2/3) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 d1 d3) 2/3) (cbrt.f64 (*.f64 d1 d3)) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d3 (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d3 d1 (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d3)) (pow.f64 (*.f64 d1 d3) 2/3) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 3 d2) d1)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 3 d2) d1) 2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 3 d2) (cbrt.f64 d1)) (pow.f64 d1 2/3) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 3 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 3 d2)) (*.f64 (pow.f64 (+.f64 3 d2) 2/3) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 d1 d3)) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d3) 1 (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d3) (*.f64 (+.f64 3 d2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 3 d2) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 3 d2) d1) 1 (*.f64 d1 d3))))))"]],"rules":[["egg-rr",40]],"time":22.221923828125,"type":"rewrite"},{"count":[[76,50]],"inputs":[["(+.f64 (*.f64 3 d1) (*.f64 d1 d3))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 (+.f64 d2 3) d1)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 3 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 (+.f64 d2 3))) d1))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 (+.f64 d2 3) d1)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(*.f64 d1 d3)","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))","(+.f64 (*.f64 (+.f64 d2 3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d3 d2)))"]],"time":126.89111328125,"type":"simplify"},{"compiler":[[546,290]],"time":6.97998046875,"type":"eval"},{"alts":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","done",0.03125],["(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","done",0.03125]],"compiler":[[11,7],[11,7]],"count":[[52,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[50,0],"picked":[1,1]}],"min-error":[0.00390625],"time":8.882080078125,"type":"prune"},{"accuracy":[0.03125],"baseline":[0.03125],"branch":[["d1",0.03125,1],["d2",0.03125,1],["d3",0.03125,1],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))",0.03125,1]],"compiler":[[4,3],[4,3],[4,3],[14,9],[37,19]],"count":[[4,1]],"inputs":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","(fma.f64 d1 (+.f64 d3 3) (*.f64 d1 d2))","(*.f64 d1 (+.f64 d3 (+.f64 3 d2)))","(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))"]],"link":["."],"name":["FastMath test3"],"oracle":[0.07421875],"outputs":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))"]],"time":13.202880859375,"times":[["d1",2.909912109375],["d2",2.990966796875],["d3",3.156982421875],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))",3.1650390625]],"type":"regimes"},{"compiler":[[11,7]],"inputs":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (+.f64 3 d2) d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))"]],"stop":[["done",1]],"time":20.636962890625,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.860107421875,"type":"end"}]