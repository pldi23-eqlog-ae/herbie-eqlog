[{"compiler":[[19,17]],"method":["search"],"sampling":[[12,0.46829234808683395,0.0990243194391951,0.43268333247397095],[11,0.46829234808683395,0.10634138737805188,0.42536626453511417],[10,0.43707285821437836,0.193170593585819,0.36975654819980264],[9,0.43707285821437836,0.20682912040501833,0.3560980213806033],[8,0.37463387846946716,0.36682900600135326,0.2585371155291796],[7,0.37463387846946716,0.39024362340569496,0.23512249812483788],[6,0.24975591897964478,0.6556092873215675,0.09463479369878769],[5,0.24975591897964478,0.6868287771940231,0.06341530382633209],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":48.537841796875,"type":"analyze"},{"outcomes":[["body",256,"invalid",79.84716796875,1175],["body",256,"valid",577.307861328125,8256]],"time":666.422119140625,"type":"sample"},{"compiler":[[18,16]],"inputs":[["0","1"],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 h) g)) 3))))","(*.f64 2 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 h g)))))))"]],"symmetry":[[]],"time":64.60986328125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","(*.f64 2 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))"]],"time":22.238037109375,"type":"simplify"},{"compiler":[[32,26]],"time":0.549072265625,"type":"eval"},{"alts":[["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))","next",1.0013275390737681]],"compiler":[[18,16],[18,16]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[1.0013275390737681],"time":1.06298828125,"type":"prune"},{"compiler":[[76,41]],"locations":[["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",0.97265625,true],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))",0.97265625,true],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))",0.9765625,true],["(/.f64 (*.f64 2 (PI.f64)) 3)",1.0,true]],"time":17.031005859375,"type":"localize"},{"count":[[4,72]],"series":[["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","h","-inf",0.14697265625],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","h","inf",0.14794921875],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","h","0",0.172119140625],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","g","-inf",0.14697265625],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","g","inf",0.14892578125],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)","g","0",0.179931640625],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","h","-inf",0.166015625],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","h","inf",0.18994140625],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","h","0",0.161865234375],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","g","-inf",0.1640625],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","g","inf",0.18994140625],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","g","0",0.176025390625],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","h","-inf",0.951904296875],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","h","inf",0.6708984375],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","h","0",0.489013671875],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","g","-inf",0.649169921875],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","g","inf",0.8369140625],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","g","0",0.97412109375]],"time":6.842041015625,"type":"series"},{"count":[[4,226]],"inputs":[["(/.f64 (*.f64 2 (PI.f64)) 3)","(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))","(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))","(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) 2/3) 0) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 2/3) (*.f64 (*.f64 (PI.f64) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (PI.f64) 2/3)) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 2/3) (*.f64 0 (*.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 -3) (neg.f64 (*.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) 2/3)) (pow.f64 (*.f64 (PI.f64) 2/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 2/3) (cbrt.f64 (*.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (sqrt.f64 1/3)) (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 4 3)) (*.f64 (PI.f64) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 3)) (*.f64 (PI.f64) (cbrt.f64 1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 4 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 1/3)) (cbrt.f64 (/.f64 8 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (PI.f64) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (PI.f64)) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (PI.f64) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) (/.f64 3/2 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (PI.f64)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (PI.f64) (PI.f64)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (PI.f64)) (/.f64 -3 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (PI.f64)) (neg.f64 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3))) (neg.f64 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 0) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) (*.f64 (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3)))) (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) (*.f64 (sin.f64 (*.f64 (PI.f64) 2/3)) (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3) (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (cos.f64 (*.f64 1/3 (-.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (-.f64 (cos.f64 (*.f64 1/3 (-.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (cos.f64 (*.f64 1/3 (-.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 2) (*.f64 2 (-.f64 (cos.f64 (*.f64 1/3 (-.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) 2)) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3)) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3)) (cos.f64 (*.f64 (PI.f64) 2/3)) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 2/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 0) (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 0 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) 2/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) (neg.f64 (*.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 2/3) (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 -2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/9)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/9)) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (-.f64 (*.f64 -2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 -2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (/.f64 1 -9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 2/3) (-.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 2/3) (cbrt.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/9)))) (+.f64 (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (cbrt.f64 (*.f64 (PI.f64) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 2/3) (-.f64 (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 2/3) (cbrt.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/9)))) (+.f64 (cbrt.f64 (*.f64 (PI.f64) 2/3)) (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) -9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 3)) (*.f64 3 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 3/2) (*.f64 3 (PI.f64))) (*.f64 3 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 9)) (*.f64 3 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)))) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) 3) (*.f64 (sqrt.f64 3) (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (sqrt.f64 3)) (*.f64 (sqrt.f64 3) (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) 3/2) (*.f64 (sqrt.f64 3) (PI.f64))) (*.f64 (sqrt.f64 3) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) -3) (*.f64 (sqrt.f64 3) (*.f64 -2 (PI.f64)))) (*.f64 (sqrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (cbrt.f64 9)) (*.f64 (sqrt.f64 3) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)))) (*.f64 (sqrt.f64 3) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 3)) (*.f64 -3 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)))) (*.f64 -3 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) 3/2) (*.f64 -3 (PI.f64))) (*.f64 -3 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 9)) (*.f64 -3 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)))) (*.f64 -3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) 3) (*.f64 (cbrt.f64 9) (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 9 27)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) (sqrt.f64 3)) (*.f64 (cbrt.f64 9) (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) 3/2) (*.f64 (cbrt.f64 9) (PI.f64))) (*.f64 (cbrt.f64 9) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) -3) (*.f64 (cbrt.f64 9) (*.f64 -2 (PI.f64)))) (*.f64 (cbrt.f64 9) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) (cbrt.f64 9)) (*.f64 (cbrt.f64 9) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)))) (cbrt.f64 (*.f64 9 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) 3) (*.f64 (sqrt.f64 3) (acos.f64 (neg.f64 (/.f64 g h))))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (sqrt.f64 3)) (*.f64 (sqrt.f64 3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) -3) (*.f64 (sqrt.f64 3) (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (sqrt.f64 3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (cbrt.f64 9)) (*.f64 (sqrt.f64 3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)))) (*.f64 (sqrt.f64 3) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (PI.f64) 3) (*.f64 3/2 (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 3/2 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (PI.f64) (sqrt.f64 3)) (*.f64 3/2 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)))) (*.f64 3/2 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (PI.f64) -3) (*.f64 3/2 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 3/2 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (PI.f64) (cbrt.f64 9)) (*.f64 3/2 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)))) (*.f64 3/2 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) 3) (*.f64 (cbrt.f64 9) (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 (*.f64 9 27)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) (sqrt.f64 3)) (*.f64 (cbrt.f64 9) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)))) (*.f64 (cbrt.f64 9) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) -3) (*.f64 (cbrt.f64 9) (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cbrt.f64 9) -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) (cbrt.f64 9)) (*.f64 (cbrt.f64 9) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)))) (cbrt.f64 (*.f64 9 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -2 (PI.f64)) (sqrt.f64 3)) (*.f64 -3 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)))) (*.f64 -3 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 -2 (PI.f64)) (cbrt.f64 9)) (*.f64 -3 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)))) (*.f64 -3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 3)) (*.f64 3 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)))) (sqrt.f64 27))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 9)) (*.f64 3 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)))) (*.f64 3 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3))) (neg.f64 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) -9))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 2/3) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3 (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) 2/3)) (pow.f64 (*.f64 (PI.f64) 2/3) 2/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (PI.f64) (PI.f64)) 1/3 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (PI.f64) 2/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 27))) (*.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2/3) (sqrt.f64 1/3)) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 2/3) (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2/3) 1/3) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 1 (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/9)) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) -1/3 (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (sqrt.f64 1/3)) (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) (sqrt.f64 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 (PI.f64) 1/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (PI.f64) 2/3) 2/3) (cbrt.f64 (*.f64 (PI.f64) 2/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) 2/3) 1 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) 1/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 8 3)) (*.f64 (PI.f64) (cbrt.f64 1/9)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/9)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (PI.f64) 2/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 (+.f64 (PI.f64) (PI.f64)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (PI.f64)) -1/3 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 4 3)) (*.f64 (PI.f64) (sqrt.f64 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 4 3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 2/3 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) (cbrt.f64 1/3)) (cbrt.f64 (/.f64 8 9)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 0) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) (*.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) (*.f64 0 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 -3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 27))) (*.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2/3) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 2/3) (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2/3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (acos.f64 (neg.f64 (/.f64 g h))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3))) (neg.f64 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) 3))))))"]],"rules":[["egg-rr",35],["egg-rr",114],["egg-rr",31],["egg-rr",46]],"time":46.139892578125,"type":"rewrite"},{"count":[[298,231]],"inputs":[["(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64))))","(cos.f64 (fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))","(fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (*.f64 -1 (/.f64 g h))))","(*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))"]],"time":220.9189453125,"type":"simplify"},{"compiler":[[4788,2815]],"time":52.80712890625,"type":"eval"},{"alts":[["(*.f64 2 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) 2)) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3))))))","fresh",1.0120888183790941],["(*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3))","fresh",0.990566259768442],["(*.f64 2 (cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)))","next",0.9765625]],"compiler":[[49,35],[19,16],[16,13],[49,35],[19,16],[16,13]],"count":[[232,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[231,3],"picked":[1,0]}],"min-error":[0.953125],"time":97.056884765625,"type":"prune"},{"compiler":[[68,20]],"locations":[["(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))",0.01171875,true],["(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)",0.015625,true],["(acos.f64 (neg.f64 (/.f64 g h)))",0.0234375,true],["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))",0.9765625,true]],"time":12.384033203125,"type":"localize"},{"count":[[4,76]],"series":[["(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","h","-inf",0.156005859375],["(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","h","inf",0.180908203125],["(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","h","0",0.15380859375],["(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","g","-inf",0.1630859375],["(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","g","inf",0.17578125],["(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","g","0",0.159912109375],["(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)","h","-inf",0.18603515625],["(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)","h","inf",0.16015625],["(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)","h","0",0.1630859375],["(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)","g","-inf",0.18603515625],["(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)","g","inf",0.162841796875],["(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)","g","0",0.19091796875],["(acos.f64 (neg.f64 (/.f64 g h)))","h","-inf",0.143798828125],["(acos.f64 (neg.f64 (/.f64 g h)))","h","inf",0.14306640625],["(acos.f64 (neg.f64 (/.f64 g h)))","h","0",0.170166015625],["(acos.f64 (neg.f64 (/.f64 g h)))","g","-inf",0.149169921875],["(acos.f64 (neg.f64 (/.f64 g h)))","g","inf",0.174072265625],["(acos.f64 (neg.f64 (/.f64 g h)))","g","0",0.155029296875],["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))","h","-inf",1.40283203125],["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))","h","inf",0.653076171875],["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))","h","0",0.4951171875],["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))","g","-inf",0.710205078125],["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))","g","inf",0.669921875],["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))","g","0",0.837158203125]],"time":8.0439453125,"type":"series"},{"count":[[4,161]],"inputs":[["(cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))","(acos.f64 (neg.f64 (/.f64 g h)))","(/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 0) (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) (*.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))) (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) (*.f64 0 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 2)) (cbrt.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 0) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (acos.f64 (neg.f64 (/.f64 g h)))) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 0 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2)) (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x acos.f64 (neg.f64 (/.f64 g h)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 0) (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) (*.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (PI.f64)) (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (PI.f64) (PI.f64))) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 1/3 (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 1/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) (*.f64 0 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/3) (*.f64 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) 1/3) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3) (*.f64 (+.f64 (PI.f64) (PI.f64)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) (*.f64 (PI.f64) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 -3) (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 2)) (cbrt.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 27))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2)) 1/3) (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2)) (sqrt.f64 1/3)) (cbrt.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 27))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 9)) (cbrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) (cbrt.f64 (/.f64 1 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 2)) (cbrt.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (cbrt.f64 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 2)) (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 2))) (cbrt.f64 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 2))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) (sqrt.f64 3)) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) (cbrt.f64 (cbrt.f64 9))) (pow.f64 (cbrt.f64 (cbrt.f64 9)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (cbrt.f64 (sqrt.f64 3))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (sqrt.f64 (sqrt.f64 3))) (sqrt.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/3) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 27))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2)) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) 1) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) 1) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (neg.f64 (sqrt.f64 3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 3)) (neg.f64 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) 1) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) 1) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3))) (neg.f64 (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (neg.f64 (/.f64 g h))) (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (PI.f64) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 0) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 0 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (PI.f64) (*.f64 (neg.f64 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2)) (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) (-.f64 (cbrt.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2)) (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2)) (-.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2)) (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 2 (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 8 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (*.f64 8 (PI.f64))) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 -2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (*.f64 2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 (pow.f64 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))) 2)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2)) (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (PI.f64)) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (PI.f64) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (acos.f64 (neg.f64 (/.f64 g h))) (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (PI.f64) (PI.f64)) 1 (acos.f64 (neg.f64 (/.f64 g h))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1 (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))"]],"rules":[["egg-rr",53],["egg-rr",69],["egg-rr",19],["egg-rr",20]],"time":40.2080078125,"type":"rewrite"},{"count":[[237,169]],"inputs":[["(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(acos.f64 (*.f64 -1 (/.f64 g h)))","(acos.f64 (neg.f64 (/.f64 g h)))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))","(+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))"]],"time":228.10205078125,"type":"simplify"},{"compiler":[[3335,1506]],"time":32.901123046875,"type":"eval"},{"alts":[["(*.f64 2 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) 2)) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3))))))","fresh",1.0120888183790941],["(*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3))","next",0.990566259768442],["(*.f64 2 (cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)))","done",0.9765625]],"compiler":[[49,35],[19,16],[16,13],[49,35],[19,16]],"count":[[172,3]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[169,0],"picked":[1,1]}],"min-error":[0.953125],"time":60.973876953125,"type":"prune"},{"compiler":[[100,34]],"locations":[["(acos.f64 (neg.f64 (/.f64 g h)))",0.0234375,false],["(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))",0.9765625,true],["(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))",0.9765625,true],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)",0.9765625,true]],"time":18.553955078125,"type":"localize"},{"count":[[3,72]],"series":[["(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","h","-inf",0.18994140625],["(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","h","inf",0.1630859375],["(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","h","0",0.1640625],["(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","g","-inf",0.199951171875],["(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","g","inf",0.16796875],["(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","g","0",0.68798828125],["(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","h","-inf",0.161865234375],["(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","h","inf",0.169921875],["(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","h","0",0.159912109375],["(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","g","-inf",0.1640625],["(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","g","inf",0.192138671875],["(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","g","0",0.16796875],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)","h","-inf",1.64013671875],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)","h","inf",1.5380859375],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)","h","0",0.992919921875],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)","g","-inf",1.5361328125],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)","g","inf",1.56201171875],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)","g","0",1.80615234375]],"time":11.989990234375,"type":"series"},{"count":[[3,138]],"inputs":[["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 0) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (neg.f64 (sin.f64 (*.f64 2/3 (PI.f64)))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (neg.f64 (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (cos.f64 (*.f64 2/3 (PI.f64)))) (*.f64 (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (sin.f64 (*.f64 2/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3)) (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3) (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (neg.f64 (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (PI.f64)) (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 1/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 1/3 (PI.f64))) (*.f64 1 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 0) (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/3 (PI.f64)) 1) (*.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (PI.f64)) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 0 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (*.f64 (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2/3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/27 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (pow.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (*.f64 (cbrt.f64 1/9) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 2/3) (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 1/3) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/9) (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/9) (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (cbrt.f64 1/9) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (neg.f64 (sqrt.f64 3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) 3) (*.f64 3 (acos.f64 (neg.f64 (/.f64 g h))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 3) (*.f64 3 (+.f64 (PI.f64) (PI.f64)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 1/3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (cbrt.f64 1/3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/3) (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (cbrt.f64 (pow.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))) 2)) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2/3) 1/3) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 1/27 (acos.f64 (neg.f64 (/.f64 g h))))) (pow.f64 (acos.f64 (neg.f64 (/.f64 g h))) 2/3) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 1/3) (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (sqrt.f64 1/3)) (sqrt.f64 1/3) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) (*.f64 (cbrt.f64 1/9) (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) (cbrt.f64 1/3)) (cbrt.f64 1/9) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 1/3) (+.f64 (PI.f64) (PI.f64))) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 1/3 (PI.f64)) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) (*.f64 (cbrt.f64 1/9) (+.f64 (PI.f64) (PI.f64))) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2/3 (PI.f64) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 1/27 (+.f64 (PI.f64) (PI.f64)))) (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (sqrt.f64 1/3)) (sqrt.f64 1/3) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 1/3)) (cbrt.f64 1/9) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 2/3 (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 2/3 (PI.f64)) 2)) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (pow.f64 (+.f64 (PI.f64) (PI.f64)) 2/3) 1/3) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 (+.f64 (PI.f64) (PI.f64)) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (PI.f64) (PI.f64)) 1/3 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))) (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3 (*.f64 2/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1/3 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 (PI.f64) (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2/3 (PI.f64)) (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2/3 (PI.f64)) 1 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 0) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (neg.f64 (sin.f64 (*.f64 2/3 (PI.f64)))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (neg.f64 (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (cos.f64 (*.f64 2/3 (PI.f64)))) (*.f64 (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (sin.f64 (*.f64 2/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3)) (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3) (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 2/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (neg.f64 (*.f64 (sin.f64 (*.f64 2/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))))))"]],"rules":[["egg-rr",32],["egg-rr",74],["egg-rr",32]],"time":38.026123046875,"type":"rewrite"},{"count":[[210,112]],"inputs":[["(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (*.f64 -1 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (*.f64 2 (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))"]],"time":226.430908203125,"type":"simplify"},{"compiler":[[2890,1586]],"time":31.06005859375,"type":"eval"},{"alts":[["(*.f64 2 (cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)))","done",0.9765625],["(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))","next",0.045253759768442016],["(*.f64 2 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) 2)) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3))))))","fresh",1.0120888183790941],["(*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3))","done",0.990566259768442]],"compiler":[[16,13],[35,24],[49,35],[19,16],[35,24],[49,35]],"count":[[135,4]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[132,1],"picked":[1,1]}],"min-error":[0],"time":17.054931640625,"type":"prune"},{"compiler":[[160,71]],"locations":[["(sin.f64 (*.f64 1/3 (PI.f64)))",1.0,true],["(*.f64 1/3 (PI.f64))",1.0,true],["(cos.f64 (*.f64 1/3 (PI.f64)))",1.58496250072115,true],["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))",61.245039130795405,true]],"time":43.43212890625,"type":"localize"},{"count":[[4,24]],"series":[["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))","h","-inf",0.60009765625],["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))","h","inf",2.8798828125],["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))","h","0",0.4208984375],["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))","g","-inf",0.634033203125],["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))","g","inf",0.635986328125],["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))","g","0",0.798828125]],"time":6.076904296875,"type":"series"},{"count":[[4,97]],"inputs":[["(cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))","(cos.f64 (*.f64 1/3 (PI.f64)))","(*.f64 1/3 (PI.f64))","(sin.f64 (*.f64 1/3 (PI.f64)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 0) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (neg.f64 (sin.f64 (*.f64 1/3 (PI.f64)))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (neg.f64 (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 2)) (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h)))))) (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))) (neg.f64 (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (acos.f64 (neg.f64 (/.f64 g h))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 0) (cos.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (*.f64 0 (cos.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (*.f64 1/3 (PI.f64)))) (cos.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 1/3 (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (PI.f64)))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 2)) (cbrt.f64 (cos.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cos.f64 (*.f64 1/3 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/3 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/3 (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (PI.f64)) (*.f64 (*.f64 1/3 (PI.f64)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/3 (PI.f64)) 0) (*.f64 1/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (PI.f64)) (*.f64 0 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/3 (PI.f64))) (*.f64 1/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/3) (*.f64 (cbrt.f64 1/9) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/3 (PI.f64))) (cbrt.f64 (*.f64 1/9 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/9 (*.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) 1/27)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 1/3 (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/9) (PI.f64)) (cbrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/27 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 1/3)) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 1/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/3) (PI.f64)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/3 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/3 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/9) (*.f64 (PI.f64) (cbrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (cbrt.f64 (*.f64 1/27 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/3 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (PI.f64) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (PI.f64))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (PI.f64))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/3 (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/3 (PI.f64)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/3 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/3 (PI.f64)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 0) (sin.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (*.f64 0 (sin.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 1/3 (PI.f64)))) (sin.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 1/3 (PI.f64)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/3 (PI.f64)))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 2)) (cbrt.f64 (sin.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 1/3 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/3 (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/3 (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/3 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 1/3 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 1/3 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/3 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 1/3 (PI.f64)))))))"]],"rules":[["egg-rr",20],["egg-rr",32],["egg-rr",20],["egg-rr",25]],"time":32.580078125,"type":"rewrite"},{"count":[[121,99]],"inputs":[["(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (*.f64 -1 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))","(cos.f64 (*.f64 1/3 (+.f64 (acos.f64 (neg.f64 (/.f64 g h))) (PI.f64))))"]],"time":83.39697265625,"type":"simplify"},{"compiler":[[4964,2749]],"time":43.1669921875,"type":"eval"},{"alts":[["(*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3))","done",0.990566259768442],["(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/3 (PI.f64))) 3)) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))","fresh",0.9609375],["(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))","done",0.045253759768442016]],"compiler":[[19,16],[38,27],[35,24]],"count":[[135,3]],"kept":[{"done":[2,1],"fresh":[1,0],"new":[131,1],"picked":[1,1]}],"min-error":[0],"time":44.323974609375,"type":"prune"},{"accuracy":[0.045253759768442016],"baseline":[0.045253759768442016],"branch":[["g",0.045253759768442016,1],["h",0.045253759768442016,1],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))",0.045253759768442016,1],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))",0.045253759768442016,1],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))",0.045253759768442016,1],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",0.045253759768442016,1],["(acos.f64 (/.f64 (neg.f64 g) h))",0.045253759768442016,1],["(/.f64 (neg.f64 g) h)",0.045253759768442016,1],["(neg.f64 g)",0.045253759768442016,1]],"compiler":[[3,2],[3,2],[18,16],[16,14],[15,13],[9,7],[7,5],[6,4],[4,3],[165,101]],"count":[[6,1]],"inputs":[["(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/3 (PI.f64))) 3)) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))","(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))","(*.f64 2 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3)))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) 2/3)) (cos.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) -1/3))) 2)) (*.f64 (sin.f64 (*.f64 (acos.f64 (neg.f64 (/.f64 g h))) 1/3)) (neg.f64 (sin.f64 (*.f64 (PI.f64) 2/3))))))","(*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/3 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h))))))) 3))","(*.f64 2 (cos.f64 (/.f64 (+.f64 (+.f64 (PI.f64) (PI.f64)) (acos.f64 (neg.f64 (/.f64 g h)))) 3)))","(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))"]],"link":["."],"name":["2-ancestry mixing, negative discriminant"],"oracle":[1.0238075683790941],"outputs":[["(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))"]],"time":25.701904296875,"times":[["g",3.28515625],["h",3.303955078125],["(*.f64 2 (cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))))",1.984130859375],["(cos.f64 (+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)))",1.925048828125],["(+.f64 (/.f64 (*.f64 2 (PI.f64)) 3) (/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3))",1.89599609375],["(/.f64 (acos.f64 (/.f64 (neg.f64 g) h)) 3)",1.800048828125],["(acos.f64 (/.f64 (neg.f64 g) h))",1.7421875],["(/.f64 (neg.f64 g) h)",3.131103515625],["(neg.f64 g)",3.364990234375]],"type":"regimes"},{"compiler":[[35,24]],"inputs":[["(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (-.f64 (*.f64 (cos.f64 (*.f64 1/3 (PI.f64))) (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))) (*.f64 (sin.f64 (*.f64 1/3 (PI.f64))) (sin.f64 (*.f64 1/3 (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h)))))))))","(*.f64 2 (cos.f64 (*.f64 1/3 (+.f64 (PI.f64) (+.f64 (PI.f64) (acos.f64 (neg.f64 (/.f64 g h))))))))"]],"stop":[["fuel",1]],"time":24.51904296875,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[35,24]],"remove-preprocessing":[[]],"time":13.845947265625,"type":"end"}]