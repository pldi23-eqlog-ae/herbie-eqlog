[{"compiler":[[25,20]],"method":["search"],"sampling":[[12,0.448561035975672,0.42515785148998475,0.12628111253434326],[11,0.3900530747614539,0.48366581270420284,0.12628111253434326],[10,0.3120424598091631,0.5616764276564936,0.12628111253434326],[9,0.3120424598091631,0.5616764276564936,0.12628111253434326],[8,0.2496339678473305,0.6240849196183262,0.12628111253434326],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":333.842041015625,"type":"analyze"},{"outcomes":[["body",512,"invalid",225.76953125,719],["body",256,"invalid",122.5029296875,1026],["body",4096,"valid",31.01318359375,6],["body",512,"valid",232.15966796875,797],["body",1024,"invalid",766.530517578125,1374],["body",1024,"valid",876.940673828125,1611],["body",2048,"valid",202.990966796875,194],["body",256,"valid",630.15771484375,5648]],"time":3100.744140625,"type":"sample"},{"compiler":[[24,19]],"inputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (cos.f64 (*.f64 (*.f64 (PI.f64) a) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) a) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) b) 1/180))) 2) (pow.f64 (*.f64 angle (sin.f64 (*.f64 (*.f64 (PI.f64) b) 1/180))) 2))"]],"symmetry":[[]],"time":78.14794921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))"]],"time":20.748046875,"type":"simplify"},{"compiler":[[45,33]],"time":0.65283203125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.606716098665466],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","next",21.596947343830106]],"compiler":[[24,19],[24,18],[24,19],[24,18]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[21.407879878374878],"time":1.89501953125,"type":"prune"},{"compiler":[[86,48]],"locations":[["(*.f64 (*.f64 (PI.f64) angle) 1/180)",0.26953125,true],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)",0.26953125,true],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))",26.153882723042837,true],["(sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))",26.208418669159652,true]],"time":23.64306640625,"type":"localize"},{"count":[[4,60]],"series":[["(*.f64 (*.f64 (PI.f64) angle) 1/180)","angle","-inf",0.238037109375],["(*.f64 (*.f64 (PI.f64) angle) 1/180)","angle","inf",0.39892578125],["(*.f64 (*.f64 (PI.f64) angle) 1/180)","angle","0",0.380859375],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)","angle","-inf",0.473876953125],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)","angle","inf",0.507080078125],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)","angle","0",0.705810546875],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)","b","-inf",0.75],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)","b","inf",0.484130859375],["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)","b","0",1.202880859375],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","-inf",0.157958984375],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","inf",0.201904296875],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","0",0.427001953125],["(sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","-inf",0.208984375],["(sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","inf",0.194091796875],["(sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","angle","0",0.6259765625]],"time":7.18408203125,"type":"series"},{"count":[[4,125]],"inputs":[["(sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)","(*.f64 (*.f64 (PI.f64) angle) 1/180)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (cos.f64 0)) (*.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 0) (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (*.f64 (cos.f64 0) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (cos.f64 0)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (*.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5) (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b 2/3) (pow.f64 (*.f64 (pow.f64 b 2/3) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 4/3) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b b) (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (*.f64 (neg.f64 b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 2) (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (cbrt.f64 b)) 2) (pow.f64 (pow.f64 b 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 b) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -1/180 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/180) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/180 (PI.f64)) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 1/180 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180) (cbrt.f64 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/32400) (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/5832000 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 (PI.f64) angle) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 (*.f64 1/5832000 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) angle) 1/180)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/180 (*.f64 (PI.f64) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (sqrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle)) (cbrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -1/180 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) angle) (/.f64 1 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3))))))"]],"rules":[["egg-rr",39],["egg-rr",38],["egg-rr",24],["egg-rr",24]],"time":55.35986328125,"type":"rewrite"},{"count":[[185,154]],"inputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))","(+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8)))) (pow.f64 angle 8)) (+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 (*.f64 1/180 angle) (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (fma.f64 1/22674816000000 (pow.f64 (*.f64 angle (PI.f64)) 5) (*.f64 (*.f64 1/180 angle) (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/34992000 (fma.f64 (*.f64 angle (PI.f64)) 1/180 (fma.f64 1/22674816000000 (pow.f64 (*.f64 angle (PI.f64)) 5) (*.f64 -1/30855889612800000000 (pow.f64 (*.f64 angle (PI.f64)) 7)))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1) (*.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4)))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -1/24488801280000000 1) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2))))","(*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2))","(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))","(fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))","(+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4))))))","(fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 8)))) (pow.f64 angle 8)) (+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 6))))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 2)))) (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 b 2) (pow.f64 (PI.f64) 4)))))))","(fma.f64 (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 8)) (+.f64 -1/2777030065152000000000 -1/396718580736000000000)) (pow.f64 angle 8) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))))","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 b 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))"]],"time":185.336181640625,"type":"simplify"},{"compiler":[[5148,3379]],"time":60.02392578125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 4/3)))","fresh",39.98742553845436],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","fresh",21.770640903797073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.606716098665466],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)) (cbrt.f64 (PI.f64))))) 2))","fresh",21.620224264625122],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 b 2/3) (pow.f64 (*.f64 (pow.f64 b 2/3) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))","fresh",41.26433431903691],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.60503480168512],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))","fresh",28.557573931821263],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.64172676794585],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5)))","fresh",21.65643491697233],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.678675542971128],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2))","fresh",21.68095308734847],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/5832000 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 (PI.f64) angle) 2/3)))) 2))","fresh",43.9835756357112],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.685776599636583],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.688641276216124],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2))))","fresh",21.614193584458956],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","fresh",21.5715317277817],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",44.041002693218964],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2))","fresh",21.617928313669193],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2))","fresh",21.67722369806309],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (sqrt.f64 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.614750457898776],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.797689164716815],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.7987297462109],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))))","fresh",36.23702085879021],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",22.291031330937066],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","next",21.57077096884062],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)) (cbrt.f64 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.632305204790725],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2))","fresh",43.998843843182655],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) b) 2)))","fresh",44.56787227448244]],"compiler":[[35,25],[27,21],[24,19],[29,23],[30,23],[27,21],[23,18],[34,25],[35,25],[28,22],[28,22],[31,22],[31,21],[28,22],[42,32],[28,22],[33,24],[28,22],[27,21],[28,22],[33,24],[31,22],[49,35],[19,16],[24,19],[29,23],[31,22],[35,26],[35,25],[27,21],[24,19],[29,23],[30,23],[27,21],[23,18],[34,25],[35,25],[28,22],[28,22],[31,22],[31,21],[28,22],[42,32],[28,22],[33,24],[28,22],[27,21],[28,22],[33,24],[31,22],[49,35],[19,16],[24,19],[29,23],[31,22],[35,26]],"count":[[195,28]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[193,27],"picked":[1,0]}],"min-error":[20.44669221366236],"time":72.029052734375,"type":"prune"},{"compiler":[[94,57]],"locations":[["(pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)",0.26953125,false],["(*.f64 (PI.f64) (*.f64 angle 1/180))",0.3405075195368841,true],["(sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))",26.208418669159652,false],["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))",26.36409689766911,true]],"time":26.865966796875,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (PI.f64) (*.f64 angle 1/180))","angle","-inf",0.14306640625],["(*.f64 (PI.f64) (*.f64 angle 1/180))","angle","inf",0.163818359375],["(*.f64 (PI.f64) (*.f64 angle 1/180))","angle","0",0.14892578125],["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))","angle","-inf",0.248779296875],["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))","angle","inf",0.172119140625],["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))","angle","0",0.244873046875]],"time":1.201904296875,"type":"series"},{"count":[[2,59]],"inputs":[["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))","(*.f64 (PI.f64) (*.f64 angle 1/180))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (cos.f64 0)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (*.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (neg.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (*.f64 -1/180 angle) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 -1/180 angle) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 angle 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle 1/180) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 angle 1/180)) (*.f64 (pow.f64 (*.f64 angle 1/180) 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/180) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 (PI.f64) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 angle 1/180) 2/3) (PI.f64)) (cbrt.f64 (*.f64 angle 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/180))) (pow.f64 (*.f64 angle 1/180) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/32400) (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 angle 1/180) 2/3) (*.f64 (PI.f64) (cbrt.f64 (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -1/180 angle) (PI.f64))) (neg.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) angle) 1/180)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/180 (*.f64 (PI.f64) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (sqrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 -1/180 angle) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -1/180 angle) (PI.f64)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (PI.f64) angle) (/.f64 1 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -1/180 angle) (PI.f64)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -1/180 angle) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 3))))))"]],"rules":[["egg-rr",37],["egg-rr",22]],"time":41.7880859375,"type":"rewrite"},{"count":[[83,68]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 2) -1/64800 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 2) -1/64800 1) (*.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4)))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -1/24488801280000000 1) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 2) -1/64800 (*.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))"]],"time":98.051025390625,"type":"simplify"},{"compiler":[[4069,2773]],"time":47.751953125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 4/3)))","fresh",39.98742553845436],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","fresh",21.770640903797073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2))","fresh",21.651047323073605],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.606716098665466],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)) (cbrt.f64 (PI.f64))))) 2))","fresh",21.620224264625122],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.60503480168512],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))","fresh",28.557573931821263],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.64172676794585],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.659600224647097],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2))))","fresh",21.58801720946947],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5)))","fresh",21.63025854198284],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.614750457898776],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.678675542971128],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.797689164716815],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2))","fresh",21.68095308734847],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/5832000 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 (PI.f64) angle) 2/3)))) 2))","fresh",43.9835756357112],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (pow.f64 b 2/3) (pow.f64 (*.f64 (pow.f64 b 2/3) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))","fresh",41.22697218501172],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","next",21.5715317277817],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","fresh",44.041002693218964],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2))","fresh",21.617928313669193],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",22.291031330937066],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.598496350230626],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 angle 1/180)) (*.f64 (pow.f64 (*.f64 angle 1/180) 2/3) (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.807311888346035],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.688641276216124],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.7987297462109],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2))","fresh",43.998843843182655],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))))","fresh",36.23231928232328],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) b) 2)))","fresh",44.56787227448244]],"compiler":[[35,25],[27,21],[27,22],[24,19],[29,23],[27,21],[23,18],[34,25],[31,22],[42,33],[35,26],[28,22],[28,22],[33,24],[28,22],[31,22],[30,24],[28,22],[33,24],[28,22],[19,16],[29,23],[31,25],[28,22],[31,22],[31,22],[49,35],[35,26],[35,25],[27,21],[27,22],[24,19],[29,23],[27,21],[23,18],[34,25],[31,22],[42,33],[35,26],[28,22],[28,22],[33,24],[28,22],[31,22],[30,24],[28,22],[33,24],[28,22],[19,16],[29,23],[31,25],[28,22],[31,22],[31,22],[49,35],[35,26]],"count":[[178,28]],"kept":[{"done":[0,0],"fresh":[27,18],"new":[150,10],"picked":[1,0]}],"min-error":[20.446380723007206],"time":62.843994140625,"type":"prune"},{"compiler":[[119,75]],"locations":[["(*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))",0.2890625,true],["(*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))",0.34765625,true],["(sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))",26.096073494790804,true],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))",26.153882723042837,false]],"time":31.616943359375,"type":"localize"},{"count":[[3,36]],"series":[["(*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))","angle","-inf",0.275146484375],["(*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))","angle","inf",0.302978515625],["(*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))","angle","0",0.51318359375],["(*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))","angle","-inf",0.27294921875],["(*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))","angle","inf",0.31884765625],["(*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))","angle","0",0.528076171875],["(sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))","angle","-inf",0.234130859375],["(sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))","angle","inf",0.219970703125],["(sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))","angle","0",1.389892578125]],"time":4.197021484375,"type":"series"},{"count":[[3,91]],"inputs":[["(sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))","(*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))","(*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 1/2) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 0) (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))) (*.f64 1/2 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))) (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) (*.f64 0 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) 1/2) (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) 0) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (*.f64 1/2 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (*.f64 0 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 angle (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (sqrt.f64 1/180)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/180)) (*.f64 (cbrt.f64 1/180) (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/180) (PI.f64)) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/180) (cbrt.f64 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 (PI.f64) angle) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (*.f64 (sqrt.f64 1/180) (cbrt.f64 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle (sqrt.f64 1/180))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (PI.f64) angle)) (cbrt.f64 (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 (sqrt.f64 1/180))) (sqrt.f64 (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 (sqrt.f64 1/180))) (cbrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/180)) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 3) (sqrt.f64 1/5832000)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 3) (sqrt.f64 1/5832000)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 1/2) (*.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 0) (*.f64 1/180 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) (*.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 1/180 (*.f64 (PI.f64) angle))) (*.f64 1/2 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 1/180 (*.f64 (PI.f64) angle))) (*.f64 1/180 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) (*.f64 0 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/180)) (*.f64 (cbrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/180) (PI.f64)) (*.f64 angle (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 (*.f64 angle (sqrt.f64 1/180)) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 angle (sqrt.f64 1/180)) (sqrt.f64 1/180)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (sqrt.f64 1/180)) (*.f64 (sqrt.f64 1/180) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (cbrt.f64 (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (sqrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 2/3) (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/180 (*.f64 (PI.f64) angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) angle) 1/180)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/180) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (sqrt.f64 (sqrt.f64 1/180))) (sqrt.f64 (sqrt.f64 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (cbrt.f64 (sqrt.f64 1/180))) (cbrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/180)) (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (sqrt.f64 (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/180) (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (cbrt.f64 (sqrt.f64 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)) (*.f64 (sqrt.f64 1/180) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/180 (*.f64 (PI.f64) angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 3))))))"]],"rules":[["egg-rr",36],["egg-rr",36],["egg-rr",19]],"time":29.93798828125,"type":"rewrite"},{"count":[[127,101]],"inputs":[["(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(+.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))) (*.f64 -1/6 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (sqrt.f64 1/180) 6) (pow.f64 (PI.f64) 3)))))","(+.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (sqrt.f64 1/180) 6) (pow.f64 (PI.f64) 3)))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (sqrt.f64 1/180) 10) (pow.f64 (PI.f64) 5))))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (sqrt.f64 1/180) 14) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (sqrt.f64 1/180) 6) (pow.f64 (PI.f64) 3)))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (sqrt.f64 1/180) 10) (pow.f64 (PI.f64) 5)))))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(+.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))) (*.f64 -1/6 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (sqrt.f64 1/180) 6) (pow.f64 (PI.f64) 3)))))","(fma.f64 -1/6 (pow.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180) 3) (*.f64 (*.f64 angle (PI.f64)) 1/180))","(+.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (sqrt.f64 1/180) 6) (pow.f64 (PI.f64) 3)))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (sqrt.f64 1/180) 10) (pow.f64 (PI.f64) 5))))))","(fma.f64 angle (*.f64 1/180 (PI.f64)) (fma.f64 -1/6 (pow.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180) 3) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (pow.f64 (*.f64 1/180 (PI.f64)) 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (sqrt.f64 1/180) 14) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (sqrt.f64 1/180) 6) (pow.f64 (PI.f64) 3)))) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (sqrt.f64 1/180) 10) (pow.f64 (PI.f64) 5)))))))","(fma.f64 (*.f64 (pow.f64 angle 7) (pow.f64 (*.f64 1/180 (PI.f64)) 7)) -1/5040 (fma.f64 angle (*.f64 1/180 (PI.f64)) (fma.f64 -1/6 (pow.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180) 3) (*.f64 1/120 (*.f64 (pow.f64 angle 5) (pow.f64 (*.f64 1/180 (PI.f64)) 5))))))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(sin.f64 (*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64))))","(sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (sqrt.f64 1/180) (PI.f64)))","(*.f64 (sqrt.f64 1/180) (*.f64 (PI.f64) angle))","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)","(*.f64 angle (*.f64 (pow.f64 (sqrt.f64 1/180) 2) (PI.f64)))","(*.f64 (*.f64 angle (PI.f64)) 1/180)"]],"time":146.18310546875,"type":"simplify"},{"compiler":[[3934,2727]],"time":46.697998046875,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 4/3)))","fresh",39.98742553845436],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2))","fresh",21.651047323073605],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.606716098665466],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))","fresh",28.557573931821263],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.64172676794585],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 3))) 2))","fresh",21.770640903797073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.659600224647097],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2))))","fresh",21.58801720946947],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)))))) 2))","fresh",44.026383798045906],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 angle 1/180)) (*.f64 (pow.f64 (*.f64 angle 1/180) 2/3) (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.807311888346035],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 2/3)))) 2))","fresh",44.041002693218964],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5)))","fresh",21.63025854198284],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.614750457898776],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.678675542971128],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.797689164716815],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) 2))","fresh",44.044448787994035],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) 3)))) 2))","fresh",21.683898728532878],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2))","fresh",21.68095308734847],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/5832000 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 (PI.f64) angle) 2/3)))) 2))","fresh",43.9835756357112],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (PI.f64) angle)))))) 2))","fresh",43.99174843694381],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.688641276216124],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","next",21.579619185636712],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (pow.f64 b 2/3) (pow.f64 (*.f64 (pow.f64 b 2/3) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))","fresh",41.22697218501172],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2))","fresh",21.617928313669193],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","fresh",22.265615703098423],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) b) 2)))","fresh",44.56787227448244],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.7987297462109],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (PI.f64)) (*.f64 angle (sqrt.f64 1/180))))) 2))","fresh",21.715499725662365],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))))","fresh",36.23231928232328],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.598496350230626]],"compiler":[[35,25],[27,22],[24,19],[23,18],[34,25],[27,21],[31,22],[42,33],[38,29],[31,25],[33,24],[35,26],[28,22],[28,22],[33,24],[38,29],[31,25],[28,22],[31,22],[35,26],[28,22],[31,25],[30,24],[28,22],[23,20],[35,26],[31,22],[28,23],[49,35],[29,23],[35,25],[27,22],[24,19],[23,18],[34,25],[27,21],[31,22],[42,33],[38,29],[31,25],[33,24],[35,26],[28,22],[28,22],[33,24],[38,29],[31,25],[28,22],[31,22],[35,26],[28,22],[31,25],[30,24],[28,22],[23,20],[35,26],[31,22],[28,23],[49,35],[29,23]],"count":[[162,30]],"kept":[{"done":[0,0],"fresh":[27,21],"new":[134,9],"picked":[1,0]}],"min-error":[20.3937766474326],"time":59.44482421875,"type":"prune"},{"compiler":[[145,95]],"locations":[["(*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))",0.34765625,false],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)",0.38097392583195644,true],["(sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))",26.096073494790804,false],["(cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))",26.153882723042837,false]],"time":38.796142578125,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)","angle","-inf",1.554931640625],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)","angle","inf",1.56298828125],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)","angle","0",1.835205078125]],"time":5.0439453125,"type":"series"},{"count":[[1,25]],"inputs":[["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (cos.f64 0)) (*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (*.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) 4/3) (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 7/3) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3)) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (neg.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))))))"]],"rules":[["egg-rr",25]],"time":43.802978515625,"type":"rewrite"},{"count":[[37,34]],"inputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/97200 (pow.f64 (PI.f64) 2)) (*.f64 -1/194400 (pow.f64 (PI.f64) 2))) (pow.f64 angle 2)))","(+.f64 1 (+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/18895680000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))) (*.f64 2/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))))))) (*.f64 (+.f64 (*.f64 -1/97200 (pow.f64 (PI.f64) 2)) (*.f64 -1/194400 (pow.f64 (PI.f64) 2))) (pow.f64 angle 2))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/18895680000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))) (*.f64 2/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/97200 (pow.f64 (PI.f64) 2)) (*.f64 -1/194400 (pow.f64 (PI.f64) 2))) (pow.f64 angle 2)) (*.f64 (+.f64 (*.f64 -1/291600 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (+.f64 (*.f64 -1/583200 (*.f64 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/7346640384000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/194400 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (*.f64 -1/194400 (*.f64 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))))))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/7346640384000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/194400 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (*.f64 -1/194400 (*.f64 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))))))) (+.f64 (*.f64 -1/194400 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 2/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (pow.f64 (PI.f64) 2))) (*.f64 -1/583200 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))))))))) (pow.f64 angle 6)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 (+.f64 (*.f64 -1/97200 (pow.f64 (PI.f64) 2)) (*.f64 -1/194400 (pow.f64 (PI.f64) 2))) (pow.f64 angle 2)))","(fma.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/64800) (*.f64 angle angle) 1)","(+.f64 1 (+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/18895680000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))) (*.f64 2/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))))))) (*.f64 (+.f64 (*.f64 -1/97200 (pow.f64 (PI.f64) 2)) (*.f64 -1/194400 (pow.f64 (PI.f64) 2))) (pow.f64 angle 2))))","(+.f64 (fma.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/64800) (*.f64 angle angle) 1) (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/37791360000 1/18895680000)) (*.f64 (pow.f64 (PI.f64) 4) -1/25194240000))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/18895680000 (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))) (*.f64 2/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/97200 (pow.f64 (PI.f64) 2)) (*.f64 -1/194400 (pow.f64 (PI.f64) 2))) (pow.f64 angle 2)) (*.f64 (+.f64 (*.f64 -1/291600 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (+.f64 (*.f64 -1/583200 (*.f64 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/7346640384000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/194400 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (*.f64 -1/194400 (*.f64 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))))))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/7346640384000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/194400 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (*.f64 -1/194400 (*.f64 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))))))) (+.f64 (*.f64 -1/194400 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 2/3 (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4))))) (pow.f64 (PI.f64) 2))) (*.f64 -1/583200 (*.f64 (pow.f64 (PI.f64) 2) (-.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/12597120000 (pow.f64 (PI.f64) 4)))))))))) (pow.f64 angle 6)))))","(+.f64 1 (fma.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 4) (+.f64 1/37791360000 1/18895680000)) (*.f64 (pow.f64 (PI.f64) 4) -1/25194240000)) (pow.f64 angle 4) (fma.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) -1/64800) (*.f64 angle angle) (*.f64 (+.f64 (*.f64 (*.f64 (*.f64 (PI.f64) (PI.f64)) (*.f64 (pow.f64 (PI.f64) 4) -1/25194240000)) (+.f64 -1/291600 -1/583200)) (+.f64 (-.f64 (*.f64 (pow.f64 (PI.f64) 6) (-.f64 -1/24488801280000000 -1/7346640384000000)) (*.f64 2 (*.f64 (*.f64 (PI.f64) (PI.f64)) (*.f64 -1/194400 (*.f64 (pow.f64 (PI.f64) 4) -1/25194240000))))) (*.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (*.f64 -1/583200 (*.f64 (pow.f64 (PI.f64) 4) -1/25194240000)) (*.f64 -1/194400 (fma.f64 2/3 (*.f64 (pow.f64 (PI.f64) 4) -1/25194240000) (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)))))))) (pow.f64 angle 6)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))"]],"time":53.09814453125,"type":"simplify"},{"compiler":[[4653,3401]],"time":56.892822265625,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 4/3)))","fresh",39.98742553845436],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2))","fresh",21.651047323073605],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))","fresh",21.606716098665466],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))","fresh",28.557573931821263],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.64172676794585],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 3))) 2))","fresh",21.770640903797073],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","fresh",21.659600224647097],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2))))","fresh",21.58801720946947],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)))))) 2))","fresh",44.026383798045906],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 angle 1/180)) (*.f64 (pow.f64 (*.f64 angle 1/180) 2/3) (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.807311888346035],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 2/3)))) 2))","fresh",44.041002693218964],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5)))","fresh",21.63025854198284],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.614750457898776],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.678675542971128],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.797689164716815],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","fresh",21.55386044816252],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) 2))","fresh",44.044448787994035],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) 3)))) 2))","fresh",21.683898728532878],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2))","fresh",21.68095308734847],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/5832000 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 (PI.f64) angle) 2/3)))) 2))","fresh",43.9835756357112],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (PI.f64) angle)))))) 2))","fresh",43.99174843694381],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.688641276216124],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","done",21.579619185636712],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (pow.f64 b 2/3) (pow.f64 (*.f64 (pow.f64 b 2/3) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))","fresh",41.22697218501172],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2))","fresh",21.617928313669193],["(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","fresh",22.265615703098423],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) b) 2)))","fresh",44.56787227448244],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",43.7987297462109],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (PI.f64)) (*.f64 angle (sqrt.f64 1/180))))) 2))","fresh",21.715499725662365],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))))","fresh",36.23231928232328],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","fresh",21.598496350230626]],"compiler":[[35,25],[27,22],[24,19],[23,18],[34,25],[27,21],[31,22],[42,33],[38,29],[31,25],[33,24],[35,26],[28,22],[28,22],[33,24],[31,26],[38,29],[31,25],[28,22],[31,22],[35,26],[28,22],[31,25],[30,24],[28,22],[23,20],[35,26],[31,22],[28,23],[49,35],[29,23]],"count":[[162,31]],"kept":[{"done":[0,0],"fresh":[29,29],"new":[132,1],"picked":[1,1]}],"min-error":[20.3937766474326],"time":44.171142578125,"type":"prune"},{"accuracy":[21.55386044816251],"baseline":[21.55386044816252],"branch":[["a",21.55386044816251,1],["b",21.55386044816251,1],["angle",21.553860448162514,1],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))",21.553860448162517,1],["(*.f64 (PI.f64) (/.f64 angle 180))",21.553860448162514,1],["(/.f64 angle 180)",21.553860448162514,1]],"compiler":[[4,3],[4,3],[4,3],[24,19],[8,7],[6,5],[1377,914]],"count":[[49,1]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) 3))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/180 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)) 2/3)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (cbrt.f64 1/180)) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))) 3)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) (sqrt.f64 1/180)) (cbrt.f64 (*.f64 (PI.f64) angle)))))) 2))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (sqrt.f64 1/180) (PI.f64)) (*.f64 angle (sqrt.f64 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (*.f64 (pow.f64 b 2/3) (pow.f64 (*.f64 (pow.f64 b 2/3) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 angle 1/180) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 angle 1/180)) (*.f64 (pow.f64 (*.f64 angle 1/180) 2/3) (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2/3) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 4/3)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 3))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)) (cbrt.f64 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 b 2/3) (pow.f64 (*.f64 (pow.f64 b 2/3) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2)))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 (PI.f64) angle))) 2)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)))) 5)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 (PI.f64) angle))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/5832000 (*.f64 (PI.f64) angle))) (pow.f64 (*.f64 (PI.f64) angle) 2/3)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (*.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) b))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))) 2))))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3) (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (cbrt.f64 1/180)) (cbrt.f64 1/32400)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 3)) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180)) (sqrt.f64 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) (pow.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180) 2/3)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 6)) 1/765275040000000) (fma.f64 (*.f64 -1/3149280000 (pow.f64 angle 4)) (*.f64 (*.f64 b b) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 b (PI.f64))) 2)))))","(+.f64 (pow.f64 (*.f64 a 1) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 angle 1/180)) (cbrt.f64 (PI.f64))))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) angle)) (*.f64 (pow.f64 (*.f64 (PI.f64) angle) 2/3) 1/180)))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180)) 2/3) b) 2)))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (*.f64 (PI.f64) angle) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))"]],"link":["."],"name":["ab-angle->ABCF C"],"oracle":[57.586655167865594],"outputs":[["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))"]],"time":102.458984375,"times":[["a",12.884033203125],["b",13.005859375],["angle",12.93994140625],["(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 2))",11.60302734375],["(*.f64 (PI.f64) (/.f64 angle 180))",14.235107421875],["(/.f64 angle 180)",13.342041015625]],"type":"regimes"},{"compiler":[[31,26]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 3)) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 (sqrt.f64 1/180) (*.f64 (*.f64 (PI.f64) angle) (sqrt.f64 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (cos.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))) 2) (pow.f64 (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 (PI.f64) angle)))) 2))"]],"stop":[["fuel",1]],"time":22.630859375,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[31,26]],"remove-preprocessing":[[]],"time":15.76611328125,"type":"end"}]