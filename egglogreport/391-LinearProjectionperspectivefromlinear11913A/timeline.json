[{"compiler":[[10,6]],"method":["search"],"sampling":[[12,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[11,0.8487798809073865,0.15024379501119256,0.0009763240814208984],[10,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[9,0.7102433945983648,0.28878028132021427,0.0009763240814208984],[8,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[7,0.46829234808683395,0.5307313278317451,0.0009763240814208984],[6,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":28.52490234375,"type":"analyze"},{"outcomes":[["body",256,"valid",278.841064453125,8256]],"time":286.30908203125,"type":"sample"},{"compiler":[[9,5]],"inputs":[["0","1"],["(/.f64 (+.f64 x y) (-.f64 x y))","(/.f64 (+.f64 y x) (-.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (+.f64 x y) (-.f64 x y))","(/.f64 (+.f64 y x) (-.f64 y x))","(/.f64 (+.f64 x y) (-.f64 y x))"]],"symmetry":[[]],"time":56.906005859375,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 x y) (-.f64 x y))"]],"time":19.02197265625,"type":"simplify"},{"compiler":[[9,5]],"time":0.19384765625,"type":"eval"},{"alts":[["(/.f64 (+.f64 x y) (-.f64 x y))","next",0.02734375]],"compiler":[[9,5],[9,5]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.02734375],"time":1.732177734375,"type":"prune"},{"compiler":[[17,5]],"locations":[["(/.f64 (+.f64 x y) (-.f64 x y))",0.02734375,true]],"time":3.558837890625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (+.f64 x y) (-.f64 x y))","y","-inf",0.409912109375],["(/.f64 (+.f64 x y) (-.f64 x y))","y","inf",0.361083984375],["(/.f64 (+.f64 x y) (-.f64 x y))","y","0",0.338134765625],["(/.f64 (+.f64 x y) (-.f64 x y))","x","-inf",0.35205078125],["(/.f64 (+.f64 x y) (-.f64 x y))","x","inf",0.423095703125],["(/.f64 (+.f64 x y) (-.f64 x y))","x","0",0.45703125]],"time":2.43701171875,"type":"series"},{"count":[[1,62]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 x y)) y) (*.f64 (/.f64 1 (-.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (/.f64 1 (-.f64 x y))) (*.f64 y (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (/.f64 1 (-.f64 x y))) (*.f64 x (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x y) 2/3) -1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (/.f64 (+.f64 x y) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/3)) (/.f64 (+.f64 x y) (neg.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x y)) -1) (/.f64 (neg.f64 (pow.f64 (+.f64 x y) 2/3)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 y x))) (/.f64 (neg.f64 (pow.f64 (+.f64 x y) 2/3)) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (+.f64 x y))) 1) (/.f64 (pow.f64 (+.f64 x y) 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (+.f64 x y))) (cbrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (+.f64 x y) 2/3) (neg.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x y)) (/.f64 (pow.f64 (+.f64 x y) 2/3) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2/3) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x y) 2/3) (-.f64 x y)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2)) (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/3)) (/.f64 (neg.f64 (+.f64 x y)) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x y)) (pow.f64 (-.f64 x y) 2/3)) (/.f64 (pow.f64 (+.f64 x y) 2/3) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)) (pow.f64 (+.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x y)) -1) (/.f64 (pow.f64 (+.f64 x y) 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) 2/3) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 x y) 2/3) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) -1) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) -1/3) (+.f64 x y)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (+.f64 x y) 2/3)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2/3) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2/3) (cbrt.f64 (neg.f64 (+.f64 x y)))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (+.f64 x y))) (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2/3)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) 1) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) 1) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y)))) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 x y) (-.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))))"]],"rules":[["egg-rr",62]],"time":22.462158203125,"type":"rewrite"},{"count":[[86,91]],"inputs":[["-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)))) 1)"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 2) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3)))) -1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (+.f64 (/.f64 y x) 1) (+.f64 (/.f64 (*.f64 y (+.f64 y y)) (*.f64 x x)) (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (fma.f64 (*.f64 (*.f64 y y) (+.f64 y y)) (pow.f64 x (neg.f64 3)) (+.f64 1 (/.f64 (*.f64 y (+.f64 y y)) (*.f64 x x)))) (+.f64 (/.f64 y x) (/.f64 y x)))","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (+.f64 (/.f64 y x) 1) (+.f64 (/.f64 (*.f64 y (+.f64 y y)) (*.f64 x x)) (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (fma.f64 (*.f64 (*.f64 y y) (+.f64 y y)) (pow.f64 x (neg.f64 3)) (+.f64 1 (/.f64 (*.f64 y (+.f64 y y)) (*.f64 x x)))) (+.f64 (/.f64 y x) (/.f64 y x)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 1 (*.f64 2 (+.f64 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)) (pow.f64 (/.f64 y x) 3))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 (+.f64 x x) y)) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) x) (*.f64 y y))) (+.f64 1 (/.f64 (+.f64 x x) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","(-.f64 (*.f64 (neg.f64 (/.f64 (+.f64 x x) y)) (pow.f64 (/.f64 x y) 2)) (+.f64 1 (+.f64 (/.f64 (*.f64 (+.f64 x x) x) (*.f64 y y)) (/.f64 (+.f64 x x) y))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)) 1)","(+.f64 (neg.f64 (/.f64 (+.f64 x x) y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y))) 1)","(-.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) x) (*.f64 y y))) (+.f64 1 (/.f64 (+.f64 x x) y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)))) 1)","(-.f64 (*.f64 (neg.f64 (/.f64 (+.f64 x x) y)) (pow.f64 (/.f64 x y) 2)) (+.f64 1 (+.f64 (/.f64 (*.f64 (+.f64 x x) x) (*.f64 y y)) (/.f64 (+.f64 x x) y))))"]],"time":85.121826171875,"type":"simplify"},{"compiler":[[1406,569]],"time":12.9580078125,"type":"eval"},{"alts":[["(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3)))) -1)","fresh",29.595427096995216],["(+.f64 1 (*.f64 2 (+.f64 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)) (pow.f64 (/.f64 y x) 3))))","fresh",34.2163505072902],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","next",0.171875]],"compiler":[[21,13],[21,13],[17,10],[21,13],[21,13],[17,10]],"count":[[92,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[91,3],"picked":[1,0]}],"min-error":[0.00390625],"time":14.8330078125,"type":"prune"},{"compiler":[[42,19]],"locations":[["(/.f64 1 (-.f64 x y))",0.0078125,true],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))",0.01953125,true],["(*.f64 (/.f64 1 (-.f64 x y)) y)",0.1796875,true],["(*.f64 (/.f64 1 (-.f64 x y)) x)",0.1875,true]],"time":8.212158203125,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 1 (-.f64 x y))","y","-inf",0.205810546875],["(/.f64 1 (-.f64 x y))","y","inf",0.18896484375],["(/.f64 1 (-.f64 x y))","y","0",0.2099609375],["(/.f64 1 (-.f64 x y))","x","-inf",0.204833984375],["(/.f64 1 (-.f64 x y))","x","inf",0.24609375],["(/.f64 1 (-.f64 x y))","x","0",0.343994140625],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","y","-inf",0.301025390625],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","y","inf",0.2548828125],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","y","0",0.177001953125],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","x","-inf",0.303955078125],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","x","inf",0.2470703125],["(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","x","0",0.212158203125],["(*.f64 (/.f64 1 (-.f64 x y)) y)","y","-inf",0.3310546875],["(*.f64 (/.f64 1 (-.f64 x y)) y)","y","inf",0.2099609375],["(*.f64 (/.f64 1 (-.f64 x y)) y)","y","0",0.208984375],["(*.f64 (/.f64 1 (-.f64 x y)) y)","x","-inf",0.305908203125],["(*.f64 (/.f64 1 (-.f64 x y)) y)","x","inf",0.27294921875],["(*.f64 (/.f64 1 (-.f64 x y)) y)","x","0",0.213134765625],["(*.f64 (/.f64 1 (-.f64 x y)) x)","y","-inf",0.27294921875],["(*.f64 (/.f64 1 (-.f64 x y)) x)","y","inf",0.259033203125],["(*.f64 (/.f64 1 (-.f64 x y)) x)","y","0",0.219970703125],["(*.f64 (/.f64 1 (-.f64 x y)) x)","x","-inf",0.22412109375],["(*.f64 (/.f64 1 (-.f64 x y)) x)","x","inf",0.356201171875],["(*.f64 (/.f64 1 (-.f64 x y)) x)","x","0",0.39697265625]],"time":6.517822265625,"type":"series"},{"count":[[4,270]],"inputs":[["(*.f64 (/.f64 1 (-.f64 x y)) x)","(*.f64 (/.f64 1 (-.f64 x y)) y)","(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","(/.f64 1 (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 x y)) 0) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (*.f64 (/.f64 x (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 x y))) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (*.f64 0 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2) (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 y x)) (-.f64 y x)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (-.f64 (/.f64 (*.f64 x x) (-.f64 x y)) (/.f64 (*.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (-.f64 x y)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (/.f64 x (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) x) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (/.f64 (cbrt.f64 x) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (-.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 3)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 (/.f64 (/.f64 x (-.f64 y x)) (-.f64 y x)) (/.f64 (/.f64 y (-.f64 y x)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (*.f64 x x) (-.f64 x y)) (/.f64 (*.f64 x y) (-.f64 x y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 x y) 2)) (*.f64 (pow.f64 (-.f64 x y) 2) (*.f64 x y))) (*.f64 (pow.f64 (-.f64 x y) 2) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 x)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) x) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) x)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 x y)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x x) (-.f64 x y)) (pow.f64 (-.f64 x y) 2)) (*.f64 (-.f64 x y) (*.f64 x y))) (pow.f64 (-.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x x) (-.f64 x y)) (-.f64 x y)) (*.f64 (-.f64 x y) (/.f64 (*.f64 x y) (-.f64 x y)))) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x x) (-.f64 x y)) (*.f64 (pow.f64 (-.f64 x y) 2) (/.f64 (*.f64 x y) (-.f64 x y)))) (pow.f64 (-.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (pow.f64 (/.f64 x (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 x y) -2) (*.f64 x x) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 4)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (pow.f64 (-.f64 x y) -2) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 3)) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 x (-.f64 y x)) (-.f64 y x)) x (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 x y)) (/.f64 x (-.f64 x y)) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 4)) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) (/.f64 (*.f64 x x) (-.f64 x y)) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x x) (-.f64 x y)) (/.f64 -1 (-.f64 y x)) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (/.f64 x (-.f64 y x)) (-.f64 y x)) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 x (-.f64 x y)) 2) (/.f64 (neg.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 -1 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 (*.f64 y y)) (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 4))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 (/.f64 (/.f64 y (-.f64 y x)) (-.f64 y x))) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (/.f64 1 (-.f64 y x)) (/.f64 (*.f64 y y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 (/.f64 (*.f64 y y) (-.f64 x y))) (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 (pow.f64 (-.f64 x y) -2)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (/.f64 y (-.f64 y x)) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (neg.f64 y) (/.f64 (/.f64 y (-.f64 y x)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 (/.f64 y (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 0 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (pow.f64 (/.f64 y (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (-.f64 (/.f64 (*.f64 x y) (-.f64 x y)) (/.f64 (*.f64 y y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (-.f64 (*.f64 (/.f64 x (-.f64 x y)) (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (-.f64 y x)) (-.f64 y x)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (/.f64 y (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) y) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (cbrt.f64 y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (-.f64 (/.f64 (/.f64 x (-.f64 y x)) (-.f64 y x)) (/.f64 (/.f64 y (-.f64 y x)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) y) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) y)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x y) (*.f64 y y)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (*.f64 x y) (-.f64 x y)) (/.f64 (*.f64 y y) (-.f64 x y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 x y)) (pow.f64 (-.f64 x y) 2)) (*.f64 (-.f64 x y) (*.f64 y y))) (pow.f64 (-.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 x y)) (-.f64 x y)) (*.f64 (-.f64 x y) (/.f64 (*.f64 y y) (-.f64 x y)))) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (*.f64 (pow.f64 (-.f64 x y) 2) (*.f64 y y))) (*.f64 (pow.f64 (-.f64 x y) 2) (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) (-.f64 x y)) (*.f64 (pow.f64 (-.f64 x y) 2) (/.f64 (*.f64 y y) (-.f64 x y)))) (pow.f64 (-.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) (-.f64 x y)) (/.f64 -1 (-.f64 y x)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 x (-.f64 y x)) (-.f64 y x)) y (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) 2)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (-.f64 x y)) (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 x y)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) (/.f64 (*.f64 x y) (-.f64 x y)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 (/.f64 y (-.f64 y x)) (-.f64 y x)) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2))))) (+.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 x y) 2))))) (+.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (+.f64 x y)) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (+.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (/.f64 y (cbrt.f64 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (+.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 x (cbrt.f64 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) (/.f64 1 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) -1) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) (-.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (-.f64 x y) (/.f64 y (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (-.f64 y x)) (*.f64 (-.f64 x y) (neg.f64 y))) (*.f64 (-.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (/.f64 y (cbrt.f64 (-.f64 x y))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (-.f64 y x) (/.f64 y (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (-.f64 x y)) (*.f64 (-.f64 y x) y)) (*.f64 (-.f64 y x) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (-.f64 x y) (/.f64 x (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (-.f64 y x)) (*.f64 (-.f64 x y) (neg.f64 x))) (*.f64 (-.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (/.f64 x (cbrt.f64 (-.f64 x y))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (-.f64 y x) (/.f64 x (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (-.f64 x y)) (*.f64 (-.f64 y x) x)) (*.f64 (-.f64 y x) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x))) (neg.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) (cbrt.f64 (/.f64 -1 (-.f64 y x)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (+.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (+.f64 x y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (+.f64 x y))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) 1) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 x (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (/.f64 y (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (-.f64 y x)) (*.f64 (-.f64 y x) (neg.f64 y))) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (-.f64 y x)) (*.f64 (-.f64 y x) (neg.f64 x))) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 y x)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 x y) (/.f64 1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) y) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (cbrt.f64 (*.f64 y y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) x (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 -1 (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) y (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 y x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 x y)) 1 (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) x) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 x) (-.f64 x y)) (cbrt.f64 (*.f64 x x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (/.f64 x (-.f64 x y))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 x y)) 1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (-.f64 y x)) (/.f64 y (-.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 y x)) 0) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 y x)) (*.f64 (/.f64 -1 (-.f64 y x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (-.f64 y x))) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 y x)) (*.f64 0 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 y x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (cbrt.f64 (/.f64 1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 y x))) -1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) -1) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 y x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 y x)) (-.f64 y x)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x y)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x y) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x y) -3))))))"]],"rules":[["egg-rr",37],["egg-rr",89],["egg-rr",77],["egg-rr",67]],"time":43.05517578125,"type":"rewrite"},{"count":[[366,345]],"inputs":[["(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 x 3))) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (pow.f64 (/.f64 x y) 2) 2)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (pow.f64 (/.f64 x y) 2) 2)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (pow.f64 (/.f64 x y) 2) 2)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) -1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (pow.f64 (/.f64 y x) 2))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (pow.f64 (/.f64 y x) 2))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (pow.f64 (/.f64 y x) 2))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) -1)","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(fma.f64 -2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (*.f64 -2 (+.f64 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3)) (/.f64 x y))) -1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(neg.f64 (-.f64 (neg.f64 (/.f64 (*.f64 2 y) x)) 1))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(neg.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 2 y) x)) 1) (*.f64 2 (pow.f64 (/.f64 y x) 2))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","(neg.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 2 y) x)) 1) (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (pow.f64 (/.f64 y x) 2)))))","1","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) 1)","(+.f64 1 (/.f64 (*.f64 2 y) x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 1 (/.f64 (*.f64 2 y) x)) (+.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 x 3))) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 1 (/.f64 (*.f64 2 y) x)) (+.f64 (+.f64 (*.f64 2 (pow.f64 (/.f64 y x) 3)) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 2)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (/.f64 (*.f64 2 y) x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 1 (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (neg.f64 (/.f64 x y)) -1) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (neg.f64 (/.f64 x y)) (fma.f64 -2 (pow.f64 (/.f64 x y) 2) -1)) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","(-.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))) (/.f64 x y)) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (fma.f64 -2 (/.f64 x y) (neg.f64 (pow.f64 (/.f64 x y) 2))) (+.f64 (pow.f64 (/.f64 x y) 2) 1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (-.f64 (-.f64 (fma.f64 -2 (/.f64 x y) (neg.f64 (pow.f64 (/.f64 x y) 2))) (*.f64 (pow.f64 (/.f64 x y) 3) (-.f64 1 -1))) (pow.f64 (/.f64 x y) 2)) 1)","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 x (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (/.f64 (neg.f64 (*.f64 x x)) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 x x)) (pow.f64 y 3)) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 1 y))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (*.f64 x x)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (/.f64 y (*.f64 x x))) (/.f64 1 x)) (/.f64 (*.f64 y y) (pow.f64 x 3)))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (*.f64 x x)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (/.f64 y (*.f64 x x))) (/.f64 1 x)) (/.f64 (*.f64 y y) (pow.f64 x 3)))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (*.f64 x x)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (/.f64 y (*.f64 x x))) (/.f64 1 x)) (/.f64 (*.f64 y y) (pow.f64 x 3)))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 x (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (/.f64 (neg.f64 (*.f64 x x)) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 x x)) (pow.f64 y 3)) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 x (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (/.f64 (neg.f64 (*.f64 x x)) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 x x)) (pow.f64 y 3)) (/.f64 x (*.f64 y y))) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 1 y))"]],"time":340.52783203125,"type":"simplify"},{"compiler":[[8448,3663]],"time":72.112060546875,"type":"eval"},{"alts":[["(/.f64 (+.f64 x y) (-.f64 x y))","fresh",0.02734375],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","next",0.01953125],["(+.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3) (*.f64 (/.f64 1 (-.f64 x y)) y))","fresh",0.08822250976844201],["(fma.f64 (/.f64 -1 (-.f64 y x)) y (/.f64 x (-.f64 x y)))","fresh",0.0859375]],"compiler":[[9,5],[13,6],[18,11],[14,8],[9,5],[13,6],[18,11],[14,8]],"count":[[399,4]],"kept":[{"done":[0,0],"fresh":[2,0],"new":[396,4],"picked":[1,0]}],"min-error":[0],"time":201.614990234375,"type":"prune"},{"compiler":[[28,6]],"locations":[["(/.f64 y (-.f64 x y))",0.00390625,true],["(/.f64 x (-.f64 x y))",0.01171875,true],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))",0.01953125,true]],"time":4.672119140625,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 y (-.f64 x y))","x","-inf",0.1669921875],["(/.f64 y (-.f64 x y))","x","inf",0.18603515625],["(/.f64 y (-.f64 x y))","x","0",0.307861328125],["(/.f64 y (-.f64 x y))","y","-inf",0.177001953125],["(/.f64 y (-.f64 x y))","y","inf",0.158935546875],["(/.f64 y (-.f64 x y))","y","0",0.16796875],["(/.f64 x (-.f64 x y))","y","-inf",0.19384765625],["(/.f64 x (-.f64 x y))","y","inf",0.178955078125],["(/.f64 x (-.f64 x y))","y","0",0.169921875],["(/.f64 x (-.f64 x y))","x","-inf",0.155029296875],["(/.f64 x (-.f64 x y))","x","inf",0.156982421875],["(/.f64 x (-.f64 x y))","x","0",0.19580078125],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","x","-inf",0.2138671875],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","x","inf",0.203857421875],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","x","0",0.1689453125],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","y","-inf",0.215087890625],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","y","inf",0.218017578125],["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","y","0",0.218017578125]],"time":3.678955078125,"type":"series"},{"count":[[3,184]],"inputs":[["(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","(/.f64 x (-.f64 x y))","(/.f64 y (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (pow.f64 (-.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -2) (*.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (+.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (+.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (-.f64 x y) (+.f64 x y))) (/.f64 1 (neg.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (*.f64 (*.f64 x y) (pow.f64 (-.f64 x y) -2))))) (+.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (*.f64 (*.f64 x y) (pow.f64 (-.f64 x y) -2))))) (+.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 x y) (+.f64 x y))) (neg.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (cbrt.f64 (*.f64 (-.f64 x y) (+.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 (-.f64 x y) (+.f64 x y))) 1) (neg.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (+.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 x y) (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 (-.f64 x y) (+.f64 x y))) (-.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (-.f64 y x)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (pow.f64 (cbrt.f64 (-.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 4)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 x (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (/.f64 y (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) x) (*.f64 (-.f64 x y) (/.f64 y (cbrt.f64 (-.f64 x y))))) (pow.f64 (cbrt.f64 (-.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) y)) (pow.f64 (cbrt.f64 (-.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (/.f64 y (cbrt.f64 (-.f64 x y))))) (pow.f64 (cbrt.f64 (-.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (-.f64 y x) (/.f64 y (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (-.f64 y x) (/.f64 x (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) x)) (pow.f64 (cbrt.f64 (-.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (/.f64 x (cbrt.f64 (-.f64 x y))))) (pow.f64 (cbrt.f64 (-.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (-.f64 x y) (/.f64 x (cbrt.f64 (-.f64 x y))))) (pow.f64 (cbrt.f64 (-.f64 x y)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (neg.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 -1 (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 y x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 1 (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) y (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (-.f64 y x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (-.f64 y x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) x (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (/.f64 x (-.f64 x y))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 x y)) 1 (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 x y)) 1 (/.f64 y (-.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 x y)) 0) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (*.f64 (/.f64 x (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 x y))) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (*.f64 0 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) x) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2)) (cbrt.f64 x)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 (/.f64 y (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 0 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3))))))"]],"rules":[["egg-rr",45],["egg-rr",45],["egg-rr",94]],"time":34.801025390625,"type":"rewrite"},{"count":[[256,245]],"inputs":[["1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 x 3))) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (/.f64 (*.f64 2 y) x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 1 (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (neg.f64 (/.f64 x y)) -1) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (neg.f64 (/.f64 x y)) (fma.f64 -2 (pow.f64 (/.f64 x y) 2) -1)) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","(-.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))) (/.f64 x y)) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (fma.f64 -2 (/.f64 x y) (neg.f64 (pow.f64 (/.f64 x y) 2))) (+.f64 (pow.f64 (/.f64 x y) 2) 1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (-.f64 (-.f64 (fma.f64 -2 (/.f64 x y) (neg.f64 (pow.f64 (/.f64 x y) 2))) (*.f64 (pow.f64 (/.f64 x y) 3) (-.f64 1 -1))) (pow.f64 (/.f64 x y) 2)) 1)","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 2) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (*.f64 -2 (+.f64 (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3)) (/.f64 x y))) -1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(neg.f64 (-.f64 (neg.f64 (/.f64 (*.f64 2 y) x)) 1))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(neg.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 2 y) x)) 1) (*.f64 2 (pow.f64 (/.f64 y x) 2))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","(neg.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 2 y) x)) 1) (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (pow.f64 (/.f64 y x) 2)))))","1","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) 1)","(+.f64 1 (/.f64 (*.f64 2 y) x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (*.f64 2 y) x) (+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) y) x)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 x 3))) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (*.f64 2 y) x) (+.f64 (+.f64 1 (+.f64 (*.f64 2 (pow.f64 (/.f64 y x) 3)) (pow.f64 (/.f64 y x) 2))) (pow.f64 (/.f64 y x) 2)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 x 4)) (pow.f64 y 4)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 x 4)) (pow.f64 y 4)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) (pow.f64 (/.f64 x y) 2))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 x 4)) (pow.f64 y 4)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (+.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 2) (pow.f64 (/.f64 y x) 2))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) (pow.f64 (/.f64 x y) 2)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) (pow.f64 (/.f64 x y) 2)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) (pow.f64 (/.f64 x y) 2)) -1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (+.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 2) (pow.f64 (/.f64 y x) 2))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (+.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 2) (pow.f64 (/.f64 y x) 2))))"]],"time":246.746826171875,"type":"simplify"},{"compiler":[[4362,1581]],"time":37.030029296875,"type":"eval"},{"alts":[["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","next",0.017910009768442016],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (-.f64 x y)))","fresh",0.021816259768442016]],"compiler":[[16,9],[22,12],[16,9],[22,12]],"count":[[249,2]],"kept":[{"done":[0,0],"fresh":[3,0],"new":[245,2],"picked":[1,0]}],"min-error":[0],"time":97.26513671875,"type":"prune"},{"compiler":[[46,12]],"locations":[["(/.f64 x (-.f64 x y))",0.01171875,false],["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))",0.01953125,true],["(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)",0.3399201172213043,true],["(cbrt.f64 (/.f64 x (-.f64 x y)))",7.218973318547695,true]],"time":7.64892578125,"type":"localize"},{"count":[[3,48]],"series":[["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","x","-inf",1.005126953125],["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","x","inf",0.798095703125],["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","x","0",0.177978515625],["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","y","-inf",0.18994140625],["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","y","inf",0.205078125],["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","y","0",0.239990234375],["(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)","y","-inf",0.97509765625],["(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)","y","inf",1.421875],["(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)","y","0",0.379150390625],["(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)","x","-inf",1.0029296875],["(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)","x","inf",1.54296875],["(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)","x","0",1.333984375],["(cbrt.f64 (/.f64 x (-.f64 x y)))","y","-inf",0.80908203125],["(cbrt.f64 (/.f64 x (-.f64 x y)))","y","inf",0.633056640625],["(cbrt.f64 (/.f64 x (-.f64 x y)))","y","0",0.315185546875],["(cbrt.f64 (/.f64 x (-.f64 x y)))","x","-inf",0.489013671875],["(cbrt.f64 (/.f64 x (-.f64 x y)))","x","inf",0.526123046875],["(cbrt.f64 (/.f64 x (-.f64 x y)))","x","0",0.81591796875]],"time":13.180908203125,"type":"series"},{"count":[[3,184]],"inputs":[["(cbrt.f64 (/.f64 x (-.f64 x y)))","(pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)","(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 0) (cbrt.f64 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 x (-.f64 x y)))) (cbrt.f64 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (*.f64 0 (cbrt.f64 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (/.f64 (pow.f64 x 2/3) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (pow.f64 (/.f64 x (-.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (-.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 y x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (neg.f64 (pow.f64 (-.f64 x y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -1/3)) (cbrt.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (cbrt.f64 (cbrt.f64 x))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) 1) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 x y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 x (-.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 x y)) 0) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (*.f64 (/.f64 x (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 x y))) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (*.f64 0 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (pow.f64 (/.f64 x (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3) (cbrt.f64 (/.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (pow.f64 (/.f64 x (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (/.f64 x (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (-.f64 x y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (pow.f64 (/.f64 x (-.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (pow.f64 x 2/3)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (/.f64 (*.f64 x x) (-.f64 x y)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) -1/3) x) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) 1) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) 1) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 2/3) (cbrt.f64 (/.f64 x (-.f64 x y)))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x x) (-.f64 x y))) (cbrt.f64 (/.f64 x (-.f64 x y)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) 1) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) 1) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (-.f64 x y))) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (-.f64 x y)))) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 x y)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 x y)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 0 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (+.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3)) (/.f64 x (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (+.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (/.f64 y (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (-.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3) (/.f64 (cbrt.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2/3)))) (+.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 x (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3) (-.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (/.f64 (cbrt.f64 (*.f64 x y)) (pow.f64 (-.f64 x y) 2/3)))) (+.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2/3) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (-.f64 y x) (*.f64 (-.f64 y x) x)) (/.f64 1 (neg.f64 (pow.f64 (-.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) (/.f64 1 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (pow.f64 (-.f64 x y) 2/3)) (*.f64 (-.f64 x y) (/.f64 x (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 x y) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (-.f64 y x)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (neg.f64 x))) (*.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (-.f64 x y)) (*.f64 (pow.f64 (-.f64 x y) 2/3) x)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (cbrt.f64 (-.f64 x y))) (*.f64 (-.f64 x y) (/.f64 x (pow.f64 (-.f64 x y) 2/3)))) (*.f64 (-.f64 x y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (pow.f64 (-.f64 x y) 2/3)) (*.f64 (-.f64 y x) (/.f64 x (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 y x) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))) (*.f64 (-.f64 y x) (/.f64 x (pow.f64 (-.f64 x y) 2/3)))) (*.f64 (-.f64 y x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (-.f64 y x)) (*.f64 (cbrt.f64 (-.f64 x y)) (neg.f64 y))) (*.f64 (cbrt.f64 (-.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (pow.f64 (-.f64 x y) 2/3)) (*.f64 (-.f64 y x) (/.f64 y (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 y x) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (-.f64 x y)) (*.f64 (cbrt.f64 (-.f64 x y)) y)) (*.f64 (cbrt.f64 (-.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (pow.f64 (-.f64 x y) 2/3)) (*.f64 (-.f64 x y) (/.f64 y (cbrt.f64 (-.f64 x y))))) (*.f64 (-.f64 x y) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (-.f64 y x)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (neg.f64 y))) (*.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (-.f64 x y)) (*.f64 (pow.f64 (-.f64 x y) 2/3) y)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (-.f64 y x) (*.f64 (-.f64 y x) x)) (neg.f64 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) (pow.f64 (-.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) -1/3) (+.f64 x y)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (-.f64 y x) (*.f64 (-.f64 y x) x)) 1) (neg.f64 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) 1) (pow.f64 (-.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 y x) (*.f64 (-.f64 y x) x)) (-.f64 y x)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) (-.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x)) (-.f64 y x)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (-.f64 y x))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) -1) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (+.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 y x) (*.f64 (-.f64 y x) x)) (-.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (/.f64 y (cbrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 x (cbrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) 2/3)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (/.f64 x (cbrt.f64 (-.f64 x y))))) (*.f64 (pow.f64 (-.f64 x y) 2/3) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y))) (*.f64 (pow.f64 (-.f64 x y) 2/3) (/.f64 x (pow.f64 (-.f64 x y) 2/3)))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 x y) 2/3)) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 y (cbrt.f64 (-.f64 x y))))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) 2/3)) (*.f64 (pow.f64 (-.f64 x y) 2/3) (/.f64 y (cbrt.f64 (-.f64 x y))))) (*.f64 (pow.f64 (-.f64 x y) 2/3) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 y (-.f64 y x) (*.f64 (-.f64 y x) x))) (pow.f64 (-.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 y (-.f64 x y) (*.f64 (-.f64 x y) x))) (neg.f64 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3) (cbrt.f64 (/.f64 x (-.f64 x y))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (pow.f64 (/.f64 x (-.f64 x y)) 2/3) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 y x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 -1 (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 x y)))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 x y)) 2/3)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (-.f64 y x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) x (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 x y) -1/3) (/.f64 x (pow.f64 (-.f64 x y) 2/3)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (-.f64 y x)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 x y) -1/3) (/.f64 y (pow.f64 (-.f64 x y) 2/3)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (pow.f64 y 2/3) (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 1 (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 y x)) y (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (-.f64 y x)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 x y)) 1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 x y)) 1 (/.f64 x (-.f64 x y)))))))"]],"rules":[["egg-rr",93],["egg-rr",58],["egg-rr",33]],"time":36.231201171875,"type":"rewrite"},{"count":[[232,237]],"inputs":[["1","(+.f64 (*.f64 1/3 (/.f64 y x)) 1)","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2)))))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))))))","1","(+.f64 (*.f64 1/3 (/.f64 y x)) 1)","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2)))))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))))))","1","(+.f64 (*.f64 1/3 (/.f64 y x)) 1)","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 14/81 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","1","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 2/3 (/.f64 y x))))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (/.f64 y x)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 2/3 (/.f64 y x)) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3)))))))))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (*.f64 -2/3 y)) x)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (*.f64 -2/3 y)) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (*.f64 -2/3 y)) x)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2))))) (+.f64 (*.f64 -2/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (*.f64 -1/3 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2)))))))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","1","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2/3 (/.f64 y x)))))","(-.f64 (+.f64 1 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 y x)) (*.f64 2/3 (/.f64 y x))))))))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 2/3 (/.f64 y x)) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3)))))))))))))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) (*.f64 -1 y))) x)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) (*.f64 -1 y))) x)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) (*.f64 -1 y))) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2))))) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -2/3 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))))))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 1/3 (/.f64 y x)) 1)","(fma.f64 1/3 (/.f64 y x) 1)","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2)))))","(+.f64 (fma.f64 1/3 (/.f64 y x) 1) (*.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x))))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))))))","(+.f64 (fma.f64 1/3 (/.f64 y x) 1) (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1/27 -1)) (*.f64 (*.f64 -1/3 y) (*.f64 (*.f64 y y) -2/3)))) (pow.f64 x 3)) (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)))))","1","(+.f64 (*.f64 1/3 (/.f64 y x)) 1)","(fma.f64 1/3 (/.f64 y x) 1)","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2)))))","(+.f64 (fma.f64 1/3 (/.f64 y x) 1) (*.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x))))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))))))","(+.f64 (fma.f64 1/3 (/.f64 y x) 1) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 -1/27 1)) (*.f64 (*.f64 1/3 (*.f64 (*.f64 y y) -2/3)) (+.f64 y y))) (pow.f64 x 3)) (*.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)))))","1","(+.f64 (*.f64 1/3 (/.f64 y x)) 1)","(fma.f64 1/3 (/.f64 y x) 1)","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (fma.f64 1/3 (/.f64 y x) 1) (*.f64 2/9 (pow.f64 (/.f64 y x) 2)))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 14/81 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 (fma.f64 1/3 (/.f64 y x) 1) (fma.f64 14/81 (pow.f64 (/.f64 y x) 3) (*.f64 2/9 (pow.f64 (/.f64 y x) 2))))","1","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (*.f64 2/3 (/.f64 y x))))","(+.f64 1 (/.f64 y x))","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (/.f64 y x)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))))))","(+.f64 (fma.f64 1/3 (/.f64 y x) 1) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (+.f64 (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (*.f64 x x) -2/3))) (/.f64 (*.f64 2/3 y) x))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 2/3 (/.f64 y x)) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3)))))))))))))))","(+.f64 1 (+.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (*.f64 x x) -2/3)))) (fma.f64 -2/9 (/.f64 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (pow.f64 x 3)) (fma.f64 1/3 (/.f64 y x) (fma.f64 -1/9 (/.f64 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (pow.f64 x 3)) (+.f64 (*.f64 (/.f64 (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1/27 -1)) (*.f64 (*.f64 -1/3 y) (*.f64 (*.f64 y y) -2/3)))) (pow.f64 x 3)) -1) (fma.f64 1/3 (/.f64 (*.f64 y (fma.f64 -2/3 (*.f64 (*.f64 y y) -2/3) (*.f64 1/9 (*.f64 y y)))) (pow.f64 x 3)) (fma.f64 2/3 (/.f64 y x) (*.f64 -1/9 (/.f64 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (pow.f64 x 3)))))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (*.f64 -2/3 y)) x)))","(+.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (*.f64 -2/3 y)) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (/.f64 y x)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (*.f64 -2/3 y)) x)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2))))) (+.f64 (*.f64 -2/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (*.f64 -1/3 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2)))))))))","(+.f64 (+.f64 1 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (/.f64 y x))))) (/.f64 (fma.f64 1/9 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (+.f64 (*.f64 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (+.f64 1/9 2/9)) (fma.f64 -1/3 (*.f64 y (fma.f64 -2/3 (*.f64 (*.f64 y y) -2/3) (*.f64 1/9 (*.f64 y y)))) (fma.f64 -2/3 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 -1/27 1)) (*.f64 (*.f64 1/3 (*.f64 (*.f64 y y) -2/3)) (+.f64 y y))) (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 -1/27 1)) (*.f64 (*.f64 1/3 (*.f64 (*.f64 y y) -2/3)) (+.f64 y y)))))))) (neg.f64 (pow.f64 x 3))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (+.f64 1 (pow.f64 (/.f64 y x) 2)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 y x)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (/.f64 (+.f64 y y) x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (*.f64 2 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 1 (*.f64 2 (+.f64 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (pow.f64 (/.f64 x y) 3)) (/.f64 x y)) -1)","1","(+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2/3 (/.f64 y x)))))","(+.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x))","(-.f64 (+.f64 1 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 y x)) (*.f64 2/3 (/.f64 y x))))))))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 (+.f64 1 (/.f64 y x)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (/.f64 y x))))) (pow.f64 (/.f64 y x) 2))","(-.f64 (+.f64 1 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 y x)) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 1/27 (pow.f64 y 3)) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2)))) (pow.f64 x 3))) (+.f64 (*.f64 2/3 (/.f64 y x)) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y) (pow.f64 x 3)))))))))))))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(+.f64 (+.f64 (+.f64 1 (/.f64 y x)) (+.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 x x)) (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (*.f64 x x) -2/3)))) (fma.f64 -2/9 (/.f64 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (pow.f64 x 3)) (fma.f64 1/3 (/.f64 y x) (fma.f64 -1/9 (/.f64 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (pow.f64 x 3)) (+.f64 (*.f64 (/.f64 (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1/27 -1)) (*.f64 (*.f64 -1/3 y) (*.f64 (*.f64 y y) -2/3)))) (pow.f64 x 3)) -1) (fma.f64 1/3 (/.f64 (*.f64 y (fma.f64 -2/3 (*.f64 (*.f64 y y) -2/3) (*.f64 1/9 (*.f64 y y)))) (pow.f64 x 3)) (fma.f64 2/3 (/.f64 y x) (*.f64 -1/9 (/.f64 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (pow.f64 x 3))))))))))) (+.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (/.f64 y x) 3)))","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) (*.f64 -1 y))) x)))","(+.f64 1 (/.f64 (+.f64 y y) x))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) (*.f64 -1 y))) x)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))))))","(+.f64 (+.f64 (+.f64 1 (/.f64 (+.f64 y y) x)) (/.f64 (+.f64 (*.f64 y y) (*.f64 -1/3 (*.f64 (*.f64 y y) -2/3))) (*.f64 x x))) (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (*.f64 x x) -2/3))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) (*.f64 -1 y))) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (*.f64 y (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 1/9 (pow.f64 y 2))))) (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 -2/3 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 x 2))))))))))","(+.f64 (+.f64 (+.f64 1 (/.f64 (+.f64 y y) x)) (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (*.f64 y y) -2/3)) (*.f64 y y)) (*.f64 x x))) (+.f64 (+.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (+.f64 2/9 1/9)) (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (*.f64 x x) -2/3))) (/.f64 (+.f64 (*.f64 2 (*.f64 (*.f64 1/9 y) (*.f64 (*.f64 y y) -2/3))) (fma.f64 -1/3 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 -1/27 1)) (*.f64 (*.f64 1/3 (*.f64 (*.f64 y y) -2/3)) (+.f64 y y))) (fma.f64 2/9 (*.f64 (*.f64 (*.f64 y y) -2/3) y) (fma.f64 -1/3 (*.f64 y (fma.f64 -2/3 (*.f64 (*.f64 y y) -2/3) (*.f64 1/9 (*.f64 y y)))) (-.f64 (*.f64 -2/3 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 -1/27 1)) (*.f64 (*.f64 1/3 (*.f64 (*.f64 y y) -2/3)) (+.f64 y y)))) (pow.f64 y 3)))))) (neg.f64 (pow.f64 x 3)))))"]],"time":219.891845703125,"type":"simplify"},{"compiler":[[7522,3467]],"time":65.22509765625,"type":"eval"},{"alts":[["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","done",0.017910009768442016],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (-.f64 x y)))","fresh",0.021816259768442016]],"compiler":[[16,9],[22,12]],"count":[[297,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[295,0],"picked":[1,1]}],"min-error":[0],"time":115.552001953125,"type":"prune"},{"accuracy":[0.017910009768442016],"baseline":[0.017910009768442016],"branch":[["x",0.017910009768442016,1],["y",0.017910009768442016,1],["(/.f64 (+.f64 x y) (-.f64 x y))",0.017910009768442016,1],["(/.f64 (+.f64 x y) (-.f64 x y))",0.017910009768442016,1]],"compiler":[[3,2],[3,2],[9,5],[9,5],[142,58]],"count":[[10,1]],"inputs":[["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (cbrt.f64 (+.f64 x y))) (cbrt.f64 (-.f64 x y)))","(/.f64 (+.f64 x y) (-.f64 x y))","(+.f64 (/.f64 y (-.f64 x y)) (/.f64 x (-.f64 x y)))","(+.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3) (*.f64 (/.f64 1 (-.f64 x y)) y))","(fma.f64 (/.f64 -1 (-.f64 y x)) y (/.f64 x (-.f64 x y)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3)))) -1)","(+.f64 1 (*.f64 2 (+.f64 (+.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x)) (pow.f64 (/.f64 y x) 3))))","(+.f64 (*.f64 (/.f64 1 (-.f64 x y)) x) (*.f64 (/.f64 1 (-.f64 x y)) y))","(/.f64 (+.f64 x y) (-.f64 x y))"]],"link":["."],"name":["Linear.Projection:perspective from linear-1.19.1.3, A"],"oracle":[63.50089637223547],"outputs":[["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))"]],"time":14.494873046875,"times":[["x",4.2861328125],["y",4.08203125],["(/.f64 (+.f64 x y) (-.f64 x y))",1.946044921875],["(/.f64 (+.f64 x y) (-.f64 x y))",1.994873046875]],"type":"regimes"},{"compiler":[[16,9]],"inputs":[["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 y (-.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x y))) 3))","(/.f64 (+.f64 x y) (-.f64 x y))"]],"stop":[["fuel",1]],"time":20.510009765625,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[16,9]],"remove-preprocessing":[[]],"time":9.034912109375,"type":"end"}]