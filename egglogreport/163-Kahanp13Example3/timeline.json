[{"compiler":[[31,27]],"method":["search"],"sampling":[[12,0.5002439022064209,0.4992678165435791,0.00048828125],[11,0.499755859375,0.499755859375,0.00048828125],[10,0.499755859375,0.499755859375,0.00048828125],[9,0.499755859375,0.499755859375,0.00048828125],[8,0.499755859375,0.499755859375,0.00048828125],[7,0.499755859375,0.499755859375,0.00048828125],[6,0.499755859375,0.499755859375,0.00048828125],[5,0.499755859375,0.499755859375,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":130.600830078125,"type":"analyze"},{"outcomes":[["body",256,"valid",549.585205078125,8256]],"time":556.98095703125,"type":"sample"},{"compiler":[[30,26]],"inputs":[["0"],["(-.f64 1 (/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 1 (/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))))","(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2))))"]],"symmetry":[[]],"time":57.529052734375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 1 (/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))))","(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2))))"]],"time":23.674072265625,"type":"simplify"},{"compiler":[[49,43]],"time":0.7099609375,"type":"eval"},{"alts":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2))))","next",0.015625]],"compiler":[[20,18],[20,18]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.015625],"time":1.0458984375,"type":"prune"},{"compiler":[[101,85]],"locations":[["(/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)))",0.01171875,true],["(/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))",0.01171875,true],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)",0.03125,true],["(+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1)))",4.012599652915128,true]],"time":22.64501953125,"type":"localize"},{"count":[[4,48]],"series":[["(/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)))","t","-inf",0.19921875],["(/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)))","t","inf",0.26416015625],["(/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)))","t","0",0.266845703125],["(/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))","t","-inf",0.20703125],["(/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))","t","inf",0.214111328125],["(/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))","t","0",0.218994140625],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)","t","-inf",0.18798828125],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)","t","inf",0.217041015625],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)","t","0",0.26220703125],["(+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1)))","t","-inf",0.280029296875],["(+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1)))","t","inf",0.2958984375],["(+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1)))","t","0",0.439208984375]],"time":3.2470703125,"type":"series"},{"count":[[4,233]],"inputs":[["(+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1)))","(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)","(/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))","(/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 0) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (*.f64 0 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 1 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) (/.f64 1 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 1 (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -8 (neg.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3))) (/.f64 1 (+.f64 -4 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 4) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)) (cbrt.f64 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))))) (+.f64 (cbrt.f64 2) (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)) (-.f64 (cbrt.f64 4) (cbrt.f64 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))))) (+.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -8 (neg.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3))) (+.f64 -4 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) 1) (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) (cbrt.f64 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) 1) (*.f64 (neg.f64 t) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) 1/2) (neg.f64 t)) (*.f64 (neg.f64 t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) t) 2)) (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 2 t) 1/2) (/.f64 (-.f64 -1 t) t)) (*.f64 (/.f64 (-.f64 -1 t) t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) 1) (*.f64 t 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) 1/2) t) (*.f64 t 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (*.f64 (*.f64 t (/.f64 (-.f64 -1 t) t)) 2)) (*.f64 (*.f64 t (/.f64 (-.f64 -1 t) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 1/2) (*.f64 (*.f64 t (/.f64 (-.f64 -1 t) t)) 1)) (*.f64 (*.f64 t (/.f64 (-.f64 -1 t) t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -2 (*.f64 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)) 2)) (*.f64 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -2 1/2) (*.f64 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)) 1)) (*.f64 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) 1) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)) 2)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) 1/2) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)) 1)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -2 t) (*.f64 (/.f64 (+.f64 1 t) t) 2)) (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 -2 t) 1/2) (/.f64 (+.f64 1 t) t)) (*.f64 (/.f64 (+.f64 1 t) t) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 1 t) t) (*.f64 1/2 (/.f64 -2 t))) (*.f64 1/2 (/.f64 (+.f64 1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 t (*.f64 1/2 (/.f64 2 (/.f64 (-.f64 -1 t) t)))) (*.f64 1/2 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 t) (*.f64 1/2 (/.f64 -2 (/.f64 (-.f64 -1 t) t)))) (*.f64 1/2 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 1 (*.f64 t (/.f64 (-.f64 -1 t) t))) (*.f64 1/2 2)) (*.f64 1/2 (*.f64 t (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)) (*.f64 1/2 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))))) (*.f64 1/2 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 1 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t))) (*.f64 1/2 -2)) (*.f64 1/2 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (-.f64 -1 t) t) (*.f64 1/2 (/.f64 2 t))) (*.f64 1/2 (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 t) t)) (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 t) (*.f64 1 (/.f64 2 (/.f64 (-.f64 -1 t) t)))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (neg.f64 t)) (*.f64 1 (/.f64 -2 (/.f64 (-.f64 -1 t) t)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 t (/.f64 (-.f64 -1 t) t))) 2) (*.f64 1 (*.f64 t (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))) (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t))) -2) (*.f64 1 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (/.f64 (-.f64 -1 t) t)) (/.f64 2 t)) (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (sqrt.f64 2) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (cbrt.f64 4) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (cbrt.f64 2) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 2)) (neg.f64 (sqrt.f64 2)) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 2 t) (pow.f64 (/.f64 (-.f64 -1 t) t) -1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 1 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 2 t)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 t) 2)) (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) -1) (/.f64 2 t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 8 (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 1 t) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)) (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) -1)) (/.f64 (/.f64 2 t) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 t) (pow.f64 (/.f64 (+.f64 1 t) t) -1) 2)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (+.f64 4 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 4 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))) (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 0) (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) (*.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (*.f64 1 (+.f64 4 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (*.f64 1 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (+.f64 4 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t)))) (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (*.f64 1 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) (*.f64 0 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) 1) (*.f64 (+.f64 4 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 1) (*.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 4 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))) 1) (*.f64 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 1) (*.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) 2) (*.f64 (/.f64 1 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4)) (/.f64 1 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))) (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))) -1) (*.f64 (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) 2) (/.f64 1 (pow.f64 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 4)) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3))) (/.f64 1 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) 2) (pow.f64 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3))) (cbrt.f64 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) 2)) (neg.f64 (pow.f64 (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3))) (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)) 2) (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4)) (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3))) 1) (fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) -2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3)))) (+.f64 -4 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 -2 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 4 (/.f64 (*.f64 2 (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 0) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (*.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) (*.f64 0 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (+.f64 1 t) t)) (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 2)) (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 t)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 t) 2)) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 1 t) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 t) (pow.f64 (/.f64 (-.f64 -1 t) t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) -1) (/.f64 2 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) -1)) (/.f64 (/.f64 2 t) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 t) (pow.f64 (/.f64 (+.f64 1 t) t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 1 (*.f64 t (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 1 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) -1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2 t) (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (*.f64 t (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))) (cbrt.f64 (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) 1) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 t) (-.f64 -1 (pow.f64 t -3))) (/.f64 1 (+.f64 (pow.f64 t -2) (/.f64 (+.f64 t -1) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 t) -1) (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 t (/.f64 (-.f64 -1 t) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 t) (/.f64 (/.f64 (-.f64 -1 t) t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (*.f64 t (/.f64 (-.f64 -1 t) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (/.f64 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (neg.f64 t) (/.f64 (-.f64 -1 t) t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 t (/.f64 (-.f64 -1 t) t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) -1) (*.f64 t 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 2 t) (/.f64 (+.f64 1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) 0) (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) (*.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))) (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) (*.f64 0 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) -2)) (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)) (cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (+.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) -2)) (cbrt.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)) 1) (cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -8 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6))) (/.f64 1 (+.f64 4 (fma.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (+.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 2)) (+.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2) 2)) (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) (neg.f64 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 2)) -3))))))"]],"rules":[["egg-rr",36],["egg-rr",62],["egg-rr",54],["egg-rr",81]],"time":50.18408203125,"type":"rewrite"},{"count":[[281,291]],"inputs":[["(*.f64 2 t)","(+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2)))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3))))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (+.f64 (*.f64 -2 (pow.f64 t 4)) (*.f64 2 (pow.f64 t 3)))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(*.f64 4 (pow.f64 t 2))","(+.f64 (*.f64 -8 (pow.f64 t 3)) (*.f64 4 (pow.f64 t 2)))","(+.f64 (*.f64 -8 (pow.f64 t 3)) (+.f64 (*.f64 12 (pow.f64 t 4)) (*.f64 4 (pow.f64 t 2))))","(+.f64 (*.f64 -8 (pow.f64 t 3)) (+.f64 (*.f64 -16 (pow.f64 t 5)) (+.f64 (*.f64 12 (pow.f64 t 4)) (*.f64 4 (pow.f64 t 2)))))","4","(-.f64 4 (*.f64 8 (/.f64 1 t)))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (*.f64 8 (/.f64 1 t)))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 1 t)) (*.f64 16 (/.f64 1 (pow.f64 t 3)))))","4","(-.f64 4 (*.f64 8 (/.f64 1 t)))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (*.f64 8 (/.f64 1 t)))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 1 t)) (*.f64 16 (/.f64 1 (pow.f64 t 3)))))","-2","(-.f64 (*.f64 2 t) 2)","(-.f64 (+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2))) 2)","(-.f64 (+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3)))) 2)","(/.f64 -2 t)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (*.f64 2 (/.f64 1 t)))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 4))) (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(/.f64 -2 t)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (*.f64 2 (/.f64 1 t)))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 4))) (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","-1/2","(-.f64 (pow.f64 t 2) 1/2)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 t 3)) (pow.f64 t 2)) 1/2)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 t 3)) (+.f64 (pow.f64 t 4) (pow.f64 t 2))) 1/2)","-1/6","(neg.f64 (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (*.f64 4/81 (/.f64 1 (pow.f64 t 3)))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","-1/6","(neg.f64 (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (*.f64 4/81 (/.f64 1 (pow.f64 t 3)))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 t)","(*.f64 t 2)","(+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2)))","(fma.f64 2 t (*.f64 -2 (*.f64 t t)))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3))))","(fma.f64 t 2 (fma.f64 2 (pow.f64 t 3) (*.f64 -2 (*.f64 t t))))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (+.f64 (*.f64 -2 (pow.f64 t 4)) (*.f64 2 (pow.f64 t 3)))))","(fma.f64 2 t (+.f64 (*.f64 -2 (fma.f64 t t (pow.f64 t 4))) (*.f64 2 (pow.f64 t 3))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(+.f64 2 (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (fma.f64 2 (pow.f64 t -2) 2) (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(+.f64 2 (*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t)))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(+.f64 2 (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (fma.f64 2 (pow.f64 t -2) 2) (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(+.f64 2 (*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t)))))","(*.f64 4 (pow.f64 t 2))","(*.f64 4 (*.f64 t t))","(+.f64 (*.f64 -8 (pow.f64 t 3)) (*.f64 4 (pow.f64 t 2)))","(fma.f64 -8 (pow.f64 t 3) (*.f64 4 (*.f64 t t)))","(+.f64 (*.f64 -8 (pow.f64 t 3)) (+.f64 (*.f64 12 (pow.f64 t 4)) (*.f64 4 (pow.f64 t 2))))","(fma.f64 (pow.f64 t 3) -8 (fma.f64 12 (pow.f64 t 4) (*.f64 4 (*.f64 t t))))","(+.f64 (*.f64 -8 (pow.f64 t 3)) (+.f64 (*.f64 -16 (pow.f64 t 5)) (+.f64 (*.f64 12 (pow.f64 t 4)) (*.f64 4 (pow.f64 t 2)))))","(fma.f64 -8 (pow.f64 t 3) (fma.f64 (pow.f64 t 5) -16 (fma.f64 12 (pow.f64 t 4) (*.f64 4 (*.f64 t t)))))","4","(-.f64 4 (*.f64 8 (/.f64 1 t)))","(+.f64 4 (/.f64 -8 t))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (*.f64 8 (/.f64 1 t)))","(+.f64 (fma.f64 (pow.f64 t -2) 12 4) (/.f64 -8 t))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 1 t)) (*.f64 16 (/.f64 1 (pow.f64 t 3)))))","(-.f64 (fma.f64 (pow.f64 t -2) 12 4) (fma.f64 16 (pow.f64 t -3) (/.f64 8 t)))","4","(-.f64 4 (*.f64 8 (/.f64 1 t)))","(+.f64 4 (/.f64 -8 t))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (*.f64 8 (/.f64 1 t)))","(+.f64 (fma.f64 (pow.f64 t -2) 12 4) (/.f64 -8 t))","(-.f64 (+.f64 4 (*.f64 12 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 8 (/.f64 1 t)) (*.f64 16 (/.f64 1 (pow.f64 t 3)))))","(-.f64 (fma.f64 (pow.f64 t -2) 12 4) (fma.f64 16 (pow.f64 t -3) (/.f64 8 t)))","-2","(-.f64 (*.f64 2 t) 2)","(fma.f64 2 t -2)","(-.f64 (+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2))) 2)","(fma.f64 2 t (fma.f64 -2 (*.f64 t t) -2))","(-.f64 (+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3)))) 2)","(+.f64 (fma.f64 2 (pow.f64 t 3) (*.f64 -2 (*.f64 t t))) (fma.f64 2 t -2))","(/.f64 -2 t)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (*.f64 2 (/.f64 1 t)))","(fma.f64 2 (pow.f64 t -2) (/.f64 -2 t))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 4))) (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(*.f64 2 (-.f64 (+.f64 (pow.f64 t -4) (pow.f64 t -2)) (+.f64 (pow.f64 t -3) (/.f64 1 t))))","(/.f64 -2 t)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (*.f64 2 (/.f64 1 t)))","(fma.f64 2 (pow.f64 t -2) (/.f64 -2 t))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 t 2))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 4))) (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(*.f64 2 (-.f64 (+.f64 (pow.f64 t -4) (pow.f64 t -2)) (+.f64 (pow.f64 t -3) (/.f64 1 t))))","-1/2","(-.f64 (pow.f64 t 2) 1/2)","(fma.f64 t t -1/2)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 t 3)) (pow.f64 t 2)) 1/2)","(fma.f64 -2 (pow.f64 t 3) (fma.f64 t t -1/2))","(-.f64 (+.f64 (*.f64 -2 (pow.f64 t 3)) (+.f64 (pow.f64 t 4) (pow.f64 t 2))) 1/2)","(+.f64 (fma.f64 -2 (pow.f64 t 3) (pow.f64 t 4)) (fma.f64 t t -1/2))","-1/6","(neg.f64 (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 -1/6 (/.f64 2/9 t))","(-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 (fma.f64 1/27 (pow.f64 t -2) -1/6) (/.f64 2/9 t))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (*.f64 4/81 (/.f64 1 (pow.f64 t 3)))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(fma.f64 (pow.f64 t -2) 1/27 (fma.f64 (pow.f64 t -3) 4/81 (-.f64 -1/6 (/.f64 2/9 t))))","-1/6","(neg.f64 (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 -1/6 (/.f64 2/9 t))","(-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(-.f64 (fma.f64 1/27 (pow.f64 t -2) -1/6) (/.f64 2/9 t))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (*.f64 4/81 (/.f64 1 (pow.f64 t 3)))) (+.f64 1/6 (*.f64 2/9 (/.f64 1 t))))","(fma.f64 (pow.f64 t -2) 1/27 (fma.f64 (pow.f64 t -3) 4/81 (-.f64 -1/6 (/.f64 2/9 t))))"]],"time":157.072021484375,"type":"simplify"},{"compiler":[[7876,6531]],"time":97.099853515625,"type":"eval"},{"alts":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3))))","next",0.0078125]],"compiler":[[22,19],[22,19]],"count":[[292,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[291,1],"picked":[1,0]}],"min-error":[0.0078125],"time":130.921142578125,"type":"prune"},{"compiler":[[124,98]],"locations":[["(/.f64 (-.f64 -1 t) t)",0.015625,true],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6)",0.07164003907376806,true],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3)",0.851183066454391,true],["(+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))",4.012602789864174,true]],"time":29.56982421875,"type":"localize"},{"count":[[4,48]],"series":[["(/.f64 (-.f64 -1 t) t)","t","-inf",0.2978515625],["(/.f64 (-.f64 -1 t) t)","t","inf",0.358154296875],["(/.f64 (-.f64 -1 t) t)","t","0",0.302978515625],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6)","t","-inf",0.170166015625],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6)","t","inf",0.22021484375],["(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6)","t","0",0.244140625],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3)","t","-inf",0.8310546875],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3)","t","inf",0.428955078125],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3)","t","0",0.885009765625],["(+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))","t","-inf",0.218994140625],["(+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))","t","inf",0.196044921875],["(+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))","t","0",0.301025390625]],"time":4.6650390625,"type":"series"},{"count":[[4,187]],"inputs":[["(+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t)))","(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3)","(pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6)","(/.f64 (-.f64 -1 t) t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 2 (/.f64 -2 (+.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2 (+.f64 1 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -2 (+.f64 1 t)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 1 (/.f64 -2 (+.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) (*.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 0) (+.f64 2 (/.f64 -2 (+.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) (*.f64 0 (+.f64 2 (/.f64 -2 (+.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 2 (/.f64 -2 (+.f64 1 t)))) (+.f64 2 (/.f64 -2 (+.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 2 (/.f64 -2 (-.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -2 (+.f64 1 t)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -8 (neg.f64 (pow.f64 (/.f64 -2 (+.f64 1 t)) 3))) (/.f64 1 (+.f64 (*.f64 (/.f64 -2 (+.f64 1 t)) (+.f64 2 (/.f64 -2 (-.f64 -1 t)))) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t)))) (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 -2 (+.f64 1 t)) 2/3) (-.f64 (cbrt.f64 4) (cbrt.f64 (*.f64 2 (/.f64 -2 (+.f64 1 t)))))) (+.f64 (cbrt.f64 (/.f64 -2 (+.f64 1 t))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 4) (-.f64 (pow.f64 (/.f64 -2 (+.f64 1 t)) 2/3) (cbrt.f64 (*.f64 2 (/.f64 -2 (+.f64 1 t)))))) (+.f64 (cbrt.f64 2) (cbrt.f64 (/.f64 -2 (+.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 8 (pow.f64 (/.f64 -2 (+.f64 1 t)) 3)) (/.f64 1 (fma.f64 (/.f64 -2 (+.f64 1 t)) (+.f64 (/.f64 -2 (+.f64 1 t)) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 2/3) (cbrt.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 2 (/.f64 -2 (+.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 -2 (-.f64 -1 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 1 (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t))) 1) (*.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3) 2)) (*.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -8 (neg.f64 (pow.f64 (/.f64 -2 (+.f64 1 t)) 3))) (+.f64 (*.f64 (/.f64 -2 (+.f64 1 t)) (+.f64 2 (/.f64 -2 (-.f64 -1 t)))) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 8 (pow.f64 (/.f64 -2 (+.f64 1 t)) 3)) (fma.f64 (/.f64 -2 (+.f64 1 t)) (+.f64 (/.f64 -2 (+.f64 1 t)) -2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 2 t) (-.f64 -1 t)) 1) (/.f64 2 t)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (*.f64 (-.f64 -1 t) 2)) (-.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) t) 2)) (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 -2 (/.f64 (-.f64 -1 t) t)) 1) (*.f64 (neg.f64 t) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -2 (*.f64 (+.f64 1 t) 2)) (+.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -2 t) (*.f64 (/.f64 (+.f64 1 t) t) 2)) (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 2 (/.f64 (-.f64 -1 t) t)) 1) (*.f64 t 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (/.f64 (-.f64 -1 t) t)) (/.f64 2 t)) (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 t) (*.f64 1 (/.f64 2 (/.f64 (-.f64 -1 t) t)))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (-.f64 -1 t)) 2) (-.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 2 t) (/.f64 (/.f64 2 t) (-.f64 -1 t))) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (neg.f64 t)) (*.f64 1 (/.f64 -2 (/.f64 (-.f64 -1 t) t)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (+.f64 1 t)) -2) (+.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 t) t)) (/.f64 -2 t)) (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3)) (/.f64 (/.f64 2 t) (cbrt.f64 (/.f64 (-.f64 -1 t) t)))) (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (+.f64 (/.f64 -2 (-.f64 -1 t)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 -2 (-.f64 -1 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 8 (pow.f64 (/.f64 -2 (+.f64 1 t)) 3)) (+.f64 (*.f64 (/.f64 -2 (+.f64 1 t)) (+.f64 2 (/.f64 -2 (-.f64 -1 t)))) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (cbrt.f64 4) (/.f64 -2 (+.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (sqrt.f64 2) (/.f64 -2 (+.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 2 (/.f64 -2 (+.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 2 t) (/.f64 1 (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -2 (+.f64 1 t))) (pow.f64 (/.f64 -2 (+.f64 1 t)) 2/3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -2 (+.f64 1 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 8 (/.f64 (-.f64 -1 t) t))) (/.f64 (/.f64 1 t) (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 2 t)) (/.f64 (pow.f64 (/.f64 2 t) 2/3) (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 (+.f64 1 t)) 1 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 -2 (-.f64 -1 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (/.f64 2 t)) (-.f64 -1 t)) (*.f64 (pow.f64 (/.f64 2 t) 2/3) t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (/.f64 (-.f64 -1 t) t)) (/.f64 2 t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 -1 t)) (*.f64 (/.f64 2 t) t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 t) (/.f64 -1 (/.f64 (-.f64 -1 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) -1/3) (/.f64 (/.f64 2 t) (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 -2 (+.f64 1 t)) 2/3) (cbrt.f64 (/.f64 -2 (+.f64 1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -2 (/.f64 -2 (+.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 2)) (neg.f64 (sqrt.f64 2)) (/.f64 -2 (+.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1 (/.f64 -2 (+.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (cbrt.f64 2) (/.f64 -2 (+.f64 1 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 0) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) (*.f64 0 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 2/3) (pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) (*.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 0) (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) (*.f64 0 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 2/3) (pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) (pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 2/3) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 2 (/.f64 -2 (+.f64 1 t))) 6) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1 t) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 t) t) (*.f64 (/.f64 (-.f64 -1 t) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 t) t) 0) (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 t) (neg.f64 t)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 t) (*.f64 (/.f64 1 t) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 t) t) (*.f64 0 (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 -1 t) t)) (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 t) t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 -1 t) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 -1 t) t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 t) (*.f64 t t)) (/.f64 (*.f64 t t) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 t (+.f64 -1 t) 1)) t) (/.f64 (/.f64 (pow.f64 t 3) (fma.f64 t (+.f64 -1 t) 1)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 t) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t)) (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3) (cbrt.f64 (/.f64 (-.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (-.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 t)) (/.f64 (pow.f64 (-.f64 -1 t) 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 t) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t)) (/.f64 (pow.f64 (-.f64 -1 t) 2/3) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -1/3) (/.f64 (-.f64 -1 t) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 1 t) t)) (neg.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 t 3)) (/.f64 1 (*.f64 (fma.f64 t (+.f64 -1 t) 1) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 (pow.f64 t 3)) t) (/.f64 1 (fma.f64 t (+.f64 -1 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 -1 t)) (/.f64 1 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 t) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 t) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 -1 t)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 t 3)) (*.f64 (fma.f64 t (+.f64 -1 t) 1) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 t) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 t 3)) (/.f64 (*.f64 (fma.f64 t (+.f64 -1 t) 1) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 t 3)) (*.f64 1 (*.f64 (fma.f64 t (+.f64 -1 t) 1) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 t -3)) 1) (+.f64 (pow.f64 (/.f64 -1 t) 2) (/.f64 (+.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 t -1/3)) 1) (*.f64 (pow.f64 t 2/3) -1)) (*.f64 (pow.f64 t 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 t (*.f64 t (neg.f64 t))) (*.f64 t (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 t 2/3)) (*.f64 t (/.f64 t (cbrt.f64 t)))) (*.f64 t (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 t (*.f64 (neg.f64 t) t)) (*.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 t 2/3) (*.f64 (neg.f64 t) (/.f64 t (cbrt.f64 t)))) (*.f64 (neg.f64 t) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 t -1/3)) t) (*.f64 (pow.f64 t 2/3) t)) (*.f64 (pow.f64 t 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 t -1/3)) (neg.f64 t)) (*.f64 (pow.f64 t 2/3) (neg.f64 t))) (*.f64 (pow.f64 t 2/3) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 t -1/3)) (pow.f64 t 2/3)) (*.f64 (pow.f64 t 2/3) (/.f64 t (cbrt.f64 t)))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 t -1/3)) 1) (*.f64 (pow.f64 t 2/3) 1)) (*.f64 (pow.f64 t 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 t 3) 1) (neg.f64 (*.f64 (fma.f64 t (+.f64 -1 t) 1) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 (pow.f64 t 3)) t)) (neg.f64 (fma.f64 t (+.f64 -1 t) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 t t t) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (pow.f64 t 3)) t) (fma.f64 t (+.f64 -1 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 t -3)) -1) (+.f64 (pow.f64 (/.f64 -1 t) 2) (/.f64 (+.f64 -1 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 1 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (-.f64 -1 t) t) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 t -1/3)) (pow.f64 (neg.f64 (pow.f64 t -1/3)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 t -1/3)) (pow.f64 (cbrt.f64 t) -2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 t -1/3) (neg.f64 (pow.f64 (cbrt.f64 t) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 t) -1)))))"]],"rules":[["egg-rr",71],["egg-rr",24],["egg-rr",21],["egg-rr",71]],"time":40.02001953125,"type":"rewrite"},{"count":[[235,237]],"inputs":[["(*.f64 2 t)","(+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2)))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3))))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (+.f64 (*.f64 -2 (pow.f64 t 4)) (*.f64 2 (pow.f64 t 3)))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(*.f64 (pow.f64 t 2) (cbrt.f64 64))","(+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 5) (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584))) (pow.f64 (cbrt.f64 64) 2))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))))","(cbrt.f64 64)","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584)) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(cbrt.f64 64)","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 -1/3 (/.f64 (-.f64 3584 (+.f64 (*.f64 256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))))) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(*.f64 64 (pow.f64 t 6))","(+.f64 (*.f64 64 (pow.f64 t 6)) (*.f64 -384 (pow.f64 t 7)))","(+.f64 (*.f64 64 (pow.f64 t 6)) (+.f64 (*.f64 -384 (pow.f64 t 7)) (*.f64 1344 (pow.f64 t 8))))","(+.f64 (*.f64 64 (pow.f64 t 6)) (+.f64 (*.f64 -384 (pow.f64 t 7)) (+.f64 (*.f64 -3584 (pow.f64 t 9)) (*.f64 1344 (pow.f64 t 8)))))","64","(-.f64 64 (*.f64 384 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (*.f64 384 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (+.f64 (*.f64 384 (/.f64 1 t)) (*.f64 3584 (/.f64 1 (pow.f64 t 3)))))","64","(-.f64 64 (*.f64 384 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (*.f64 384 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (+.f64 (*.f64 384 (/.f64 1 t)) (*.f64 3584 (/.f64 1 (pow.f64 t 3)))))","(/.f64 -1 t)","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 t)","(*.f64 t 2)","(+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2)))","(fma.f64 2 t (*.f64 -2 (*.f64 t t)))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3))))","(fma.f64 t 2 (fma.f64 2 (pow.f64 t 3) (*.f64 -2 (*.f64 t t))))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (+.f64 (*.f64 -2 (pow.f64 t 4)) (*.f64 2 (pow.f64 t 3)))))","(fma.f64 2 t (+.f64 (*.f64 -2 (+.f64 (*.f64 t t) (pow.f64 t 4))) (*.f64 2 (pow.f64 t 3))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(+.f64 2 (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (fma.f64 2 (pow.f64 t -2) 2) (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(+.f64 2 (*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t)))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(+.f64 2 (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (fma.f64 2 (pow.f64 t -2) 2) (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(+.f64 2 (*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t)))))","(*.f64 (pow.f64 t 2) (cbrt.f64 64))","(*.f64 (*.f64 t t) 4)","(+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))","(fma.f64 -128 (*.f64 (cbrt.f64 (*.f64 1/4 1/4)) (pow.f64 t 3)) (*.f64 (*.f64 t t) 4))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64))))","(fma.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (fma.f64 (cbrt.f64 1/4) 49152 (neg.f64 1344))) -16) (fma.f64 -128 (*.f64 (cbrt.f64 (*.f64 1/4 1/4)) (pow.f64 t 3)) (*.f64 (*.f64 t t) 4)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 5) (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584))) (pow.f64 (cbrt.f64 64) 2))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))))","(fma.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (fma.f64 (cbrt.f64 1/4) 49152 (neg.f64 1344))) -16) (fma.f64 (*.f64 (cbrt.f64 (*.f64 1/4 1/4)) (pow.f64 t 3)) -128 (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 t 5) (-.f64 (fma.f64 -256 (*.f64 (cbrt.f64 (/.f64 -1 -1024)) (-.f64 1344 (cbrt.f64 (*.f64 118747255799808 1/4)))) 3584) (/.f64 2097152 16))) -16) (*.f64 (*.f64 t t) 4))))","(cbrt.f64 64)","4","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(fma.f64 1/3 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 118747255799808 1/4))) (pow.f64 (*.f64 t 4) -2)) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584)) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(+.f64 (fma.f64 1/3 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 118747255799808 1/4))) (pow.f64 (*.f64 t 4) -2)) 4) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) (*.f64 1/3 (*.f64 (-.f64 (/.f64 2097152 16) (fma.f64 -256 (*.f64 (cbrt.f64 (/.f64 -1 -1024)) (-.f64 1344 (cbrt.f64 (*.f64 118747255799808 1/4)))) 3584)) (/.f64 (pow.f64 t -3) 16)))))","(cbrt.f64 64)","4","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(fma.f64 1/3 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 118747255799808 1/4))) (pow.f64 (*.f64 t 4) -2)) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 -1/3 (/.f64 (-.f64 3584 (+.f64 (*.f64 256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))))) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(+.f64 (fma.f64 1/3 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 118747255799808 1/4))) (pow.f64 (*.f64 t 4) -2)) 4) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) (*.f64 (*.f64 -1/3 (-.f64 3584 (fma.f64 256 (*.f64 (cbrt.f64 (/.f64 -1 -1024)) (-.f64 1344 (cbrt.f64 (*.f64 118747255799808 1/4)))) (/.f64 2097152 16)))) (/.f64 (pow.f64 t -3) 16))))","(*.f64 64 (pow.f64 t 6))","(+.f64 (*.f64 64 (pow.f64 t 6)) (*.f64 -384 (pow.f64 t 7)))","(fma.f64 64 (pow.f64 t 6) (*.f64 -384 (pow.f64 t 7)))","(+.f64 (*.f64 64 (pow.f64 t 6)) (+.f64 (*.f64 -384 (pow.f64 t 7)) (*.f64 1344 (pow.f64 t 8))))","(fma.f64 (pow.f64 t 6) 64 (fma.f64 -384 (pow.f64 t 7) (*.f64 1344 (pow.f64 t 8))))","(+.f64 (*.f64 64 (pow.f64 t 6)) (+.f64 (*.f64 -384 (pow.f64 t 7)) (+.f64 (*.f64 -3584 (pow.f64 t 9)) (*.f64 1344 (pow.f64 t 8)))))","(fma.f64 (pow.f64 t 6) 64 (fma.f64 -384 (pow.f64 t 7) (fma.f64 -3584 (pow.f64 t 9) (*.f64 1344 (pow.f64 t 8)))))","64","(-.f64 64 (*.f64 384 (/.f64 1 t)))","(+.f64 64 (/.f64 -384 t))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (*.f64 384 (/.f64 1 t)))","(+.f64 (fma.f64 1344 (pow.f64 t -2) 64) (/.f64 -384 t))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (+.f64 (*.f64 384 (/.f64 1 t)) (*.f64 3584 (/.f64 1 (pow.f64 t 3)))))","(-.f64 (fma.f64 1344 (pow.f64 t -2) 64) (fma.f64 (pow.f64 t -3) 3584 (/.f64 384 t)))","64","(-.f64 64 (*.f64 384 (/.f64 1 t)))","(+.f64 64 (/.f64 -384 t))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (*.f64 384 (/.f64 1 t)))","(+.f64 (fma.f64 1344 (pow.f64 t -2) 64) (/.f64 -384 t))","(-.f64 (+.f64 (*.f64 1344 (/.f64 1 (pow.f64 t 2))) 64) (+.f64 (*.f64 384 (/.f64 1 t)) (*.f64 3584 (/.f64 1 (pow.f64 t 3)))))","(-.f64 (fma.f64 1344 (pow.f64 t -2) 64) (fma.f64 (pow.f64 t -3) 3584 (/.f64 384 t)))","(/.f64 -1 t)","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))"]],"time":171.551025390625,"type":"simplify"},{"compiler":[[6095,5415]],"time":82.51806640625,"type":"eval"},{"alts":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3))))","next",0.00390625]],"compiler":[[28,23],[28,23]],"count":[[238,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[237,1],"picked":[1,0]}],"min-error":[0.00390625],"time":89.948974609375,"type":"prune"},{"compiler":[[184,128]],"locations":[["(*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))",0.41796875,true],["(pow.f64 (cbrt.f64 t) -2)",0.5837288574528623,true],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3)",2.524750177905554,true],["(+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))",22.84497829745331,true]],"time":43.343994140625,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))","t","-inf",0.85498046875],["(*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))","t","inf",0.3369140625],["(*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))","t","0",0.64794921875],["(pow.f64 (cbrt.f64 t) -2)","t","-inf",1.36083984375],["(pow.f64 (cbrt.f64 t) -2)","t","inf",0.319091796875],["(pow.f64 (cbrt.f64 t) -2)","t","0",0.7119140625],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3)","t","-inf",0.27294921875],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3)","t","inf",0.2919921875],["(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3)","t","0",0.303955078125],["(+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))","t","-inf",0.35107421875],["(+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))","t","inf",0.2470703125],["(+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))","t","0",0.37109375]],"time":6.27587890625,"type":"series"},{"count":[[4,185]],"inputs":[["(+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))","(pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3)","(pow.f64 (cbrt.f64 t) -2)","(*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 1 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 0) (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))) (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) (*.f64 0 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -8 (neg.f64 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 3))) (/.f64 1 (+.f64 (*.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))))) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))) (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2/3) (-.f64 (cbrt.f64 4) (cbrt.f64 (/.f64 (/.f64 2 (*.f64 t 1/2)) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))) (+.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 4) (-.f64 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2/3) (cbrt.f64 (/.f64 (/.f64 2 (*.f64 t 1/2)) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))) (+.f64 (cbrt.f64 2) (cbrt.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 3)) (/.f64 1 (fma.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) (+.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 2/3) (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 1 (/.f64 (/.f64 1 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 (/.f64 (/.f64 1 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 (neg.f64 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) -2) (*.f64 1 (*.f64 (neg.f64 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 t (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 2) (*.f64 1 (*.f64 t (*.f64 (-.f64 -1 t) (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (*.f64 (*.f64 t (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2)) (*.f64 (*.f64 t (*.f64 (-.f64 -1 t) (/.f64 1 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2)) 1) (*.f64 (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3) 2)) (*.f64 (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 2 t) (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3))) 1) (*.f64 (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3) 2)) (*.f64 (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -2 (*.f64 (*.f64 (neg.f64 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2)) (*.f64 (*.f64 (neg.f64 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -8 (neg.f64 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 3))) (+.f64 (*.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))))) -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 3)) (fma.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) (+.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) -2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (neg.f64 t)) (*.f64 1 (/.f64 -2 (*.f64 (-.f64 -1 t) (/.f64 1 t))))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 -1 t) (/.f64 -1 t))) (/.f64 -2 t)) (*.f64 (-.f64 -1 t) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 t) (*.f64 1 (/.f64 2 (*.f64 (-.f64 -1 t) (/.f64 1 t))))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (neg.f64 (pow.f64 t (neg.f64 2/3)))) (/.f64 (/.f64 -2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t)))) (neg.f64 (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3)) (/.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2))) (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (*.f64 (/.f64 2 t) (pow.f64 t 2/3))) (/.f64 (-.f64 -1 t) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 -1 t) (/.f64 1 t))) (/.f64 2 t)) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3)) (/.f64 (/.f64 2 t) (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3)))) (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 2 t) (*.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2)) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -2 t) (*.f64 (*.f64 (-.f64 -1 t) (/.f64 -1 t)) 2)) (*.f64 (-.f64 -1 t) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 2 t) (pow.f64 t 2/3)) 1) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) 2)) (/.f64 (-.f64 -1 t) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 -2 (*.f64 (-.f64 -1 t) (/.f64 1 t))) 1) (*.f64 (neg.f64 t) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 -2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) 1) (*.f64 (neg.f64 (pow.f64 t (neg.f64 2/3))) 2)) (neg.f64 (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 2 (*.f64 (-.f64 -1 t) (/.f64 1 t))) 1) (*.f64 t 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 2 (pow.f64 t 2/3)) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t)))) (pow.f64 t (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (*.f64 (pow.f64 t (neg.f64 2/3)) 2)) (pow.f64 t (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (+.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 8 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 3)) (+.f64 (*.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))))) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (sqrt.f64 2) (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 2 t) (/.f64 1 (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2/3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 2 (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3))) (/.f64 (/.f64 1 t) (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (/.f64 (/.f64 1 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (pow.f64 t 2/3)) (/.f64 (/.f64 1 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 2 t)) (pow.f64 t 2/3)) (/.f64 (pow.f64 (/.f64 2 t) 2/3) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 2 t)) (/.f64 (pow.f64 (/.f64 2 t) 2/3) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (*.f64 (-.f64 -1 t) (/.f64 1 t))) (/.f64 2 t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 -1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 t 2/3) (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 t) (/.f64 1 (*.f64 (-.f64 -1 t) (/.f64 -1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (pow.f64 t 2/3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) -1/3) (/.f64 (/.f64 2 t) (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 2/3) (cbrt.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (*.f64 (/.f64 2 t) (pow.f64 t 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 2 (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (*.f64 (/.f64 1 t) (pow.f64 t 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (/.f64 2 t)) (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (*.f64 (pow.f64 (/.f64 2 t) 2/3) (pow.f64 t 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))) 1 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 2)) (neg.f64 (sqrt.f64 2)) (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (cbrt.f64 4) (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (cbrt.f64 2) (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 0) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))) (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) (*.f64 0 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)))) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 2/3) (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 t (neg.f64 2/3)) 0) (pow.f64 t (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 t (neg.f64 2/3)) (*.f64 (pow.f64 t (neg.f64 2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 t (neg.f64 2/3))) (pow.f64 t (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 t (neg.f64 2/3)) (*.f64 0 (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 t (neg.f64 2/3)) (/.f64 0 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 t 2/3)) (neg.f64 (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -1/3) (pow.f64 t -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 t -1/3)) (neg.f64 (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 t (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2) (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t (neg.f64 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 t -1/3)) 2) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 t -1/3)) 2) (pow.f64 (cbrt.f64 (pow.f64 t -1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 t -1/3)) 2) (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 t -1/3))) 2) (*.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 t -1/3))) 2) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 t -1/3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 t -1/3))) 2) (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 t (neg.f64 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 t 2/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (pow.f64 t 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 t -1/3) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 t -1/3)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t 2/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 t (+.f64 -1/3 -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 t (neg.f64 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t t) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 t) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 t (neg.f64 2/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t (neg.f64 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 t (*.f64 2 -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t -1/3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 t -1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 t -1/3) (neg.f64 (pow.f64 t -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 t -1/3)) (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 t (neg.f64 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 1 (*.f64 t t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 0) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) (*.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 -1 t) (/.f64 1 t))) (*.f64 (-.f64 -1 t) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) (*.f64 0 (*.f64 (-.f64 -1 t) (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 t) (*.f64 (pow.f64 t (neg.f64 2/3)) (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 t) (*.f64 (neg.f64 (pow.f64 t 2/3)) (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 -1 t) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2) (*.f64 (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3) (/.f64 (-.f64 -1 t) (cbrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t))) (*.f64 (pow.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) 2/3) (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 (cbrt.f64 t))) (/.f64 (pow.f64 t (neg.f64 2/3)) (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2)) (pow.f64 (pow.f64 t (neg.f64 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t (neg.f64 2/3)) (cbrt.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)))) (pow.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 -1 t) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 -1 t) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 t (neg.f64 2/3))) (/.f64 (+.f64 1 t) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 t) (cbrt.f64 t)) (neg.f64 (pow.f64 t (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 -1 t) (/.f64 -1 t))) (neg.f64 (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t (neg.f64 2/3)) (+.f64 1 t)) (neg.f64 (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 -1 t) (pow.f64 t (neg.f64 2/3))) (cbrt.f64 (cbrt.f64 t))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3)) (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 t) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 t (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t (neg.f64 2/3)) (/.f64 (-.f64 -1 t) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 2/3) (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -1 t) (pow.f64 t (neg.f64 2/3))) (pow.f64 t -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 t) (pow.f64 t (neg.f64 2/3))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t (neg.f64 2/3)) (+.f64 1 t)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 -1 t) (pow.f64 t (neg.f64 2/3))) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 t) (/.f64 -1 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 -1 t) (pow.f64 t (neg.f64 2/3))) (cbrt.f64 (cbrt.f64 t)))) (neg.f64 (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 -1 t) 3) (pow.f64 t -3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 -1 t) (/.f64 1 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (-.f64 -1 t)) (pow.f64 t -1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 -1 t) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 -1 t) 3) (pow.f64 t -3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 (pow.f64 (-.f64 -1 t) 3) (pow.f64 t -3)) 1))))))"]],"rules":[["egg-rr",40],["egg-rr",42],["egg-rr",21],["egg-rr",82]],"time":44.945068359375,"type":"rewrite"},{"count":[[221,221]],"inputs":[["(*.f64 2 t)","(+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2)))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3))))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (+.f64 (*.f64 -2 (pow.f64 t 4)) (*.f64 2 (pow.f64 t 3)))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(*.f64 (pow.f64 t 2) (cbrt.f64 64))","(+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 5) (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584))) (pow.f64 (cbrt.f64 64) 2))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))))","(cbrt.f64 64)","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584)) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(cbrt.f64 64)","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 -1/3 (/.f64 (-.f64 3584 (+.f64 (*.f64 256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))))) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(/.f64 -1 t)","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(neg.f64 (+.f64 1 (/.f64 1 t)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 t)","(+.f64 (*.f64 2 t) (*.f64 -2 (pow.f64 t 2)))","(fma.f64 2 t (*.f64 -2 (*.f64 t t)))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (*.f64 2 (pow.f64 t 3))))","(fma.f64 2 t (fma.f64 (pow.f64 t 3) 2 (*.f64 -2 (*.f64 t t))))","(+.f64 (*.f64 2 t) (+.f64 (*.f64 -2 (pow.f64 t 2)) (+.f64 (*.f64 -2 (pow.f64 t 4)) (*.f64 2 (pow.f64 t 3)))))","(fma.f64 2 t (+.f64 (*.f64 -2 (+.f64 (*.f64 t t) (pow.f64 t 4))) (*.f64 2 (pow.f64 t 3))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(+.f64 2 (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (fma.f64 (pow.f64 t -2) 2 2) (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(+.f64 2 (*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t)))))","2","(-.f64 2 (*.f64 2 (/.f64 1 t)))","(+.f64 2 (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (*.f64 2 (/.f64 1 t)))","(+.f64 (fma.f64 (pow.f64 t -2) 2 2) (/.f64 -2 t))","(-.f64 (+.f64 2 (*.f64 2 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 t 3))) (*.f64 2 (/.f64 1 t))))","(+.f64 2 (*.f64 2 (-.f64 (pow.f64 t -2) (+.f64 (pow.f64 t -3) (/.f64 1 t)))))","(*.f64 (pow.f64 t 2) (cbrt.f64 64))","(*.f64 (*.f64 t t) 4)","(+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))","(fma.f64 -128 (*.f64 (cbrt.f64 (*.f64 1/4 1/4)) (pow.f64 t 3)) (*.f64 (*.f64 t t) 4))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (*.f64 (pow.f64 t 2) (cbrt.f64 64))))","(fma.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (fma.f64 49152 (cbrt.f64 1/4) (neg.f64 1344))) -16) (fma.f64 -128 (*.f64 (cbrt.f64 (*.f64 1/4 1/4)) (pow.f64 t 3)) (*.f64 (*.f64 t t) 4)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3)))) (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (pow.f64 t 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 t 5) (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584))) (pow.f64 (cbrt.f64 64) 2))) (*.f64 (pow.f64 t 2) (cbrt.f64 64)))))","(fma.f64 1/3 (/.f64 (*.f64 (pow.f64 t 4) (fma.f64 49152 (cbrt.f64 1/4) (neg.f64 1344))) -16) (fma.f64 (*.f64 (cbrt.f64 (*.f64 1/4 1/4)) (pow.f64 t 3)) -128 (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 t 5) (-.f64 (fma.f64 -256 (*.f64 (cbrt.f64 (/.f64 -1 -1024)) (-.f64 1344 (cbrt.f64 (*.f64 1/4 118747255799808)))) 3584) (/.f64 2097152 16))) -16) (*.f64 (*.f64 t t) 4))))","(cbrt.f64 64)","4","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(fma.f64 1/3 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 1/4 118747255799808))) (pow.f64 (*.f64 t 4) -2)) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))) (+.f64 (*.f64 -256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) 3584)) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(+.f64 (fma.f64 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 1/4 118747255799808))) (pow.f64 (*.f64 t 4) -2)) 1/3 4) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) (*.f64 1/3 (*.f64 (-.f64 (/.f64 2097152 16) (fma.f64 -256 (*.f64 (cbrt.f64 (/.f64 -1 -1024)) (-.f64 1344 (cbrt.f64 (*.f64 1/4 118747255799808)))) 3584)) (/.f64 (pow.f64 t -3) 16)))))","(cbrt.f64 64)","4","(+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))))","(fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4)","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t)))))","(fma.f64 1/3 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 1/4 118747255799808))) (pow.f64 (*.f64 t 4) -2)) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) 4))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))) (*.f64 (pow.f64 t 2) (pow.f64 (cbrt.f64 64) 2)))) (+.f64 (cbrt.f64 64) (+.f64 (*.f64 -128 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 2)) 1/3) (/.f64 1 t))) (*.f64 -1/3 (/.f64 (-.f64 3584 (+.f64 (*.f64 256 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 64) 5)) 1/3) (-.f64 1344 (*.f64 49152 (pow.f64 (/.f64 1 (cbrt.f64 64)) 1/3))))) (*.f64 2097152 (/.f64 1 (pow.f64 (cbrt.f64 64) 2))))) (*.f64 (pow.f64 t 3) (pow.f64 (cbrt.f64 64) 2)))))))","(+.f64 (fma.f64 (*.f64 (-.f64 1344 (cbrt.f64 (*.f64 1/4 118747255799808))) (pow.f64 (*.f64 t 4) -2)) 1/3 4) (fma.f64 -128 (/.f64 (cbrt.f64 (*.f64 1/4 1/4)) t) (*.f64 (*.f64 -1/3 (-.f64 3584 (fma.f64 256 (*.f64 (cbrt.f64 (/.f64 -1 -1024)) (-.f64 1344 (cbrt.f64 (*.f64 1/4 118747255799808)))) (/.f64 2097152 16)))) (/.f64 (pow.f64 t -3) 16))))","(/.f64 -1 t)","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","-1","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))","(neg.f64 (+.f64 1 (/.f64 1 t)))","(+.f64 -1 (/.f64 -1 t))"]],"time":126.09912109375,"type":"simplify"},{"compiler":[[6885,5869]],"time":86.077880859375,"type":"eval"},{"alts":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3))))","done",0.00390625]],"compiler":[[28,23]],"count":[[222,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[221,0],"picked":[1,1]}],"min-error":[0.00390625],"time":75.31298828125,"type":"prune"},{"accuracy":[0.00390625],"baseline":[0.00390625],"branch":[["t",0.00390625,1],["(-.f64 1 (/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))))",0.00390625,1],["(/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))))))",0.00390625,1],["(+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))",0.00390625,1],["(*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))))",0.00390625,1],["(-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))",0.00390625,1],["(/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))",0.00390625,1]],"compiler":[[2,1],[30,26],[28,24],[26,22],[24,20],[12,10],[10,8],[97,83]],"count":[[4,1]],"inputs":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3))))","(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (/.f64 (-.f64 -1 t) t))) 6) 1/3))))","(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (+.f64 (/.f64 -1 t) -1))) 2))))","(-.f64 1 (/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))))"]],"link":["."],"name":["Kahan p13 Example 3"],"oracle":[0.015625],"outputs":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3))))"]],"time":17.696044921875,"times":[["t",2.7509765625],["(-.f64 1 (/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))))",2.220947265625],["(/.f64 1 (+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))))))",2.1298828125],["(+.f64 2 (*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))))",2.05419921875],["(*.f64 (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))) (-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))))",2.02001953125],["(-.f64 2 (/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t))))",1.823974609375],["(/.f64 (/.f64 2 t) (+.f64 1 (/.f64 1 t)))",2.64306640625]],"type":"regimes"},{"compiler":[[28,23]],"inputs":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1 (/.f64 1 (-.f64 -2 (pow.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (/.f64 (-.f64 -1 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2)))) 6) 1/3))))","(+.f64 1 (/.f64 -1 (+.f64 2 (cbrt.f64 (pow.f64 (+.f64 2 (/.f64 (/.f64 2 t) (*.f64 (-.f64 -1 t) (/.f64 1 t)))) 6)))))"]],"stop":[["done",1]],"time":26.48193359375,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[28,23]],"remove-preprocessing":[[]],"time":13.828857421875,"type":"end"}]