[{"compiler":[[25,20]],"method":["search"],"sampling":[[12,0.448561035975672,0.42515785148998475,0.12628111253434326],[11,0.3588488287805376,0.5148700586851191,0.12628111253434326],[10,0.3120424598091631,0.5616764276564936,0.12628111253434326],[9,0.3120424598091631,0.5616764276564936,0.12628111253434326],[8,0.3120424598091631,0.6864934115801589,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":346.18115234375,"type":"analyze"},{"outcomes":[["body",512,"invalid",219.836669921875,697],["body",256,"invalid",120.7294921875,1010],["body",4096,"valid",25.590576171875,5],["body",512,"valid",235.487060546875,791],["body",1024,"invalid",769.774169921875,1374],["body",1024,"valid",885.341064453125,1619],["body",2048,"valid",208.955322265625,198],["body",256,"valid",636.49267578125,5643]],"time":3115.25,"type":"sample"},{"compiler":[[24,19]],"inputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(+.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 a (*.f64 (PI.f64) 1/180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 a (*.f64 (PI.f64) 1/180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 b (*.f64 (PI.f64) 1/180)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 b (*.f64 (PI.f64) 1/180)))) 2))"]],"symmetry":[[]],"time":77.2568359375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))"]],"time":20.570068359375,"type":"simplify"},{"compiler":[[45,34]],"time":0.68115234375,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","next",21.077119719092032],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784]],"compiler":[[24,19],[24,19],[24,19],[24,19]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[20.925201131201447],"time":1.96484375,"type":"prune"},{"compiler":[[86,58]],"locations":[["(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))",0.236660009768442,true],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)",0.33107377930532605,true],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))",25.40669251837167,true],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))",26.47512414518111,true]],"time":26.303955078125,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","angle","-inf",0.180908203125],["(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","angle","inf",0.159912109375],["(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","angle","0",0.364990234375],["(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","a","-inf",0.1630859375],["(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","a","inf",0.18798828125],["(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","a","0",0.162109375],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)","angle","-inf",0.506103515625],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)","angle","inf",0.52392578125],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)","angle","0",0.72802734375],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)","a","-inf",0.781982421875],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)","a","inf",0.474853515625],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)","a","0",1.2080078125],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","-inf",0.156005859375],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","inf",0.19189453125],["(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","0",0.48193359375],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","-inf",0.183837890625],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","inf",0.22705078125],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","angle","0",0.527099609375]],"time":7.481201171875,"type":"series"},{"count":[[4,115]],"inputs":[["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2)","(*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cos.f64 0)) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (*.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 -1/180 (*.f64 angle (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cos.f64 0)) (*.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 0) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (*.f64 (cos.f64 0) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (*.f64 -1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 5) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2) (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 4/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (pow.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cbrt.f64 a)) 2) (pow.f64 (pow.f64 a 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) a) (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cbrt.f64 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3))))))"]],"rules":[["egg-rr",29],["egg-rr",38],["egg-rr",24],["egg-rr",24]],"time":55.255859375,"type":"rewrite"},{"count":[[187,153]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6)))))))","(+.f64 (*.f64 (pow.f64 angle 8) (+.f64 (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5))))))","(+.f64 (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (*.f64 a (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5)))))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1) (*.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4)))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -1/24488801280000000 1) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) (*.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 (*.f64 1/180 angle) (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 3) -1/34992000 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 5) 1/22674816000000 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (fma.f64 (*.f64 angle (PI.f64)) 1/180 (fma.f64 1/22674816000000 (pow.f64 (*.f64 angle (PI.f64)) 5) (*.f64 -1/30855889612800000000 (pow.f64 (*.f64 angle (PI.f64)) 7)))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))","(*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))))","(fma.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4))) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6)))))))","(fma.f64 (*.f64 (pow.f64 angle 4) (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4))) -1/3149280000 (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 6)) 1/765275040000000) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2))))","(+.f64 (*.f64 (pow.f64 angle 8) (+.f64 (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))))","(fma.f64 (pow.f64 angle 8) (*.f64 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 8)) (+.f64 -1/396718580736000000000 -1/2777030065152000000000)) (fma.f64 (*.f64 (pow.f64 angle 4) (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 4))) -1/3149280000 (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 6)) 1/765275040000000) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 a) (PI.f64))) 3) (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5))))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 a) (PI.f64))) 3) (fma.f64 (*.f64 1/22674816000000 (pow.f64 angle 5)) (*.f64 a (pow.f64 (PI.f64) 5)) (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64))))))","(+.f64 (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (*.f64 a (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5)))))))","(fma.f64 (*.f64 -1/30855889612800000000 (pow.f64 angle 7)) (*.f64 a (pow.f64 (PI.f64) 7)) (fma.f64 -1/34992000 (pow.f64 (*.f64 angle (*.f64 (cbrt.f64 a) (PI.f64))) 3) (fma.f64 (*.f64 1/22674816000000 (pow.f64 angle 5)) (*.f64 a (pow.f64 (PI.f64) 5)) (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))"]],"time":221.822998046875,"type":"simplify"},{"compiler":[[4293,2955]],"time":52.0849609375,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",24.18951134650033],["(+.f64 (pow.f64 (*.f64 (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",43.20586090945409],["(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.135684315034975],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",35.80461126387667],["(+.f64 (pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 6) 1/3) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",30.248856902366242],["(+.f64 (*.f64 (pow.f64 a 2/3) (pow.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",43.2754940365248],["(+.f64 (*.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 4/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",38.788624860756116],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.253734881944727],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 5) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.162953421195333],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3) 1/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",36.76712479140164],["(+.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.112974232256786],["(+.f64 (*.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",22.386401128442742],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2))","fresh",21.031347239152076],["(+.f64 (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",27.787741893940446],["(+.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.188675930963775],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","next",21.0243186192757],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","fresh",21.031347239148015],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))","fresh",21.032215959543862],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784]],"compiler":[[27,22],[34,26],[36,28],[27,22],[26,21],[30,24],[35,26],[19,16],[35,26],[28,23],[42,33],[31,22],[27,22],[23,18],[27,22],[24,19],[36,28],[24,19],[24,19],[27,22],[34,26],[36,28],[27,22],[26,21],[30,24],[35,26],[19,16],[35,26],[28,23],[42,33],[31,22],[27,22],[23,18],[27,22],[24,19],[36,28],[24,19],[24,19]],"count":[[155,19]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[153,18],"picked":[1,0]}],"min-error":[20.365050123513686],"time":53.774169921875,"type":"prune"},{"compiler":[[94,63]],"locations":[["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)",0.3356437988422101,true],["(*.f64 (*.f64 1/180 angle) (PI.f64))",0.35775375976844204,true],["(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))",25.59410707448805,true],["(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))",26.47512414518111,false]],"time":28.619873046875,"type":"localize"},{"count":[[3,48]],"series":[["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","angle","-inf",0.18994140625],["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","angle","inf",0.163818359375],["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","angle","0",0.26513671875],["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","a","-inf",0.1630859375],["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","a","inf",0.163818359375],["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","a","0",0.194091796875],["(*.f64 (*.f64 1/180 angle) (PI.f64))","angle","-inf",0.242919921875],["(*.f64 (*.f64 1/180 angle) (PI.f64))","angle","inf",0.419921875],["(*.f64 (*.f64 1/180 angle) (PI.f64))","angle","0",0.426025390625],["(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","angle","-inf",0.192138671875],["(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","angle","inf",0.170166015625],["(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","angle","0",0.2509765625]],"time":3.008056640625,"type":"series"},{"count":[[3,101]],"inputs":[["(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (cos.f64 0)) (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 0) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (cos.f64 0) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (*.f64 -1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -1/180 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/180 angle) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 1/180 angle))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/180 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/180 angle)) (*.f64 (pow.f64 (*.f64 1/180 angle) 2/3) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/180) angle)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 angle (*.f64 (PI.f64) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/180 angle)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 1/180 angle) 2/3) (PI.f64)) (cbrt.f64 (*.f64 1/180 angle)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 2/3) (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/180 angle))) (pow.f64 (*.f64 1/180 angle) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/180 angle) (cbrt.f64 (PI.f64))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/180 angle) 2/3) (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/180 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 (*.f64 1/180 angle) (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 angle (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 angle (PI.f64)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 -1/180 (*.f64 angle (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/180 (*.f64 angle (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 angle (PI.f64)) 1/180)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/180) (*.f64 (sqrt.f64 1/180) (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/180) (*.f64 angle (PI.f64))) (sqrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/32400) (*.f64 angle (PI.f64))) (cbrt.f64 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -1/180 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/180 (*.f64 angle (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 angle (PI.f64)) (/.f64 1 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/180 (*.f64 angle (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -1/180 (*.f64 angle (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) a) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 5) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 2) (pow.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 4/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (pow.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (neg.f64 a) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (cbrt.f64 a)) 2) (pow.f64 (pow.f64 a 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2/3) (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 a) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 6))))))"]],"rules":[["egg-rr",38],["egg-rr",39],["egg-rr",24]],"time":49.911865234375,"type":"rewrite"},{"count":[[149,118]],"inputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6)))))))","(+.f64 (*.f64 (pow.f64 angle 8) (+.f64 (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (*.f64 (*.f64 1/180 angle) (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (fma.f64 1/22674816000000 (pow.f64 (*.f64 angle (PI.f64)) 5) (*.f64 (*.f64 1/180 angle) (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (pow.f64 (*.f64 angle (PI.f64)) 3) (fma.f64 (*.f64 angle (PI.f64)) 1/180 (fma.f64 1/22674816000000 (pow.f64 (*.f64 angle (PI.f64)) 5) (*.f64 -1/30855889612800000000 (pow.f64 (*.f64 angle (PI.f64)) 7)))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))","(*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))))","(fma.f64 -1/3149280000 (*.f64 (*.f64 (pow.f64 angle 4) (*.f64 a a)) (pow.f64 (PI.f64) 4)) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6)))))))","(fma.f64 -1/3149280000 (*.f64 (*.f64 (pow.f64 angle 4) (*.f64 a a)) (pow.f64 (PI.f64) 4)) (fma.f64 (*.f64 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 6)) 1/765275040000000) (pow.f64 angle 6) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2))))","(+.f64 (*.f64 (pow.f64 angle 8) (+.f64 (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))))","(fma.f64 (pow.f64 angle 8) (*.f64 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 8)) (+.f64 -1/396718580736000000000 -1/2777030065152000000000)) (fma.f64 -1/3149280000 (*.f64 (*.f64 (pow.f64 angle 4) (*.f64 a a)) (pow.f64 (PI.f64) 4)) (fma.f64 (*.f64 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 6)) 1/765275040000000) (pow.f64 angle 6) (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)"]],"time":144.84814453125,"type":"simplify"},{"compiler":[[4125,2876]],"time":49.81689453125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.200933782128395],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","next",20.978546139331684],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",42.702070720187706],["(+.f64 (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",27.787741893940446],["(+.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.188675930963775],["(+.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.112974232256786],["(+.f64 (pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 6) 1/3) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",30.248856902366242],["(+.f64 (*.f64 (pow.f64 a 2/3) (pow.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",43.2754940365248],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))","fresh",20.97941485972753],["(+.f64 (*.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 4/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",38.788624860756116],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/180 angle))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.127315761046287],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.11792263459635],["(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 2))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.135684315034975],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 3) 1/3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",40.18809640850172],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/180 angle))) (pow.f64 (*.f64 1/180 angle) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",42.719134965989774],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",35.80461126387667],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 angle (PI.f64)))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.16335317358477],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 5) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.162953421195333],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2))","fresh",20.978546139335744],["(+.f64 (*.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",22.386401128442742]],"compiler":[[19,16],[36,28],[33,25],[23,18],[27,22],[42,33],[26,21],[30,24],[24,19],[35,26],[29,23],[27,22],[36,28],[24,19],[28,23],[31,25],[27,22],[28,23],[35,26],[27,22],[31,22],[19,16],[36,28],[33,25],[23,18],[27,22],[42,33],[26,21],[30,24],[24,19],[35,26],[29,23],[27,22],[36,28],[24,19],[28,23],[31,25],[27,22],[28,23],[35,26],[27,22],[31,22]],"count":[[170,21]],"kept":[{"done":[0,0],"fresh":[18,9],"new":[151,12],"picked":[1,0]}],"min-error":[20.11312429737835],"time":57.64404296875,"type":"prune"},{"compiler":[[180,116]],"locations":[["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)",0.3356437988422101,false],["(*.f64 (*.f64 1/180 angle) (PI.f64))",0.35775375976844204,false],["(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))",25.59410707448805,false],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))",26.238204519378108,true]],"time":50.844970703125,"type":"localize"},{"count":[[1,12]],"series":[["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","angle","-inf",0.1669921875],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","angle","inf",0.19189453125],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","angle","0",0.253173828125]],"time":0.666015625,"type":"series"},{"count":[[1,22]],"inputs":[["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (*.f64 (sin.f64 0) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (cos.f64 0)) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3) (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (neg.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 -1/180 (*.f64 angle (PI.f64))))))))"]],"rules":[["egg-rr",22]],"time":37.381103515625,"type":"rewrite"},{"count":[[34,30]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 2) -1/64800 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 2) -1/64800 1) (*.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4)))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(+.f64 (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 6) -1/24488801280000000 1) (fma.f64 (pow.f64 (*.f64 angle (PI.f64)) 2) -1/64800 (*.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))"]],"time":60.683837890625,"type":"simplify"},{"compiler":[[6976,4864]],"time":83.76611328125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",42.702070720187706],["(+.f64 (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",27.787741893940446],["(+.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.188675930963775],["(+.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.112974232256786],["(+.f64 (pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 6) 1/3) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",30.248856902366242],["(+.f64 (*.f64 (pow.f64 a 2/3) (pow.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",43.2754940365248],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 1)) 2))) 2))","fresh",21.302301105183084],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 angle (PI.f64)))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.16335317358477],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","fresh",35.806242067042504],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))","fresh",20.97941485972753],["(+.f64 (*.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 4/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",38.788624860756116],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/180 angle))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.127315761046287],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.11792263459635],["(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 2))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.135684315034975],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 3) 1/3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",40.18809640850172],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/180 angle))) (pow.f64 (*.f64 1/180 angle) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",42.719134965989774],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.200933782128395],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 1) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","fresh",21.363038913848797],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 5) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.162953421195333],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2))","next",20.978546139335744],["(+.f64 (*.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",22.386401128442742]],"compiler":[[33,25],[23,18],[27,22],[42,33],[26,21],[30,24],[31,26],[28,23],[39,31],[24,19],[35,26],[29,23],[27,22],[36,28],[24,19],[28,23],[31,25],[19,16],[31,26],[35,26],[27,22],[31,22],[33,25],[23,18],[27,22],[42,33],[26,21],[30,24],[31,26],[28,23],[39,31],[24,19],[35,26],[29,23],[27,22],[36,28],[24,19],[28,23],[31,25],[19,16],[31,26],[35,26],[27,22],[31,22]],"count":[[199,22]],"kept":[{"done":[0,0],"fresh":[20,19],"new":[178,3],"picked":[1,0]}],"min-error":[20.020486018152706],"time":69.99609375,"type":"prune"},{"compiler":[[120,77]],"locations":[["(pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)",0.3356437988422101,false],["(*.f64 (*.f64 1/180 angle) (PI.f64))",0.35775375976844204,false],["(sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))",25.59410707448805,false],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))",26.238204519378108,false]],"time":34.69091796875,"type":"localize"},{"compiler":[[4487,3143]],"time":54.98388671875,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",42.702070720187706],["(+.f64 (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",27.787741893940446],["(+.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.188675930963775],["(+.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.112974232256786],["(+.f64 (pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 6) 1/3) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",30.248856902366242],["(+.f64 (*.f64 (pow.f64 a 2/3) (pow.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",43.2754940365248],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 1)) 2))) 2))","fresh",21.302301105183084],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 angle (PI.f64)))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.16335317358477],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","fresh",35.806242067042504],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))","fresh",20.97941485972753],["(+.f64 (*.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 4/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",38.788624860756116],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/180 angle))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.127315761046287],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.11792263459635],["(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 2))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.135684315034975],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 3) 1/3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",40.18809640850172],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/180 angle))) (pow.f64 (*.f64 1/180 angle) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",42.719134965989774],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.200933782128395],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 1) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","fresh",21.363038913848797],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 5) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",21.162953421195333],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2))","done",20.978546139335744],["(+.f64 (*.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","fresh",22.386401128442742]],"compiler":[[33,25],[23,18],[27,22],[42,33],[26,21],[30,24],[31,26],[28,23],[39,31],[24,19],[35,26],[29,23],[27,22],[36,28],[24,19],[28,23],[31,25],[19,16],[31,26],[35,26],[27,22],[31,22]],"count":[[170,22]],"kept":[{"done":[0,0],"fresh":[21,21],"new":[148,0],"picked":[1,1]}],"min-error":[20.020486018152706],"time":47.740966796875,"type":"prune"},{"accuracy":[20.978546139331673],"baseline":[20.978546139331684],"branch":[["a",20.978546139331684,1],["b",20.978546139331677,1],["angle",20.978546139331677,1],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))",20.978546139331673,1],["(*.f64 (/.f64 angle 180) (PI.f64))",20.978546139331677,1],["(/.f64 angle 180)",20.978546139331677,1]],"compiler":[[4,3],[4,3],[4,3],[24,19],[8,7],[6,5],[938,664]],"count":[[35,1]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 1)) 2))) 2))","(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 1) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b 1) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) (*.f64 1/180 angle))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (cbrt.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 2))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (pow.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) 3) 1/3))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 (PI.f64) (cbrt.f64 (*.f64 1/180 angle))) (pow.f64 (*.f64 1/180 angle) 2/3)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (cbrt.f64 1/180) (*.f64 (cbrt.f64 1/32400) (*.f64 angle (PI.f64)))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2))","(+.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 (*.f64 a (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 6) 1/3) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (*.f64 (pow.f64 a 2/3) (pow.f64 (*.f64 (pow.f64 a 2/3) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (*.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2/3) (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 4/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b 1) 2))","(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 5) (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3) 1/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (*.f64 (*.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)) 2))","(+.f64 (*.f64 1/32400 (pow.f64 (*.f64 angle (*.f64 a (PI.f64))) 2)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))"]],"link":["."],"name":["ab-angle->ABCF A"],"oracle":[58.05740735867816],"outputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))"]],"time":77.13818359375,"times":[["a",9.9951171875],["b",9.762939453125],["angle",10.037841796875],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))",8.4541015625],["(*.f64 (/.f64 angle 180) (PI.f64))",10.10205078125],["(/.f64 angle 180)",10.869873046875]],"type":"regimes"},{"compiler":[[36,28]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2) (pow.f64 (*.f64 b (*.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))"]],"stop":[["fuel",1]],"time":22.155029296875,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[36,28]],"remove-preprocessing":[[]],"time":16.90185546875,"type":"end"}]