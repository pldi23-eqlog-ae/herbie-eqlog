[{"compiler":[[35,18]],"method":["search"],"sampling":[[12,0.24184825291796289,0.0078015565457407385,0.7503501905362964],[11,0.24184825291796289,0.0078015565457407385,0.7503501905362964],[10,0.23404669637222217,0.015603113091481477,0.7503501905362964],[9,0.23404669637222217,0.015603113091481477,0.7503501905362964],[8,0.21844358328074068,0.031206226182962954,0.7503501905362964],[7,0.21844358328074068,0.031206226182962954,0.7503501905362964],[6,0.18723735709777772,0.06241245236592591,0.7503501905362964],[5,0.18723735709777772,0.06241245236592591,0.7503501905362964],[4,0.12482490473185182,0.12482490473185182,0.7503501905362964],[3,0.12482490473185182,0.12482490473185182,0.7503501905362964],[2,0.0,0.24964980946370363,0.7503501905362964],[1,0.0,0.24964980946370363,0.7503501905362964],[0,0.0,0.24964980946370363,0.7503501905362964]],"time":12.10302734375,"type":"analyze"},{"outcomes":[["body",256,"valid",458.715087890625,8256]],"time":466.54296875,"type":"sample"},{"compiler":[[28,13]],"inputs":[["0","1"],["(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))","(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 s)) x)) (*.f64 (*.f64 x (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 s)) x)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 s)) x)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))","(*.f64 (/.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) s) (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))","(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 s)) x)) (*.f64 (*.f64 x (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 s)) x)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 s)) x)))))","(*.f64 (/.f64 (exp.f64 (/.f64 (fabs.f64 s) (neg.f64 x))) x) (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 s) (neg.f64 x)))) -2))"]],"symmetry":[[]],"time":64.530029296875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))"]],"time":21.14208984375,"type":"simplify"},{"compiler":[[46,24]],"time":0.529052734375,"type":"eval"},{"alts":[["(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))","fresh",0.0723911828802945],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","next",0.0661418243755965]],"compiler":[[28,13],[20,14],[28,13],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0622355743755965],"time":2.681884765625,"type":"prune"},{"compiler":[[78,27]],"locations":[["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)",0.01171875,true],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))",0.017910009768442016,true],["(exp.f64 (/.f64 (fabs.f64 x) s))",0.05314776063734072,true],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))",0.053596374167287325,true]],"time":12.963134765625,"type":"localize"},{"count":[[4,80]],"series":[["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)","s","-inf",0.548095703125],["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)","s","inf",0.556884765625],["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)","s","0",0.60498046875],["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)","x","-inf",0.657958984375],["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)","x","inf",1.27197265625],["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)","x","0",0.656005859375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","s","-inf",1.274169921875],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","s","inf",2.31201171875],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","s","0",0.907958984375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","x","-inf",1.14697265625],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","x","inf",1.113037109375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","x","0",1.47021484375],["(exp.f64 (/.f64 (fabs.f64 x) s))","s","-inf",0.2080078125],["(exp.f64 (/.f64 (fabs.f64 x) s))","s","inf",0.2080078125],["(exp.f64 (/.f64 (fabs.f64 x) s))","s","0",0.172119140625],["(exp.f64 (/.f64 (fabs.f64 x) s))","x","-inf",0.182861328125],["(exp.f64 (/.f64 (fabs.f64 x) s))","x","inf",0.18896484375],["(exp.f64 (/.f64 (fabs.f64 x) s))","x","0",0.18603515625],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))","s","-inf",0.291015625],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))","s","inf",0.43505859375],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))","s","0",0.19384765625],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))","x","-inf",0.70703125],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))","x","inf",0.64013671875],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))","x","0",0.621826171875]],"time":16.977783203125,"type":"series"},{"count":[[4,210]],"inputs":[["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))","(exp.f64 (/.f64 (fabs.f64 x) s))","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (*.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) 0) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (*.f64 0 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (/.f64 0 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (exp.f64 (/.f64 (fabs.f64 x) s))) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) -2)) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))) (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2)) (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))) -1) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (cbrt.f64 (/.f64 (*.f64 x x) (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (neg.f64 (fabs.f64 x)))) (/.f64 (cbrt.f64 (*.f64 x x)) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 -1 s))) (/.f64 (fabs.f64 x) (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (fabs.f64 x))) (/.f64 (cbrt.f64 (*.f64 x x)) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))) (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (fabs.f64 x)) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (/.f64 (fabs.f64 x) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (fabs.f64 x))) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 -1 s)) (fabs.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (/.f64 (fabs.f64 x) (neg.f64 s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (/.f64 (*.f64 (fabs.f64 x) 3) (neg.f64 s)) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) (*.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 0) (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) (*.f64 0 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (/.f64 (fabs.f64 x) s))) (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (fabs.f64 x)) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (fabs.f64 x))) (/.f64 (cbrt.f64 (*.f64 x x)) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (fabs.f64 x))) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 1 s)) (fabs.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 1 s))) (/.f64 (fabs.f64 x) (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))) (cbrt.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (/.f64 (*.f64 x x) (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (/.f64 (fabs.f64 x) s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (/.f64 (fabs.f64 x) s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 0) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) (*.f64 0 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 (/.f64 1 s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) s) (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 1 (*.f64 (neg.f64 s) (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 1 (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (*.f64 (neg.f64 s) (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 1 s)) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)) (cbrt.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))) (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s)) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 (/.f64 1 s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) 1) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))) (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2))) (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 (*.f64 (neg.f64 s) (exp.f64 (/.f64 (fabs.f64 x) s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))) s)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 0) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (*.f64 0 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 s)) (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 -2 -2))) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 -2 -2)) (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 s) (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 s)) (*.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (pow.f64 (cbrt.f64 s) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 -2 -2)) (*.f64 s s))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 -2 -2))) s) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (pow.f64 (cbrt.f64 s) -2)) (cbrt.f64 (/.f64 1 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 s) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s)) (pow.f64 (cbrt.f64 s) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s)) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 -2 -2)))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 s)) (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s)) 1) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (pow.f64 (cbrt.f64 s) -2)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 -2 -2)) (*.f64 s s)))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (+.f64 -2 -2)) (*.f64 s s)))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s))) (neg.f64 (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 3))))))"]],"rules":[["egg-rr",47],["egg-rr",74],["egg-rr",37],["egg-rr",52]],"time":46.17919921875,"type":"rewrite"},{"count":[[290,249]],"inputs":[["(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","1","(+.f64 1 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s)))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (+.f64 (*.f64 -1 (pow.f64 (fabs.f64 x) 3)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))))) (+.f64 (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2)))))) (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2)))))","(+.f64 (*.f64 -1/64 (/.f64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (pow.f64 s 4))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 (*.f64 -1 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2)))) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3)))))) (pow.f64 s 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))))) (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2)))))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))) (pow.f64 s 4))) (*.f64 1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))))))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))","(+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x)) (+.f64 (*.f64 1/16 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (*.f64 -1 (pow.f64 (fabs.f64 x) 3)))) (*.f64 1/16 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2)))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))","(+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x)) (pow.f64 s 4))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (pow.f64 (fabs.f64 x) 3) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s)))","1","(+.f64 1 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(-.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (neg.f64 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s)))))","(+.f64 1 (fma.f64 -1/6 (pow.f64 (/.f64 (fabs.f64 x) s) 3) (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (neg.f64 (/.f64 (fabs.f64 x) s)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (fabs.f64 x) s)))","(-.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (neg.f64 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 -1 (/.f64 (fabs.f64 x) s)))))","(+.f64 1 (fma.f64 -1/6 (pow.f64 (/.f64 (fabs.f64 x) s) 3) (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (neg.f64 (/.f64 (fabs.f64 x) s)))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (fma.f64 1/6 (pow.f64 (/.f64 (fabs.f64 x) s) 3) (/.f64 (fabs.f64 x) s))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (fma.f64 1/6 (pow.f64 (/.f64 (fabs.f64 x) s) 3) (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))","(+.f64 (/.f64 1/4 s) (/.f64 (/.f64 (*.f64 -1/16 0) s) s))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2)))))","(-.f64 (+.f64 (/.f64 1/4 s) (/.f64 (/.f64 (*.f64 -1/16 0) s) s)) (/.f64 (fma.f64 -1/64 0 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (+.f64 (*.f64 -1 (pow.f64 (fabs.f64 x) 3)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))))) (+.f64 (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2)))))) (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))))","(-.f64 (-.f64 (+.f64 (/.f64 1/4 s) (/.f64 (/.f64 (*.f64 -1/16 0) s) s)) (/.f64 (fma.f64 1/16 (+.f64 (*.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 -2/3 -2)) (fma.f64 (fabs.f64 x) (*.f64 3 (*.f64 x x)) (*.f64 (pow.f64 (fabs.f64 x) 3) -1/3))) (fma.f64 -1/64 (+.f64 0 0) (*.f64 -1/4 (*.f64 (fma.f64 -1/64 0 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) 0)))) (pow.f64 s 4))) (/.f64 (fma.f64 -1/64 0 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3)))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))","(+.f64 (/.f64 1/4 s) (/.f64 (/.f64 (*.f64 1/16 0) s) s))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2)))))","(-.f64 (+.f64 (/.f64 1/4 s) (/.f64 (/.f64 (*.f64 1/16 0) s) s)) (/.f64 (fma.f64 -1/64 0 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3)))","(+.f64 (*.f64 -1/64 (/.f64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (pow.f64 s 4))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 (*.f64 -1 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2)))) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3)))))) (pow.f64 s 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))))) (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2)))))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))) (pow.f64 s 4))) (*.f64 1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))))))","(+.f64 (/.f64 (+.f64 (*.f64 (+.f64 0 0) -1/64) (*.f64 1/16 (+.f64 (*.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 -2/3 2)) (+.f64 (*.f64 5/3 (pow.f64 (fabs.f64 x) 3)) (*.f64 (neg.f64 (fabs.f64 x)) (*.f64 3 (*.f64 x x))))))) (pow.f64 s 4)) (-.f64 (+.f64 (/.f64 1/4 s) (fma.f64 -1/4 (/.f64 (*.f64 (fma.f64 -1/64 0 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) 0) (pow.f64 s 4)) (/.f64 (/.f64 (*.f64 1/16 0) s) s))) (/.f64 (fma.f64 -1/64 0 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3))))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1 (*.f64 s (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2)))","(/.f64 (/.f64 1 s) (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))","(+.f64 (/.f64 1/4 s) (/.f64 (*.f64 1/4 (fabs.f64 x)) (*.f64 s s)))","(+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2)))))","(+.f64 (/.f64 1/4 s) (-.f64 (/.f64 (*.f64 1/4 (fabs.f64 x)) (*.f64 s s)) (/.f64 (fma.f64 1/16 (*.f64 3 (*.f64 x x)) (*.f64 -1/4 (*.f64 x x))) (pow.f64 s 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x)) (+.f64 (*.f64 1/16 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (*.f64 -1 (pow.f64 (fabs.f64 x) 3)))) (*.f64 1/16 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2)))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))))","(-.f64 (+.f64 (/.f64 1/4 s) (-.f64 (/.f64 (*.f64 1/4 (fabs.f64 x)) (*.f64 s s)) (/.f64 (fma.f64 1/16 (*.f64 3 (*.f64 x x)) (*.f64 -1/4 (*.f64 x x))) (pow.f64 s 3)))) (/.f64 (fma.f64 (fma.f64 1/16 (*.f64 3 (*.f64 x x)) (*.f64 -1/4 (*.f64 x x))) (fabs.f64 x) (*.f64 1/16 (+.f64 (*.f64 (pow.f64 (fabs.f64 x) 3) -5/3) (*.f64 (fabs.f64 x) (*.f64 3 (*.f64 x x)))))) (pow.f64 s 4)))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))","(+.f64 (/.f64 1/4 s) (/.f64 (*.f64 1/4 (fabs.f64 x)) (*.f64 s s)))","(+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2)))))","(+.f64 (/.f64 1/4 s) (-.f64 (/.f64 (*.f64 1/4 (fabs.f64 x)) (*.f64 s s)) (/.f64 (fma.f64 1/16 (*.f64 3 (*.f64 x x)) (*.f64 -1/4 (*.f64 x x))) (pow.f64 s 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x)) (pow.f64 s 4))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (pow.f64 (fabs.f64 x) 3) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (*.f64 -1/4 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 3))) (*.f64 1/4 (/.f64 (fabs.f64 x) (pow.f64 s 2))))))))","(+.f64 (/.f64 (+.f64 (*.f64 (neg.f64 (fabs.f64 x)) (fma.f64 1/16 (*.f64 3 (*.f64 x x)) (*.f64 -1/4 (*.f64 x x)))) (*.f64 1/16 (*.f64 5/3 (pow.f64 (fabs.f64 x) 3)))) (pow.f64 s 4)) (+.f64 (/.f64 1/4 s) (fma.f64 -1/16 (/.f64 (*.f64 (fabs.f64 x) (*.f64 3 (*.f64 x x))) (pow.f64 s 4)) (-.f64 (/.f64 (*.f64 1/4 (fabs.f64 x)) (*.f64 s s)) (/.f64 (fma.f64 1/16 (*.f64 3 (*.f64 x x)) (*.f64 -1/4 (*.f64 x x))) (pow.f64 s 3))))))"]],"time":310.77197265625,"type":"simplify"},{"compiler":[[7171,3259]],"time":58.425048828125,"type":"eval"},{"alts":[["(/.f64 1/4 s)","fresh",46.890225195986375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3))","fresh",0.2963652973678168],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))))","fresh",0.07185598608744459],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","done",0.0661418243755965],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","next",0.07095896830457918]],"compiler":[[5,4],[24,18],[29,19],[20,14],[23,15],[5,4],[24,18],[29,19],[23,15]],"count":[[251,5]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[249,4],"picked":[1,1]}],"min-error":[0.03375095678211854],"time":120.02783203125,"type":"prune"},{"compiler":[[83,34]],"locations":[["(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)",0.01171875,false],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))",0.017910009768442016,true],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))",0.053596374167287325,false],["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))",0.06007093499914883,true]],"time":18.51806640625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","s","-inf",0.950927734375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","s","inf",0.381103515625],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","s","0",0.5009765625],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","x","-inf",0.514892578125],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","x","inf",1.5830078125],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","x","0",0.5390625],["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))","s","-inf",0.205078125],["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))","s","inf",0.244140625],["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))","s","0",0.172119140625],["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))","x","-inf",0.328857421875],["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))","x","inf",0.3330078125],["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))","x","0",17.240966796875]],"time":23.291015625,"type":"series"},{"count":[[2,120]],"inputs":[["(pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) (*.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 0) (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) (*.f64 0 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (exp.f64 (/.f64 (fabs.f64 x) s))) (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (pow.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (fabs.f64 x))) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (/.f64 (fabs.f64 x) s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (/.f64 (fabs.f64 x) s) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 0) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) (*.f64 0 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 (/.f64 1 s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) s) (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 1 (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 1 (*.f64 (neg.f64 s) (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (*.f64 (neg.f64 s) (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)) (cbrt.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s))) (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)) (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (/.f64 1 s)) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (cbrt.f64 s)) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2))) (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))) (cbrt.f64 (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 2))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2) (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) 2)) (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 (/.f64 1 s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) 1) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 s)) (neg.f64 (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (neg.f64 s))) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (*.f64 s s))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) -1) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) s) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) 1) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (neg.f64 s))) (neg.f64 (cbrt.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (*.f64 s s))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 s)) (cbrt.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (exp.f64 (/.f64 (fabs.f64 x) s))) -1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) (/.f64 (*.f64 (neg.f64 s) (exp.f64 (/.f64 (fabs.f64 x) s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (/.f64 (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (cbrt.f64 (exp.f64 (/.f64 (fabs.f64 x) s))))) (neg.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s) (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (neg.f64 (exp.f64 (/.f64 (fabs.f64 x) s)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (/.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2)) s)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s)))) 3))))))"]],"rules":[["egg-rr",88],["egg-rr",32]],"time":34.884033203125,"type":"rewrite"},{"count":[[168,141]],"inputs":[["(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (+.f64 (*.f64 -1 (pow.f64 (fabs.f64 x) 3)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))))) (+.f64 (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2)))))) (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/16 (/.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (pow.f64 s 2))))","(+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (pow.f64 s 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (pow.f64 s 3)))))","(+.f64 (*.f64 -1/64 (/.f64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (pow.f64 s 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (pow.f64 s 2))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 (*.f64 -1 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2)))) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3)))))) (pow.f64 s 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (pow.f64 s 3))))))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","(exp.f64 (/.f64 (fabs.f64 x) s))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 1/2 (fma.f64 1/6 (pow.f64 (/.f64 (fabs.f64 x) s) 3) (/.f64 (fabs.f64 x) s))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (fma.f64 1/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 1/2 (fma.f64 1/6 (pow.f64 (/.f64 (fabs.f64 x) s) 3) (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1 (*.f64 s (*.f64 (pow.f64 (+.f64 (exp.f64 (*.f64 -1 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s)))))","(/.f64 (/.f64 1 s) (*.f64 (pow.f64 (+.f64 (exp.f64 (neg.f64 (/.f64 (fabs.f64 x) s))) 1) 2) (exp.f64 (/.f64 (fabs.f64 x) s))))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))","(fma.f64 -1/16 (/.f64 0 (*.f64 s s)) (/.f64 1/4 s))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2)))))","(-.f64 (fma.f64 -1/16 (/.f64 0 (*.f64 s s)) (/.f64 1/4 s)) (/.f64 (fma.f64 0 -1/64 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x)))))) (pow.f64 s 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2))) (+.f64 (*.f64 -1 (pow.f64 (fabs.f64 x) 3)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))))) (+.f64 (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2)))))) (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 -1/16 (/.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (pow.f64 s 2))))))","(-.f64 (-.f64 (fma.f64 -1/16 (/.f64 0 (*.f64 s s)) (/.f64 1/4 s)) (/.f64 (fma.f64 1/16 (+.f64 (*.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 -2/3 -2)) (fma.f64 (fabs.f64 x) (*.f64 3 (*.f64 x x)) (*.f64 (pow.f64 (fabs.f64 x) 3) -1/3))) (fma.f64 -1/4 (fma.f64 (*.f64 1/16 (+.f64 (*.f64 x x) 0)) 0 (*.f64 0 -1/64)) (*.f64 (+.f64 0 0) -1/64))) (pow.f64 s 4))) (/.f64 (fma.f64 0 -1/64 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3)))","(/.f64 1/4 s)","(+.f64 (*.f64 1/4 (/.f64 1 s)) (*.f64 1/16 (/.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (pow.f64 s 2))))","(fma.f64 (/.f64 0 (*.f64 s s)) 1/16 (/.f64 1/4 s))","(+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (pow.f64 s 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (pow.f64 s 3)))))","(-.f64 (fma.f64 (/.f64 0 (*.f64 s s)) 1/16 (/.f64 1/4 s)) (/.f64 (fma.f64 0 -1/64 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3)))","(+.f64 (*.f64 -1/64 (/.f64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (pow.f64 s 4))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 1/16 (+.f64 (pow.f64 (fabs.f64 x) 2) (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x))) (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))))))) (pow.f64 s 4))) (+.f64 (*.f64 1/4 (/.f64 1 s)) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (pow.f64 s 2))) (+.f64 (*.f64 1/16 (/.f64 (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -2/3 (pow.f64 (fabs.f64 x) 3)) (+.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 (*.f64 -1 (*.f64 (fabs.f64 x) (+.f64 (*.f64 2 (pow.f64 (fabs.f64 x) 2)) (pow.f64 (fabs.f64 x) 2)))) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3)))))) (pow.f64 s 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (+.f64 (*.f64 -4 (pow.f64 (fabs.f64 x) 2)) (+.f64 (pow.f64 (fabs.f64 x) 2) (*.f64 4 (pow.f64 (fabs.f64 x) 2))))) (*.f64 -1/64 (*.f64 (+.f64 (*.f64 4 (fabs.f64 x)) (*.f64 -4 (fabs.f64 x))) (+.f64 (*.f64 -4 (fabs.f64 x)) (*.f64 4 (fabs.f64 x)))))) (pow.f64 s 3))))))))","(+.f64 (/.f64 (fma.f64 -1/4 (fma.f64 (*.f64 1/16 (+.f64 (*.f64 x x) 0)) 0 (*.f64 0 -1/64)) (*.f64 (+.f64 0 0) -1/64)) (pow.f64 s 4)) (+.f64 (/.f64 1/4 s) (-.f64 (*.f64 1/16 (+.f64 (/.f64 0 (*.f64 s s)) (/.f64 (+.f64 (*.f64 (pow.f64 (fabs.f64 x) 3) (+.f64 2 -2/3)) (+.f64 (pow.f64 (fabs.f64 x) 3) (fma.f64 (neg.f64 (fabs.f64 x)) (*.f64 3 (*.f64 x x)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (pow.f64 s 4)))) (/.f64 (fma.f64 0 -1/64 (*.f64 1/16 (+.f64 (*.f64 x x) 0))) (pow.f64 s 3)))))"]],"time":184.827880859375,"type":"simplify"},{"compiler":[[7770,3682]],"time":64.52099609375,"type":"eval"},{"alts":[["(/.f64 1/4 s)","fresh",46.890225195986375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))))","next",0.07185598608744459],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","done",0.0661418243755965],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","done",0.07095896830457918],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3))","fresh",0.2963652973678168]],"compiler":[[5,4],[29,19],[20,14],[23,15],[24,18],[5,4],[29,19],[24,18]],"count":[[264,5]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[259,1],"picked":[1,1]}],"min-error":[0.03375095678211854],"time":111.777099609375,"type":"prune"},{"compiler":[[121,42]],"locations":[["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))",0.053596374167287325,false],["(pow.f64 (/.f64 (fabs.f64 x) s) 2)",0.2506637695368841,true],["(cbrt.f64 (/.f64 (fabs.f64 x) s))",15.852789734693056,true],["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))",28.617646144313934,true]],"time":23.06494140625,"type":"localize"},{"count":[[3,48]],"series":[["(pow.f64 (/.f64 (fabs.f64 x) s) 2)","s","-inf",0.444091796875],["(pow.f64 (/.f64 (fabs.f64 x) s) 2)","s","inf",0.369140625],["(pow.f64 (/.f64 (fabs.f64 x) s) 2)","s","0",0.405029296875],["(pow.f64 (/.f64 (fabs.f64 x) s) 2)","x","-inf",0.281982421875],["(pow.f64 (/.f64 (fabs.f64 x) s) 2)","x","inf",0.31298828125],["(pow.f64 (/.f64 (fabs.f64 x) s) 2)","x","0",0.31884765625],["(cbrt.f64 (/.f64 (fabs.f64 x) s))","s","-inf",1.177978515625],["(cbrt.f64 (/.f64 (fabs.f64 x) s))","s","inf",0.23193359375],["(cbrt.f64 (/.f64 (fabs.f64 x) s))","s","0",0.204833984375],["(cbrt.f64 (/.f64 (fabs.f64 x) s))","x","-inf",1.031982421875],["(cbrt.f64 (/.f64 (fabs.f64 x) s))","x","inf",1.0029296875],["(cbrt.f64 (/.f64 (fabs.f64 x) s))","x","0",1.019775390625],["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))","s","-inf",0.2890625],["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))","s","inf",0.30615234375],["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))","s","0",0.41796875],["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))","x","-inf",1.4638671875],["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))","x","inf",6.17578125],["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))","x","0",1.887939453125]],"time":17.573974609375,"type":"series"},{"count":[[3,174]],"inputs":[["(cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 0) (pow.f64 (/.f64 (fabs.f64 x) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) (*.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) (pow.f64 (/.f64 (fabs.f64 x) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) (*.f64 0 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (cbrt.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 4/3)) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 5/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 5/3)) (cbrt.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 s -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x x) s)) (pow.f64 s -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 (pow.f64 s 2/3))) (/.f64 (cbrt.f64 (fabs.f64 x)) (pow.f64 (cbrt.f64 (pow.f64 s 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fabs.f64 x)) (/.f64 (cbrt.f64 (fabs.f64 x)) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 s)) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 x 2/3)) 2) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 x 2/3)) 2) (pow.f64 (cbrt.f64 (pow.f64 s 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x 2/3)) 1) (/.f64 (pow.f64 (cbrt.f64 (pow.f64 x 2/3)) 2) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 s -1/3) (cbrt.f64 (/.f64 (*.f64 x x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 s 2/3))) (/.f64 (pow.f64 x 2/3) (pow.f64 (cbrt.f64 (pow.f64 s 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (cbrt.f64 (cbrt.f64 s))) (/.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 (pow.f64 s 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 (cbrt.f64 s))) (/.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (cbrt.f64 (pow.f64 s 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fabs.f64 x)) (/.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 (/.f64 (/.f64 (fabs.f64 x) s) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3))) (cbrt.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (*.f64 x x))) (cbrt.f64 (neg.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x 2/3) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 x 2/3)) (neg.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 x x) s))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 x x) s))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 x x) s)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (cbrt.f64 (neg.f64 (fabs.f64 x)))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (fabs.f64 x))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 5/3))) (cbrt.f64 (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x x) s)) 1) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fabs.f64 x))) (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 s 2/3))) (pow.f64 (cbrt.f64 (pow.f64 s 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 x x) s)) (cbrt.f64 (cbrt.f64 s))) (cbrt.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 x x) s)) 1) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fabs.f64 x) s) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 0) (cbrt.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (*.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (*.f64 0 (cbrt.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fabs.f64 x)) (pow.f64 s -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 s -1/3) (cbrt.f64 (fabs.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fabs.f64 x))) (neg.f64 (pow.f64 s -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (fabs.f64 x))) 1) (/.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 s))) (/.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 (pow.f64 s 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fabs.f64 x))) (cbrt.f64 (/.f64 (pow.f64 x 2/3) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 s -1/3)) (cbrt.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fabs.f64 x))) 1) (*.f64 (cbrt.f64 (neg.f64 s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3))) (cbrt.f64 (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (fabs.f64 x))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) (cbrt.f64 (cbrt.f64 (fabs.f64 x)))) (cbrt.f64 (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (fabs.f64 x))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3))) (cbrt.f64 (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fabs.f64 x))) 1) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 (cbrt.f64 s))) (cbrt.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s))) (cbrt.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fabs.f64 x) s) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (fabs.f64 x) s))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 0) (pow.f64 (/.f64 (fabs.f64 x) s) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (*.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 (fabs.f64 x) s) 2)) (pow.f64 (/.f64 (fabs.f64 x) s) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (*.f64 0 (pow.f64 (/.f64 (fabs.f64 x) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) s) (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x x) s) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)) (pow.f64 (pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 x) (/.f64 (/.f64 (fabs.f64 x) s) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) (pow.f64 (/.f64 (fabs.f64 x) s) 5/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (pow.f64 s -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (neg.f64 s)) (/.f64 (fabs.f64 x) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 4/3) 2) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 s -2) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 5/3) (cbrt.f64 (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fabs.f64 x) s) s) (fabs.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 s) (/.f64 (*.f64 x x) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (/.f64 (pow.f64 x 2/3) s) (/.f64 (pow.f64 x 2/3) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 (/.f64 -1 s) (/.f64 -1 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 s -2)) (*.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (/.f64 (fabs.f64 x) (pow.f64 s 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (fabs.f64 x) (neg.f64 s)) 1) (*.f64 (/.f64 (fabs.f64 x) (neg.f64 s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 x x) s)) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x x)) (/.f64 1 (neg.f64 (*.f64 s s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fabs.f64 x) s) (cbrt.f64 s)) (/.f64 (fabs.f64 x) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fabs.f64 x) s) (pow.f64 s 2/3)) (/.f64 (fabs.f64 x) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fabs.f64 x) s) -1) (/.f64 (fabs.f64 x) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (/.f64 (/.f64 (fabs.f64 x) s) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (/.f64 (/.f64 (fabs.f64 x) s) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) -1) (/.f64 (/.f64 (fabs.f64 x) s) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fabs.f64 x) s) (cbrt.f64 (neg.f64 s))) (/.f64 (neg.f64 (fabs.f64 x)) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (fabs.f64 x)) (cbrt.f64 s)) (/.f64 (/.f64 (fabs.f64 x) s) (neg.f64 (pow.f64 s 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fabs.f64 x)) (/.f64 (/.f64 (fabs.f64 x) s) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) (pow.f64 (/.f64 (fabs.f64 x) s) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 4/3) (pow.f64 (/.f64 (fabs.f64 x) s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (fabs.f64 x) s) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (fabs.f64 x)) (*.f64 (cbrt.f64 s) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (neg.f64 (fabs.f64 x))) (*.f64 (cbrt.f64 s) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fabs.f64 x) (/.f64 (fabs.f64 x) (cbrt.f64 s))) (*.f64 s (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fabs.f64 x) (/.f64 (fabs.f64 x) (pow.f64 s 2/3))) (*.f64 s (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (fabs.f64 x)) (*.f64 (pow.f64 s 2/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (neg.f64 (fabs.f64 x))) (*.f64 (pow.f64 s 2/3) (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fabs.f64 x)) (/.f64 (fabs.f64 x) (cbrt.f64 s))) (*.f64 (neg.f64 s) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fabs.f64 x)) (/.f64 (fabs.f64 x) (pow.f64 s 2/3))) (*.f64 (neg.f64 s) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) 1) (*.f64 (neg.f64 (*.f64 s s)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x x)) (neg.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x x) s)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x x) s) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x x) (*.f64 s s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) s) (/.f64 (fabs.f64 x) (pow.f64 s 2/3))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) s) (/.f64 (fabs.f64 x) (cbrt.f64 s))) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 4/3) (pow.f64 x 2/3)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 4/3) (cbrt.f64 (/.f64 (*.f64 x x) s))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) s) 1) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) s) (pow.f64 s -1/3)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) s) -1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) 1) (neg.f64 (*.f64 s s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 x x) s)) 1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (/.f64 (fabs.f64 x) s)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (/.f64 (fabs.f64 x) s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 2/3) (pow.f64 (/.f64 (fabs.f64 x) s) 4/3)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x x) s)) (pow.f64 (/.f64 (fabs.f64 x) s) 4/3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fabs.f64 x)) (pow.f64 (/.f64 (fabs.f64 x) s) 5/3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fabs.f64 x))) (pow.f64 (/.f64 (fabs.f64 x) s) 5/3)) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) s) 1) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) s) (cbrt.f64 s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) s) (pow.f64 s 2/3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) s) -1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) s)) (cbrt.f64 s)) (neg.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) s)) -1) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) s)) 1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 (*.f64 x x) s)) (cbrt.f64 (neg.f64 s))) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (/.f64 (fabs.f64 x) (cbrt.f64 s))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (/.f64 (fabs.f64 x) (pow.f64 s 2/3))) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (/.f64 (fabs.f64 x) (cbrt.f64 s))) (*.f64 (pow.f64 s 2/3) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (/.f64 (fabs.f64 x) (pow.f64 s 2/3))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (/.f64 (*.f64 x x) s))) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fabs.f64 x) s) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fabs.f64 x) (neg.f64 s)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fabs.f64 x) (neg.f64 s)) (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fabs.f64 x) s) (/.f64 (fabs.f64 x) (neg.f64 s))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 6))))))"]],"rules":[["egg-rr",90],["egg-rr",33],["egg-rr",51]],"time":35.10595703125,"type":"rewrite"},{"count":[[222,176]],"inputs":[["(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2)) 1/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 2/3)","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(pow.f64 (/.f64 (fabs.f64 x) s) 1/3)","(cbrt.f64 (/.f64 (fabs.f64 x) s))","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)","(/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))","(pow.f64 (/.f64 (fabs.f64 x) s) 2)"]],"time":140.507080078125,"type":"simplify"},{"compiler":[[7742,3108]],"time":60.338134765625,"type":"eval"},{"alts":[["(/.f64 1/4 s)","fresh",46.890225195986375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))))","done",0.07185598608744459],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","done",0.0661418243755965],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","done",0.07095896830457918],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3))","next",0.2963652973678168]],"compiler":[[5,4],[29,19],[20,14],[23,15],[24,18],[5,4],[24,18]],"count":[[242,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[237,0],"picked":[1,1]}],"min-error":[0.03375095678211854],"time":109.048828125,"type":"prune"},{"compiler":[[101,48]],"locations":[["(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))",0.03506749970117155,true],["(exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))",0.053596374167287325,false],["(/.f64 (*.f64 (fabs.f64 x) 3) s)",0.20703125,true],["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)",0.2860340092958714,true]],"time":20.06396484375,"type":"localize"},{"count":[[3,72]],"series":[["(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))","s","-inf",0.17919921875],["(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))","s","inf",0.24609375],["(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))","s","0",0.147216796875],["(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))","x","-inf",0.177001953125],["(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))","x","inf",0.14794921875],["(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))","x","0",0.15380859375],["(/.f64 (*.f64 (fabs.f64 x) 3) s)","s","-inf",0.27392578125],["(/.f64 (*.f64 (fabs.f64 x) 3) s)","s","inf",0.2919921875],["(/.f64 (*.f64 (fabs.f64 x) 3) s)","s","0",0.266845703125],["(/.f64 (*.f64 (fabs.f64 x) 3) s)","x","-inf",0.14697265625],["(/.f64 (*.f64 (fabs.f64 x) 3) s)","x","inf",0.1708984375],["(/.f64 (*.f64 (fabs.f64 x) 3) s)","x","0",0.154052734375],["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)","s","-inf",0.5380859375],["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)","s","inf",0.593017578125],["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)","s","0",0.851806640625],["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)","x","-inf",1.22705078125],["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)","x","inf",1.30908203125],["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)","x","0",1.3369140625]],"time":8.455078125,"type":"series"},{"count":[[3,150]],"inputs":[["(pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3)","(/.f64 (*.f64 (fabs.f64 x) 3) s)","(exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 0) (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) (*.f64 0 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/3) (*.f64 (fabs.f64 x) (/.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (fabs.f64 x)) (/.f64 1/3 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)))) (*.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) (cbrt.f64 1/3))) (cbrt.f64 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) (sqrt.f64 1/3))) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 0) (*.f64 (fabs.f64 x) (/.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fabs.f64 x) (/.f64 3 s))) (*.f64 (fabs.f64 x) (/.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) (*.f64 0 (*.f64 (fabs.f64 x) (/.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fabs.f64 x) (*.f64 s -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 s)) (/.f64 (fabs.f64 x) (*.f64 s -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (fabs.f64 x) 3) (cbrt.f64 s)) (pow.f64 (cbrt.f64 s) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fabs.f64 x)) (/.f64 1 (*.f64 s -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s))) (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3) (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 (fabs.f64 x)) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 x) (/.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (/.f64 3 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fabs.f64 x) 3)) (/.f64 (cbrt.f64 (*.f64 (*.f64 x x) 9)) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 27 s)) (/.f64 (fabs.f64 x) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fabs.f64 x) 3) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 s) (*.f64 (fabs.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 s -1/3) (/.f64 (fabs.f64 x) (*.f64 (pow.f64 s 2/3) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fabs.f64 x) (/.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fabs.f64 x) (*.f64 s -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) s) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (*.f64 (pow.f64 s 2/3) 1/3)) (pow.f64 s -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (*.f64 x x) 9)) s) (cbrt.f64 (*.f64 (fabs.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 3 s) (fabs.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (*.f64 s -1/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 s) (*.f64 -3 (fabs.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 3 (pow.f64 s 2/3)) (/.f64 (fabs.f64 x) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (pow.f64 s 2/3)) (cbrt.f64 (/.f64 27 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fabs.f64 x) (neg.f64 s)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fabs.f64 x)) (*.f64 s -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3) (cbrt.f64 (fabs.f64 x))) (cbrt.f64 (*.f64 s 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fabs.f64 x)) (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3)) (cbrt.f64 (*.f64 s 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) (*.f64 (pow.f64 s 2/3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) (*.f64 (cbrt.f64 s) (sqrt.f64 1/3))) (*.f64 (pow.f64 s 2/3) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) (sqrt.f64 1/3)) (*.f64 s (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) (cbrt.f64 1/3)) (/.f64 s (cbrt.f64 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) (cbrt.f64 (*.f64 s 1/3))) (pow.f64 (cbrt.f64 (*.f64 s 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (fabs.f64 x) 3) (cbrt.f64 s)) (cbrt.f64 (pow.f64 s 2/3))) (pow.f64 (cbrt.f64 (pow.f64 s 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fabs.f64 x)) (*.f64 (*.f64 s -1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fabs.f64 x)) (cbrt.f64 (*.f64 (*.f64 x x) 9))) (*.f64 (cbrt.f64 (*.f64 s 1/3)) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fabs.f64 x) 3) s)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 x) (*.f64 s 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -3 (fabs.f64 x)) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fabs.f64 x) 3) (cbrt.f64 s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s)) 3) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s))) (cbrt.f64 (*.f64 (*.f64 x x) 9))) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 27 s)) (fabs.f64 x)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3) (cbrt.f64 (*.f64 -3 (fabs.f64 x)))) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3) (cbrt.f64 (*.f64 (fabs.f64 x) 3))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 s -1/3) (*.f64 (fabs.f64 x) 3)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (fabs.f64 x) 3) (cbrt.f64 s)) 1) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -3 (fabs.f64 x))) (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3)) (cbrt.f64 (neg.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (fabs.f64 x) 3)) (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (/.f64 (fabs.f64 x) (pow.f64 s 2/3))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) (*.f64 (pow.f64 s 2/3) 1/3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fabs.f64 x) (/.f64 3 (pow.f64 s 2/3))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) s) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fabs.f64 x) (cbrt.f64 (*.f64 s 1/3))) (cbrt.f64 (/.f64 (*.f64 s s) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (fabs.f64 x) 3) (cbrt.f64 s)) 1) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fabs.f64 x) 3) -1) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -3 (fabs.f64 x)) (cbrt.f64 s)) (neg.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (fabs.f64 x) 3) (cbrt.f64 s))) (neg.f64 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fabs.f64 x) (*.f64 s -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fabs.f64 x) (*.f64 s -1/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 0) (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) (*.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) (*.f64 0 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))) 4) 2) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) (exp.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3)) (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (*.f64 s -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (fabs.f64 x)) (/.f64 1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 (fabs.f64 x) (/.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 s -1/3)) (/.f64 (fabs.f64 x) (*.f64 (pow.f64 s 2/3) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 -3 (fabs.f64 x))) (/.f64 -1 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (*.f64 s -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3)) (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fabs.f64 x) (cbrt.f64 s))) (/.f64 3 (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (fabs.f64 x)) (/.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (fabs.f64 x) 3))) (/.f64 (cbrt.f64 (*.f64 (*.f64 x x) 9)) s))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (/.f64 27 s))) (/.f64 (fabs.f64 x) (pow.f64 s 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)))) (pow.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fabs.f64 x) s)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 1 s)) (*.f64 (fabs.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 0 (*.f64 (fabs.f64 x) (/.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3) (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 2/3) (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3) 3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) 1/3) 3) 1))))))"]],"rules":[["egg-rr",47],["egg-rr",73],["egg-rr",30]],"time":31.5849609375,"type":"rewrite"},{"count":[[222,167]],"inputs":[["(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2)))))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (pow.f64 (fabs.f64 x) 3) (*.f64 2 (*.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x))))) (pow.f64 s 3))) (+.f64 1 (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2))))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2)))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 -9/2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -1 (pow.f64 (fabs.f64 x) 3)) (*.f64 -2 (*.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x))))) (pow.f64 s 3))) (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2))))))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","1","(+.f64 1 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s))))","(+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s)))))","1","(+.f64 1 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s))))","(+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s))) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s)))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2)))))","(+.f64 1 (fma.f64 (/.f64 (*.f64 x x) (/.f64 (*.f64 s s) 3/2)) 1/3 (/.f64 (fabs.f64 x) s)))","(+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (pow.f64 (fabs.f64 x) 3) (*.f64 2 (*.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x))))) (pow.f64 s 3))) (+.f64 1 (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2))))))","(fma.f64 1/3 (*.f64 (-.f64 (*.f64 (pow.f64 (fabs.f64 x) 3) (-.f64 9/2 1)) (*.f64 2 (*.f64 (pow.f64 (fabs.f64 x) 3) 3/2))) (pow.f64 s -3)) (+.f64 1 (fma.f64 (/.f64 (*.f64 x x) (/.f64 (*.f64 s s) 3/2)) 1/3 (/.f64 (fabs.f64 x) s))))","1","(+.f64 1 (/.f64 (fabs.f64 x) s))","(+.f64 1 (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2)))))","(+.f64 1 (fma.f64 (/.f64 (*.f64 x x) (/.f64 (*.f64 s s) 3/2)) 1/3 (/.f64 (fabs.f64 x) s)))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 -9/2 (pow.f64 (fabs.f64 x) 3)) (+.f64 (*.f64 -1 (pow.f64 (fabs.f64 x) 3)) (*.f64 -2 (*.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (fabs.f64 x))))) (pow.f64 s 3))) (+.f64 (/.f64 (fabs.f64 x) s) (*.f64 1/3 (/.f64 (-.f64 (*.f64 9/2 (pow.f64 (fabs.f64 x) 2)) (*.f64 3 (pow.f64 (fabs.f64 x) 2))) (pow.f64 s 2))))))","(+.f64 1 (fma.f64 -1/3 (*.f64 (-.f64 (*.f64 (pow.f64 (fabs.f64 x) 3) (-.f64 -9/2 -1)) (*.f64 -2 (*.f64 (pow.f64 (fabs.f64 x) 3) 3/2))) (pow.f64 s -3)) (fma.f64 (/.f64 (*.f64 x x) (/.f64 (*.f64 s s) 3/2)) 1/3 (/.f64 (fabs.f64 x) s))))","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(*.f64 3 (/.f64 (fabs.f64 x) s))","(/.f64 (*.f64 3 (fabs.f64 x)) s)","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","(exp.f64 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(pow.f64 (exp.f64 3) (/.f64 (fabs.f64 x) s))","1","(+.f64 1 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(fma.f64 (/.f64 (fabs.f64 x) s) 3 1)","(+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 9/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (*.f64 3 (fabs.f64 x)) s)))","(+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s)))))","(+.f64 (fma.f64 9/2 (pow.f64 (/.f64 (fabs.f64 x) s) 3) 1) (fma.f64 9/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (*.f64 3 (fabs.f64 x)) s)))","1","(+.f64 1 (*.f64 3 (/.f64 (fabs.f64 x) s)))","(fma.f64 (/.f64 (fabs.f64 x) s) 3 1)","(+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s))))","(+.f64 1 (fma.f64 9/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (*.f64 3 (fabs.f64 x)) s)))","(+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 3) (pow.f64 s 3))) (+.f64 1 (+.f64 (*.f64 9/2 (/.f64 (pow.f64 (fabs.f64 x) 2) (pow.f64 s 2))) (*.f64 3 (/.f64 (fabs.f64 x) s)))))","(+.f64 (fma.f64 9/2 (pow.f64 (/.f64 (fabs.f64 x) s) 3) 1) (fma.f64 9/2 (pow.f64 (/.f64 (fabs.f64 x) s) 2) (/.f64 (*.f64 3 (fabs.f64 x)) s)))"]],"time":226.0400390625,"type":"simplify"},{"compiler":[[6388,3660]],"time":63.698974609375,"type":"eval"},{"alts":[["(/.f64 1/4 s)","fresh",46.890225195986375],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) (cbrt.f64 1/3))) (cbrt.f64 1/9)))","fresh",0.08283632271092109],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","done",0.0661418243755965],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","done",0.07095896830457918],["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3))","done",0.2963652973678168]],"compiler":[[5,4],[28,22],[20,14],[23,15],[24,18]],"count":[[233,5]],"kept":[{"done":[3,2],"fresh":[1,1],"new":[228,1],"picked":[1,1]}],"min-error":[0.032143823009749536],"time":99.7080078125,"type":"prune"},{"accuracy":[0.0661418243755965],"baseline":[0.0661418243755965],"branch":[["x",0.0661418243755965,1],["s",0.0661418243755965,1],["(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))",0.0661418243755965,1],["(neg.f64 (fabs.f64 x))",0.0661418243755965,1],["(neg.f64 (fabs.f64 x))",0.0661418243755965,1],["(fabs.f64 x)",0.0661418243755965,1]],"compiler":[[3,2],[3,2],[28,13],[5,4],[5,4],[4,3],[167,87]],"count":[[8,1]],"inputs":[["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (*.f64 (*.f64 (fabs.f64 x) (/.f64 3 s)) (cbrt.f64 1/3))) (cbrt.f64 1/9)))","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3))","(/.f64 1/4 s)","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (/.f64 (*.f64 (fabs.f64 x) 3) s)) 1/3))","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 (cbrt.f64 (/.f64 (fabs.f64 x) s))) (cbrt.f64 (pow.f64 (/.f64 (fabs.f64 x) s) 2))))","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (pow.f64 (exp.f64 -1) (/.f64 (fabs.f64 x) (neg.f64 s))))","(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))"]],"link":["."],"name":["Logistic distribution"],"oracle":[46.9099362559588],"outputs":[["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))"]],"time":24.213134765625,"times":[["x",3.744873046875],["s",3.9599609375],["(/.f64 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)) (*.f64 (*.f64 s (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))) (+.f64 1 (exp.f64 (/.f64 (neg.f64 (fabs.f64 x)) s)))))",2.14208984375],["(neg.f64 (fabs.f64 x))",3.660888671875],["(neg.f64 (fabs.f64 x))",3.658935546875],["(fabs.f64 x)",4.1220703125]],"type":"regimes"},{"compiler":[[20,14]],"inputs":[["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) s) (exp.f64 (/.f64 (fabs.f64 x) s)))","(/.f64 (pow.f64 (+.f64 1 (exp.f64 (/.f64 (fabs.f64 x) (neg.f64 s)))) -2) (*.f64 s (exp.f64 (/.f64 (fabs.f64 x) s))))"]],"stop":[["fuel",1]],"time":21.018798828125,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[20,14]],"remove-preprocessing":[[]],"time":10.677978515625,"type":"end"}]