[{"compiler":[[9,7]],"method":["search"],"sampling":[[12,0.9375603052321821,0.061463370686396956,0.0009763240814208984],[11,0.9073164244182408,0.09170725150033832,0.0009763240814208984],[10,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[9,0.8195116091519594,0.17951206676661968,0.0009763240814208984],[8,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[7,0.6556092873215675,0.34341438859701157,0.0009763240814208984],[6,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[5,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[4,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":17.85498046875,"type":"analyze"},{"outcomes":[["body",256,"valid",295.364990234375,8256]],"time":302.864013671875,"type":"sample"},{"compiler":[[8,6]],"inputs":[["0","1"],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","(cbrt.f64 (/.f64 a (*.f64 2 g)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","(cbrt.f64 (/.f64 g (+.f64 a a)))","(cbrt.f64 (/.f64 a (*.f64 2 g)))","(cbrt.f64 (/.f64 a (+.f64 g g)))"]],"symmetry":[[]],"time":57.4140625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(cbrt.f64 (/.f64 g (*.f64 2 a)))"]],"method":["egg-herbie"],"outputs":[["(cbrt.f64 (/.f64 g (*.f64 2 a)))","(cbrt.f64 (/.f64 g (+.f64 a a)))"]],"time":18.952880859375,"type":"simplify"},{"compiler":[[14,9]],"time":0.3310546875,"type":"eval"},{"alts":[["(cbrt.f64 (/.f64 g (*.f64 2 a)))","next",17.325554927748072]],"compiler":[[8,6],[8,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[17.325554927748072],"time":0.8291015625,"type":"prune"},{"compiler":[[19,12]],"locations":[["(cbrt.f64 (/.f64 g (*.f64 2 a)))",16.86302018590082,true]],"time":4.7958984375,"type":"localize"},{"count":[[1,0]],"series":[["(cbrt.f64 (/.f64 g (*.f64 2 a)))","a","-inf",0.39599609375],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","a","inf",0.461181640625],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","a","0",0.41796875],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","g","-inf",0.4638671875],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","g","inf",0.462158203125],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","g","0",0.743896484375]],"time":3.02294921875,"type":"series"},{"count":[[1,46]],"inputs":[["(cbrt.f64 (/.f64 g (*.f64 2 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) (*.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) 0) (cbrt.f64 (/.f64 g (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) (*.f64 0 (cbrt.f64 (/.f64 g (+.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 g (+.f64 a a)))) (cbrt.f64 (/.f64 g (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 g (+.f64 a a)))) (cbrt.f64 (pow.f64 (/.f64 g (+.f64 a a)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 g a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 g) a)) (cbrt.f64 (*.f64 (pow.f64 g 2/3) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 g 8))) (cbrt.f64 (/.f64 (pow.f64 g 2/3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 g (+.f64 a a))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 g (+.f64 a a)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 g (+.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) (cbrt.f64 (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 a)) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g 1/2)) (/.f64 1 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (*.f64 (pow.f64 g 2/3) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/2 a))) (cbrt.f64 (/.f64 g (pow.f64 (+.f64 a a) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (cbrt.f64 (*.f64 g 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 g (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 g (*.f64 -2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g (*.f64 -2 a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 g (+.f64 a a)) 2/3)) (cbrt.f64 (cbrt.f64 g))) (cbrt.f64 (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 g 1/2)) 1) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (pow.f64 (/.f64 g (+.f64 a a)) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) 1) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 g)) 1) (*.f64 (cbrt.f64 (*.f64 -2 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (cbrt.f64 a))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (cbrt.f64 (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g (pow.f64 (+.f64 a a) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 g)) 1) (cbrt.f64 (*.f64 -2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 (cbrt.f64 (+.f64 a a)))) (cbrt.f64 (pow.f64 (+.f64 a a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (*.f64 g 1/2))) (neg.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g -1/2)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g (cbrt.f64 (/.f64 1/2 a)))) (cbrt.f64 (pow.f64 (+.f64 a a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 g (+.f64 a a)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 g (+.f64 a a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 g (+.f64 a a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 g (*.f64 -2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 g (+.f64 a a)))))))"]],"rules":[["egg-rr",46]],"time":21.033935546875,"type":"rewrite"},{"count":[[46,46]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"time":26.212158203125,"type":"simplify"},{"compiler":[[495,239]],"time":6.346923828125,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (/.f64 1 a)))","fresh",0.391288769536884],["(/.f64 (cbrt.f64 g) (cbrt.f64 (+.f64 a a)))","fresh",0.40072250976844204],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","next",0.37890625],["(*.f64 (cbrt.f64 g) (cbrt.f64 (/.f64 1/2 a)))","fresh",0.42939379884221013],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","fresh",0.3792763183790942],["(*.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 g a)))","fresh",17.61323189863677],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","done",17.325554927748072]],"compiler":[[11,9],[9,6],[9,7],[9,7],[10,8],[9,7],[8,6],[11,9],[9,6],[9,7],[9,7],[10,8],[9,7]],"count":[[47,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[46,6],"picked":[1,1]}],"min-error":[0.01171875],"time":8.89013671875,"type":"prune"},{"compiler":[[21,13]],"locations":[["(cbrt.f64 a)",0.0703125,true],["(cbrt.f64 (*.f64 g 1/2))",0.08984375,true],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))",0.36328125,true]],"time":5.892822265625,"type":"localize"},{"count":[[3,0]],"series":[["(cbrt.f64 a)","a","-inf",0.3349609375],["(cbrt.f64 a)","a","inf",0.2470703125],["(cbrt.f64 a)","a","0",0.323974609375],["(cbrt.f64 (*.f64 g 1/2))","g","-inf",0.198974609375],["(cbrt.f64 (*.f64 g 1/2))","g","inf",0.254150390625],["(cbrt.f64 (*.f64 g 1/2))","g","0",0.212890625],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","a","-inf",0.5439453125],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","a","inf",0.221923828125],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","a","0",0.18896484375],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","g","-inf",0.240966796875],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","g","inf",0.2119140625],["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","g","0",0.26806640625]],"time":3.377197265625,"type":"series"},{"count":[[3,104]],"inputs":[["(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","(cbrt.f64 (*.f64 g 1/2))","(cbrt.f64 a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)) 0) (cbrt.f64 (/.f64 (*.f64 g 1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)) (*.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (*.f64 g 1/2) a))) (cbrt.f64 (/.f64 (*.f64 g 1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)) (*.f64 0 (cbrt.f64 (/.f64 (*.f64 g 1/2) a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 a))) (/.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) (cbrt.f64 (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (cbrt.f64 (/.f64 1/2 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -1/3)) (cbrt.f64 (/.f64 (*.f64 g 1/2) (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 g 1/2) a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 g a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/8 a))) (cbrt.f64 (/.f64 g (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 g 1/2) a) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 g 1/2))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 g 1/2) 2/3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/2 g)) (neg.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g 1/2)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (cbrt.f64 (*.f64 g 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 a)) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 g 1/2) 2/3) a)) (cbrt.f64 (cbrt.f64 (*.f64 g 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (pow.f64 a 2/3))) (cbrt.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (cbrt.f64 (*.f64 -1/2 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 (pow.f64 a 2/3))) (cbrt.f64 (/.f64 g (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (cbrt.f64 a))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (cbrt.f64 (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (cbrt.f64 a))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (cbrt.f64 1/2)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a))) (cbrt.f64 (pow.f64 (*.f64 g 1/2) 2/3))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -1/3)) (cbrt.f64 (*.f64 g 1/2))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 g 1/2) a) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 g 1/2)))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 g 1/2) a) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 -1/2 g)))) (cbrt.f64 (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (pow.f64 a 2/3))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 g) (cbrt.f64 (/.f64 1/2 (pow.f64 a 2/3)))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 g 1/2))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 g 1/2) a) 2/3))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 -1/2 g))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 g 1/2) a) 2/3))) (cbrt.f64 (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (cbrt.f64 a))) (cbrt.f64 (cbrt.f64 (pow.f64 a 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 a) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) -1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) (cbrt.f64 a)))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 g 1/2) a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 g 1/2) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 -1/2 g)) (cbrt.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 g 1/2) a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 g 1/2)) 0) (cbrt.f64 (*.f64 g 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 g 1/2)) (*.f64 (cbrt.f64 (*.f64 g 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 g 1/2))) (cbrt.f64 (*.f64 g 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 g 1/2)) (*.f64 0 (cbrt.f64 (*.f64 g 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (*.f64 -1/2 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 g 1/2))) (cbrt.f64 (pow.f64 (*.f64 g 1/2) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 g 1/2) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 g 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 -1/2 g))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 g 1/2) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 1/8 g))) (cbrt.f64 (pow.f64 g 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (*.f64 (cbrt.f64 1/4) g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (cbrt.f64 (*.f64 g (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 g 1/2)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 g 1/2)) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g (sqrt.f64 1/2))) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (*.f64 (pow.f64 g 2/3) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (*.f64 g g) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 g 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (*.f64 -1/2 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/2 g)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 -1/2 g)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 g 1/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 g 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 g 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (*.f64 -1/2 g)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 g 1/2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 a) 0) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 a) (*.f64 0 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 a) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 a)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a 2/3)) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 a 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 a)))))"]],"rules":[["egg-rr",20],["egg-rr",31],["egg-rr",53]],"time":30.5859375,"type":"rewrite"},{"count":[[104,104]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"time":26.716064453125,"type":"simplify"},{"compiler":[[1196,812]],"time":17.087890625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (*.f64 (cbrt.f64 1/4) g))) (cbrt.f64 a))","fresh",0.5339050781475363],["(*.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (/.f64 1 a)))","fresh",0.391288769536884],["(/.f64 (cbrt.f64 g) (cbrt.f64 (*.f64 a 2)))","fresh",0.40072250976844204],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","next",0.3792763183790942],["(*.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 g a)))","fresh",17.61323189863677],["(/.f64 (*.f64 (cbrt.f64 (*.f64 g (sqrt.f64 1/2))) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 a))","fresh",0.47169877930532605],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","done",17.325554927748072]],"compiler":[[14,12],[11,9],[9,7],[10,8],[9,7],[14,12],[8,6],[14,12],[11,9],[9,7],[10,8],[9,7],[14,12]],"count":[[111,7]],"kept":[{"done":[1,1],"fresh":[5,3],"new":[104,3],"picked":[1,0]}],"min-error":[0],"time":19.68994140625,"type":"prune"},{"compiler":[[24,11]],"locations":[["(cbrt.f64 a)",0.0703125,false],["(cbrt.f64 g)",0.078125,true],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))",0.25,true],["(/.f64 (cbrt.f64 g) (cbrt.f64 a))",0.30859375,true]],"time":5.85400390625,"type":"localize"},{"count":[[3,0]],"series":[["(cbrt.f64 g)","g","-inf",0.719970703125],["(cbrt.f64 g)","g","inf",0.1650390625],["(cbrt.f64 g)","g","0",0.18798828125],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","a","-inf",0.490234375],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","a","inf",0.510009765625],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","a","0",0.343994140625],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","g","-inf",0.43701171875],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","g","inf",0.321044921875],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","g","0",0.496826171875],["(/.f64 (cbrt.f64 g) (cbrt.f64 a))","a","-inf",0.528076171875],["(/.f64 (cbrt.f64 g) (cbrt.f64 a))","a","inf",0.240966796875],["(/.f64 (cbrt.f64 g) (cbrt.f64 a))","a","0",0.2109375],["(/.f64 (cbrt.f64 g) (cbrt.f64 a))","g","-inf",0.34912109375],["(/.f64 (cbrt.f64 g) (cbrt.f64 a))","g","inf",0.2470703125],["(/.f64 (cbrt.f64 g) (cbrt.f64 a))","g","0",0.281982421875]],"time":5.68994140625,"type":"series"},{"count":[[3,171]],"inputs":[["(/.f64 (cbrt.f64 g) (cbrt.f64 a))","(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","(cbrt.f64 g)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 g a)) 0) (cbrt.f64 (/.f64 g a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 g a)) (*.f64 (cbrt.f64 (/.f64 g a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 g a))) (cbrt.f64 (/.f64 g a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 g a)) (*.f64 0 (cbrt.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 a))) (cbrt.f64 (neg.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (/.f64 (pow.f64 g 2/3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 g)) (neg.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))) (cbrt.f64 (pow.f64 (/.f64 g a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 g a) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -1/3)) (cbrt.f64 (/.f64 g (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 g a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 g 2/3) a)) (cbrt.f64 (cbrt.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 g a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g (pow.f64 a 2/3))) (cbrt.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (cbrt.f64 (neg.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a)))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 g a) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -1/3)) (cbrt.f64 g)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))) (cbrt.f64 (pow.f64 g 2/3))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 g a) 2/3)) (cbrt.f64 (cbrt.f64 g))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 g a) 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 g)))) (cbrt.f64 (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g (pow.f64 a 2/3))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (pow.f64 (/.f64 g a) 2/3))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 g))) (cbrt.f64 (pow.f64 (/.f64 g a) 2/3))) (cbrt.f64 (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g a)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g a)) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 g) -1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (/.f64 g a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (cbrt.f64 (cbrt.f64 (pow.f64 a 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) 1) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a)))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 g a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 g a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 g a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2)) 0) (cbrt.f64 (/.f64 (/.f64 g a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2)) (*.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (/.f64 g a) 2))) (cbrt.f64 (/.f64 (/.f64 g a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2)) (*.f64 0 (cbrt.f64 (/.f64 (/.f64 g a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (/.f64 (/.f64 g a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 -2)) (cbrt.f64 (/.f64 (/.f64 g a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 g a) 2) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 g a) 2) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 g a) 2/3) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 g a))) (neg.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) (/.f64 (cbrt.f64 1/2) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 g a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (/.f64 g a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (/.f64 g a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 1/2)) (cbrt.f64 (neg.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 g a) 2/3) 1/2)) (cbrt.f64 (cbrt.f64 (/.f64 g a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 g a) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/2) (cbrt.f64 a)) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))) (cbrt.f64 (/.f64 g (cbrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2)) (neg.f64 (pow.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 2))) (cbrt.f64 (/.f64 1 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 g)) (/.f64 1 (neg.f64 (cbrt.f64 (*.f64 a 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g 1/2)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) -1) (*.f64 (cbrt.f64 (pow.f64 a 2/3)) (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) 1) (*.f64 (cbrt.f64 (pow.f64 a 2/3)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (cbrt.f64 (cbrt.f64 1/2))) (*.f64 (cbrt.f64 (pow.f64 a 2/3)) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (*.f64 (cbrt.f64 a) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (cbrt.f64 1/2))) (*.f64 (cbrt.f64 (neg.f64 a)) (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (/.f64 g (cbrt.f64 a)))) (*.f64 (cbrt.f64 -2) (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (/.f64 g (cbrt.f64 a)))) (*.f64 (cbrt.f64 (cbrt.f64 4)) (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (neg.f64 g))) (*.f64 (cbrt.f64 (cbrt.f64 4)) (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 g)) (*.f64 (cbrt.f64 (cbrt.f64 4)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (neg.f64 (neg.f64 (cbrt.f64 (*.f64 a 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (/.f64 g a))) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 2))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (cbrt.f64 (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (neg.f64 (cbrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (/.f64 g a))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 g a) 2) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))))) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 g a) 2) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 g a)))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (pow.f64 a -1/3)) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 g (cbrt.f64 a)))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2))) (cbrt.f64 (pow.f64 (/.f64 g a) 2/3))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 2))) 1) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2)) 1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 g 1/2)) 1) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 g) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 g)) (neg.f64 (cbrt.f64 1/2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 g) (neg.f64 (cbrt.f64 1/2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a)))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 g a) 2) 2/3))) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 g a))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 g a) 2) 2/3))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (*.f64 (pow.f64 (/.f64 g a) 2/3) 1/2))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 g))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 g a) 2/3) 1/2))) (cbrt.f64 (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (cbrt.f64 1/2)) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 2))) 1) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 2))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (cbrt.f64 a))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) -1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) 1) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (pow.f64 a 2/3))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (neg.f64 (/.f64 g a))) (cbrt.f64 (cbrt.f64 2))) (neg.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2)) (cbrt.f64 (cbrt.f64 (neg.f64 a)))) (cbrt.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2)) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2)) 1) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2)) -1) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g a)) -1) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (/.f64 (neg.f64 (cbrt.f64 (*.f64 a 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (/.f64 (cbrt.f64 (*.f64 a 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (*.f64 (cbrt.f64 (*.f64 a 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (*.f64 (neg.f64 (cbrt.f64 (*.f64 a 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (*.f64 (cbrt.f64 a) (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (*.f64 (cbrt.f64 (neg.f64 a)) (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g (cbrt.f64 a))) (*.f64 (cbrt.f64 2) (cbrt.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (*.f64 (cbrt.f64 -2) (cbrt.f64 (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (*.f64 (cbrt.f64 -2) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 2)))) (neg.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 g a) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 g a) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (/.f64 g a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 g a) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 g a))) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 1/2) (cbrt.f64 (neg.f64 (/.f64 g a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (/.f64 g a) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 g) 0) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 g) (*.f64 (cbrt.f64 g) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 g)) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 g) (*.f64 0 (cbrt.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (pow.f64 g 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 g 2/3)) (cbrt.f64 (cbrt.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 g)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 g))) (neg.f64 (cbrt.f64 (pow.f64 g 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 g))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 g)) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 g) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 g) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 g 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 g)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 g) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 g)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 g)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 g)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 g)))))"]],"rules":[["egg-rr",24],["egg-rr",98],["egg-rr",49]],"time":30.276123046875,"type":"rewrite"},{"count":[[171,171]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"time":27.736083984375,"type":"simplify"},{"compiler":[[2281,1343]],"time":28.5498046875,"type":"eval"},{"alts":[["(/.f64 (cbrt.f64 g) (cbrt.f64 (*.f64 a 2)))","fresh",0.40072250976844204],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","done",0.3792763183790942],["(*.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (/.f64 1 a)))","fresh",0.391288769536884],["(/.f64 (/.f64 (/.f64 (/.f64 (cbrt.f64 g) 1/3) 3) (cbrt.f64 a)) (cbrt.f64 2))","fresh",0.4899788574528623],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","next",0.3662300293053261],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","done",17.325554927748072]],"compiler":[[9,7],[10,8],[11,9],[14,12],[15,13],[8,6],[9,7],[11,9],[14,12],[15,13]],"count":[[198,6]],"kept":[{"done":[1,1],"fresh":[5,2],"new":[191,2],"picked":[1,1]}],"min-error":[0],"time":45.56298828125,"type":"prune"},{"compiler":[[49,40]],"locations":[["(cbrt.f64 (/.f64 g (cbrt.f64 2)))",0.12109375,true],["(cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4)))",0.1328125,true],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))",0.3359375,true],["(/.f64 (/.f64 1 a) (cbrt.f64 4))",0.42416000976844204,true]],"time":14.05810546875,"type":"localize"},{"count":[[4,12]],"series":[["(cbrt.f64 (/.f64 g (cbrt.f64 2)))","g","-inf",0.212890625],["(cbrt.f64 (/.f64 g (cbrt.f64 2)))","g","inf",0.212890625],["(cbrt.f64 (/.f64 g (cbrt.f64 2)))","g","0",0.225830078125],["(cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4)))","a","-inf",0.197998046875],["(cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4)))","a","inf",0.200927734375],["(cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4)))","a","0",0.18408203125],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","a","-inf",0.31201171875],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","a","inf",0.2509765625],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","a","0",0.321044921875],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","g","-inf",0.2470703125],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","g","inf",0.293212890625],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","g","0",0.977783203125],["(/.f64 (/.f64 1 a) (cbrt.f64 4))","a","-inf",0.31298828125],["(/.f64 (/.f64 1 a) (cbrt.f64 4))","a","inf",0.342041015625],["(/.f64 (/.f64 1 a) (cbrt.f64 4))","a","0",1.612060546875]],"time":6.076904296875,"type":"series"},{"count":[[4,215]],"inputs":[["(/.f64 (/.f64 1 a) (cbrt.f64 4))","(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","(cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4)))","(cbrt.f64 (/.f64 g (cbrt.f64 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (cbrt.f64 1/4) a) 0) (/.f64 (cbrt.f64 1/4) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (cbrt.f64 1/4) a) (*.f64 (/.f64 (cbrt.f64 1/4) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (cbrt.f64 1/4) a)) (/.f64 (cbrt.f64 1/4) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (cbrt.f64 1/4) a) (*.f64 0 (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (cbrt.f64 1/4) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 4)) (/.f64 (cbrt.f64 1/4) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 -4)) (/.f64 (cbrt.f64 1/4) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cbrt.f64 1/4) a) (/.f64 0 (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 a (cbrt.f64 4))) (/.f64 (cbrt.f64 1/4) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (neg.f64 a) (cbrt.f64 4))) (/.f64 (cbrt.f64 1/4) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (cbrt.f64 1/4) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) (neg.f64 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (neg.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (cbrt.f64 (*.f64 (pow.f64 a -2) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (cbrt.f64 1/4) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/4) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/4)) (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 a -2) 1/4)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/4) (neg.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16))) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 1/4)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 a -3) (cbrt.f64 4))) (/.f64 1 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (cbrt.f64 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/4) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 a) (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 2))) (cbrt.f64 (*.f64 (cbrt.f64 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 a (cbrt.f64 4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/3 (/.f64 (*.f64 a (cbrt.f64 4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (neg.f64 a) (cbrt.f64 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 a) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 1/4)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 a) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 a (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 a -3) (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (/.f64 (cbrt.f64 (pow.f64 a -2)) (cbrt.f64 (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3) (neg.f64 (pow.f64 a -1/3))) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/4) (pow.f64 a -1/3)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 1/4) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (/.f64 1 a)) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -1/3)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 a -2)) (cbrt.f64 (cbrt.f64 4))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 a -1/3)) (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 a -2) 1/4)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (*.f64 (pow.f64 a -2) 1/4))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16))) 1) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 a -3) (cbrt.f64 4))) 1) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 1/4)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 a -1/3) (cbrt.f64 1/4)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 a -3) (cbrt.f64 4))) 1) (cbrt.f64 (cbrt.f64 16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 a -3) (cbrt.f64 4))) (cbrt.f64 (cbrt.f64 (cbrt.f64 16)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 16)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 a) (cbrt.f64 (cbrt.f64 4))) (neg.f64 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 1/4) (pow.f64 a 2/3)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 1/4) (cbrt.f64 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 1/4) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16))) 1) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16))) (cbrt.f64 (cbrt.f64 2))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (cbrt.f64 1/4)) (cbrt.f64 (neg.f64 a))) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (cbrt.f64 1/4)) -1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (cbrt.f64 1/4)) (cbrt.f64 a)) (neg.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 a) (cbrt.f64 2)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 a) -1) (cbrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (neg.f64 a) (cbrt.f64 4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 a (cbrt.f64 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16)))) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (neg.f64 (*.f64 (neg.f64 a) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (pow.f64 a -3) (cbrt.f64 4)))) (neg.f64 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 1/4) a)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 a -3) 1/4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (cbrt.f64 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 1/4) a) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 1/4) a) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 1/4) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cbrt.f64 1/4) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (cbrt.f64 1/4) (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 a) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 1/4) (/.f64 -1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 a -3) 1/4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a))) 0) (cbrt.f64 (*.f64 g (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a))) (*.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))) (cbrt.f64 (*.f64 g (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a))) (*.f64 0 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 (*.f64 g (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3) (/.f64 (cbrt.f64 1/4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3) (*.f64 g (cbrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3) (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3) (*.f64 g (cbrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/4)) a)) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))) (cbrt.f64 (pow.f64 (*.f64 g (/.f64 1/2 a)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 g (/.f64 1/2 a)) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 g (cbrt.f64 1/2)) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))) (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (cbrt.f64 1/4) a) (cbrt.f64 (*.f64 g (cbrt.f64 1/2))))) (cbrt.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 g (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3)) (cbrt.f64 (*.f64 (/.f64 (cbrt.f64 1/4) a) (cbrt.f64 (*.f64 g (cbrt.f64 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (cbrt.f64 (*.f64 (*.f64 g (cbrt.f64 1/2)) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/2)) a)) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) (cbrt.f64 (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3) (/.f64 (cbrt.f64 1/4) a)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 (sqrt.f64 2))) (cbrt.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (/.f64 g a))) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 g a)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/2)) a)) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/4)) a)) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (cbrt.f64 (neg.f64 g))) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) (neg.f64 (pow.f64 a -1/3))) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -1/3)) (cbrt.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3) (*.f64 g (cbrt.f64 1/2))))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 a -1/3)) (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/4)) a)) 1) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/2)) a)) 1) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 g a)) 1) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/2)) a)) (cbrt.f64 (cbrt.f64 (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/2)) a)) 1) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/2)) a)) (cbrt.f64 (cbrt.f64 2))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g a)) -1) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 g a)) 1) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/4)) a)) 1) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/4)) a)) (cbrt.f64 (cbrt.f64 (cbrt.f64 2)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 g a))) (cbrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/2)) a))) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 g (cbrt.f64 1/4)) a))) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 g a) (cbrt.f64 -4))) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 g (cbrt.f64 -2)) a)) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 g (/.f64 1/2 a)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (*.f64 g (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 g (/.f64 1/2 a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) 0) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (*.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) (*.f64 0 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (cbrt.f64 1/4) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/4)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) (neg.f64 a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (cbrt.f64 (neg.f64 (cbrt.f64 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 1/4))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -1/3)) (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 a -2) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (cbrt.f64 (*.f64 (neg.f64 a) (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 a -1/3)) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 a -1/3) (cbrt.f64 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3)) (cbrt.f64 (pow.f64 a -1/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 a -1/3)) (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 1/4) a) 2/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 a -1/3)) 1) (cbrt.f64 (cbrt.f64 -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 1/4)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (cbrt.f64 1/4))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 a -1/3) (cbrt.f64 (cbrt.f64 (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 a -1/3) (cbrt.f64 (cbrt.f64 2))) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 16)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 a -3) (cbrt.f64 4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (*.f64 a (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 1/4) a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (cbrt.f64 1/4) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (cbrt.f64 1/4) a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) 0) (cbrt.f64 (*.f64 g (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) (*.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))) (cbrt.f64 (*.f64 g (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) (*.f64 0 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))) (cbrt.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3)) (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (neg.f64 (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (cbrt.f64 (*.f64 (*.f64 g g) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 g) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 g (cbrt.f64 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 g (cbrt.f64 -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 g))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (*.f64 g (cbrt.f64 (cbrt.f64 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3)) (cbrt.f64 (cbrt.f64 g))) (cbrt.f64 (cbrt.f64 (cbrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 g)) (cbrt.f64 (pow.f64 (*.f64 g (cbrt.f64 1/2)) 2/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 g) (cbrt.f64 (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g (cbrt.f64 (cbrt.f64 1/4)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 g)) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 g)) 1) (cbrt.f64 (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 (cbrt.f64 (cbrt.f64 2)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 g (cbrt.f64 (cbrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 (cbrt.f64 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 g (cbrt.f64 1/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 g (cbrt.f64 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 g (cbrt.f64 1/2)))))))"]],"rules":[["egg-rr",32],["egg-rr",37],["egg-rr",58],["egg-rr",88]],"time":37.5380859375,"type":"rewrite"},{"count":[[227,215]],"inputs":[["(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 1 (*.f64 a (cbrt.f64 4)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)","(/.f64 1 (*.f64 a (cbrt.f64 4)))","(/.f64 (cbrt.f64 1/4) a)"]],"time":75.735107421875,"type":"simplify"},{"compiler":[[3426,2857]],"time":53.580810546875,"type":"eval"},{"alts":[["(/.f64 (cbrt.f64 g) (cbrt.f64 (*.f64 a 2)))","fresh",0.40072250976844204],["(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","done",0.3792763183790942],["(*.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (/.f64 1 a)))","fresh",0.391288769536884],["(*.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","fresh",0.3756637695368841],["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 2))) (cbrt.f64 (*.f64 (cbrt.f64 4) 2)))))","fresh",0.40986254884221013],["(cbrt.f64 (/.f64 g (*.f64 2 a)))","done",17.325554927748072]],"compiler":[[9,7],[10,8],[11,9],[15,13],[22,20],[8,6]],"count":[[221,6]],"kept":[{"done":[2,2],"fresh":[3,2],"new":[215,2],"picked":[1,0]}],"min-error":[0],"time":46.843994140625,"type":"prune"},{"accuracy":[0.366230029305326],"baseline":[0.3662300293053261],"branch":[["g",0.3662300293053261,1],["a",0.36623002930532605,1],["(cbrt.f64 (/.f64 g (*.f64 2 a)))",0.366230029305326,1],["(/.f64 g (*.f64 2 a))",0.366230029305326,1],["(*.f64 2 a)",0.36623002930532605,1]],"compiler":[[3,2],[3,2],[8,6],[7,5],[5,4],[142,105]],"count":[[14,1]],"inputs":[["(*.f64 (cbrt.f64 (*.f64 g (cbrt.f64 1/2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 (/.f64 1 a) (cbrt.f64 (cbrt.f64 2))) (cbrt.f64 (*.f64 (cbrt.f64 4) 2)))))","(/.f64 (/.f64 (/.f64 (/.f64 (cbrt.f64 g) 1/3) 3) (cbrt.f64 a)) (cbrt.f64 2))","(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","(/.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (cbrt.f64 (*.f64 (cbrt.f64 1/4) g))) (cbrt.f64 a))","(/.f64 (cbrt.f64 g) (cbrt.f64 (*.f64 a 2)))","(/.f64 (*.f64 (cbrt.f64 (*.f64 g (sqrt.f64 1/2))) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 a))","(*.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 (/.f64 1 a)))","(/.f64 (cbrt.f64 g) (cbrt.f64 (+.f64 a a)))","(/.f64 (cbrt.f64 (*.f64 g 1/2)) (cbrt.f64 a))","(*.f64 (cbrt.f64 g) (cbrt.f64 (/.f64 1/2 a)))","(/.f64 (/.f64 (cbrt.f64 g) (cbrt.f64 a)) (cbrt.f64 2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 g a)))","(cbrt.f64 (/.f64 g (*.f64 2 a)))"]],"link":["."],"name":["2-ancestry mixing, zero discriminant"],"oracle":[18.01711391219069],"outputs":[["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))"]],"time":28.35400390625,"times":[["g",5.425048828125],["a",5.30615234375],["(cbrt.f64 (/.f64 g (*.f64 2 a)))",4.454833984375],["(/.f64 g (*.f64 2 a))",4.56201171875],["(*.f64 2 a)",5.298095703125]],"type":"regimes"},{"compiler":[[15,13]],"inputs":[["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cbrt.f64 (/.f64 g (cbrt.f64 2))) (cbrt.f64 (/.f64 (/.f64 1 a) (cbrt.f64 4))))","(cbrt.f64 (*.f64 g (/.f64 1/2 a)))"]],"stop":[["fuel",1]],"time":19.5009765625,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[15,13]],"remove-preprocessing":[[]],"time":10.305908203125,"type":"end"}]