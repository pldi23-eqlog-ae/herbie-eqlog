[{"compiler":[[18,13]],"method":["search"],"sampling":[[12,0.12280672503494106,0.8128635609455622,0.06432971401949672],[11,0.11695878574756291,0.8810895192983073,0.0019516949541298345],[10,0.023391757149512582,0.9746565478963576,0.0019516949541298345],[9,0.015594504766341721,0.9824538002795284,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":199.27685546875,"type":"analyze"},{"outcomes":[["body",512,"invalid",31.295166015625,254],["body",8192,"exit",836.71240234375,1562],["body",256,"invalid",122.30029296875,2076],["body",1024,"invalid",41.217529296875,200],["body",512,"valid",223.229736328125,1395],["body",1024,"valid",548.6591796875,1799],["body",2048,"valid",188.5146484375,304],["body",256,"valid",387.417236328125,4758]],"time":2392.93310546875,"type":"sample"},{"compiler":[[17,12]],"inputs":[["0","1","2","3"],["(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t))","(-.f64 y (/.f64 (log.f64 (+.f64 (-.f64 1 x) (*.f64 x (exp.f64 z)))) t))","(-.f64 z (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 x)))) t))","(-.f64 t (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) x))","(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 z) (*.f64 z (exp.f64 y)))) t))","(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 t) (*.f64 t (exp.f64 z)))) y))","(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 t)))) z))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t))","(-.f64 x (/.f64 (log.f64 (fma.f64 y (exp.f64 z) (-.f64 1 y))) t))","(-.f64 y (/.f64 (log.f64 (+.f64 (-.f64 1 x) (*.f64 x (exp.f64 z)))) t))","(-.f64 y (/.f64 (log.f64 (fma.f64 x (exp.f64 z) (-.f64 1 x))) t))","(-.f64 z (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 x)))) t))","(-.f64 z (/.f64 (log.f64 (fma.f64 y (exp.f64 x) (-.f64 1 y))) t))","(-.f64 t (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) x))","(-.f64 t (/.f64 (log.f64 (fma.f64 y (exp.f64 z) (-.f64 1 y))) x))","(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 z) (*.f64 z (exp.f64 y)))) t))","(-.f64 x (/.f64 (log.f64 (fma.f64 z (exp.f64 y) (-.f64 1 z))) t))","(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 t) (*.f64 t (exp.f64 z)))) y))","(-.f64 x (/.f64 (log.f64 (fma.f64 t (exp.f64 z) (-.f64 1 t))) y))","(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 t)))) z))","(-.f64 x (/.f64 (log.f64 (fma.f64 y (exp.f64 t) (-.f64 1 y))) z))"]],"symmetry":[[]],"time":74.375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t))","(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))"]],"time":21.593017578125,"type":"simplify"},{"compiler":[[28,17]],"time":0.427001953125,"type":"eval"},{"alts":[["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","next",12.539671347618338]],"compiler":[[15,10],[15,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[12.539671347618338],"time":0.9189453125,"type":"prune"},{"compiler":[[45,10]],"locations":[["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))",0.0078125,true],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)",0.05078125,true],["(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))",0.2420601646940865,true],["(fma.f64 y (exp.f64 z) (neg.f64 y))",3.790388660271367,true]],"time":7.759033203125,"type":"localize"},{"count":[[4,132]],"series":[["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","t","-inf",0.2041015625],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","t","inf",0.173828125],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","t","0",0.197021484375],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","z","-inf",0.212890625],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","z","inf",0.20703125],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","z","0",0.309814453125],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","y","-inf",0.43603515625],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","y","inf",0.428955078125],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","y","0",0.305908203125],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","x","-inf",0.214111328125],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","x","inf",0.2470703125],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","x","0",1.26416015625],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","t","-inf",0.335205078125],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","t","inf",4.60693359375],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","t","0",10.27490234375],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","z","-inf",0.34814453125],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","z","inf",0.360107421875],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","z","0",0.613037109375],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","y","-inf",0.487060546875],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","y","inf",0.465087890625],["(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","y","0",0.4169921875],["(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))","z","-inf",11.85302734375],["(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))","z","inf",16.552001953125],["(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))","z","0",0.64306640625],["(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))","y","-inf",0.72900390625],["(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))","y","inf",0.4638671875],["(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))","y","0",0.514892578125],["(fma.f64 y (exp.f64 z) (neg.f64 y))","z","-inf",0.327880859375],["(fma.f64 y (exp.f64 z) (neg.f64 y))","z","inf",0.468994140625],["(fma.f64 y (exp.f64 z) (neg.f64 y))","z","0",0.364990234375],["(fma.f64 y (exp.f64 z) (neg.f64 y))","y","-inf",0.52197265625],["(fma.f64 y (exp.f64 z) (neg.f64 y))","y","inf",0.403076171875],["(fma.f64 y (exp.f64 z) (neg.f64 y))","y","0",0.476806640625]],"time":55.950927734375,"type":"series"},{"count":[[4,178]],"inputs":[["(fma.f64 y (exp.f64 z) (neg.f64 y))","(log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))","(/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)","(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 0) (fma.f64 y (exp.f64 z) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) (*.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 y (exp.f64 z) (neg.f64 y))) (fma.f64 y (exp.f64 z) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) (*.f64 0 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (exp.f64 z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 y) (*.f64 y (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 y (exp.f64 z) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 y (*.f64 y (exp.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 y (exp.f64 z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 (pow.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 2)) (cbrt.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 y (exp.f64 z) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (+.f64 (neg.f64 (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 (*.f64 y y)) (exp.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (+.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (exp.f64 z)) (neg.f64 (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (-.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (exp.f64 z)) (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (+.f64 -1 (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (+.f64 (exp.f64 z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (-.f64 (exp.f64 z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 y (*.f64 y (exp.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 (exp.f64 z))) (cbrt.f64 (exp.f64 (+.f64 z z))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y (exp.f64 z))) (cbrt.f64 (pow.f64 (*.f64 y (exp.f64 z)) 2)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (exp.f64 z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (*.f64 y y)) (*.f64 y (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (neg.f64 y)) (*.f64 y (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (neg.f64 (cbrt.f64 (*.f64 y y))) (*.f64 y (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (exp.f64 z) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (exp.f64 z)) 1 (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 y (exp.f64 z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 z) y (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 y (*.f64 y (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 y) (*.f64 y (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) 1 (*.f64 y (exp.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y -1 (*.f64 y (exp.f64 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 0) (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (*.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (*.f64 0 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))) (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) -1) (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) -1) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (+.f64 1 (fma.f64 y (exp.f64 z) (neg.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 0) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) (*.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) (*.f64 0 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))) 1) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 (cbrt.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2))) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t -2)) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) -1) (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) (cbrt.f64 t)) (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) -1) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 t -2))) (/.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) t) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) -1) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (cbrt.f64 (*.f64 t t))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2)) (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) t) (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 (pow.f64 t -2))) (cbrt.f64 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2)) (neg.f64 (cbrt.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) 2))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2)) (cbrt.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2)) (cbrt.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 (pow.f64 t -2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 0) (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (*.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))) (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (*.f64 0 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x))) (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2)) (cbrt.f64 (*.f64 (/.f64 x t) (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))) (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 2)) (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y)))) (/.f64 1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)))))))"]],"rules":[["egg-rr",46],["egg-rr",59],["egg-rr",29],["egg-rr",44]],"time":41.37890625,"type":"rewrite"},{"count":[[310,286]],"inputs":[["(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 1/2 (*.f64 y (pow.f64 z 2))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 z 2))) (*.f64 1/6 (*.f64 y (pow.f64 z 3)))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 z 2))) (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 z 4))) (*.f64 1/6 (*.f64 y (pow.f64 z 3))))))","(-.f64 (*.f64 (exp.f64 z) y) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(+.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) (*.f64 -1/2 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2))))","(+.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 4) (pow.f64 y 4))) (+.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3))))))","(+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (*.f64 -1 (log.f64 (/.f64 1 y))))","(+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (+.f64 (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) y)) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(-.f64 (+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (+.f64 (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) y)) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)))))","(-.f64 (+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (+.f64 (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) y)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)))) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)))))","(+.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) (*.f64 -1 (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z))))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))))) (+.f64 (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))))) (+.f64 (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2)))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 3)))))))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 1/2 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 y (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3))) (*.f64 1/2 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 y (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y))) (*.f64 1/24 (*.f64 (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 y (+.f64 (*.f64 12 (pow.f64 y 3)) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 -6 (pow.f64 y 4)))))) (pow.f64 z 4))))))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)","(+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)) t)) (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 4) (pow.f64 y 4)) t)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)) t)) (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)))))","(/.f64 (+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t)))))","(-.f64 (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))))","(-.f64 (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (*.f64 (pow.f64 y 3) t)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))))","(/.f64 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) (*.f64 -1 (log.f64 (/.f64 -1 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)) (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)) (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)) (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 3))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))))))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) t)) (/.f64 (*.f64 y z) t)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) t)) (+.f64 (/.f64 (*.f64 y z) t) (*.f64 1/24 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 (*.f64 12 (pow.f64 y 3)) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 -6 (pow.f64 y 4)))))) (pow.f64 z 4)) t)))))","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","x","(+.f64 (*.f64 y (-.f64 (/.f64 1 t) (/.f64 (exp.f64 z) t))) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)) (+.f64 (*.f64 y (-.f64 (/.f64 1 t) (/.f64 (exp.f64 z) t))) x))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)) (+.f64 (*.f64 y (-.f64 (/.f64 1 t) (/.f64 (exp.f64 z) t))) x)))","(-.f64 x (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t))))","(-.f64 x (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))) x) (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))) x) (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (*.f64 (pow.f64 y 3) t)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t)))))))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) x) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))) x)) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 3))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))) x))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) x)))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 (expm1.f64 z) y)","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 (expm1.f64 z) y)","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 (expm1.f64 z) y)","(*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z)))))","(*.f64 (expm1.f64 z) y)","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 1/2 (*.f64 y (pow.f64 z 2))))","(fma.f64 y z (*.f64 (*.f64 1/2 y) (*.f64 z z)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 z 2))) (*.f64 1/6 (*.f64 y (pow.f64 z 3)))))","(fma.f64 y z (fma.f64 1/2 (*.f64 y (*.f64 z z)) (*.f64 (*.f64 1/6 y) (pow.f64 z 3))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/2 (*.f64 y (pow.f64 z 2))) (+.f64 (*.f64 1/24 (*.f64 y (pow.f64 z 4))) (*.f64 1/6 (*.f64 y (pow.f64 z 3))))))","(fma.f64 y z (fma.f64 1/2 (*.f64 y (*.f64 z z)) (fma.f64 1/24 (*.f64 y (pow.f64 z 4)) (*.f64 (*.f64 1/6 y) (pow.f64 z 3)))))","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(-.f64 (*.f64 (exp.f64 z) y) y)","(*.f64 (expm1.f64 z) y)","(*.f64 (-.f64 (exp.f64 z) 1) y)","(*.f64 (expm1.f64 z) y)","(+.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) (*.f64 -1/2 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2))))","(fma.f64 (expm1.f64 z) y (*.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2)))","(+.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)))))","(fma.f64 (expm1.f64 z) y (fma.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2) (*.f64 1/3 (pow.f64 (*.f64 (expm1.f64 z) y) 3))))","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 4) (pow.f64 y 4))) (+.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3))))))","(fma.f64 -1/4 (pow.f64 (*.f64 (expm1.f64 z) y) 4) (fma.f64 (expm1.f64 z) y (fma.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2) (*.f64 1/3 (pow.f64 (*.f64 (expm1.f64 z) y) 3)))))","(+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (*.f64 -1 (log.f64 (/.f64 1 y))))","(+.f64 (log.f64 (expm1.f64 z)) (log.f64 y))","(+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (+.f64 (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) y)) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (log.f64 y) (+.f64 (log.f64 (expm1.f64 z)) (/.f64 1 (*.f64 (expm1.f64 z) y))))","(-.f64 (+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (+.f64 (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) y)) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)))))","(+.f64 (+.f64 (log.f64 y) (+.f64 (log.f64 (expm1.f64 z)) (/.f64 1 (*.f64 (expm1.f64 z) y)))) (/.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2)))","(-.f64 (+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (+.f64 (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) y)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)))) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)))))","(+.f64 (+.f64 (+.f64 (log.f64 (expm1.f64 z)) (fma.f64 1/3 (pow.f64 (*.f64 (expm1.f64 z) y) (neg.f64 3)) (log.f64 y))) (/.f64 1 (*.f64 (expm1.f64 z) y))) (/.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2)))","(+.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) (*.f64 -1 (log.f64 (/.f64 -1 y))))","(-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z))))))","(-.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) (/.f64 -1 (*.f64 (expm1.f64 z) y)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))))) (+.f64 (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))))","(+.f64 (-.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) (/.f64 -1 (*.f64 (expm1.f64 z) y))) (/.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))))) (+.f64 (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 (exp.f64 z))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2)))) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 3)))))))","(-.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) (+.f64 (/.f64 -1 (*.f64 (expm1.f64 z) y)) (fma.f64 1/2 (pow.f64 (*.f64 (expm1.f64 z) y) (neg.f64 2)) (/.f64 1/3 (pow.f64 (*.f64 (neg.f64 y) (expm1.f64 z)) 3)))))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 1/2 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y))))","(fma.f64 y z (*.f64 (*.f64 1/2 (*.f64 z z)) (-.f64 y (*.f64 y y))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 y (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3))) (*.f64 1/2 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)))))","(fma.f64 y z (fma.f64 1/6 (*.f64 (+.f64 y (fma.f64 -3 (*.f64 y y) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) (*.f64 (*.f64 1/2 (*.f64 z z)) (-.f64 y (*.f64 y y)))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 y (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y))) (*.f64 1/24 (*.f64 (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 y (+.f64 (*.f64 12 (pow.f64 y 3)) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 -6 (pow.f64 y 4)))))) (pow.f64 z 4))))))","(fma.f64 y z (fma.f64 1/6 (*.f64 (+.f64 y (fma.f64 -3 (*.f64 y y) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) (fma.f64 1/2 (*.f64 (*.f64 z z) (-.f64 y (*.f64 y y))) (*.f64 (*.f64 1/24 (fma.f64 -3 (*.f64 y y) (+.f64 y (fma.f64 12 (pow.f64 y 3) (fma.f64 -4 (*.f64 y y) (*.f64 -6 (pow.f64 y 4))))))) (pow.f64 z 4)))))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y))","(log1p.f64 (*.f64 (expm1.f64 z) y))","(/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)","(/.f64 (*.f64 (expm1.f64 z) y) t)","(+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)))","(/.f64 (fma.f64 (expm1.f64 z) y (*.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2))) t)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)) t)) (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t))))","(fma.f64 1/3 (/.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 3) t) (/.f64 (fma.f64 (expm1.f64 z) y (*.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2))) t))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 4) (pow.f64 y 4)) t)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)) t)) (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)))))","(+.f64 (/.f64 (+.f64 (*.f64 -1/4 (pow.f64 (*.f64 (expm1.f64 z) y) 4)) (*.f64 1/3 (pow.f64 (*.f64 (expm1.f64 z) y) 3))) t) (/.f64 (fma.f64 (expm1.f64 z) y (*.f64 -1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2))) t))","(/.f64 (+.f64 (log.f64 (-.f64 (exp.f64 z) 1)) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t)","(+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t)))))","(+.f64 (/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t))))","(-.f64 (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))))","(+.f64 (+.f64 (/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t)))) (/.f64 -1/2 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 2) t)))","(-.f64 (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (*.f64 (pow.f64 y 3) t)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))))","(+.f64 (+.f64 (+.f64 (/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t)))) (/.f64 1/3 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 3) t))) (/.f64 -1/2 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 2) t)))","(/.f64 (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) (*.f64 -1 (log.f64 (/.f64 -1 y)))) t)","(/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)) (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))))","(+.f64 (/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)) (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2)))))))","(+.f64 (+.f64 (/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t)))) (/.f64 -1/2 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 2) t)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)) (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 3))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))))))","(-.f64 (/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t) (+.f64 (/.f64 -1 (*.f64 (expm1.f64 z) (*.f64 y t))) (fma.f64 1/3 (/.f64 (pow.f64 (*.f64 (neg.f64 y) (expm1.f64 z)) (neg.f64 3)) t) (/.f64 1/2 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 2) t)))))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) (/.f64 (*.f64 y z) t))","(/.f64 (fma.f64 y z (*.f64 (*.f64 1/2 (*.f64 z z)) (-.f64 y (*.f64 y y)))) t)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) t)) (/.f64 (*.f64 y z) t)))","(+.f64 (/.f64 (fma.f64 y z (*.f64 (*.f64 1/2 (*.f64 z z)) (-.f64 y (*.f64 y y)))) t) (/.f64 (*.f64 (*.f64 1/6 (+.f64 y (fma.f64 -3 (*.f64 y y) (*.f64 2 (pow.f64 y 3))))) (pow.f64 z 3)) t))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) t)) (+.f64 (/.f64 (*.f64 y z) t) (*.f64 1/24 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (+.f64 (*.f64 12 (pow.f64 y 3)) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 -6 (pow.f64 y 4)))))) (pow.f64 z 4)) t)))))","(+.f64 (/.f64 (fma.f64 1/6 (*.f64 (+.f64 y (fma.f64 -3 (*.f64 y y) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) (*.f64 (*.f64 1/2 (*.f64 z z)) (-.f64 y (*.f64 y y)))) t) (/.f64 (+.f64 (*.f64 y z) (*.f64 (*.f64 1/24 (fma.f64 -3 (*.f64 y y) (+.f64 y (fma.f64 12 (pow.f64 y 3) (fma.f64 -4 (*.f64 y y) (*.f64 -6 (pow.f64 y 4))))))) (pow.f64 z 4))) t))","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)","(*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) (neg.f64 t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","x","(+.f64 (*.f64 y (-.f64 (/.f64 1 t) (/.f64 (exp.f64 z) t))) x)","(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)) (+.f64 (*.f64 y (-.f64 (/.f64 1 t) (/.f64 (exp.f64 z) t))) x))","(fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 2) t) (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (pow.f64 y 3)) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t)) (+.f64 (*.f64 y (-.f64 (/.f64 1 t) (/.f64 (exp.f64 z) t))) x)))","(+.f64 (/.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 (expm1.f64 z) y) 3)) (*.f64 1/2 (pow.f64 (*.f64 (expm1.f64 z) y) 2))) t) (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))","(-.f64 x (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t))))","(-.f64 x (/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t))","(-.f64 x (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t))))))","(-.f64 x (+.f64 (/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))) x) (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t))))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (expm1.f64 z) y) (neg.f64 2)) t) x) (+.f64 (/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (*.f64 (pow.f64 y 2) t)))) x) (+.f64 (/.f64 (log.f64 (-.f64 (exp.f64 z) 1)) t) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 3) (*.f64 (pow.f64 y 3) t)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (/.f64 1 (*.f64 (-.f64 (exp.f64 z) 1) (*.f64 y t)))))))","(-.f64 (-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (expm1.f64 z) y) (neg.f64 2)) t) x) (+.f64 (/.f64 (+.f64 (log.f64 (expm1.f64 z)) (log.f64 y)) t) (/.f64 1 (*.f64 (expm1.f64 z) (*.f64 y t))))) (/.f64 1/3 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 3) t)))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","(-.f64 x (/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) x) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","(-.f64 (+.f64 (/.f64 -1 (*.f64 (expm1.f64 z) (*.f64 y t))) x) (/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))) x)) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","(-.f64 (+.f64 (+.f64 (/.f64 -1 (*.f64 (expm1.f64 z) (*.f64 y t))) x) (/.f64 1/2 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 2) t))) (/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t (+.f64 1 (*.f64 -1 (exp.f64 z)))))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 3))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 (+.f64 1 (*.f64 -1 (exp.f64 z))) 2))))) x))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (+.f64 1 (*.f64 -1 (exp.f64 z)))) t)))","(-.f64 (+.f64 (+.f64 (+.f64 (/.f64 -1 (*.f64 (expm1.f64 z) (*.f64 y t))) x) (/.f64 1/2 (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 2) t))) (/.f64 (neg.f64 1/3) (*.f64 (pow.f64 (*.f64 (expm1.f64 z) y) 3) t))) (/.f64 (-.f64 (log.f64 (neg.f64 (expm1.f64 z))) (neg.f64 (log.f64 (neg.f64 y)))) t))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(-.f64 x (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) x))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 -1/2 (*.f64 (*.f64 z z) (-.f64 y (*.f64 y y))))) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (+.f64 y (+.f64 (*.f64 -3 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) y)) t)) x)))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 -1/6 (*.f64 (+.f64 y (fma.f64 -3 (*.f64 y y) (*.f64 2 (pow.f64 y 3)))) (pow.f64 z 3)))) t) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 z z) (-.f64 y (*.f64 y y))) t) x))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(-.f64 x (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t))","(/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) (neg.f64 t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (-.f64 (+.f64 1 (*.f64 (exp.f64 z) y)) y)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t))"]],"time":533.2451171875,"type":"simplify"},{"compiler":[[6170,2566]],"time":58.639892578125,"type":"eval"},{"alts":[["(-.f64 x (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t))))","fresh",21.245697830364318],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","fresh",11.480452237896245],["(fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x)","fresh",12.559202597618338],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","next",10.597757354484518],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","done",12.539671347618338]],"compiler":[[29,21],[12,8],[16,11],[12,8],[15,10],[29,21],[12,8],[16,11],[12,8]],"count":[[287,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[286,4],"picked":[1,1]}],"min-error":[0.02734375],"time":134.80322265625,"type":"prune"},{"compiler":[[25,8]],"locations":[["(/.f64 (expm1.f64 z) (neg.f64 t))",0.00390625,true],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)",0.7165255100343972,true]],"time":5.77783203125,"type":"localize"},{"count":[[2,72]],"series":[["(/.f64 (expm1.f64 z) (neg.f64 t))","t","-inf",0.155029296875],["(/.f64 (expm1.f64 z) (neg.f64 t))","t","inf",0.31201171875],["(/.f64 (expm1.f64 z) (neg.f64 t))","t","0",0.300048828125],["(/.f64 (expm1.f64 z) (neg.f64 t))","z","-inf",0.15380859375],["(/.f64 (expm1.f64 z) (neg.f64 t))","z","inf",0.162109375],["(/.f64 (expm1.f64 z) (neg.f64 t))","z","0",0.316162109375],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","x","-inf",0.251953125],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","x","inf",0.18505859375],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","x","0",10.153076171875],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","t","-inf",0.283935546875],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","t","inf",0.406982421875],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","t","0",0.46484375],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","z","-inf",0.72314453125],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","z","inf",0.73388671875],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","z","0",0.373046875],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","y","-inf",0.300048828125],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","y","inf",0.23193359375],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","y","0",0.6650390625]],"time":16.43017578125,"type":"series"},{"count":[[2,103]],"inputs":[["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","(/.f64 (expm1.f64 z) (neg.f64 t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) (*.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 0) (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) (*.f64 0 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 2/3) (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (*.f64 (pow.f64 y 2/3) (expm1.f64 z)) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (expm1.f64 z)) (/.f64 -1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 t) (exp.f64 z)) (*.f64 (/.f64 -1 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) (*.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 0) (/.f64 (expm1.f64 z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) (*.f64 0 (/.f64 (expm1.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (expm1.f64 z) (neg.f64 t))) (/.f64 (expm1.f64 z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (*.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 -1 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (*.f64 (cbrt.f64 (/.f64 1 t)) (pow.f64 (cbrt.f64 (neg.f64 t)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (*.f64 (cbrt.f64 (/.f64 1 t)) (pow.f64 (cbrt.f64 (/.f64 -1 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 t) (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3) (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 z)) (/.f64 (pow.f64 (expm1.f64 z) 2/3) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (/.f64 (pow.f64 (expm1.f64 z) 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 z) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (expm1.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 (expm1.f64 z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (expm1.f64 z) 2/3) (neg.f64 t)) (cbrt.f64 (expm1.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (expm1.f64 z) 2/3) t) (cbrt.f64 (neg.f64 (expm1.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) (cbrt.f64 (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) (pow.f64 (cbrt.f64 (neg.f64 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (expm1.f64 z)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (neg.f64 (expm1.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (expm1.f64 z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 z) t) t) (*.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 z) (pow.f64 t 2/3)) (*.f64 (neg.f64 t) (cbrt.f64 (/.f64 -1 t)))) (*.f64 (neg.f64 t) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) -1) (*.f64 (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) 1) (*.f64 (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) (cbrt.f64 (/.f64 -1 t))) (*.f64 (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1)) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t)))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (exp.f64 (*.f64 z 3)) -1)) (*.f64 t (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 t)) (+.f64 (exp.f64 (*.f64 z 3)) -1)) (*.f64 (pow.f64 t 2/3) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) (*.f64 (neg.f64 t) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) -1) (*.f64 (pow.f64 t 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t)))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 z) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 t)) (expm1.f64 z)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3) (cbrt.f64 (neg.f64 (expm1.f64 z)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3) (cbrt.f64 (expm1.f64 z))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 t) (+.f64 (exp.f64 (*.f64 z 3)) -1)) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (pow.f64 (expm1.f64 z) 2/3)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) (/.f64 -1 t)) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 (exp.f64 z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (expm1.f64 z)) (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) 1) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (cbrt.f64 t)) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (expm1.f64 z)) (pow.f64 t 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (expm1.f64 z)) (cbrt.f64 (neg.f64 t))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) 1) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (pow.f64 t 2/3))) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 z) (neg.f64 t)) (neg.f64 t)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (expm1.f64 z)) (/.f64 (pow.f64 (expm1.f64 z) 2/3) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (expm1.f64 z)) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (expm1.f64 z) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 t) (neg.f64 (expm1.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 -1 t) (/.f64 (exp.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 3))))))"]],"rules":[["egg-rr",71],["egg-rr",32]],"time":30.970947265625,"type":"rewrite"},{"count":[[175,125]],"inputs":[["x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t))))","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t)))))","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t)))))","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t)))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (pow.f64 z 2)) t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (pow.f64 z 2)) t)) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 y (pow.f64 z 3)) t)) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(*.f64 -1 (/.f64 z t))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) t)) (*.f64 -1 (/.f64 z t)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) t)) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 z 3) t)) (*.f64 -1 (/.f64 z t))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) t)) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 z 3) t)) (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 z 4) t)) (*.f64 -1 (/.f64 z t)))))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t))","(/.f64 (*.f64 (neg.f64 y) (expm1.f64 z)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t))))","(/.f64 (*.f64 (neg.f64 y) (expm1.f64 z)) t)","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t)))))","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t)))))","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 (exp.f64 z) t) (/.f64 1 t)))))","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(-.f64 x (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (pow.f64 z 2)) t)) x))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 -1/2 (*.f64 y (*.f64 z z)))) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (pow.f64 z 2)) t)) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 y (pow.f64 z 3)) t)) x)))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 -1/2 (*.f64 y (*.f64 z z)))) t) (fma.f64 -1/6 (/.f64 (*.f64 y (pow.f64 z 3)) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t))","(/.f64 (*.f64 (neg.f64 y) (expm1.f64 z)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t))","(/.f64 (*.f64 (neg.f64 y) (expm1.f64 z)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t)) x)","(fma.f64 (neg.f64 y) (/.f64 (expm1.f64 z) t) x)","(*.f64 -1 (/.f64 z t))","(neg.f64 (/.f64 z t))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) t)) (*.f64 -1 (/.f64 z t)))","(/.f64 (+.f64 (*.f64 -1/2 (*.f64 z z)) (neg.f64 z)) t)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) t)) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 z 3) t)) (*.f64 -1 (/.f64 z t))))","(fma.f64 -1/2 (/.f64 (*.f64 z z) t) (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 z 3)) (neg.f64 z)) t))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) t)) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 z 3) t)) (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 z 4) t)) (*.f64 -1 (/.f64 z t)))))","(+.f64 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 z z)) (*.f64 -1/6 (pow.f64 z 3))) t) (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 z 4)) (neg.f64 z)) t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (/.f64 (-.f64 (exp.f64 z) 1) t))","(/.f64 (expm1.f64 z) (neg.f64 t))"]],"time":213.054931640625,"type":"simplify"},{"compiler":[[1788,709]],"time":18.363037109375,"type":"eval"},{"alts":[["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","next",10.66062752760843],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","done",10.597757354484518],["(-.f64 x (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t))))","fresh",21.245697830364318],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","fresh",11.480452237896245],["(fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x)","fresh",12.559202597618338],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","done",12.539671347618338]],"compiler":[[15,11],[12,8],[29,21],[12,8],[16,11],[15,10],[15,11],[29,21],[12,8],[16,11]],"count":[[130,6]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[125,1],"picked":[1,1]}],"min-error":[0.0234375],"time":33.93798828125,"type":"prune"},{"compiler":[[43,14]],"locations":[["(/.f64 (expm1.f64 z) (neg.f64 t))",0.00390625,false],["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)",0.6046640137479348,true],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)",0.7165255100343972,true],["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))",9.802764795468615,true]],"time":9.261962890625,"type":"localize"},{"count":[[3,52]],"series":[["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)","t","-inf",0.47802734375],["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)","t","inf",0.535888671875],["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)","t","0",0.52197265625],["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)","z","-inf",0.18603515625],["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)","z","inf",0.180908203125],["(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)","z","0",1.18896484375],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","x","-inf",0.19677734375],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","x","inf",0.18017578125],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","x","0",0.94482421875],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","t","-inf",0.498046875],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","t","inf",0.429931640625],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","t","0",0.610107421875],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","z","-inf",0.863037109375],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","z","inf",0.866943359375],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","z","0",1.14990234375],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","y","-inf",0.27392578125],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","y","inf",0.2919921875],["(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","y","0",1.483154296875],["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","t","-inf",0.322021484375],["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","t","inf",0.442138671875],["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","t","0",0.864013671875],["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","z","-inf",1.511962890625],["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","z","inf",2.64697265625],["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","z","0",1.0419921875]],"time":18.0810546875,"type":"series"},{"count":[[3,163]],"inputs":[["(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","(pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 0) (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (*.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (*.f64 0 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (expm1.f64 z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (expm1.f64 z)))) (cbrt.f64 (/.f64 (pow.f64 (expm1.f64 z) 2/3) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (expm1.f64 z))) (cbrt.f64 (/.f64 (pow.f64 (expm1.f64 z) 2/3) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (expm1.f64 z) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (cbrt.f64 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 -1 t))) (cbrt.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 z)) (cbrt.f64 (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 t)) (cbrt.f64 (expm1.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (expm1.f64 z)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)) (cbrt.f64 (cbrt.f64 (expm1.f64 z)))) (cbrt.f64 (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (expm1.f64 z) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (expm1.f64 z))) (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3))) (cbrt.f64 (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (expm1.f64 z)) (cbrt.f64 (cbrt.f64 (neg.f64 t)))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (*.f64 (cbrt.f64 (neg.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3))) (cbrt.f64 (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t)))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (expm1.f64 z) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 0) (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) (*.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) (*.f64 0 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 2/3) (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)) (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (expm1.f64 z)) (/.f64 -1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (*.f64 (pow.f64 y 2/3) (expm1.f64 z)) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 y (expm1.f64 z)) (neg.f64 t)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 0) (/.f64 (expm1.f64 z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) (*.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 t) (exp.f64 z)) (*.f64 (/.f64 -1 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (expm1.f64 z) (neg.f64 t))) (/.f64 (expm1.f64 z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) (*.f64 0 (/.f64 (expm1.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (*.f64 (cbrt.f64 (/.f64 1 t)) (pow.f64 (cbrt.f64 (neg.f64 t)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (*.f64 (cbrt.f64 (/.f64 1 t)) (pow.f64 (cbrt.f64 (/.f64 -1 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (*.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 -1 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (exp.f64 z) (neg.f64 t)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 t) (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (/.f64 (pow.f64 (expm1.f64 z) 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 z) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3) (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (expm1.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 (expm1.f64 z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (expm1.f64 z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) 4) 2) (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (expm1.f64 z) 2/3) t) (cbrt.f64 (neg.f64 (expm1.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) (cbrt.f64 (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) (pow.f64 (cbrt.f64 (neg.f64 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 z)) (/.f64 (pow.f64 (expm1.f64 z) 2/3) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (expm1.f64 z)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (neg.f64 (expm1.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (expm1.f64 z) 2/3) (neg.f64 t)) (cbrt.f64 (expm1.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 z) (pow.f64 t 2/3)) (*.f64 (neg.f64 t) (cbrt.f64 (/.f64 -1 t)))) (*.f64 (neg.f64 t) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 z) t) t) (*.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) -1) (*.f64 (cbrt.f64 (neg.f64 t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) -1) (*.f64 (pow.f64 t 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) -1) (*.f64 (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z))) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) 1) (*.f64 (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) (cbrt.f64 (/.f64 -1 t))) (*.f64 (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z))) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (/.f64 (neg.f64 (pow.f64 (expm1.f64 z) 2/3)) (cbrt.f64 t))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) (*.f64 (neg.f64 t) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (exp.f64 (*.f64 z 3)) -1)) (*.f64 t (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 t)) (+.f64 (exp.f64 (*.f64 z 3)) -1)) (*.f64 (pow.f64 t 2/3) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (expm1.f64 z) 2/3)) (cbrt.f64 t)) (cbrt.f64 (neg.f64 (expm1.f64 z)))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t)))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t)))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 z) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (/.f64 (neg.f64 (pow.f64 (expm1.f64 z) 2/3)) (cbrt.f64 t))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (pow.f64 (expm1.f64 z) 2/3)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 t) (+.f64 (exp.f64 (*.f64 z 3)) -1)) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3) (cbrt.f64 (neg.f64 (expm1.f64 z)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 t)) (expm1.f64 z)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (expm1.f64 z) 2/3)) (cbrt.f64 t)) (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (expm1.f64 z) 2/3) (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (exp.f64 (*.f64 z 3)) -1) (/.f64 -1 t)) (fma.f64 (exp.f64 z) (exp.f64 z) (+.f64 1 (exp.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) 1) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) 1) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (expm1.f64 z)) (/.f64 (pow.f64 (expm1.f64 z) 2/3) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (expm1.f64 z))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))) 4) 2)) (cbrt.f64 (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (expm1.f64 z))) (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (pow.f64 t 2/3))) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 z) (cbrt.f64 (neg.f64 t))) 1) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 t)))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) -1) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3)) 1) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (expm1.f64 z)) (cbrt.f64 (neg.f64 t))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (expm1.f64 z)) (pow.f64 t 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (expm1.f64 z) (cbrt.f64 t)) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 z) (neg.f64 t)) (neg.f64 t)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (expm1.f64 z)) (/.f64 (neg.f64 (pow.f64 (expm1.f64 z) 2/3)) (cbrt.f64 t))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (expm1.f64 z) 2/3)) (cbrt.f64 t)) (cbrt.f64 (expm1.f64 z))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (expm1.f64 z) (pow.f64 t 2/3))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (expm1.f64 z) (pow.f64 t 2/3))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (expm1.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (expm1.f64 z)) (/.f64 -1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (expm1.f64 z) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 t) (neg.f64 (expm1.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 -1 t) (/.f64 (exp.f64 z) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (expm1.f64 z) (neg.f64 t)) 3))))))"]],"rules":[["egg-rr",92],["egg-rr",35],["egg-rr",36]],"time":33.179931640625,"type":"rewrite"},{"count":[[215,171]],"inputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","x","x","x","(*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) 1) t) 1/3) (cbrt.f64 -1))","(cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t)))","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3)))","(*.f64 (expm1.f64 z) (neg.f64 (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3)))","(*.f64 (expm1.f64 z) (neg.f64 (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","x","x","x","(*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3)))","(*.f64 (expm1.f64 z) (neg.f64 (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 x (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","x","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (pow.f64 1 1/3))) x)","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))","(*.f64 -1 (*.f64 (/.f64 (-.f64 (exp.f64 z) 1) t) (pow.f64 1 1/3)))","(/.f64 (expm1.f64 z) (neg.f64 t))"]],"time":173.998046875,"type":"simplify"},{"compiler":[[4017,1762]],"time":41.926025390625,"type":"eval"},{"alts":[["(fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x)","fresh",12.559202597618338],["(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","fresh",12.870199855966895],["(-.f64 x (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t))))","fresh",21.245697830364318],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","next",11.480452237896245],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","done",10.597757354484518],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","done",12.539671347618338]],"compiler":[[16,11],[12,8],[29,21],[12,8],[12,8],[15,10],[16,11],[12,8],[29,21],[12,8]],"count":[[257,6]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[251,1],"picked":[1,0]}],"min-error":[0.01953125],"time":90.47607421875,"type":"prune"},{"compiler":[[29,8]],"locations":[["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))",0.00390625,true],["(log1p.f64 (*.f64 y z))",3.1477405996804753,true],["(/.f64 (log1p.f64 (*.f64 y z)) t)",5.323908929724648,true]],"time":5.65576171875,"type":"localize"},{"count":[[3,108]],"series":[["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","t","-inf",0.218017578125],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","t","inf",0.217041015625],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","t","0",0.18505859375],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","z","-inf",1.125],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","z","inf",0.345947265625],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","z","0",0.22412109375],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","y","-inf",0.320068359375],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","y","inf",0.3759765625],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","y","0",0.281982421875],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","-inf",1.470947265625],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","inf",0.17919921875],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","0",1.184814453125],["(log1p.f64 (*.f64 y z))","z","-inf",0.22802734375],["(log1p.f64 (*.f64 y z))","z","inf",0.24609375],["(log1p.f64 (*.f64 y z))","z","0",0.18896484375],["(log1p.f64 (*.f64 y z))","y","-inf",0.251953125],["(log1p.f64 (*.f64 y z))","y","inf",0.260986328125],["(log1p.f64 (*.f64 y z))","y","0",0.260009765625],["(/.f64 (log1p.f64 (*.f64 y z)) t)","t","-inf",0.31103515625],["(/.f64 (log1p.f64 (*.f64 y z)) t)","t","inf",2.78515625],["(/.f64 (log1p.f64 (*.f64 y z)) t)","t","0",8.573974609375],["(/.f64 (log1p.f64 (*.f64 y z)) t)","z","-inf",0.529052734375],["(/.f64 (log1p.f64 (*.f64 y z)) t)","z","inf",0.50390625],["(/.f64 (log1p.f64 (*.f64 y z)) t)","z","0",0.375],["(/.f64 (log1p.f64 (*.f64 y z)) t)","y","-inf",0.4990234375],["(/.f64 (log1p.f64 (*.f64 y z)) t)","y","inf",0.54296875],["(/.f64 (log1p.f64 (*.f64 y z)) t)","y","0",0.60986328125]],"time":22.7041015625,"type":"series"},{"count":[[3,134]],"inputs":[["(/.f64 (log1p.f64 (*.f64 y z)) t)","(log1p.f64 (*.f64 y z))","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) (*.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 0) (/.f64 (log1p.f64 (*.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) (*.f64 0 (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (log1p.f64 (*.f64 y z)) t)) (/.f64 (log1p.f64 (*.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 (neg.f64 (log1p.f64 (*.f64 y z))) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 t -2))) (/.f64 (neg.f64 (log1p.f64 (*.f64 y z))) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) -1) (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) (cbrt.f64 t)) (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) -1) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (cbrt.f64 (*.f64 t t))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) t) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (*.f64 y z)) -1) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t -2)) (/.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (log1p.f64 (*.f64 y z)))) 1) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2))) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 t)) (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 (cbrt.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (*.f64 y z))) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 y z)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2)) (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (log1p.f64 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log1p.f64 (*.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) t) (cbrt.f64 (log1p.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 (pow.f64 t -2))) (cbrt.f64 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (neg.f64 (log1p.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) (neg.f64 (cbrt.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (*.f64 y z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (*.f64 y z))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2)) (cbrt.f64 (neg.f64 (log1p.f64 (*.f64 y z))))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2)) (cbrt.f64 (log1p.f64 (*.f64 y z)))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) (log1p.f64 (*.f64 y z))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 (pow.f64 t -2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (log1p.f64 (*.f64 y z)))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (*.f64 y z)) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (log1p.f64 (*.f64 y z))) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (log1p.f64 (*.f64 y z)) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (*.f64 y z)) (*.f64 (log1p.f64 (*.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (*.f64 y z)) 0) (log1p.f64 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (*.f64 y z)) (*.f64 0 (log1p.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (*.f64 y z))) (log1p.f64 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (log1p.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) (cbrt.f64 (log1p.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (*.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log1p.f64 (*.f64 y z)))) (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) -1) (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) -1) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log1p.f64 (*.f64 y z)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (log1p.f64 (*.f64 y z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (*.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log1p.f64 (*.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log1p.f64 (*.f64 y z)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (*.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (fma.f64 z y 1))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (fma.f64 z y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (*.f64 y z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) (*.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 0) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) (*.f64 0 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x 0) (/.f64 (log1p.f64 (*.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) x))) (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2)) (cbrt.f64 (*.f64 (/.f64 x t) (log1p.f64 (*.f64 y z)))))) (-.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))) (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 2)) (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) x)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) x))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 (*.f64 y z)) (/.f64 -1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (log1p.f64 (*.f64 y z))) (/.f64 1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t))) (cbrt.f64 (pow.f64 (/.f64 (log1p.f64 (*.f64 y z)) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (log1p.f64 (*.f64 y z)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)))))))"]],"rules":[["egg-rr",46],["egg-rr",29],["egg-rr",59]],"time":31.205078125,"type":"rewrite"},{"count":[[242,231]],"inputs":[["(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)))","(+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 z 4)) t)) (+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)))))","(/.f64 (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 z))) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (+.f64 (/.f64 (log.f64 (*.f64 -1 z)) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)))","(+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 z 4)) t)) (+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 y)) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (+.f64 (/.f64 (log.f64 y) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(/.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 (/.f64 -1 z)))) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3))))) (/.f64 (log.f64 (*.f64 -1 y)) t)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(*.f64 y z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 y z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (+.f64 (*.f64 y z) (*.f64 -1/4 (*.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))","(+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (/.f64 1 (*.f64 y z))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (/.f64 1 (*.f64 y z)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (/.f64 1 (*.f64 y z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (*.f64 -1 z)) (/.f64 1 (*.f64 y z))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (*.f64 -1 z)) (/.f64 1 (*.f64 y z)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (log.f64 (*.f64 -1 z)) (/.f64 1 (*.f64 y z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(*.f64 y z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 y z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (+.f64 (*.f64 y z) (*.f64 -1/4 (*.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (/.f64 1 (*.f64 y z)) (log.f64 y)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (/.f64 1 (*.f64 y z)) (log.f64 y))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (/.f64 1 (*.f64 y z)) (log.f64 y)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 z))) (/.f64 1 (*.f64 y z))))","(-.f64 (+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 z))) (/.f64 1 (*.f64 y z)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 z))) (/.f64 1 (*.f64 y z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x)))","(-.f64 x (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t))))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t)))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (+.f64 (/.f64 (log.f64 (*.f64 -1 z)) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x)))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t)))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (+.f64 (/.f64 (log.f64 y) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t)))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3))))) (/.f64 (log.f64 (*.f64 -1 y)) t)))))","(*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)))","(/.f64 (fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (*.f64 y z)) t)","(+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t))))","(+.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (*.f64 y z)) t) (/.f64 (*.f64 1/3 (pow.f64 (*.f64 y z) 3)) t))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 z 4)) t)) (+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)))))","(+.f64 (/.f64 (fma.f64 y z (*.f64 -1/4 (pow.f64 (*.f64 y z) 4))) t) (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (*.f64 y z) 2)) (*.f64 1/3 (pow.f64 (*.f64 y z) 3))) t))","(/.f64 (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))) t)","(/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t))))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 z))) t)","(/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (+.f64 (/.f64 (log.f64 (*.f64 -1 z)) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t)))","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)))","(/.f64 (fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (*.f64 y z)) t)","(+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t))))","(+.f64 (/.f64 (fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (*.f64 y z)) t) (/.f64 (*.f64 1/3 (pow.f64 (*.f64 y z) 3)) t))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 z 4)) t)) (+.f64 (/.f64 (*.f64 y z) t) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)))))","(+.f64 (/.f64 (fma.f64 y z (*.f64 -1/4 (pow.f64 (*.f64 y z) 4))) t) (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 (*.f64 y z) 2)) (*.f64 1/3 (pow.f64 (*.f64 y z) 3))) t))","(/.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 y)) t)","(/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (+.f64 (/.f64 (log.f64 y) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t))))","(/.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 (/.f64 -1 z)))) t)","(/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3))))) (/.f64 (log.f64 (*.f64 -1 y)) t)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))))","(+.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))) (*.f64 -1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t)))","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)","(/.f64 (log1p.f64 (*.f64 y z)) t)","(*.f64 y z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 y z))","(fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (*.f64 y z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 y z)))","(fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (fma.f64 1/3 (pow.f64 (*.f64 y z) 3) (*.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (+.f64 (*.f64 y z) (*.f64 -1/4 (*.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (fma.f64 1/3 (pow.f64 (*.f64 y z) 3) (fma.f64 y z (*.f64 -1/4 (pow.f64 (*.f64 y z) 4)))))","(+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))","(+.f64 (log.f64 z) (log.f64 y))","(+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (/.f64 1 (*.f64 y z))))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (/.f64 1 (*.f64 y z)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (/.f64 1 (*.f64 y z)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (/.f64 1 (*.f64 y z))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (/.f64 1 (*.f64 y z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 1/3 (pow.f64 (*.f64 y z) (neg.f64 3)) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (/.f64 1 (*.f64 y z)))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (*.f64 -1 z)))","(+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (*.f64 -1 z)) (/.f64 1 (*.f64 y z))))","(+.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) (/.f64 1 (*.f64 y z)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (*.f64 -1 z)) (/.f64 1 (*.f64 y z)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (+.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) (/.f64 1 (*.f64 y z))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (log.f64 (*.f64 -1 z)) (/.f64 1 (*.f64 y z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 1/3 (pow.f64 (*.f64 y z) (neg.f64 3)) (+.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) (/.f64 1 (*.f64 y z)))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(*.f64 y z)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 y z))","(fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (*.f64 y z))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 y z)))","(fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (fma.f64 1/3 (pow.f64 (*.f64 y z) 3) (*.f64 y z)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (pow.f64 z 3))) (+.f64 (*.f64 y z) (*.f64 -1/4 (*.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(fma.f64 -1/2 (pow.f64 (*.f64 y z) 2) (fma.f64 1/3 (pow.f64 (*.f64 y z) 3) (fma.f64 y z (*.f64 -1/4 (pow.f64 (*.f64 y z) 4)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 y))","(+.f64 (log.f64 z) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (/.f64 1 (*.f64 y z)) (log.f64 y)))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (/.f64 1 (*.f64 y z)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (/.f64 1 (*.f64 y z)) (log.f64 y))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (/.f64 1 (*.f64 y z))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (/.f64 1 (*.f64 y z)) (log.f64 y)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 1/3 (pow.f64 (*.f64 y z) (neg.f64 3)) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (/.f64 1 (*.f64 y z)))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z)))","(+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 z))) (/.f64 1 (*.f64 y z))))","(+.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) (/.f64 1 (*.f64 y z)))","(-.f64 (+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 z))) (/.f64 1 (*.f64 y z)))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (+.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) (/.f64 1 (*.f64 y z))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 z 3)))) (+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 z))) (/.f64 1 (*.f64 y z))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 1/3 (pow.f64 (*.f64 y z) (neg.f64 3)) (+.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) (/.f64 1 (*.f64 y z)))) (/.f64 -1/2 (pow.f64 (*.f64 y z) 2)))","(*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t))","(/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(-.f64 x (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 1/2 (pow.f64 (*.f64 y z) 2))) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x)))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 -1/3 (pow.f64 (*.f64 y z) 3))) t) (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) 2) t) x))","(-.f64 x (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t))))","(-.f64 x (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)))))","(-.f64 (-.f64 x (/.f64 1 (*.f64 y (*.f64 t z)))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (/.f64 (log.f64 z) t) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 y)) t)) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t)))","(-.f64 x (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t))))","(-.f64 (-.f64 x (/.f64 1 (*.f64 y (*.f64 t z)))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (/.f64 (log.f64 (*.f64 -1 z)) t))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 y)) t)) (+.f64 (/.f64 (log.f64 (*.f64 -1 z)) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) x)","(-.f64 x (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 1/2 (pow.f64 (*.f64 y z) 2))) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 z 3)) t)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 z 2)) t)) x)))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 -1/3 (pow.f64 (*.f64 y z) 3))) t) (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) 2) t) x))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t)))","(-.f64 x (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t))))","(-.f64 (-.f64 x (/.f64 1 (*.f64 y (*.f64 t z)))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (/.f64 (log.f64 y) t))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 z)) t)) (+.f64 (/.f64 (log.f64 y) t) (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3)))))))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 z) (log.f64 y)) t)) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))))","(-.f64 x (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t)))","(-.f64 x (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t))","(-.f64 x (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t))))","(-.f64 (-.f64 x (/.f64 1 (*.f64 y (*.f64 t z)))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (/.f64 (log.f64 (*.f64 -1 y)) t))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 t (pow.f64 z 2))))) x) (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 z)) t)) (+.f64 (*.f64 1/3 (/.f64 1 (*.f64 (pow.f64 y 3) (*.f64 t (pow.f64 z 3))))) (/.f64 (log.f64 (*.f64 -1 y)) t)))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 y z) (neg.f64 2)) t) x) (+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 t z))) (/.f64 (+.f64 (log.f64 (neg.f64 y)) (log.f64 (neg.f64 z))) t)) (/.f64 1/3 (pow.f64 (*.f64 (*.f64 z (cbrt.f64 t)) y) 3))))","(*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t))","(/.f64 (log1p.f64 (*.f64 y z)) (neg.f64 t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","x","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (+.f64 (*.f64 y z) 1)) t)) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))"]],"time":418.244873046875,"type":"simplify"},{"compiler":[[4392,2016]],"time":42.748046875,"type":"eval"},{"alts":[["(fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x)","fresh",12.559202597618338],["(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","fresh",12.870199855966895],["(-.f64 x (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t))))","fresh",21.245697830364318],["(-.f64 x (*.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) t)))","fresh",13.467756916633078],["(-.f64 x (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) 3))","fresh",11.58238480616852],["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","done",11.480452237896245],["(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","done",10.597757354484518],["(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","done",12.539671347618338]],"compiler":[[16,11],[12,8],[29,21],[21,13],[15,11],[12,8],[12,8],[15,10]],"count":[[237,8]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[231,2],"picked":[1,1]}],"min-error":[0.0078125],"time":78.489013671875,"type":"prune"},{"accuracy":[0.04296875],"baseline":[10.597757354484518],"branch":[["x",6.386526716197099,5],["y",2.576608106206883,5],["z",1.0179249734383715,2],["t",6.277974820479483,3],["(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t))",1.768113279689118,4],["(/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t)",0.04296875,5],["(log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z))))",0.296875,3],["(+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))",0.296875,3],["(exp.f64 z)",1.0179249734383713,2],["(exp.f64 z)",1.0179249734383713,2]],"compiler":[[5,4],[5,4],[5,4],[5,4],[17,12],[15,11],[13,10],[12,9],[6,5],[6,5],[128,62]],"count":[[10,5]],"inputs":[["(-.f64 x (*.f64 (cbrt.f64 (log1p.f64 (*.f64 y z))) (/.f64 (cbrt.f64 (pow.f64 (log1p.f64 (*.f64 y z)) 2)) t)))","(-.f64 x (pow.f64 (cbrt.f64 (/.f64 (log1p.f64 (*.f64 y z)) t)) 3))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(fma.f64 y (pow.f64 (cbrt.f64 (/.f64 (expm1.f64 z) (neg.f64 t))) 3) x)","(-.f64 x (+.f64 (/.f64 (*.f64 (-.f64 (exp.f64 z) 1) y) t) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (exp.f64 z) 1) 2) (pow.f64 y 2)) t))))","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x)","(fma.f64 y (/.f64 (expm1.f64 z) (neg.f64 t)) x)","(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t))"]],"link":["."],"name":["System.Random.MWC.Distributions:truncatedExp from mwc-random-0.13.3.2"],"oracle":[34.05876084138735],"outputs":[["(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))","(-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t))","(-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t)))","(fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x)","(-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))"]],"time":124.48291015625,"times":[["x",32.958984375],["y",21.1640625],["z",9.337158203125],["t",17.2490234375],["(-.f64 x (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t))",13.875],["(/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t)",9.386962890625],["(log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z))))",5.2021484375],["(+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))",4.94384765625],["(exp.f64 z)",3.3408203125],["(exp.f64 z)",3.30810546875]],"type":"regimes"},{"bstep":[[1.8826451772389065e+173,{"type":"real","value":"+inf"},0.029052734375],[-0.0,5.655580987386021e-272,0.013916015625],[-2.1824673941519783e-258,-2.452082700123902e-262,0.087890625],[{"type":"real","value":"-inf"},-5.581225471871495e+193,0.037109375]],"compiler":[[9,7],[15,11]],"method":["left-value","left-value","left-value","left-value"],"time":0.34716796875,"type":"bsearch"},{"compiler":[[107,54]],"inputs":[["(if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) -inf.0) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) (if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) -8655577598126739/4327788799063369698118367518036104040602397294887907509272254128346512609744690048814426160231687683233172643784762398137404191207445999921156415311568401014033503715319849649510248592805285405106374515984066055406780647774220793764564147394699562815402300054714269682368512) (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) 0) (-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t))) (if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) 200000000000000002807837251159941043564923941140258272187660085890042609097300216216368266487131373689224571527556203812385978553726279379745535544168843379433521211366178816) (fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) -inf.0) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) (if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) -8655577598126739/4327788799063369698118367518036104040602397294887907509272254128346512609744690048814426160231687683233172643784762398137404191207445999921156415311568401014033503715319849649510248592805285405106374515984066055406780647774220793764564147394699562815402300054714269682368512) (-.f64 x (/.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) t)) (if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) 0) (-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t))) (if (<=.f64 (/.f64 (log.f64 (+.f64 (-.f64 1 y) (*.f64 y (exp.f64 z)))) t) 200000000000000002807837251159941043564923941140258272187660085890042609097300216216368266487131373689224571527556203812385978553726279379745535544168843379433521211366178816) (fma.f64 (log1p.f64 (fma.f64 y (exp.f64 z) (neg.f64 y))) (/.f64 -1 t) x) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))))))","(if (<=.f64 (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t) -inf.0) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t)) (if (<=.f64 (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t) -8655577598126739/4327788799063369698118367518036104040602397294887907509272254128346512609744690048814426160231687683233172643784762398137404191207445999921156415311568401014033503715319849649510248592805285405106374515984066055406780647774220793764564147394699562815402300054714269682368512) (-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)) (if (<=.f64 (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t) 0) (-.f64 x (*.f64 (expm1.f64 z) (/.f64 y t))) (if (<=.f64 (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t) 200000000000000002807837251159941043564923941140258272187660085890042609097300216216368266487131373689224571527556203812385978553726279379745535544168843379433521211366178816) (-.f64 x (/.f64 (log1p.f64 (*.f64 (expm1.f64 z) y)) t)) (-.f64 x (/.f64 (log1p.f64 (*.f64 y z)) t))))))"]],"stop":[["fuel",1]],"time":32.0830078125,"type":"simplify"},{"time":0.038818359375,"type":"soundness"},{"compiler":[[107,54]],"remove-preprocessing":[[]],"time":28.27001953125,"type":"end"}]