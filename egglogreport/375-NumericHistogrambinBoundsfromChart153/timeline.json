[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.1910326833876861,0.7914211168918424,0.017546199720471556],[11,0.14814779528024635,0.8499005097656238,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":138.3271484375,"type":"analyze"},{"outcomes":[["body",256,"invalid",122.526611328125,2648],["body",256,"valid",382.118408203125,8256]],"time":514.8779296875,"type":"sample"},{"compiler":[[13,8]],"inputs":[["0","1","2","3"],["(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))","(+.f64 y (/.f64 (*.f64 (-.f64 x y) z) t))","(+.f64 z (/.f64 (*.f64 (-.f64 y z) x) t))","(+.f64 t (/.f64 (*.f64 (-.f64 y t) z) x))","(+.f64 x (/.f64 (*.f64 (-.f64 z x) y) t))","(+.f64 x (/.f64 (*.f64 (-.f64 t x) z) y))","(+.f64 x (/.f64 (*.f64 (-.f64 y x) t) z))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))","(+.f64 y (/.f64 (*.f64 (-.f64 x y) z) t))","(+.f64 z (/.f64 (*.f64 (-.f64 y z) x) t))","(+.f64 t (/.f64 (*.f64 (-.f64 y t) z) x))","(+.f64 x (/.f64 (*.f64 (-.f64 z x) y) t))","(+.f64 x (/.f64 (*.f64 (-.f64 t x) z) y))","(+.f64 x (/.f64 (*.f64 (-.f64 y x) t) z))"]],"symmetry":[[]],"time":89.15185546875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))","(fma.f64 (-.f64 y x) (/.f64 z t) x)"]],"time":18.649169921875,"type":"simplify"},{"compiler":[[21,10]],"time":0.341064453125,"type":"eval"},{"alts":[["(fma.f64 (-.f64 y x) (/.f64 z t) x)","next",1.3648771650523426],["(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))","fresh",6.473034382889811]],"compiler":[[12,7],[13,8],[12,7],[13,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.05078125],"time":1.23193359375,"type":"prune"},{"compiler":[[22,7]],"locations":[["(fma.f64 (-.f64 y x) (/.f64 z t) x)",1.3075289342490213,true]],"time":4.8330078125,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 (-.f64 y x) (/.f64 z t) x)","t","-inf",0.31005859375],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","t","inf",0.31884765625],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","t","0",0.59814453125],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","z","-inf",0.399169921875],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","z","inf",0.39306640625],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","z","0",0.383056640625],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","x","-inf",0.483154296875],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","x","inf",0.345947265625],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","x","0",0.325927734375],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","y","-inf",0.308837890625],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","y","inf",0.43505859375],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","y","0",0.52197265625]],"time":5.005859375,"type":"series"},{"count":[[1,34]],"inputs":[["(fma.f64 (-.f64 y x) (/.f64 z t) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 0) (fma.f64 (-.f64 y x) (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) (*.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (fma.f64 (-.f64 y x) (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) (*.f64 0 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 (-.f64 x y) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 2)) (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y x) (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (/.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 y x) z) t) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z t) (-.f64 y x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 y x) z) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (/.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) z) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) z) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) (cbrt.f64 (/.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 z t) 2)) x)))))"]],"rules":[["egg-rr",34]],"time":19.01513671875,"type":"rewrite"},{"count":[[82,48]],"inputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","x","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","x","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)"]],"time":167.592041015625,"type":"simplify"},{"compiler":[[567,148]],"time":5.7587890625,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","fresh",6.4574093828897965],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","done",1.3648771650523426],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","next",5.0770042850285995]],"compiler":[[14,9],[12,7],[15,9],[14,9],[15,9]],"count":[[50,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[48,2],"picked":[1,1]}],"min-error":[0.0078125],"time":9.232177734375,"type":"prune"},{"compiler":[[41,9]],"locations":[["(-.f64 (/.f64 y t) (/.f64 x t))",0.015625,true],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)",0.01953125,true],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)",5.381560712118819,true]],"time":7.369873046875,"type":"localize"},{"count":[[3,111]],"series":[["(-.f64 (/.f64 y t) (/.f64 x t))","x","-inf",0.156982421875],["(-.f64 (/.f64 y t) (/.f64 x t))","x","inf",0.172119140625],["(-.f64 (/.f64 y t) (/.f64 x t))","x","0",0.156005859375],["(-.f64 (/.f64 y t) (/.f64 x t))","t","-inf",0.19091796875],["(-.f64 (/.f64 y t) (/.f64 x t))","t","inf",0.139892578125],["(-.f64 (/.f64 y t) (/.f64 x t))","t","0",0.141845703125],["(-.f64 (/.f64 y t) (/.f64 x t))","y","-inf",0.18310546875],["(-.f64 (/.f64 y t) (/.f64 x t))","y","inf",0.155029296875],["(-.f64 (/.f64 y t) (/.f64 x t))","y","0",0.19287109375],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","z","-inf",0.174072265625],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","z","inf",0.326904296875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","z","0",0.166015625],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","x","-inf",0.205078125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","x","inf",0.173828125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","x","0",0.16796875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","t","-inf",0.201904296875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","t","inf",0.158935546875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","t","0",0.19091796875],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","y","-inf",0.178955078125],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","y","inf",0.183837890625],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","y","0",0.178955078125],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","z","-inf",0.2900390625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","z","inf",0.3359375],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","z","0",0.642822265625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","x","-inf",0.240966796875],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","x","inf",0.379150390625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","x","0",0.425048828125],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","t","-inf",0.6689453125],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","t","inf",1.199951171875],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","t","0",0.5869140625],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","y","-inf",0.373046875],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","y","inf",0.43896484375],["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","y","0",0.486083984375]],"time":10.260009765625,"type":"series"},{"count":[[3,195]],"inputs":[["(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(-.f64 (/.f64 y t) (/.f64 x t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) (*.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 0) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (*.f64 z (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 z y) t)) (*.f64 1 (*.f64 z (neg.f64 (/.f64 x t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (/.f64 y t) z)) (*.f64 1 (*.f64 (neg.f64 (/.f64 x t)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) t)) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y t) z) (*.f64 (neg.f64 (/.f64 x t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z y) t) 1) (*.f64 (*.f64 z (neg.f64 (/.f64 x t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 y t) z) 1) (*.f64 (*.f64 (neg.f64 (/.f64 x t)) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (neg.f64 (/.f64 x t))) (/.f64 (*.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 x t)) z) (*.f64 (/.f64 y t) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 y x) t) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 y x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) t) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (/.f64 (-.f64 y x) t))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) t) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 y x)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (*.f64 t (-.f64 y x))) (pow.f64 t -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) (cbrt.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) (cbrt.f64 (*.f64 t t))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 y x)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 t (-.f64 y x))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 x y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (*.f64 t (-.f64 x y))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (-.f64 y x) (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 z (*.f64 t (-.f64 y x)))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 z (-.f64 y x))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) t) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (*.f64 t (-.f64 y x))) (*.f64 t (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (-.f64 y x))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (*.f64 t (-.f64 y x)))) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y t) z (*.f64 (neg.f64 (/.f64 x t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 y t) (*.f64 z (neg.f64 (/.f64 x t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z y) t) (+.f64 (*.f64 z (neg.f64 (/.f64 x t))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y t) z) (+.f64 (*.f64 (neg.f64 (/.f64 x t)) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) (*.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 0) (fma.f64 (/.f64 (-.f64 y x) t) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) (*.f64 0 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (fma.f64 (/.f64 (-.f64 y x) t) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (/.f64 (*.f64 z y) t)) (*.f64 z (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (/.f64 y t) z)) (*.f64 (neg.f64 (/.f64 x t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 z (-.f64 x y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 2)) (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 y x) t) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 z (-.f64 y x))) t)))) (+.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (/.f64 (*.f64 x (*.f64 z (-.f64 y x))) t)))) (+.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 y x) t) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 y x) t) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (-.f64 y x) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 z (-.f64 y x)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 z (-.f64 x y)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2)) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (/.f64 (-.f64 y x) t))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (/.f64 (-.f64 y x) t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 y x) t) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 z (-.f64 y x)) t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 x t)) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 y x) t) 0) (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 x t)) (*.f64 (neg.f64 (/.f64 y t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) t) (*.f64 0 (/.f64 (-.f64 y x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 y x) t)) (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y t) (*.f64 t t)) (neg.f64 (/.f64 (*.f64 t x) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 x t)) (neg.f64 (/.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y t) (/.f64 x t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 y t) (*.f64 t t)) (/.f64 (*.f64 t x) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 y t) 0) (/.f64 x t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 (neg.f64 (*.f64 y t))) (*.f64 t t)) (/.f64 (*.f64 t x) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) (cbrt.f64 (/.f64 (-.f64 y x) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (/.f64 y t)) (neg.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (-.f64 (*.f64 y (cbrt.f64 (pow.f64 t -2))) (*.f64 x (cbrt.f64 (pow.f64 t -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (-.f64 x y) t))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) t)) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 y x)) (pow.f64 t -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 x y)) (/.f64 1 (neg.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 y t) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2)) (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 t t))))) (-.f64 (cbrt.f64 (/.f64 y t)) (cbrt.f64 (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 y x)) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 x y)) (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 2)) (cbrt.f64 (*.f64 t (-.f64 y x)))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 t (-.f64 y x)) 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (cbrt.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 t (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (cbrt.f64 t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 x y)) t) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 t)) (neg.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) x)) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 t)) t) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 x))) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (*.f64 t t))) (*.f64 (neg.f64 t) (/.f64 y (cbrt.f64 t)))) (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (*.f64 t t))) (*.f64 t (/.f64 y (cbrt.f64 t)))) (*.f64 t (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y t) (*.f64 t t)) (*.f64 (*.f64 t t) (*.f64 t x))) (*.f64 (*.f64 t t) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 t)) t) (*.f64 (cbrt.f64 (*.f64 t t)) x)) (*.f64 (cbrt.f64 (*.f64 t t)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 t)) (neg.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 x))) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 t)) (cbrt.f64 (*.f64 t t))) (*.f64 (cbrt.f64 (*.f64 t t)) (/.f64 x (cbrt.f64 t)))) (*.f64 t (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (cbrt.f64 (*.f64 t t))) (*.f64 t (/.f64 x (cbrt.f64 t)))) (*.f64 t (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (cbrt.f64 (*.f64 t t))) (*.f64 (neg.f64 t) (/.f64 x (cbrt.f64 t)))) (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 y x) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t (-.f64 y x)) (neg.f64 t)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (-.f64 x y) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y t)) (cbrt.f64 (pow.f64 (/.f64 y t) 2)) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 t) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 x t))) (cbrt.f64 (pow.f64 (/.f64 x t) 2)) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x t)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 x t) 2))) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 t) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 x t)) (/.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y t) 1 (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y t) 2)) (cbrt.f64 (/.f64 y t)) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 y (cbrt.f64 (pow.f64 t -2))) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 t) y (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 -1 t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 y t)) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) t) (neg.f64 (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (-.f64 y x) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x t) (/.f64 y t))))))"]],"rules":[["egg-rr",95],["egg-rr",44],["egg-rr",56]],"time":36.412109375,"type":"rewrite"},{"count":[[306,217]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 (-.f64 y x) z) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","x","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(*.f64 -1 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(*.f64 -1 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(*.f64 -1 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 (*.f64 -1 y) (*.f64 -1 x))) t)) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 x t))","(neg.f64 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(/.f64 y t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 x t))","(neg.f64 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(*.f64 -1 (/.f64 x t))","(neg.f64 (/.f64 x t))","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 x t)) (/.f64 y t))","(/.f64 (-.f64 y x) t)"]],"time":375.886962890625,"type":"simplify"},{"compiler":[[3186,942]],"time":25.325927734375,"type":"eval"},{"alts":[["(+.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t)) x)","fresh",17.63026488942409],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","next",6.4574093828897965],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","done",1.3648771650523426],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","done",5.0770042850285995]],"compiler":[[19,12],[14,9],[12,7],[15,9],[19,12],[14,9]],"count":[[220,4]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[217,1],"picked":[1,1]}],"min-error":[0.00390625],"time":77.610107421875,"type":"prune"},{"compiler":[[30,12]],"locations":[["(*.f64 (-.f64 y x) z)",0.01171875,true],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)",6.087010018328273,true]],"time":6.501953125,"type":"localize"},{"count":[[2,72]],"series":[["(*.f64 (-.f64 y x) z)","z","-inf",0.194091796875],["(*.f64 (-.f64 y x) z)","z","inf",0.22998046875],["(*.f64 (-.f64 y x) z)","z","0",0.22900390625],["(*.f64 (-.f64 y x) z)","x","-inf",0.15087890625],["(*.f64 (-.f64 y x) z)","x","inf",0.176025390625],["(*.f64 (-.f64 y x) z)","x","0",0.153076171875],["(*.f64 (-.f64 y x) z)","y","-inf",0.182861328125],["(*.f64 (-.f64 y x) z)","y","inf",0.15283203125],["(*.f64 (-.f64 y x) z)","y","0",0.158935546875],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","t","-inf",0.31787109375],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","t","inf",0.248046875],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","t","0",0.31884765625],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","z","-inf",0.317138671875],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","z","inf",0.328125],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","z","0",0.372802734375],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","x","-inf",0.282958984375],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","x","inf",0.34912109375],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","x","0",0.55078125],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","y","-inf",0.4580078125],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","y","inf",0.344970703125],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","y","0",0.48193359375]],"time":6.26806640625,"type":"series"},{"count":[[2,71]],"inputs":[["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","(*.f64 (-.f64 y x) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 0) (fma.f64 (-.f64 y x) (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) (*.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (fma.f64 (-.f64 y x) (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) (*.f64 0 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 2)) (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y x) (/.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 y x) z) t) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 (-.f64 y x) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y x) z)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) z) 2)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 t) (*.f64 (-.f64 y x) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) z) t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) z) t) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (/.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 y x) z) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 (-.f64 y x) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 y x) z) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -2)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z y) (neg.f64 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 x z)) (*.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) z) 0) (*.f64 (-.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) z) (*.f64 (*.f64 (-.f64 y x) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z y) 1) (*.f64 (neg.f64 (*.f64 x z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 y x) z)) (*.f64 (-.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) z) (*.f64 0 (*.f64 (-.f64 y x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) z) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 y x) z)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) z) 2)) (cbrt.f64 (*.f64 (-.f64 y x) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (-.f64 y x)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (-.f64 y x) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) z) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (*.f64 z (cbrt.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 y x) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 y x) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 x y) z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z y (neg.f64 (*.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y z (neg.f64 (*.f64 x z)))))))"]],"rules":[["egg-rr",37],["egg-rr",34]],"time":23.3349609375,"type":"rewrite"},{"count":[[143,90]],"inputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","x","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(/.f64 (*.f64 (-.f64 y x) z) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y z) t) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 y z) t)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x)","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 y z) t) (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) x))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x))","(-.f64 x (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 z t) 1) x)) (/.f64 (*.f64 y z) t))","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 z (-.f64 y x)) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","x","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) t) x)","(fma.f64 (/.f64 (-.f64 y x) t) z x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))"]],"time":242.029052734375,"type":"simplify"},{"compiler":[[1151,377]],"time":12.75390625,"type":"eval"},{"alts":[["(+.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t)) x)","next",17.63026488942409],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","done",6.4574093828897965],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","done",1.3648771650523426],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","done",5.0770042850285995]],"compiler":[[19,12],[14,9],[12,7],[15,9],[19,12]],"count":[[94,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[90,0],"picked":[1,1]}],"min-error":[0.00390625],"time":20.632080078125,"type":"prune"},{"compiler":[[63,12]],"locations":[["(cbrt.f64 t)",0.09375,true],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))",2.636664413287808,true],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))",4.460931295252167,true],["(cbrt.f64 (*.f64 t t))",29.509257246460542,true]],"time":9.9609375,"type":"localize"},{"count":[[4,84]],"series":[["(cbrt.f64 t)","t","-inf",0.322021484375],["(cbrt.f64 t)","t","inf",0.181884765625],["(cbrt.f64 t)","t","0",0.18896484375],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","t","-inf",1.1708984375],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","t","inf",0.367919921875],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","t","0",0.399169921875],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","x","-inf",0.2880859375],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","x","inf",0.364013671875],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","x","0",0.369873046875],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","y","-inf",0.330078125],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","y","inf",0.29296875],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","y","0",0.329833984375],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","z","-inf",0.31494140625],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","z","inf",0.345947265625],["(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","z","0",0.467041015625],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","t","-inf",0.322021484375],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","t","inf",0.44091796875],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","t","0",0.406982421875],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","x","-inf",0.294921875],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","x","inf",0.27392578125],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","x","0",0.71484375],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","y","-inf",0.386962890625],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","y","inf",0.280029296875],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","y","0",0.736083984375],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","z","-inf",0.35302734375],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","z","inf",0.2900390625],["(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","z","0",2.001953125],["(cbrt.f64 (*.f64 t t))","t","-inf",0.333984375],["(cbrt.f64 (*.f64 t t))","t","inf",0.3359375],["(cbrt.f64 (*.f64 t t))","t","0",1.948974609375]],"time":15.277099609375,"type":"series"},{"count":[[4,235]],"inputs":[["(cbrt.f64 (*.f64 t t))","(/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t)))","(/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))","(cbrt.f64 t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 t 2/3) (*.f64 (pow.f64 t 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 t 2/3) 0) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 t 2/3) (*.f64 0 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 t 2/3)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 t)) (cbrt.f64 (pow.f64 t (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 t 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t (+.f64 2/3 1))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 t 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 t 4)) (pow.f64 t 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 t)) (cbrt.f64 (cbrt.f64 (*.f64 t (pow.f64 t 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 t 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 t 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t t) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 t 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 t)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 t 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 t 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 t t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 t -2)) (*.f64 z y)) (*.f64 (cbrt.f64 (pow.f64 t -2)) (neg.f64 (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 0) (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z y) (cbrt.f64 (pow.f64 t -2))) (*.f64 (neg.f64 (*.f64 x z)) (cbrt.f64 (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 t 2/3))) (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 z (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 t 2/3))) (/.f64 z (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) (/.f64 z (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 (-.f64 y x) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (pow.f64 t 2/3))) (/.f64 (-.f64 y x) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 t)) (/.f64 (-.f64 y x) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (-.f64 y x))) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (/.f64 (pow.f64 (*.f64 z (-.f64 y x)) 2/3) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) z) (neg.f64 (cbrt.f64 (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2) (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -1/3) (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (pow.f64 t 2/3)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (pow.f64 t 2/3)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (pow.f64 t -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)) (/.f64 z (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 z (-.f64 y x)) 2/3) (cbrt.f64 t)) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (*.f64 z (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)) (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 t -2))) (*.f64 (-.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3))) (neg.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t -2)) (*.f64 z (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) z) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (pow.f64 (*.f64 z (-.f64 y x)) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3) (cbrt.f64 (*.f64 (-.f64 x y) z))) (cbrt.f64 (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3) (cbrt.f64 (*.f64 z (-.f64 y x)))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 t)) z) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 (pow.f64 t 2/3))) (-.f64 y x)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 t)) (-.f64 y x)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (pow.f64 (*.f64 z (-.f64 y x)) 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 t 2/3))) z) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2) (*.f64 z (-.f64 y x))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (/.f64 z (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z (-.f64 y x))) (/.f64 (pow.f64 (*.f64 z (-.f64 y x)) 2/3) (cbrt.f64 t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 x y) z)) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z (-.f64 y x))) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3)) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (-.f64 y x) (cbrt.f64 t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) 1) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (/.f64 z (cbrt.f64 t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (-.f64 y x) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 t -1/3)) (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 (pow.f64 t 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) -1) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t 2/3))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) -1) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 t -1/3)) (*.f64 z (-.f64 y x))) (cbrt.f64 (pow.f64 t (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 t -2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 t -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) (*.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 0) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z (-.f64 y x)) t) (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 z (-.f64 y x)) t)) (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (-.f64 x y) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 t))) (/.f64 (*.f64 (-.f64 x y) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (cbrt.f64 t))) (pow.f64 (pow.f64 t 2/3) (-.f64 -1 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (-.f64 y x)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (/.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (cbrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t -1/3)) (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)) (neg.f64 (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (pow.f64 t -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t -1/3) (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z (-.f64 y x)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (-.f64 x y) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 t 2/3) (-.f64 -1 1/3)) (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (cbrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (pow.f64 t 2/3))) (cbrt.f64 (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (*.f64 z (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 t -1/3)) (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) z) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) z) (/.f64 1 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) z) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 y x)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 t -1/3)) (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t -2))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) 2/3)) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)))) (cbrt.f64 (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t -1/3) (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3)))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 x y) z) (neg.f64 (pow.f64 t -1/3))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 y x)) (neg.f64 (pow.f64 t -1/3))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t))) 1) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) 1) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) 1) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 x y) z)) (/.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (cbrt.f64 t)))) (cbrt.f64 (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z (-.f64 y x))) (/.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3) (cbrt.f64 (cbrt.f64 t)))) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3)) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3))) (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) (pow.f64 t -1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (-.f64 y x)) (pow.f64 (pow.f64 t 2/3) (-.f64 -1 1/3))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (pow.f64 t 2/3))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) -1) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) (cbrt.f64 (neg.f64 (pow.f64 t 2/3)))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 t)) 1) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) -1) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) -1) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 t (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t))) 1) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (cbrt.f64 (pow.f64 t 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t (+.f64 2/3 1)))) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (cbrt.f64 t))) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 y x)) (*.f64 (neg.f64 (pow.f64 t 2/3)) (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 x y) z) (cbrt.f64 (pow.f64 t -1/3))) (*.f64 (neg.f64 (pow.f64 t 2/3)) (cbrt.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) (cbrt.f64 (pow.f64 t -1/3))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) -1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4) (cbrt.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) 1) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -1/3))) (cbrt.f64 (pow.f64 t (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t)) -1) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) z) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3))) (*.f64 (cbrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 (neg.f64 t)) (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t))) (neg.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3)))) (*.f64 (cbrt.f64 (neg.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 t -1/3)) (*.f64 z (-.f64 y x))) (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 t -1/3)) (*.f64 (-.f64 x y) z)) (*.f64 (cbrt.f64 (pow.f64 t 2/3)) (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 t -1/3)) (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 t))) (cbrt.f64 (pow.f64 t (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 t -1/3)) (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (pow.f64 t 2/3)))) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t)))) (cbrt.f64 (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z (-.f64 y x)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 x y) z) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (-.f64 x y) z) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3)) (pow.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 x y) z) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 t -1/3) (/.f64 (*.f64 (-.f64 x y) z) (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z (-.f64 y x)) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 t) 0) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 t) (*.f64 0 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 t))) (cbrt.f64 (neg.f64 (pow.f64 t 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 t))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 t 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t (+.f64 2/3 1)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 t)) (cbrt.f64 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t 2/3)) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 t 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 t)))))"]],"rules":[["egg-rr",23],["egg-rr",97],["egg-rr",84],["egg-rr",31]],"time":41.2958984375,"type":"rewrite"},{"count":[[319,247]],"inputs":[["(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(*.f64 -1 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z (-.f64 y x)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x)))","(/.f64 (neg.f64 (*.f64 z x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z))","(/.f64 (*.f64 y z) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z))","(/.f64 (*.f64 y z) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z))","(/.f64 (*.f64 y z) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x)))","(/.f64 (neg.f64 (*.f64 z x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x)))","(/.f64 (neg.f64 (*.f64 z x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 z x))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 y z)))","(/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2/3))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 y z) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z x) t))","(neg.f64 (/.f64 (*.f64 z x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y z) t))","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(/.f64 (*.f64 (-.f64 y x) z) t)","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))","(/.f64 (*.f64 z (-.f64 y x)) t)","(*.f64 -1 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 (cbrt.f64 -1) t)))","(/.f64 (*.f64 z (-.f64 y x)) t)"]],"time":279.827880859375,"type":"simplify"},{"compiler":[[4632,1863]],"time":38.828125,"type":"eval"},{"alts":[["(+.f64 (/.f64 (/.f64 (*.f64 (-.f64 y x) (/.f64 z (cbrt.f64 t))) (cbrt.f64 t)) (cbrt.f64 t)) x)","fresh",4.5369060123050495],["(fma.f64 (-.f64 y x) (/.f64 z t) x)","done",1.3648771650523426],["(+.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t)) x)","done",17.63026488942409],["(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","done",6.4574093828897965],["(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","done",5.0770042850285995]],"compiler":[[20,11],[12,7],[19,12],[14,9],[15,9]],"count":[[251,5]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[247,1],"picked":[1,1]}],"min-error":[0],"time":73.577880859375,"type":"prune"},{"accuracy":[0.3446087753139631],"baseline":[1.3648771650523426],"branch":[["x",1.3648771650523426,1],["y",1.3648771650523428,1],["z",1.3648771650523426,1],["t",1.3648771650523426,1],["(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))",0.3446087753139631,3]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[73,30]],"count":[[6,3]],"inputs":[["(+.f64 (/.f64 (/.f64 (*.f64 (-.f64 y x) (/.f64 z (cbrt.f64 t))) (cbrt.f64 t)) (cbrt.f64 t)) x)","(+.f64 (/.f64 (/.f64 (*.f64 z (-.f64 y x)) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t)) x)","(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)","(fma.f64 (-.f64 y x) (/.f64 z t) x)","(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))"]],"link":["."],"name":["Numeric.Histogram:binBounds from Chart-1.5.3"],"oracle":[19.47577592199658],"outputs":[["(fma.f64 (-.f64 y x) (/.f64 z t) x)","(fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x)","(+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)"]],"time":24.26416015625,"times":[["x",3.512939453125],["y",3.385009765625],["z",3.56103515625],["t",3.443115234375],["(+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t))",8.950927734375]],"type":"regimes"},{"bstep":[[2.5122772971427785e+297,1.7667075342796713e+299,0.031982421875],[9.625133344402722e-240,8.074485496226019e-202,0.0859375]],"compiler":[[7,6],[13,8]],"method":["left-value","left-value"],"time":0.2109375,"type":"bsearch"},{"compiler":[[57,24]],"inputs":[["(if (<=.f64 (+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t)) 2346099009001469/234609900900146882186598677984664276915992487298421985521184355961332236331850990873356568705635355651517313099522045706849459083321945101930045653332497036251241466330965705541769635934035794134999367747434457067322823095146394284977019183976237427064832) (fma.f64 (-.f64 y x) (/.f64 z t) x) (if (<=.f64 (+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t)) 4999999999999999797831017376714894119127812233696870733560457558998243835015834942700401512775872587353423939115559831572611431741498074611166071691150501229607379410134558461510763529142729843207341692956811227775656913210014077504201792814563184923802875085144633272926482892941009176900625498112) (fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x) (+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t)) 2346099009001469/234609900900146882186598677984664276915992487298421985521184355961332236331850990873356568705635355651517313099522045706849459083321945101930045653332497036251241466330965705541769635934035794134999367747434457067322823095146394284977019183976237427064832) (fma.f64 (-.f64 y x) (/.f64 z t) x) (if (<=.f64 (+.f64 x (/.f64 (*.f64 (-.f64 y x) z) t)) 4999999999999999797831017376714894119127812233696870733560457558998243835015834942700401512775872587353423939115559831572611431741498074611166071691150501229607379410134558461510763529142729843207341692956811227775656913210014077504201792814563184923802875085144633272926482892941009176900625498112) (fma.f64 (*.f64 (-.f64 y x) z) (/.f64 1 t) x) (+.f64 (*.f64 (-.f64 (/.f64 y t) (/.f64 x t)) z) x)))","(if (<=.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 2346099009001469/234609900900146882186598677984664276915992487298421985521184355961332236331850990873356568705635355651517313099522045706849459083321945101930045653332497036251241466330965705541769635934035794134999367747434457067322823095146394284977019183976237427064832) (fma.f64 (-.f64 y x) (/.f64 z t) x) (if (<=.f64 (fma.f64 (-.f64 y x) (/.f64 z t) x) 4999999999999999797831017376714894119127812233696870733560457558998243835015834942700401512775872587353423939115559831572611431741498074611166071691150501229607379410134558461510763529142729843207341692956811227775656913210014077504201792814563184923802875085144633272926482892941009176900625498112) (fma.f64 (-.f64 y x) (/.f64 z t) x) (fma.f64 (-.f64 y x) (/.f64 z t) x)))"]],"stop":[["fuel",1]],"time":24.56103515625,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[57,24]],"remove-preprocessing":[[]],"time":13.715087890625,"type":"end"}]