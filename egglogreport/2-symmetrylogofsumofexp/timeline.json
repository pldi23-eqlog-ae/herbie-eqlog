[{"compiler":[[9,7]],"method":["search"],"sampling":[[12,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[11,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[10,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[9,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[8,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[7,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[6,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[5,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[4,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":90.455810546875,"type":"analyze"},{"outcomes":[["body",8192,"exit",6453.527099609375,7824],["body",512,"valid",169.709716796875,1018],["body",1024,"valid",683.41650390625,2004],["body",2048,"valid",99.06494140625,215],["body",256,"valid",323.94677734375,5019]],"time":7753.416015625,"type":"sample"},{"compiler":[[8,6]],"inputs":[["0","1"],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","(log.f64 (+.f64 (exp.f64 b) (exp.f64 a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","(log.f64 (+.f64 (exp.f64 b) (exp.f64 a)))","(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))"]],"symmetry":[[]],"time":70.84521484375,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))"]],"time":41.18798828125,"type":"simplify"},{"compiler":[[8,6]],"time":0.27685546875,"type":"eval"},{"alts":[["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","next",32.43922665634962]],"compiler":[[8,6],[8,6]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[32.43922665634962],"time":0.862060546875,"type":"prune"},{"compiler":[[19,6]],"locations":[["(+.f64 (exp.f64 a) (exp.f64 b))",0.01171875,true],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))",4.204705864532723,true]],"time":5.305908203125,"type":"localize"},{"count":[[2,16]],"series":[["(+.f64 (exp.f64 a) (exp.f64 b))","b","-inf",0.151123046875],["(+.f64 (exp.f64 a) (exp.f64 b))","b","inf",0.169189453125],["(+.f64 (exp.f64 a) (exp.f64 b))","b","0",0.194091796875],["(+.f64 (exp.f64 a) (exp.f64 b))","a","-inf",0.175048828125],["(+.f64 (exp.f64 a) (exp.f64 b))","a","inf",0.156982421875],["(+.f64 (exp.f64 a) (exp.f64 b))","a","0",0.22314453125],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","b","-inf",12.4970703125],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","b","inf",9.9619140625],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","b","0",1.654052734375],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","a","-inf",13.0400390625],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","a","inf",21.404052734375],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","a","0",1.013916015625]],"time":60.925048828125,"type":"series"},{"count":[[2,54]],"inputs":[["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","(+.f64 (exp.f64 a) (exp.f64 b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))) (pow.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2/3) (cbrt.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))))) (neg.f64 (pow.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 a) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 b) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 a) 0) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (exp.f64 a) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 a) (neg.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 b) (neg.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 2/3) (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (+.f64 (pow.f64 (exp.f64 a) 2/3) (pow.f64 (exp.f64 b) 2/3)) (cbrt.f64 (exp.f64 (+.f64 a b)))) (+.f64 (cbrt.f64 (exp.f64 a)) (cbrt.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (+.f64 (pow.f64 (exp.f64 b) 2/3) (pow.f64 (exp.f64 a) 2/3)) (cbrt.f64 (exp.f64 (+.f64 a b)))) (+.f64 (cbrt.f64 (exp.f64 a)) (cbrt.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b)))) (neg.f64 (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (exp.f64 a) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 a)) (pow.f64 (exp.f64 a) 2/3) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 a) 2/3) (cbrt.f64 (exp.f64 a)) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 b)) (pow.f64 (exp.f64 b) 2/3) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 b) 2/3) (cbrt.f64 (exp.f64 b)) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 b)) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 a)) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 b) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 a) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 b) 1 (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 a) 1 (exp.f64 b))))))"]],"rules":[["egg-rr",35],["egg-rr",19]],"time":45.58203125,"type":"rewrite"},{"count":[[70,84]],"inputs":[["(log.f64 (+.f64 1 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (+.f64 (log.f64 (+.f64 1 (exp.f64 b))) (*.f64 1/6 (*.f64 (pow.f64 a 3) (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))))))","(log.f64 (+.f64 1 (exp.f64 a)))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 2))) (pow.f64 b 2))) (/.f64 b (+.f64 1 (exp.f64 a)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 b 3) (-.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 3)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 2)))))) (+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 2))) (pow.f64 b 2))) (/.f64 b (+.f64 1 (exp.f64 a))))))","(+.f64 1 (exp.f64 b))","(+.f64 1 (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 (*.f64 1/6 (pow.f64 a 3)) (exp.f64 b)))))","(+.f64 1 (exp.f64 a))","(+.f64 1 (+.f64 (exp.f64 a) b))","(+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b)))))","(fma.f64 1/2 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (+.f64 (log.f64 (+.f64 1 (exp.f64 b))) (*.f64 1/6 (*.f64 (pow.f64 a 3) (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))))))","(+.f64 (fma.f64 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2))) 1/2 (/.f64 a (+.f64 1 (exp.f64 b)))) (fma.f64 1/6 (*.f64 (pow.f64 a 3) (+.f64 (fma.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) -3) (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 -3 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))) (log1p.f64 (exp.f64 b))))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 2))) (pow.f64 b 2))) (/.f64 b (+.f64 1 (exp.f64 a)))))","(+.f64 (log1p.f64 (exp.f64 a)) (fma.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (pow.f64 (+.f64 1 (exp.f64 a)) -2)) (*.f64 b b)) (/.f64 b (+.f64 1 (exp.f64 a)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 b 3) (-.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 3)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 2)))))) (+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 a)) 2))) (pow.f64 b 2))) (/.f64 b (+.f64 1 (exp.f64 a))))))","(fma.f64 1/6 (*.f64 (pow.f64 b 3) (+.f64 (fma.f64 2 (pow.f64 (+.f64 1 (exp.f64 a)) -3) (/.f64 1 (+.f64 1 (exp.f64 a)))) (*.f64 -3 (pow.f64 (+.f64 1 (exp.f64 a)) -2)))) (+.f64 (log1p.f64 (exp.f64 a)) (fma.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) (pow.f64 (+.f64 1 (exp.f64 a)) -2)) (*.f64 b b)) (/.f64 b (+.f64 1 (exp.f64 a))))))","(+.f64 1 (exp.f64 b))","(+.f64 1 (+.f64 a (exp.f64 b)))","(+.f64 (+.f64 1 a) (exp.f64 b))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (+.f64 (fma.f64 (*.f64 a a) 1/2 1) (exp.f64 b)) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 (*.f64 1/6 (pow.f64 a 3)) (exp.f64 b)))))","(+.f64 (+.f64 (fma.f64 (*.f64 a a) 1/2 1) (fma.f64 1/6 (pow.f64 a 3) (exp.f64 b))) a)","(+.f64 1 (exp.f64 a))","(+.f64 1 (+.f64 (exp.f64 a) b))","(+.f64 (+.f64 1 b) (exp.f64 a))","(+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))","(+.f64 1 (+.f64 (exp.f64 a) (fma.f64 (*.f64 b b) 1/2 b)))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))","(+.f64 (fma.f64 (pow.f64 b 3) 1/6 1) (+.f64 (exp.f64 a) (fma.f64 (*.f64 b b) 1/2 b)))"]],"time":70.864990234375,"type":"simplify"},{"compiler":[[1135,577]],"time":18.493896484375,"type":"eval"},{"alts":[["(log.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (exp.f64 a) 2/3) (pow.f64 (exp.f64 b) 2/3)) (cbrt.f64 (exp.f64 (+.f64 a b)))) (+.f64 (cbrt.f64 (exp.f64 a)) (cbrt.f64 (exp.f64 b)))))","fresh",32.45917438641597],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","next",16.206647078681467],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","done",32.43922665634962],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","fresh",19.010700827133945]],"compiler":[[26,18],[12,8],[8,6],[12,8],[26,18],[12,8],[12,8]],"count":[[85,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[84,3],"picked":[1,1]}],"min-error":[0.20703101157637743],"time":16.193115234375,"type":"prune"},{"compiler":[[30,14]],"locations":[["(/.f64 b (+.f64 1 (exp.f64 a)))",0.00390625,true],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))",0.0078125,true],["(+.f64 1 (exp.f64 a))",0.0078125,true],["(log1p.f64 (exp.f64 a))",0.49199289610049024,true]],"time":9.4580078125,"type":"localize"},{"count":[[4,44]],"series":[["(/.f64 b (+.f64 1 (exp.f64 a)))","a","-inf",0.173095703125],["(/.f64 b (+.f64 1 (exp.f64 a)))","a","inf",0.156005859375],["(/.f64 b (+.f64 1 (exp.f64 a)))","a","0",0.2890625],["(/.f64 b (+.f64 1 (exp.f64 a)))","b","-inf",0.385009765625],["(/.f64 b (+.f64 1 (exp.f64 a)))","b","inf",0.31884765625],["(/.f64 b (+.f64 1 (exp.f64 a)))","b","0",0.27587890625],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","b","-inf",0.2080078125],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","b","inf",0.404052734375],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","b","0",2.14111328125],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","a","-inf",0.472900390625],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","a","inf",0.4970703125],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","a","0",0.431884765625],["(+.f64 1 (exp.f64 a))","a","-inf",0.1630859375],["(+.f64 1 (exp.f64 a))","a","inf",0.14892578125],["(+.f64 1 (exp.f64 a))","a","0",0.18798828125],["(log1p.f64 (exp.f64 a))","a","-inf",9.225830078125],["(log1p.f64 (exp.f64 a))","a","inf",25.692138671875],["(log1p.f64 (exp.f64 a))","a","0",0.92919921875]],"time":42.47802734375,"type":"series"},{"count":[[4,184]],"inputs":[["(log1p.f64 (exp.f64 a))","(+.f64 1 (exp.f64 a))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(/.f64 b (+.f64 1 (exp.f64 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (exp.f64 a)) 0) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 a)) (*.f64 (log1p.f64 (exp.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (exp.f64 a))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 a)) (*.f64 0 (log1p.f64 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (exp.f64 a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (exp.f64 a))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 2)) (cbrt.f64 (log1p.f64 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (exp.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (exp.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (exp.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (exp.f64 a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (exp.f64 a)) 0) (+.f64 1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 a)) (*.f64 (+.f64 1 (exp.f64 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 1 (exp.f64 a))) (+.f64 1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 a)) (*.f64 0 (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 a) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 a) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (neg.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 (*.f64 a 3))) (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)) (+.f64 1 (exp.f64 (*.f64 a 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (exp.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 (exp.f64 a))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 a 3)))) (/.f64 1 (neg.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)) -1) (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 a))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 a))) -1) (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 (*.f64 a 3))) (/.f64 (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (exp.f64 (*.f64 a 3))) -1) (/.f64 (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 a 3)))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 a 3)))) 2) (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))) (/.f64 (+.f64 1 (exp.f64 (*.f64 a 3))) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1) (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))) (/.f64 (+.f64 1 (exp.f64 a)) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1) (/.f64 (+.f64 1 (exp.f64 a)) (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) a)) (-.f64 1 (cbrt.f64 (exp.f64 a)))) (+.f64 (cbrt.f64 (exp.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) a)) (cbrt.f64 (exp.f64 a)))) (+.f64 1 (cbrt.f64 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (exp.f64 a))) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)) (cbrt.f64 (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (exp.f64 (*.f64 a 3))) (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 a 3)))) (neg.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (exp.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)) (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 a 3))))) (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (+.f64 1 (exp.f64 (*.f64 a 3))))) (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 a 3)))) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))) (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 a 3)))) 1) (neg.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 (*.f64 (*.f64 a 3) 3))) (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))) (-.f64 (+.f64 1 (pow.f64 (exp.f64 a) 6)) (exp.f64 (*.f64 a 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (exp.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 (exp.f64 (*.f64 a 3))) (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 (*.f64 (*.f64 a 3) 3))) 1) (*.f64 (-.f64 (+.f64 1 (pow.f64 (exp.f64 a) 6)) (exp.f64 (*.f64 a 3))) (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 a 3)))) 1) (*.f64 (neg.f64 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 a)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) a)) (cbrt.f64 (exp.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 a) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 a)) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 b (+.f64 1 (exp.f64 a))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 0) (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) (*.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))) (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) (*.f64 0 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (log1p.f64 (exp.f64 a))) (/.f64 b (-.f64 -1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (log1p.f64 (exp.f64 a))) (/.f64 b (-.f64 -1 (exp.f64 a)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))) (cbrt.f64 (pow.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)) (-.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 2)) (cbrt.f64 (/.f64 (*.f64 (log1p.f64 (exp.f64 a)) b) (+.f64 1 (exp.f64 a)))))) (+.f64 (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) (cbrt.f64 (log1p.f64 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)) (cbrt.f64 (/.f64 (*.f64 (log1p.f64 (exp.f64 a)) b) (+.f64 1 (exp.f64 a)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 a))) (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 2)) (cbrt.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (neg.f64 (log1p.f64 (exp.f64 a))) (/.f64 b (-.f64 -1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log1p.f64 (exp.f64 a))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 2)) (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 1 (+.f64 1 (exp.f64 a))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log1p.f64 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 a)) 2)) (cbrt.f64 (log1p.f64 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (/.f64 1 (-.f64 -1 (exp.f64 a))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (/.f64 (cbrt.f64 (*.f64 b b)) (+.f64 1 (exp.f64 a))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (exp.f64 a)) (neg.f64 1/3)) (*.f64 b (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) -2))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 b (-.f64 -1 (exp.f64 a))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)) (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) b (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 b (+.f64 1 (exp.f64 a))) (log1p.f64 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 (exp.f64 a)) 1 (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 1 (log1p.f64 (exp.f64 a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 0) (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 b (+.f64 1 (exp.f64 a))) (*.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 b (+.f64 1 (exp.f64 a)))) (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 b (+.f64 1 (exp.f64 a))) (*.f64 0 (/.f64 b (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 b (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (exp.f64 a))) (/.f64 b (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 b (-.f64 -1 (exp.f64 a)))) (/.f64 (neg.f64 (cbrt.f64 (*.f64 b b))) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 b) -1) (/.f64 (neg.f64 (cbrt.f64 (*.f64 b b))) (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 a)) (neg.f64 1/3)) (*.f64 b (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 b)) 1) (/.f64 (cbrt.f64 (*.f64 b b)) (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 b b)) (+.f64 1 (exp.f64 (*.f64 a 3)))) (/.f64 (cbrt.f64 b) (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 b b)) -1) (/.f64 (cbrt.f64 b) (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 b) (+.f64 1 (exp.f64 (*.f64 a 3)))) (/.f64 (cbrt.f64 (*.f64 b b)) (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 a 3)))) (/.f64 b (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 (exp.f64 (*.f64 a 3)))) (/.f64 (neg.f64 b) (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 b) (/.f64 1 (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 b) (/.f64 (cbrt.f64 (*.f64 b b)) (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (/.f64 1 (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)) (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (exp.f64 a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 b (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 b (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (exp.f64 a))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 b b)) (+.f64 1 (exp.f64 a))) (cbrt.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) -2))) (pow.f64 (+.f64 1 (exp.f64 a)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (-.f64 -1 (exp.f64 a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (cbrt.f64 (+.f64 1 (exp.f64 a)))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 a)))) (/.f64 b (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 a)))) (/.f64 (neg.f64 b) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (+.f64 1 (exp.f64 a)))) (/.f64 (cbrt.f64 b) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b b)) (/.f64 (cbrt.f64 b) (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 b) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))) (/.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 b) (+.f64 1 (exp.f64 a))) (cbrt.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 b) -1) (/.f64 (cbrt.f64 (*.f64 b b)) (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) -2)) (/.f64 b (cbrt.f64 (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (+.f64 1 (exp.f64 (*.f64 a 3)))) (/.f64 1 (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b -1) (/.f64 1 (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) -2))) (/.f64 (neg.f64 b) (cbrt.f64 (+.f64 1 (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 b (-.f64 -1 (exp.f64 a)))) (/.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 b (cbrt.f64 (+.f64 1 (exp.f64 a)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 a)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 a)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 b) (-.f64 -1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 b (+.f64 1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b (cbrt.f64 (+.f64 1 (exp.f64 a)))) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) (cbrt.f64 (*.f64 b b))) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 a)) (neg.f64 1/3)) b) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)) (cbrt.f64 (neg.f64 b))) (cbrt.f64 (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2)) (cbrt.f64 b)) (cbrt.f64 (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 a)) -2))) (cbrt.f64 (+.f64 1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 b (cbrt.f64 (+.f64 1 (exp.f64 a)))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 2))) (cbrt.f64 (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 b (cbrt.f64 (+.f64 1 (exp.f64 a)))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 b) (cbrt.f64 (+.f64 1 (exp.f64 a)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b (+.f64 1 (exp.f64 (*.f64 a 3)))) (/.f64 1 (fma.f64 (exp.f64 a) (expm1.f64 a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b -1) (-.f64 -1 (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 b (cbrt.f64 (+.f64 1 (exp.f64 a))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 (exp.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 b (+.f64 1 (exp.f64 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 b (-.f64 -1 (exp.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 b (+.f64 1 (exp.f64 a))) 3))))))"]],"rules":[["egg-rr",65],["egg-rr",38],["egg-rr",61],["egg-rr",20]],"time":40.953857421875,"type":"rewrite"},{"count":[[228,213]],"inputs":[["(log.f64 2)","(+.f64 (*.f64 1/2 a) (log.f64 2))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (*.f64 1/8 (pow.f64 a 2))))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (+.f64 (*.f64 -1/192 (pow.f64 a 4)) (*.f64 1/8 (pow.f64 a 2)))))","(log.f64 (+.f64 1 (exp.f64 a)))","(log.f64 (+.f64 1 (exp.f64 a)))","(log.f64 (+.f64 1 (exp.f64 a)))","(log.f64 (+.f64 1 (exp.f64 a)))","(log.f64 (+.f64 1 (exp.f64 a)))","(log.f64 (+.f64 1 (exp.f64 a)))","(log.f64 (+.f64 1 (exp.f64 a)))","(log.f64 (+.f64 1 (exp.f64 a)))","2","(+.f64 2 a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a (*.f64 1/6 (pow.f64 a 3)))))","(+.f64 (*.f64 1/2 b) (log.f64 2))","(+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 b)) a) (+.f64 (*.f64 1/2 b) (log.f64 2)))","(+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 b)) a) (+.f64 (*.f64 1/2 b) (+.f64 (*.f64 (pow.f64 a 2) (-.f64 1/8 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (log.f64 2))))","(+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 b)) a) (+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/24 b) (+.f64 (*.f64 -1/16 b) (*.f64 -1/2 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b))))))) (+.f64 (*.f64 (pow.f64 a 2) (-.f64 1/8 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (log.f64 2)))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(log.f64 (+.f64 1 (exp.f64 a)))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(/.f64 b (+.f64 1 (exp.f64 a)))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(/.f64 b (+.f64 1 (exp.f64 a)))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(*.f64 1/2 b)","(+.f64 (*.f64 1/2 b) (*.f64 -1/4 (*.f64 a b)))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (*.f64 -1/4 (*.f64 a b))))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/16 b) (+.f64 (*.f64 1/24 b) (*.f64 -1/2 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (*.f64 -1/4 (*.f64 a b)))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 2)","(+.f64 (*.f64 1/2 a) (log.f64 2))","(fma.f64 1/2 a (log.f64 2))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (*.f64 1/8 (pow.f64 a 2))))","(fma.f64 a 1/2 (fma.f64 (*.f64 a a) 1/8 (log.f64 2)))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (+.f64 (*.f64 -1/192 (pow.f64 a 4)) (*.f64 1/8 (pow.f64 a 2)))))","(+.f64 (fma.f64 1/2 a (log.f64 2)) (fma.f64 -1/192 (pow.f64 a 4) (*.f64 1/8 (*.f64 a a))))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","2","(+.f64 2 a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))","(fma.f64 1/2 (*.f64 a a) (+.f64 2 a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a (*.f64 1/6 (pow.f64 a 3)))))","(+.f64 (fma.f64 (*.f64 a a) 1/2 2) (fma.f64 1/6 (pow.f64 a 3) a))","(+.f64 (*.f64 1/2 b) (log.f64 2))","(fma.f64 1/2 b (log.f64 2))","(+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 b)) a) (+.f64 (*.f64 1/2 b) (log.f64 2)))","(fma.f64 (+.f64 1/2 (*.f64 -1/4 b)) a (fma.f64 1/2 b (log.f64 2)))","(+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 b)) a) (+.f64 (*.f64 1/2 b) (+.f64 (*.f64 (pow.f64 a 2) (-.f64 1/8 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (log.f64 2))))","(fma.f64 (+.f64 1/2 (*.f64 -1/4 b)) a (fma.f64 1/2 b (fma.f64 (*.f64 a a) (-.f64 1/8 0) (log.f64 2))))","(+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 b)) a) (+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/24 b) (+.f64 (*.f64 -1/16 b) (*.f64 -1/2 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b))))))) (+.f64 (*.f64 (pow.f64 a 2) (-.f64 1/8 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (log.f64 2)))))","(fma.f64 a (+.f64 1/2 (*.f64 -1/4 b)) (fma.f64 1/2 b (fma.f64 (neg.f64 (pow.f64 a 3)) (+.f64 (*.f64 b (+.f64 -1/16 1/24)) (*.f64 -1/2 0)) (fma.f64 (*.f64 a a) (-.f64 1/8 0) (log.f64 2)))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(log.f64 (+.f64 1 (exp.f64 a)))","(log1p.f64 (exp.f64 a))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(/.f64 b (+.f64 1 (exp.f64 a)))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(/.f64 b (+.f64 1 (exp.f64 a)))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log.f64 (+.f64 1 (exp.f64 a))) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(*.f64 1/2 b)","(+.f64 (*.f64 1/2 b) (*.f64 -1/4 (*.f64 a b)))","(*.f64 b (+.f64 (*.f64 -1/4 a) 1/2))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (*.f64 -1/4 (*.f64 a b))))","(+.f64 (*.f64 b (+.f64 (*.f64 -1/4 a) 1/2)) (neg.f64 (*.f64 (*.f64 a a) 0)))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/16 b) (+.f64 (*.f64 1/24 b) (*.f64 -1/2 (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 1/8 b) (*.f64 -1/8 b)))) (*.f64 -1/4 (*.f64 a b)))))","(+.f64 (fma.f64 (neg.f64 (pow.f64 a 3)) (+.f64 (*.f64 b (+.f64 -1/16 1/24)) (*.f64 -1/2 0)) (neg.f64 (*.f64 (*.f64 a a) 0))) (*.f64 b (+.f64 (*.f64 -1/4 a) 1/2)))"]],"time":141.13720703125,"type":"simplify"},{"compiler":[[3734,2039]],"time":43.638916015625,"type":"eval"},{"alts":[["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","done",16.206647078681467],["(+.f64 (+.f64 (fma.f64 1/2 a (log.f64 2)) (fma.f64 -1/192 (pow.f64 a 4) (*.f64 1/8 (*.f64 a a)))) (/.f64 b (+.f64 1 (exp.f64 a))))","fresh",35.058125165570466],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","done",32.43922665634962],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","next",19.010700827133945]],"compiler":[[12,8],[25,19],[8,6],[12,8],[25,19],[12,8]],"count":[[217,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[213,1],"picked":[1,1]}],"min-error":[0.20703101157637743],"time":82.113037109375,"type":"prune"},{"compiler":[[30,14]],"locations":[["(+.f64 1 (exp.f64 b))",0.0078125,true],["(/.f64 a (+.f64 1 (exp.f64 b)))",0.0078125,true],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))",0.0078125,true],["(log1p.f64 (exp.f64 b))",0.01171875,true]],"time":7.074951171875,"type":"localize"},{"count":[[4,44]],"series":[["(+.f64 1 (exp.f64 b))","b","-inf",0.138916015625],["(+.f64 1 (exp.f64 b))","b","inf",0.156005859375],["(+.f64 1 (exp.f64 b))","b","0",0.158935546875],["(/.f64 a (+.f64 1 (exp.f64 b)))","b","-inf",0.166015625],["(/.f64 a (+.f64 1 (exp.f64 b)))","b","inf",0.15185546875],["(/.f64 a (+.f64 1 (exp.f64 b)))","b","0",0.242919921875],["(/.f64 a (+.f64 1 (exp.f64 b)))","a","-inf",0.39111328125],["(/.f64 a (+.f64 1 (exp.f64 b)))","a","inf",0.322998046875],["(/.f64 a (+.f64 1 (exp.f64 b)))","a","0",0.27001953125],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","b","-inf",0.44482421875],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","b","inf",0.476806640625],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","b","0",0.452880859375],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","a","-inf",0.199951171875],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","a","inf",0.425048828125],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","a","0",2.10693359375],["(log1p.f64 (exp.f64 b))","b","-inf",8.0439453125],["(log1p.f64 (exp.f64 b))","b","inf",9.14306640625],["(log1p.f64 (exp.f64 b))","b","0",0.325927734375]],"time":23.85888671875,"type":"series"},{"count":[[4,184]],"inputs":[["(log1p.f64 (exp.f64 b))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(/.f64 a (+.f64 1 (exp.f64 b)))","(+.f64 1 (exp.f64 b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 b)) (*.f64 (log1p.f64 (exp.f64 b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (exp.f64 b)) 0) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 b)) (*.f64 0 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (exp.f64 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (exp.f64 b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (*.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 0) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (*.f64 0 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 b)) (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (exp.f64 b)) (/.f64 a (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 a (-.f64 -1 (exp.f64 b))) (neg.f64 (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 a (-.f64 -1 (exp.f64 b))) (neg.f64 (log1p.f64 (exp.f64 b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (-.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 2)) (cbrt.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 a (-.f64 -1 (exp.f64 b))) (neg.f64 (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (/.f64 -1 (-.f64 -1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 a) (/.f64 1 (-.f64 -1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (exp.f64 b)) (neg.f64 1/3)) (*.f64 a (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 -1 (exp.f64 b))) a (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (/.f64 (cbrt.f64 (*.f64 a a)) (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 a (-.f64 -1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (log1p.f64 (exp.f64 b))) (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (log1p.f64 (exp.f64 b))) (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log1p.f64 (exp.f64 b)) (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1 (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log1p.f64 (exp.f64 b)) 1 (/.f64 a (+.f64 1 (exp.f64 b))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 0) (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 0 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 a (+.f64 1 (exp.f64 b)))) (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 a (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (exp.f64 b))) (/.f64 a (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a) (+.f64 1 (exp.f64 (*.f64 b 3)))) (/.f64 (cbrt.f64 (*.f64 a a)) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 b 3)))) (/.f64 a (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 (exp.f64 (*.f64 b 3)))) (/.f64 (neg.f64 a) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 a a)) -1) (/.f64 (cbrt.f64 a) (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 a a)) (+.f64 1 (exp.f64 (*.f64 b 3)))) (/.f64 (cbrt.f64 a) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a) (cbrt.f64 (-.f64 -1 (exp.f64 b)))) (/.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a) -1) (/.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 b)) (neg.f64 1/3)) (*.f64 a (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 b)))) (/.f64 a (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (/.f64 (cbrt.f64 (*.f64 a a)) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a) (/.f64 1 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 -1 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 (exp.f64 b))) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 a (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (exp.f64 b))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (pow.f64 (+.f64 1 (exp.f64 b)) (neg.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 a a)) (+.f64 1 (exp.f64 b))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (-.f64 -1 (exp.f64 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b)))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a) -1) (/.f64 (cbrt.f64 (*.f64 a a)) (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a) (+.f64 1 (exp.f64 b))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a -1) (/.f64 1 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (+.f64 1 (exp.f64 (*.f64 b 3)))) (/.f64 1 (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 (exp.f64 b)))) (/.f64 (neg.f64 a) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (/.f64 (neg.f64 a) (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (+.f64 1 (exp.f64 b)))) (/.f64 (cbrt.f64 a) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (/.f64 (cbrt.f64 a) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 a)) 1) (/.f64 (cbrt.f64 (*.f64 a a)) (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 a)) (cbrt.f64 (+.f64 1 (exp.f64 b)))) (/.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b)))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b)))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 a (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 a) (-.f64 -1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b)))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) (neg.f64 1/3)) a) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 a)) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (neg.f64 a))) (cbrt.f64 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b)))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 a)) (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))) (cbrt.f64 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 a -1) (-.f64 -1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 a (+.f64 1 (exp.f64 (*.f64 b 3)))) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 a) (cbrt.f64 (+.f64 1 (exp.f64 b)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b)))) 1) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 a (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 b)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 b)) (*.f64 (+.f64 1 (exp.f64 b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (exp.f64 b)) 0) (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 b)) (*.f64 0 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 1 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (exp.f64 b) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (exp.f64 b) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 b)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (neg.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 b) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (exp.f64 b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) (+.f64 1 (exp.f64 (*.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 (exp.f64 b))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 b 3)))) (/.f64 1 (neg.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 b 3)))) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 b 3)))) 2) (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1) (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))) (/.f64 (+.f64 1 (exp.f64 b)) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1) (/.f64 (+.f64 1 (exp.f64 b)) (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))) (/.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) -1) (/.f64 (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (/.f64 (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) -1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) -1) (/.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) b)) (-.f64 1 (cbrt.f64 (exp.f64 b)))) (+.f64 (cbrt.f64 (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) b)) (cbrt.f64 (exp.f64 b)))) (+.f64 1 (cbrt.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 b 3)))) (neg.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (+.f64 1 (exp.f64 (*.f64 b 3))))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 b 3))))) (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 (*.f64 (*.f64 b 3) 3))) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))) (-.f64 (+.f64 1 (pow.f64 (exp.f64 b) 6)) (exp.f64 (*.f64 b 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 b 3)))) 1) (neg.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (exp.f64 (*.f64 b 3)))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1))) (pow.f64 (cbrt.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (exp.f64 b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 1 (exp.f64 (*.f64 b 3)))) 1) (*.f64 (neg.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 (*.f64 (*.f64 b 3) 3))) 1) (*.f64 (-.f64 (+.f64 1 (pow.f64 (exp.f64 b) 6)) (exp.f64 (*.f64 b 3))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 -1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 b)) (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 b) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (E.f64) (E.f64)) b)) (cbrt.f64 (exp.f64 b)) 1)))))"]],"rules":[["egg-rr",61],["egg-rr",65],["egg-rr",38],["egg-rr",20]],"time":39.583984375,"type":"rewrite"},{"count":[[228,213]],"inputs":[["(log.f64 2)","(+.f64 (*.f64 1/2 b) (log.f64 2))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 1/8 (pow.f64 b 2)) (log.f64 2)))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 1/8 (pow.f64 b 2)) (+.f64 (log.f64 2) (*.f64 -1/192 (pow.f64 b 4)))))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(log.f64 (+.f64 1 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(/.f64 a (+.f64 1 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(/.f64 a (+.f64 1 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 1/2 a) (log.f64 2))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (*.f64 (-.f64 1/2 (*.f64 1/4 a)) b)))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (+.f64 (*.f64 (-.f64 1/8 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (pow.f64 b 2)) (*.f64 (-.f64 1/2 (*.f64 1/4 a)) b))))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (+.f64 (*.f64 (-.f64 1/8 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (pow.f64 b 2)) (+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 a)) b) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 1/24 a) (*.f64 -1/16 a))) (pow.f64 b 3)))))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 1/2 a)","(+.f64 (*.f64 1/2 a) (*.f64 -1/4 (*.f64 a b)))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (*.f64 -1/4 (*.f64 a b))))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (+.f64 (*.f64 -1/4 (*.f64 a b)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 1/24 a) (*.f64 -1/16 a))) (pow.f64 b 3))))))","2","(+.f64 2 b)","(+.f64 2 (+.f64 b (*.f64 1/2 (pow.f64 b 2))))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 2 (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 2)","(+.f64 (*.f64 1/2 b) (log.f64 2))","(fma.f64 1/2 b (log.f64 2))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 1/8 (pow.f64 b 2)) (log.f64 2)))","(fma.f64 1/2 b (fma.f64 1/8 (*.f64 b b) (log.f64 2)))","(+.f64 (*.f64 1/2 b) (+.f64 (*.f64 1/8 (pow.f64 b 2)) (+.f64 (log.f64 2) (*.f64 -1/192 (pow.f64 b 4)))))","(fma.f64 1/2 b (fma.f64 (*.f64 b b) 1/8 (fma.f64 -1/192 (pow.f64 b 4) (log.f64 2))))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(/.f64 a (+.f64 1 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(/.f64 a (+.f64 1 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (*.f64 1/2 a) (log.f64 2))","(fma.f64 1/2 a (log.f64 2))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (*.f64 (-.f64 1/2 (*.f64 1/4 a)) b)))","(fma.f64 1/2 a (fma.f64 (+.f64 1/2 (*.f64 -1/4 a)) b (log.f64 2)))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (+.f64 (*.f64 (-.f64 1/8 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (pow.f64 b 2)) (*.f64 (-.f64 1/2 (*.f64 1/4 a)) b))))","(+.f64 (fma.f64 1/2 a (log.f64 2)) (fma.f64 (-.f64 1/8 0) (*.f64 b b) (*.f64 (+.f64 1/2 (*.f64 -1/4 a)) b)))","(+.f64 (*.f64 1/2 a) (+.f64 (log.f64 2) (+.f64 (*.f64 (-.f64 1/8 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (pow.f64 b 2)) (+.f64 (*.f64 (-.f64 1/2 (*.f64 1/4 a)) b) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 1/24 a) (*.f64 -1/16 a))) (pow.f64 b 3)))))))","(+.f64 (fma.f64 1/2 a (log.f64 2)) (fma.f64 (*.f64 b b) (-.f64 1/8 0) (fma.f64 (+.f64 1/2 (*.f64 -1/4 a)) b (*.f64 (neg.f64 (pow.f64 b 3)) (fma.f64 a -1/48 (*.f64 -1/2 0))))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(*.f64 1/2 a)","(+.f64 (*.f64 1/2 a) (*.f64 -1/4 (*.f64 a b)))","(fma.f64 1/2 a (*.f64 -1/4 (*.f64 a b)))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (*.f64 -1/4 (*.f64 a b))))","(fma.f64 a 1/2 (fma.f64 (*.f64 -1/4 a) b (neg.f64 (*.f64 0 (*.f64 b b)))))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (+.f64 (*.f64 -1/4 (*.f64 a b)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 1/24 a) (*.f64 -1/16 a))) (pow.f64 b 3))))))","(fma.f64 1/2 a (fma.f64 (neg.f64 0) (*.f64 b b) (fma.f64 -1/4 (*.f64 a b) (*.f64 (neg.f64 (pow.f64 b 3)) (fma.f64 a -1/48 (*.f64 -1/2 0))))))","2","(+.f64 2 b)","(+.f64 2 (+.f64 b (*.f64 1/2 (pow.f64 b 2))))","(+.f64 2 (fma.f64 (*.f64 b b) 1/2 b))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 2 (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))","(+.f64 (fma.f64 (pow.f64 b 3) 1/6 2) (fma.f64 (*.f64 b b) 1/2 b))"]],"time":151.22119140625,"type":"simplify"},{"compiler":[[3733,2030]],"time":44.5419921875,"type":"eval"},{"alts":[["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","next",25.843543553457042],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","done",32.43922665634962],["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","done",16.206647078681467],["(+.f64 (+.f64 (fma.f64 1/2 a (log.f64 2)) (fma.f64 -1/192 (pow.f64 a 4) (*.f64 1/8 (*.f64 a a)))) (/.f64 b (+.f64 1 (exp.f64 a))))","fresh",35.058125165570466],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","done",19.010700827133945]],"compiler":[[43,27],[8,6],[12,8],[25,19],[12,8],[43,27],[25,19]],"count":[[217,5]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[213,1],"picked":[1,1]}],"min-error":[0.20312476157637743],"time":78.52197265625,"type":"prune"},{"compiler":[[188,92]],"locations":[["(*.f64 a (log1p.f64 (exp.f64 b)))",0.125,true],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))",0.53515625,true],["(pow.f64 (log1p.f64 (exp.f64 b)) 2)",0.740566259768442,true],["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))",29.524095905571787,true]],"time":39.755859375,"type":"localize"},{"count":[[4,63]],"series":[["(*.f64 a (log1p.f64 (exp.f64 b)))","b","-inf",0.152099609375],["(*.f64 a (log1p.f64 (exp.f64 b)))","b","inf",0.184814453125],["(*.f64 a (log1p.f64 (exp.f64 b)))","b","0",0.239990234375],["(*.f64 a (log1p.f64 (exp.f64 b)))","a","-inf",0.284912109375],["(*.f64 a (log1p.f64 (exp.f64 b)))","a","inf",0.337890625],["(*.f64 a (log1p.f64 (exp.f64 b)))","a","0",10.557861328125],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","a","-inf",0.97607421875],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","a","inf",0.509033203125],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","a","0",0.765869140625],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","b","-inf",4.753173828125],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","b","inf",28.39892578125],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","b","0",9.7919921875],["(pow.f64 (log1p.f64 (exp.f64 b)) 2)","b","-inf",0.369873046875],["(pow.f64 (log1p.f64 (exp.f64 b)) 2)","b","inf",0.35693359375],["(pow.f64 (log1p.f64 (exp.f64 b)) 2)","b","0",0.322998046875],["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))","b","-inf",1.60107421875],["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))","b","inf",1.992919921875],["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))","b","0",1.78515625],["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))","a","-inf",0.31982421875],["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))","a","inf",0.420166015625],["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))","a","0",0.596923828125]],"time":65.362060546875,"type":"series"},{"count":[[4,186]],"inputs":[["(cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","(*.f64 a (log1p.f64 (exp.f64 b)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) 0) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) (*.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) (*.f64 0 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 4))) (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (neg.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b)))) (pow.f64 (+.f64 1 (exp.f64 b)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 2/3) (pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b)))) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 a 2/3) (pow.f64 (+.f64 1 (exp.f64 b)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (neg.f64 a))) (cbrt.f64 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (neg.f64 (cbrt.f64 a))) (neg.f64 (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b))))) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 2 3))) (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 a)) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (cbrt.f64 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 a)) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (neg.f64 (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b)))) 1) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 a 2/3) 1) (pow.f64 (+.f64 1 (exp.f64 b)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b)))) (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b)))) (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b)))) 1) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 a 2/3) (cbrt.f64 (+.f64 1 (exp.f64 b))))) (neg.f64 (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 a 2/3)) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (*.f64 a a))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 -1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 a a) (+.f64 1 (exp.f64 b)))) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 a a) (-.f64 -1 (exp.f64 b)))) (cbrt.f64 (-.f64 -1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) 0) (pow.f64 (log1p.f64 (exp.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (pow.f64 (log1p.f64 (exp.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) (*.f64 0 (pow.f64 (log1p.f64 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (exp.f64 b)))) 4) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (exp.f64 b)) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (log1p.f64 (exp.f64 b))) -1) (*.f64 (neg.f64 (log1p.f64 (exp.f64 b))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (exp.f64 b))) (neg.f64 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 4)) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (pow.f64 (log1p.f64 (exp.f64 b)) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log1p.f64 (exp.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (exp.f64 b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (log1p.f64 (exp.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))))) (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (log1p.f64 (exp.f64 b)) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (+.f64 (log1p.f64 (exp.f64 b)) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (log1p.f64 (exp.f64 b))) (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (-.f64 -1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (-.f64 -1 (exp.f64 b))))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (+.f64 (log1p.f64 (exp.f64 b)) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (exp.f64 b)) (+.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (-.f64 -1 (exp.f64 b)))))) (+.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (-.f64 -1 (exp.f64 b)))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 0) (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (+.f64 (log1p.f64 (exp.f64 b)) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) (*.f64 1 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) (*.f64 1 (+.f64 (log1p.f64 (exp.f64 b)) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))))) (*.f64 1 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))) (*.f64 1 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 0 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (log1p.f64 (exp.f64 b)) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 1) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 1) (*.f64 (+.f64 (log1p.f64 (exp.f64 b)) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))))) 1) (*.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 1) (*.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3))) (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (-.f64 -1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (-.f64 -1 (exp.f64 b)))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (*.f64 (pow.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) 2/3) (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) (pow.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 2/3) (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (cbrt.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) (pow.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))) (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3) (+.f64 (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3) (+.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))) (*.f64 (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (cbrt.f64 (log1p.f64 (exp.f64 b))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))) 1 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))) (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))) (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))) (*.f64 (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2/3)) (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) 2) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (exp.f64 b)))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)))) (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))) (*.f64 (pow.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) 2/3) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b)))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (log1p.f64 (exp.f64 b))) (log1p.f64 (exp.f64 b)))) 2) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (cbrt.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))))) (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3)) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (*.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (-.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (-.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (cbrt.f64 (log1p.f64 (exp.f64 b))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 (log1p.f64 (exp.f64 b)) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 0) (*.f64 a (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (*.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 a (log1p.f64 (exp.f64 b)))) (*.f64 a (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (*.f64 0 (*.f64 a (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (pow.f64 a 2/3) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (log1p.f64 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (exp.f64 b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (log1p.f64 (exp.f64 b)))) (pow.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 2/3) (cbrt.f64 (*.f64 a (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (exp.f64 b)) (cbrt.f64 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (log1p.f64 (exp.f64 b)))) (pow.f64 (log1p.f64 (exp.f64 b)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (*.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b))))) (pow.f64 (cbrt.f64 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (exp.f64 b))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a) (neg.f64 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 a (log1p.f64 (exp.f64 b))))) (neg.f64 (pow.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (log1p.f64 (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (log1p.f64 (exp.f64 b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (log1p.f64 (exp.f64 b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 a) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (log1p.f64 (exp.f64 b))) 3))))))"]],"rules":[["egg-rr",31],["egg-rr",80],["egg-rr",30],["egg-rr",45]],"time":60.64111328125,"type":"rewrite"},{"count":[[249,224]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 b 2)) (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 b 2)) (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 14)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 5/48 (pow.f64 a 2)) (+.f64 (*.f64 -3/16 (pow.f64 a 2)) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5)) 1/3) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2))))))))))) (pow.f64 b 3)) (pow.f64 (cbrt.f64 1/4) 2)) (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4)))))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(pow.f64 (log.f64 2) 2)","(+.f64 (pow.f64 (log.f64 2) 2) (*.f64 (log.f64 2) b))","(+.f64 (pow.f64 (log.f64 2) 2) (+.f64 (*.f64 (log.f64 2) b) (*.f64 (pow.f64 b 2) (+.f64 1/4 (*.f64 1/4 (log.f64 2))))))","(+.f64 (pow.f64 (log.f64 2) 2) (+.f64 (*.f64 (log.f64 2) b) (+.f64 (*.f64 (pow.f64 b 2) (+.f64 1/4 (*.f64 1/4 (log.f64 2)))) (*.f64 1/8 (pow.f64 b 3)))))","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))))","(+.f64 (*.f64 b (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2)))))","(+.f64 (*.f64 b (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))) (+.f64 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/8 a) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) 2)))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (pow.f64 (cbrt.f64 1/2) 2))))))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))))))","(+.f64 (*.f64 b (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))) (+.f64 (*.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (pow.f64 (cbrt.f64 1/2) 2))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/8 a) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) 2)))))) (+.f64 (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 -1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 14)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 5/48 (pow.f64 a 2)) (+.f64 (*.f64 -3/16 (pow.f64 a 2)) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5)) 1/3) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2))))))))))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 1/8 (+.f64 (*.f64 1/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 2)) 1/9) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 a 2) (pow.f64 (log.f64 2) 2))) 1/3) (/.f64 (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 3) (pow.f64 (cbrt.f64 1/2) 2)))) (+.f64 (*.f64 1/24 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 5) (pow.f64 a 5))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (*.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 1/4 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 a 5) (pow.f64 (log.f64 2) 5))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (*.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))))) (pow.f64 (cbrt.f64 1/2) 2)))))) (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 4)) 1/9) (*.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3)))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 -1/16 a) (+.f64 (*.f64 -1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 7)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 1/24 a))))) (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 5)) 1/9) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 1/216 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3)))))))))) (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/8 a) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) 2)))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (pow.f64 (cbrt.f64 1/2) 2))))))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2)))))))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (pow.f64 1 1/3) (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 (pow.f64 1 1/3) (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 (pow.f64 1 1/3) (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 (log.f64 2) a)","(+.f64 (*.f64 (log.f64 2) a) (*.f64 1/2 (*.f64 a b)))","(+.f64 (*.f64 1/8 (*.f64 a (pow.f64 b 2))) (+.f64 (*.f64 (log.f64 2) a) (*.f64 1/2 (*.f64 a b))))","(+.f64 (*.f64 1/8 (*.f64 a (pow.f64 b 2))) (+.f64 (*.f64 (log.f64 2) a) (+.f64 (*.f64 -1/192 (*.f64 a (pow.f64 b 4))) (*.f64 1/2 (*.f64 a b)))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))","(*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4)))","(fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 14) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)) b)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 b 2)) (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 a -4)) (/.f64 (*.f64 (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 34) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))) (*.f64 (*.f64 a a) -1/16)) (*.f64 b b)) (pow.f64 (cbrt.f64 1/4) 2))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 14) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)) b)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 b 2)) (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 14)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 5/48 (pow.f64 a 2)) (+.f64 (*.f64 -3/16 (pow.f64 a 2)) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5)) 1/3) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2))))))))))) (pow.f64 b 3)) (pow.f64 (cbrt.f64 1/4) 2)) (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 a -4)) (/.f64 (*.f64 (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 34) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))) (*.f64 (*.f64 a a) -1/16)) (*.f64 b b)) (pow.f64 (cbrt.f64 1/4) 2))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 14) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)) b)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 (fma.f64 -1/1728 (*.f64 (cbrt.f64 (pow.f64 a 14)) (pow.f64 (cbrt.f64 1/4) -2)) (fma.f64 5/48 (*.f64 a a) (fma.f64 -3/16 (*.f64 a a) (+.f64 (neg.f64 (*.f64 (*.f64 a a) -1/16)) (*.f64 (*.f64 1/6 (pow.f64 (pow.f64 a 8) 1/9)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -5)) (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 34) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))) (*.f64 (*.f64 a a) -1/16)))))))) (pow.f64 b 3)) (cbrt.f64 (pow.f64 a -4))) (pow.f64 (cbrt.f64 1/4) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4)))))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(pow.f64 (log.f64 2) 2)","(+.f64 (pow.f64 (log.f64 2) 2) (*.f64 (log.f64 2) b))","(+.f64 (pow.f64 (log.f64 2) 2) (+.f64 (*.f64 (log.f64 2) b) (*.f64 (pow.f64 b 2) (+.f64 1/4 (*.f64 1/4 (log.f64 2))))))","(+.f64 (pow.f64 (log.f64 2) 2) (fma.f64 (log.f64 2) b (*.f64 (*.f64 b b) (+.f64 1/4 (*.f64 1/4 (log.f64 2))))))","(+.f64 (pow.f64 (log.f64 2) 2) (+.f64 (*.f64 (log.f64 2) b) (+.f64 (*.f64 (pow.f64 b 2) (+.f64 1/4 (*.f64 1/4 (log.f64 2)))) (*.f64 1/8 (pow.f64 b 3)))))","(+.f64 (pow.f64 (log.f64 2) 2) (fma.f64 (log.f64 2) b (fma.f64 (*.f64 b b) (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/8 (pow.f64 b 3)))))","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2)","(pow.f64 (log1p.f64 (exp.f64 b)) 2)","(*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))))","(*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))))","(+.f64 (*.f64 b (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2)))))","(fma.f64 b (fma.f64 (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 7) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2))) (*.f64 1/6 (pow.f64 (pow.f64 (log.f64 2) -2) 1/9))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (+.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (log.f64 2) 5) 1/9) (*.f64 (*.f64 -1/12 (pow.f64 (pow.f64 a 14) 1/9)) (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2)) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))))))))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2)))))","(+.f64 (*.f64 b (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))) (+.f64 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/8 a) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) 2)))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (pow.f64 (cbrt.f64 1/2) 2))))))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))))))","(fma.f64 b (fma.f64 (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 7) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2))) (*.f64 1/6 (pow.f64 (pow.f64 (log.f64 2) -2) 1/9))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (+.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (log.f64 2) 5) 1/9) (*.f64 (*.f64 -1/12 (pow.f64 (pow.f64 a 14) 1/9)) (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2)) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))))))))) (fma.f64 (*.f64 b b) (fma.f64 (+.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (log.f64 2) 5) 1/9) (*.f64 (*.f64 -1/12 (pow.f64 (pow.f64 a 14) 1/9)) (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2)) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))))))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 7) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2))) (*.f64 1/6 (pow.f64 (pow.f64 (log.f64 2) -2) 1/9))) (fma.f64 (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (log.f64 2) -2)) (+.f64 1/8 (*.f64 -1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 a -2))) (*.f64 (fma.f64 1/8 a (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 17) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) -2)))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 a -4)) (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 34) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))) (*.f64 (*.f64 a a) -1/16))) (pow.f64 (cbrt.f64 1/4) 2)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (log.f64 2) -4))) (+.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 -1/3 (pow.f64 (pow.f64 (log.f64 2) 16) 1/9))))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2))) (*.f64 (-.f64 (*.f64 1/16 a) (fma.f64 1/8 (*.f64 (log.f64 2) a) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (*.f64 1/2 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a)))))))) (pow.f64 (cbrt.f64 1/2) -2)))))))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))))))","(+.f64 (*.f64 b (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))) (+.f64 (*.f64 (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (pow.f64 (cbrt.f64 1/2) 2))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/8 a) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) 2)))))) (+.f64 (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 -1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 14)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 5/48 (pow.f64 a 2)) (+.f64 (*.f64 -3/16 (pow.f64 a 2)) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 8)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5)) 1/3) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2))))))))))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 1/8 (+.f64 (*.f64 1/27 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 2)) 1/9) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 a 2) (pow.f64 (log.f64 2) 2))) 1/3) (/.f64 (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 3) (pow.f64 (cbrt.f64 1/2) 2)))) (+.f64 (*.f64 1/24 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/2 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 5) (pow.f64 a 5))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (*.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 1/4 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 a 5) (pow.f64 (log.f64 2) 5))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (*.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))))))) (pow.f64 (cbrt.f64 1/2) 2)))))) (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 4)) 1/9) (*.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3)))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 -1/16 a) (+.f64 (*.f64 -1/1728 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 7)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 1/24 a))))) (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 5)) 1/9) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 1/216 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3)))))))))) (pow.f64 b 3)) (+.f64 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 5)) 1/9)) (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 14)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))))))) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 7)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3))) (*.f64 1/6 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/9)))) (+.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 2)) 1/3) (-.f64 1/8 (*.f64 1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (+.f64 (*.f64 1/8 a) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 17)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) 2)))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 4)) 1/3) (/.f64 (+.f64 (*.f64 1/48 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (pow.f64 a 34)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))) (+.f64 (*.f64 -1/4 (pow.f64 a 2)) (*.f64 3/16 (pow.f64 a 2)))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 2) 4)) 1/3) (-.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 1/3 (pow.f64 (*.f64 1 (pow.f64 (log.f64 2) 16)) 1/9)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (log.f64 2) 2) (pow.f64 a 2))) 1/3) (/.f64 (-.f64 (*.f64 1/16 a) (+.f64 (*.f64 1/8 (*.f64 a (log.f64 2))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (log.f64 2) a)) 1/9) (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (pow.f64 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2)))) 2)))) (*.f64 1/2 (-.f64 (*.f64 1/4 a) (*.f64 1/4 (*.f64 a (log.f64 2))))))))) (pow.f64 (cbrt.f64 1/2) 2))))))))) (*.f64 (+.f64 (pow.f64 (log.f64 2) 1/3) (*.f64 (pow.f64 (*.f64 1 a) 1/3) (cbrt.f64 1/2))) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 2) 2) 1/3) (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (cbrt.f64 1/4))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 2) a)) 1/3) (cbrt.f64 1/2)))))))","(fma.f64 b (fma.f64 (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 7) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2))) (*.f64 1/6 (pow.f64 (pow.f64 (log.f64 2) -2) 1/9))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (+.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (log.f64 2) 5) 1/9) (*.f64 (*.f64 -1/12 (pow.f64 (pow.f64 a 14) 1/9)) (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2)) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))))))))) (fma.f64 (fma.f64 (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 a -4)) (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 34) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))) (*.f64 (*.f64 a a) -1/16))) (pow.f64 (cbrt.f64 1/4) 2)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (log.f64 2) -4))) (+.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 -1/3 (pow.f64 (pow.f64 (log.f64 2) 16) 1/9))))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2))) (*.f64 (-.f64 (*.f64 1/16 a) (fma.f64 1/8 (*.f64 (log.f64 2) a) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (*.f64 1/2 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a)))))))) (pow.f64 (cbrt.f64 1/2) -2))))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 7) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2))) (*.f64 1/6 (pow.f64 (pow.f64 (log.f64 2) -2) 1/9))) (fma.f64 (+.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (log.f64 2) 5) 1/9) (*.f64 (*.f64 -1/12 (pow.f64 (pow.f64 a 14) 1/9)) (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2)) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (log.f64 2) -2)) (+.f64 1/8 (*.f64 -1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 a -2))) (*.f64 (fma.f64 1/8 a (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 17) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) -2)))) (fma.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 a -4)) (fma.f64 -1/1728 (*.f64 (cbrt.f64 (pow.f64 a 14)) (pow.f64 (cbrt.f64 1/4) -2)) (fma.f64 5/48 (*.f64 a a) (fma.f64 -3/16 (*.f64 a a) (+.f64 (neg.f64 (*.f64 (*.f64 a a) -1/16)) (*.f64 (*.f64 1/6 (pow.f64 (pow.f64 a 8) 1/9)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -5)) (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 34) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))) (*.f64 (*.f64 a a) -1/16))))))))) (pow.f64 (cbrt.f64 1/4) 2)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (log.f64 2) -4))) (-.f64 1/8 (fma.f64 1/27 (cbrt.f64 (pow.f64 (log.f64 2) 5)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 2)) 1/9) (+.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 -1/3 (pow.f64 (pow.f64 (log.f64 2) 16) 1/9))))))))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2))) (*.f64 (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 3)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 1/24 (*.f64 (log.f64 2) a) (fma.f64 1/2 (-.f64 (*.f64 1/16 a) (fma.f64 1/8 (*.f64 (log.f64 2) a) (*.f64 1/2 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a)))))) (fma.f64 4/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 (log.f64 2) a) 5) -1) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -5)) (*.f64 (-.f64 (*.f64 1/16 a) (fma.f64 1/8 (*.f64 (log.f64 2) a) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (*.f64 1/2 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a)))))))) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a)))))) (fma.f64 1/4 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) (*.f64 (*.f64 2/9 (pow.f64 (pow.f64 (pow.f64 (*.f64 (log.f64 2) a) 5) -1) 1/9)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -5)) (*.f64 (-.f64 (*.f64 1/16 a) (fma.f64 1/8 (*.f64 (log.f64 2) a) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (*.f64 1/2 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a)))))))) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))))))))))) (pow.f64 (cbrt.f64 1/2) -2))))) (*.f64 (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))) (*.f64 -1/3 (+.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (fma.f64 1/6 (*.f64 (pow.f64 (pow.f64 a 4) 1/9) (*.f64 (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 17) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (*.f64 a 0)) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -5)))) (fma.f64 -1/2 (*.f64 a 0) (fma.f64 -1/16 a (fma.f64 -1/1728 (*.f64 (cbrt.f64 (pow.f64 a 7)) (pow.f64 (cbrt.f64 1/2) -2)) (*.f64 1/24 a)))))) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 2) -2)) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 2) -5) 1/9) (+.f64 1/8 (*.f64 -1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9)))) (*.f64 1/216 (cbrt.f64 (pow.f64 (log.f64 2) -2))))))))))) (pow.f64 b 3) (fma.f64 (*.f64 b b) (fma.f64 (+.f64 (fma.f64 1/3 (pow.f64 (pow.f64 (log.f64 2) 5) 1/9) (*.f64 (*.f64 -1/12 (pow.f64 (pow.f64 a 14) 1/9)) (cbrt.f64 (pow.f64 (cbrt.f64 1/4) -2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2)) (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))))))) (fma.f64 -1/12 (*.f64 (pow.f64 (pow.f64 a 7) 1/9) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) -2))) (*.f64 1/6 (pow.f64 (pow.f64 (log.f64 2) -2) 1/9))) (fma.f64 (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (log.f64 2) -2)) (+.f64 1/8 (*.f64 -1/12 (pow.f64 (/.f64 1 (log.f64 2)) 1/9)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (pow.f64 a -2))) (*.f64 (fma.f64 1/8 a (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 17) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (*.f64 -1/8 a))) (pow.f64 (cbrt.f64 1/2) -2)))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 a -4)) (fma.f64 1/48 (*.f64 (pow.f64 (pow.f64 a 34) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))) (*.f64 (*.f64 a a) -1/16))) (pow.f64 (cbrt.f64 1/4) 2)) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (log.f64 2) -4))) (+.f64 (+.f64 1/4 (*.f64 1/4 (log.f64 2))) (*.f64 -1/3 (pow.f64 (pow.f64 (log.f64 2) 16) 1/9))))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 a -2) (pow.f64 (log.f64 2) 2))) (*.f64 (-.f64 (*.f64 1/16 a) (fma.f64 1/8 (*.f64 (log.f64 2) a) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (log.f64 2) a)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) (pow.f64 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a))) 2)) (*.f64 1/2 (*.f64 1/4 (-.f64 a (*.f64 (log.f64 2) a)))))))) (pow.f64 (cbrt.f64 1/2) -2)))))))) (*.f64 (+.f64 (cbrt.f64 (log.f64 2)) (*.f64 (cbrt.f64 a) (cbrt.f64 1/2))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log.f64 2) 2)) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 1/4))) (*.f64 (cbrt.f64 (*.f64 (log.f64 2) a)) (cbrt.f64 1/2)))))))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)) (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (-.f64 (+.f64 (pow.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 2) 1/3) (pow.f64 (/.f64 (pow.f64 a 2) (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1/3)) (pow.f64 (/.f64 (*.f64 a (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 1 (exp.f64 b))) 1/3)) (+.f64 (pow.f64 (log.f64 (+.f64 1 (exp.f64 b))) 1/3) (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1/3)))","(*.f64 (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (-.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (cbrt.f64 (/.f64 (*.f64 a a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))","(*.f64 (pow.f64 1 1/3) (log.f64 (+.f64 1 (exp.f64 b))))","(log1p.f64 (exp.f64 b))","(*.f64 (pow.f64 1 1/3) (log.f64 (+.f64 1 (exp.f64 b))))","(log1p.f64 (exp.f64 b))","(*.f64 (pow.f64 1 1/3) (log.f64 (+.f64 1 (exp.f64 b))))","(log1p.f64 (exp.f64 b))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 (log.f64 2) a)","(+.f64 (*.f64 (log.f64 2) a) (*.f64 1/2 (*.f64 a b)))","(fma.f64 (log.f64 2) a (*.f64 1/2 (*.f64 a b)))","(+.f64 (*.f64 1/8 (*.f64 a (pow.f64 b 2))) (+.f64 (*.f64 (log.f64 2) a) (*.f64 1/2 (*.f64 a b))))","(fma.f64 1/8 (*.f64 a (*.f64 b b)) (fma.f64 (log.f64 2) a (*.f64 1/2 (*.f64 a b))))","(+.f64 (*.f64 1/8 (*.f64 a (pow.f64 b 2))) (+.f64 (*.f64 (log.f64 2) a) (+.f64 (*.f64 -1/192 (*.f64 a (pow.f64 b 4))) (*.f64 1/2 (*.f64 a b)))))","(fma.f64 1/8 (*.f64 a (*.f64 b b)) (fma.f64 (log.f64 2) a (fma.f64 -1/192 (*.f64 a (pow.f64 b 4)) (*.f64 1/2 (*.f64 a b)))))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))","(*.f64 a (log.f64 (+.f64 1 (exp.f64 b))))","(*.f64 a (log1p.f64 (exp.f64 b)))"]],"time":223.85888671875,"type":"simplify"},{"compiler":[[15878,10051]],"time":161.881103515625,"type":"eval"},{"alts":[["(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","done",16.206647078681467],["(+.f64 (+.f64 (fma.f64 1/2 a (log.f64 2)) (fma.f64 -1/192 (pow.f64 a 4) (*.f64 1/8 (*.f64 a a)))) (/.f64 b (+.f64 1 (exp.f64 a))))","fresh",35.058125165570466],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))","done",32.43922665634962],["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (/.f64 (*.f64 (cbrt.f64 (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 2 3))) (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","fresh",19.340262484012122],["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","done",19.010700827133945]],"compiler":[[12,8],[25,19],[8,6],[57,38],[12,8]],"count":[[229,5]],"kept":[{"done":[3,3],"fresh":[1,1],"new":[224,1],"picked":[1,0]}],"min-error":[0.20312476157637743],"time":55.75,"type":"prune"},{"accuracy":[0.3512580307987555],"baseline":[16.206647078681467],"branch":[["a",0.43241628511782043,2],["b",0.3512580307987555,2],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))",16.206647078681467,1],["(+.f64 (exp.f64 a) (exp.f64 b))",16.206647078681467,1],["(exp.f64 a)",0.43241628511782043,2],["(exp.f64 a)",0.43241628511782043,2],["(exp.f64 b)",0.3512580307987555,2],["(exp.f64 b)",0.3512580307987555,2]],"compiler":[[3,2],[3,2],[8,6],[7,5],[4,3],[4,3],[4,3],[4,3],[171,101]],"count":[[7,2]],"inputs":[["(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (/.f64 (*.f64 (cbrt.f64 (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) (+.f64 2 3))) (cbrt.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))))) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","(*.f64 (+.f64 (cbrt.f64 (pow.f64 (log1p.f64 (exp.f64 b)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (*.f64 a (log1p.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (+.f64 (cbrt.f64 (log1p.f64 (exp.f64 b))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))","(+.f64 (+.f64 (fma.f64 1/2 a (log.f64 2)) (fma.f64 -1/192 (pow.f64 a 4) (*.f64 1/8 (*.f64 a a)))) (/.f64 b (+.f64 1 (exp.f64 a))))","(log.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (exp.f64 a) 2/3) (pow.f64 (exp.f64 b) 2/3)) (cbrt.f64 (exp.f64 (+.f64 a b)))) (+.f64 (cbrt.f64 (exp.f64 a)) (cbrt.f64 (exp.f64 b)))))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))"]],"link":["."],"name":["symmetry log of sum of exp"],"oracle":[35.39470655069043],"outputs":[["(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b)))","(+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a))))"]],"time":37.010009765625,"times":[["a",10.412109375],["b",6.77001953125],["(log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))",2.0458984375],["(+.f64 (exp.f64 a) (exp.f64 b))",1.887939453125],["(exp.f64 a)",3.0380859375],["(exp.f64 a)",3.031982421875],["(exp.f64 b)",3.050048828125],["(exp.f64 b)",3.31396484375]],"type":"regimes"},{"bstep":[[0.0,0.9999999766437487,0.045166015625]],"compiler":[[9,7],[4,3]],"method":["left-value"],"time":0.14794921875,"type":"bsearch"},{"compiler":[[27,17]],"inputs":[["(if (<=.f64 (exp.f64 b) 0) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (exp.f64 b) 0) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))) (+.f64 (log1p.f64 (exp.f64 a)) (/.f64 b (+.f64 1 (exp.f64 a)))))"]],"stop":[["fuel",1]],"time":23.009033203125,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[27,17]],"remove-preprocessing":[[]],"time":11.7958984375,"type":"end"}]