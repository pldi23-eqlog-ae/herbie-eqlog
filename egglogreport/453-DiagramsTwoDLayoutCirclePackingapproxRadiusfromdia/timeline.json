[{"compiler":[[16,12]],"method":["search"],"sampling":[[12,0.3960972777567804,0.6029263981617987,0.0009763240814208984],[11,0.38243875093758106,0.616584924980998,0.0009763240814208984],[10,0.30439002625644207,0.694633649662137,0.0009763240814208984],[9,0.2809754088521004,0.7180482670664787,0.0009763240814208984],[8,0.15609744936227798,0.8429262265563011,0.0009763240814208984],[7,0.062438979744911194,0.9365846961736679,0.0009763240814208984],[6,0.0,0.9990236759185791,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":174.57080078125,"type":"analyze"},{"outcomes":[["body",4096,"valid",6.7900390625,5],["body",1024,"valid",370.670654296875,1355],["body",512,"valid",148.33447265625,898],["body",2048,"valid",590.883056640625,1163],["body",256,"valid",369.44970703125,4835]],"time":1494.731201171875,"type":"sample"},{"compiler":[[15,11]],"inputs":[["0","1"],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","(/.f64 (tan.f64 (/.f64 y (*.f64 x 2))) (sin.f64 (/.f64 y (*.f64 x 2))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","(/.f64 1 (cos.f64 (/.f64 x (+.f64 y y))))","(/.f64 (tan.f64 (/.f64 y (*.f64 x 2))) (sin.f64 (/.f64 y (*.f64 x 2))))","(/.f64 1 (cos.f64 (/.f64 y (+.f64 x x))))"]],"symmetry":[[]],"time":59.39697265625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))"]],"time":17.83203125,"type":"simplify"},{"compiler":[[23,17]],"time":0.436767578125,"type":"eval"},{"alts":[["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","fresh",34.5346012119073],["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","next",26.788476240080062]],"compiler":[[15,11],[10,8],[15,11],[10,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[26.784569990068427],"time":1.3662109375,"type":"prune"},{"compiler":[[28,19]],"locations":[["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))",0.1328125,true],["(cos.f64 (/.f64 (*.f64 x 1/2) y))",26.81936936934155,true]],"time":8.574951171875,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","y","-inf",0.251953125],["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","y","inf",0.43701171875],["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","y","0",0.3720703125],["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","x","-inf",0.384033203125],["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","x","inf",0.43896484375],["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","x","0",0.359130859375],["(cos.f64 (/.f64 (*.f64 x 1/2) y))","y","-inf",0.319091796875],["(cos.f64 (/.f64 (*.f64 x 1/2) y))","y","inf",0.3818359375],["(cos.f64 (/.f64 (*.f64 x 1/2) y))","y","0",0.1630859375],["(cos.f64 (/.f64 (*.f64 x 1/2) y))","x","-inf",0.203857421875],["(cos.f64 (/.f64 (*.f64 x 1/2) y))","x","inf",0.215087890625],["(cos.f64 (/.f64 (*.f64 x 1/2) y))","x","0",0.58984375]],"time":4.2900390625,"type":"series"},{"count":[[2,58]],"inputs":[["(cos.f64 (/.f64 (*.f64 x 1/2) y))","(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (*.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 0) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (*.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (/.f64 (*.f64 x 1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (/.f64 x (*.f64 y -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (*.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 0) (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (*.f64 0 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (*.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) -1) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) -1) (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))"]],"rules":[["egg-rr",36],["egg-rr",22]],"time":25.23681640625,"type":"rewrite"},{"count":[[106,79]],"inputs":[["1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -1/8 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/384 1))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4))))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(cos.f64 (*.f64 1/2 (/.f64 x y)))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -1/8 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/384 1))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4))))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -1/8 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/384 1))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(+.f64 1 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 5/384 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 61/46080 (pow.f64 x 6)) (pow.f64 y 6)))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 1/8 (*.f64 (pow.f64 (*.f64 x x) 3) -5/384) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 1/8 (*.f64 (pow.f64 (*.f64 x x) 3) -5/384) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))"]],"time":150.89404296875,"type":"simplify"},{"compiler":[[1257,965]],"time":19.51416015625,"type":"eval"},{"alts":[["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","next",26.79236681406628],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","fresh",34.5346012119073],["(/.f64 1 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","fresh",33.466090250161464],["(/.f64 1 1)","fresh",26.843998203616596],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -3)","fresh",26.79628874008],["(/.f64 (/.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) 2))","fresh",28.250280555243677],["(pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) 3)","fresh",28.25648743099613]],"compiler":[[19,15],[15,11],[14,10],[5,5],[11,9],[32,26],[12,10],[19,15],[15,11],[14,10],[5,5],[11,9],[32,26],[12,10]],"count":[[81,7]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[79,6],"picked":[1,0]}],"min-error":[24.633148616648814],"time":16.768798828125,"type":"prune"},{"compiler":[[61,44]],"locations":[["(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))",0.06640625,true],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))",0.174160009768442,true],["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)",0.20703125,true],["(cos.f64 (/.f64 (*.f64 x 1/2) y))",26.81936936934155,false]],"time":21.380126953125,"type":"localize"},{"count":[[3,72]],"series":[["(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","y","-inf",0.276123046875],["(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","y","inf",0.58984375],["(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","y","0",0.946044921875],["(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","x","-inf",0.949951171875],["(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","x","inf",1.15185546875],["(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","x","0",0.507080078125],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","-inf",0.233154296875],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","inf",0.214111328125],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","0",0.1689453125],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","-inf",0.2119140625],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","inf",0.171142578125],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","0",0.2099609375],["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)","y","-inf",0.288818359375],["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)","y","inf",0.630859375],["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)","y","0",0.43212890625],["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)","x","-inf",0.48291015625],["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)","x","inf",0.785888671875],["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)","x","0",0.590087890625]],"time":9.140869140625,"type":"series"},{"count":[[3,93]],"inputs":[["(pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)","(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","(cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 0) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (*.f64 0 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 2/3) (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 2/3) (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 0) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) (*.f64 0 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3) (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) 1) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3))) (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) -1) (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) 1) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3)))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (*.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 0) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (*.f64 0 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))"]],"rules":[["egg-rr",22],["egg-rr",46],["egg-rr",25]],"time":31.7451171875,"type":"rewrite"},{"count":[[165,130]],"inputs":[["1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 17/2880 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 1/3072 (pow.f64 x 6)) (*.f64 -1/46080 (pow.f64 x 6)))) (pow.f64 y 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))))","1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 1/3072 (pow.f64 x 6)) (*.f64 -1/46080 (pow.f64 x 6)))) (pow.f64 y 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1/1152 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1/1152 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -23/414720 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","1","(+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/4 1)","(+.f64 1 (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/4 1) (/.f64 (*.f64 1/24 (pow.f64 x 4)) (pow.f64 y 4)))","(+.f64 1 (+.f64 (*.f64 17/2880 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) 17/2880 (/.f64 (*.f64 1/24 (pow.f64 x 4)) (pow.f64 y 4))) (fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/4 1))","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/4 1)","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))","(+.f64 (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1) (fma.f64 -2 (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)) (/.f64 (*.f64 1/4 (*.f64 x x)) (*.f64 y y))))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 1/3072 (pow.f64 x 6)) (*.f64 -1/46080 (pow.f64 x 6)))) (pow.f64 y 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))))","(+.f64 (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1) (fma.f64 (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/384) (*.f64 x x)) (pow.f64 y 6)) -1/4 (fma.f64 -2 (fma.f64 (fma.f64 (*.f64 1/8 (*.f64 (pow.f64 x 4) -5/384)) (*.f64 x x) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y (neg.f64 6)) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (*.f64 1/4 (*.f64 x x)) (*.f64 y y)))))","1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/4 1)","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))","(+.f64 (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1) (fma.f64 -2 (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)) (/.f64 (*.f64 1/4 (*.f64 x x)) (*.f64 y y))))","(+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 1/3072 (pow.f64 x 6)) (*.f64 -1/46080 (pow.f64 x 6)))) (pow.f64 y 6))) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))))))))","(+.f64 (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1) (fma.f64 (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -5/384) (*.f64 x x)) (pow.f64 y 6)) -1/4 (fma.f64 -2 (fma.f64 (fma.f64 (*.f64 1/8 (*.f64 (pow.f64 x 4) -5/384)) (*.f64 x x) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y (neg.f64 6)) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (*.f64 1/4 (*.f64 x x)) (*.f64 y y)))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 5/384 (pow.f64 x 4)) (pow.f64 y 4)))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(+.f64 1 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 5/384 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 61/46080 (pow.f64 x 6)) (pow.f64 y 6)))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 (*.f64 1/8 (*.f64 (pow.f64 x 4) -5/384)) (*.f64 x x) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 (*.f64 1/8 (*.f64 (pow.f64 x 4) -5/384)) (*.f64 x x) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))","1","(+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/1152 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(fma.f64 -1/1152 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(+.f64 (*.f64 -1/1152 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -23/414720 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(+.f64 (fma.f64 -1/1152 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1) (fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 -23/414720 (pow.f64 x 6)) (pow.f64 y 6))))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 1/3)","(cbrt.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","1","(+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)) (/.f64 (*.f64 -1/24 (*.f64 x x)) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(+.f64 (*.f64 1/3 (+.f64 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)) (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)))) (fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","1","(+.f64 1 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)) (/.f64 (*.f64 -1/24 (*.f64 x x)) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(+.f64 (*.f64 1/3 (+.f64 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)) (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)))) (fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) 1))"]],"time":253.117919921875,"type":"simplify"},{"compiler":[[4664,3621]],"time":60.592041015625,"type":"eval"},{"alts":[["(/.f64 1 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","fresh",33.466090250161464],["(/.f64 (cbrt.f64 1) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",27.61490935402324],["(/.f64 1 1)","fresh",26.843998203616596],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 1))","fresh",27.846561008968937],["(pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 3)","fresh",26.808007430073506],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","next",26.79239812263294],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",26.79627306406622],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","fresh",34.5346012119073],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 3))","fresh",26.80017931406628],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","fresh",33.70209465431392],["(*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) -2))","fresh",28.234671231269093]],"compiler":[[14,10],[12,10],[5,5],[14,12],[14,12],[21,17],[22,18],[15,11],[22,18],[23,17],[24,20],[14,10],[12,10],[5,5],[14,12],[14,12],[21,17],[22,18],[15,11],[22,18],[23,17],[24,20]],"count":[[199,11]],"kept":[{"done":[0,0],"fresh":[6,3],"new":[192,8],"picked":[1,0]}],"min-error":[24.50514301238568],"time":56.39990234375,"type":"prune"},{"compiler":[[90,59]],"locations":[["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))",0.174160009768442,true],["(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)",0.23828125,true],["(cos.f64 (*.f64 1/2 (/.f64 x y)))",26.81936936934155,true],["(cos.f64 (/.f64 (*.f64 x 1/2) y))",26.81936936934155,false]],"time":26.758056640625,"type":"localize"},{"count":[[3,48]],"series":[["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","-inf",0.233154296875],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","inf",0.212890625],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","0",0.169921875],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","-inf",0.1640625],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","inf",0.18212890625],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","0",0.18408203125],["(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)","y","-inf",0.2548828125],["(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)","y","inf",0.4150390625],["(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)","y","0",0.31298828125],["(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)","x","-inf",0.31591796875],["(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)","x","inf",0.324951171875],["(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)","x","0",1.574951171875],["(cos.f64 (*.f64 1/2 (/.f64 x y)))","y","-inf",0.178955078125],["(cos.f64 (*.f64 1/2 (/.f64 x y)))","y","inf",0.183837890625],["(cos.f64 (*.f64 1/2 (/.f64 x y)))","y","0",0.161865234375],["(cos.f64 (*.f64 1/2 (/.f64 x y)))","x","-inf",0.18603515625],["(cos.f64 (*.f64 1/2 (/.f64 x y)))","x","inf",0.195068359375],["(cos.f64 (*.f64 1/2 (/.f64 x y)))","x","0",0.218994140625]],"time":5.732177734375,"type":"series"},{"count":[[3,139]],"inputs":[["(cos.f64 (*.f64 1/2 (/.f64 x y)))","(pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)","(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 0) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (*.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (*.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4) 2) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (/.f64 (*.f64 x 1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (/.f64 (*.f64 -1/2 x) y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2) 0) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2) (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2) (*.f64 0 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y))) (sin.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 -1) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (/.f64 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 4)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (+.f64 2/3 1)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)) (cos.f64 0)) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 1 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sin.f64 (/.f64 (*.f64 x 1/2) y))) (-.f64 1 (sin.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y))) (-.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)) (cos.f64 0)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4) 2) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)) (cos.f64 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)) (cos.f64 0)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))) 3)) (+.f64 1/4 (-.f64 (*.f64 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))) (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2) (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2)) (*.f64 1 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y)) (cos.f64 0))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1/2 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (sqrt.f64 1/2) (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 1/2)) (neg.f64 (sqrt.f64 1/2)) (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (cbrt.f64 1/4) (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1/2 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 1 (*.f64 1/2 (cos.f64 (/.f64 (*.f64 2 (*.f64 x 1/2)) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (sin.f64 (/.f64 (*.f64 x 1/2) y)) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 0) (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (*.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (*.f64 0 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (/.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))) 3) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))) (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) -1) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))) (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) 1) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3)))) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))) (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3)))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (-.f64 -1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))"]],"rules":[["egg-rr",51],["egg-rr",64],["egg-rr",24]],"time":34.31689453125,"type":"rewrite"},{"count":[[187,168]],"inputs":[["1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","1","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/48 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/1440 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/48 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","1","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/23040 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/1536 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))))","1","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/23040 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/1536 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -1/8 (fma.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4))))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -1/8 (fma.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4))))","1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -1/8 (fma.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4))))","1","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/48 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/48 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/1440 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/48 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/1440 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/48 (pow.f64 x 4)) (pow.f64 y 4))))","1","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/23040 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/1536 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))))","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/64 1) (fma.f64 -1/23040 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (fma.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 -1/1536 (pow.f64 x 6)) (pow.f64 y 6))))))","1","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/23040 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/1536 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))))","(fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/64 1) (fma.f64 -1/23040 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (fma.f64 1/192 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 -1/1536 (pow.f64 x 6)) (pow.f64 y 6))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 5/384 (pow.f64 x 4)) (pow.f64 y 4)))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(+.f64 1 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 5/384 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 61/46080 (pow.f64 x 6)) (pow.f64 y 6)))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 1/8 (*.f64 (*.f64 (pow.f64 x 4) -5/384) (*.f64 x x)) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 1/8 (*.f64 (*.f64 (pow.f64 x 4) -5/384) (*.f64 x x)) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))"]],"time":157.05810546875,"type":"simplify"},{"compiler":[[4717,3710]],"time":63.093994140625,"type":"eval"},{"alts":[["(/.f64 1 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","fresh",33.466090250161464],["(/.f64 (cbrt.f64 1) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",27.61490935402324],["(/.f64 1 1)","fresh",26.843998203616596],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 1))","fresh",27.846561008968937],["(pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 3)","fresh",26.808007430073506],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","done",26.79239812263294],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","next",26.79627306406622],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","fresh",34.5346012119073],["(*.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))) 3) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))","fresh",28.242515013148918],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","fresh",33.70209465431392],["(/.f64 (cbrt.f64 (/.f64 1 (*.f64 (+.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y))) (-.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y)))))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",26.796304432662186],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4) 2)) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",26.808023062591413]],"compiler":[[14,10],[12,10],[5,5],[14,12],[14,12],[21,17],[22,18],[15,11],[25,21],[23,17],[30,24],[36,30],[14,10],[12,10],[5,5],[14,12],[14,12],[22,18],[15,11],[25,21],[23,17],[30,24],[36,30]],"count":[[210,12]],"kept":[{"done":[0,0],"fresh":[10,8],"new":[199,3],"picked":[1,1]}],"min-error":[24.50514301238568],"time":63.98876953125,"type":"prune"},{"compiler":[[80,61]],"locations":[["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))",0.174160009768442,true],["(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)",0.20703125,true],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)",0.3034363281475361,true],["(cos.f64 (/.f64 (*.f64 x 1/2) y))",26.81936936934155,false]],"time":27.12109375,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","-inf",0.2451171875],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","inf",0.2138671875],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","y","0",0.180908203125],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","-inf",0.1689453125],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","inf",0.172119140625],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","x","0",0.240966796875],["(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)","y","-inf",0.640869140625],["(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)","y","inf",3.94189453125],["(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)","y","0",0.652099609375],["(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)","x","-inf",0.698974609375],["(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)","x","inf",0.700927734375],["(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)","x","0",0.406005859375],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)","y","-inf",0.4228515625],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)","y","inf",1.108154296875],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)","y","0",0.52685546875],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)","x","-inf",0.544189453125],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)","x","inf",0.595947265625],["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)","x","0",0.671142578125]],"time":12.531005859375,"type":"series"},{"count":[[3,99]],"inputs":[["(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)","(pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)","(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 0) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (*.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (*.f64 0 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (/.f64 (*.f64 x 1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (/.f64 x (*.f64 y -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 0) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (*.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (*.f64 0 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 2/3) (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 2/3) (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 0) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) (*.f64 0 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2) (cos.f64 (/.f64 (*.f64 x 1/2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3) (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2) 2/3) (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) 2/3)) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3)) (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))))) (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 2/3))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) 1) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 2/3))) (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) 1) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2))) (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) -1) (cbrt.f64 (neg.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3)))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))))))"]],"rules":[["egg-rr",48],["egg-rr",25],["egg-rr",26]],"time":31.60107421875,"type":"rewrite"},{"count":[[171,139]],"inputs":[["1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","1","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)))))))))))))","1","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)))))))))))))","1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 17/2880 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","1","(+.f64 1 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6))))) (+.f64 (*.f64 -1/24 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2)) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1/18 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))))))))) (pow.f64 y 6))))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6))))) (+.f64 (*.f64 -1/24 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2)) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1/18 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))))))))) (pow.f64 y 6))))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4)))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (*.f64 1/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(+.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (/.f64 (*.f64 1/384 (pow.f64 x 4)) (pow.f64 y 4))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (/.f64 x y))))","(cos.f64 (/.f64 (*.f64 1/2 x) y))","1","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(fma.f64 2/3 (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)) (+.f64 1 (fma.f64 -1/12 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4))) (pow.f64 y 4)) (/.f64 (*.f64 -1/24 (*.f64 x x)) (*.f64 y y)))))))","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)))))))))))))","(+.f64 1 (fma.f64 -1/12 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)) (fma.f64 2/3 (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)) (fma.f64 -1/24 (/.f64 (*.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/576 (pow.f64 x 4))) (*.f64 x x)) (pow.f64 y 6)) (+.f64 (/.f64 (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4))) (pow.f64 y 4)) (fma.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/18 (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (pow.f64 y 6)) (fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6))))) (pow.f64 y 6)))))))))))","1","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)","(+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(fma.f64 2/3 (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)) (+.f64 1 (fma.f64 -1/12 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4))) (pow.f64 y 4)) (/.f64 (*.f64 -1/24 (*.f64 x x)) (*.f64 y y)))))))","(+.f64 1 (+.f64 (*.f64 -1/12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/24 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)))))))))))))","(+.f64 1 (fma.f64 -1/12 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6)))) (pow.f64 y 6)) (fma.f64 2/3 (/.f64 (*.f64 (pow.f64 x 4) -1/384) (pow.f64 y 4)) (fma.f64 -1/24 (/.f64 (*.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/576 (pow.f64 x 4))) (*.f64 x x)) (pow.f64 y 6)) (+.f64 (/.f64 (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4))) (pow.f64 y 4)) (fma.f64 1/576 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/18 (/.f64 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (pow.f64 y 6)) (fma.f64 -1/24 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6))))) (pow.f64 y 6)))))))))))","1","(+.f64 1 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (/.f64 (*.f64 1/4 (*.f64 x x)) (*.f64 y y)))","(+.f64 1 (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 1/4 (*.f64 x x)) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 17/2880 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 17/2880 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (fma.f64 1/24 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 1/4 (*.f64 x x)) (*.f64 y y)))))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","(*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2)))","(pow.f64 (cos.f64 (/.f64 (*.f64 1/2 x) y)) -2)","1","(+.f64 1 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))","(+.f64 1 (*.f64 -2 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))))","(fma.f64 -2 (/.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8)))) (pow.f64 y 4)) (+.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y)) 2) (*.f64 -2 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y))))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6))))) (+.f64 (*.f64 -1/24 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2)) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1/18 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))))))))) (pow.f64 y 6))))))))","(fma.f64 -2 (/.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8)))) (pow.f64 y 4)) (+.f64 1 (fma.f64 2 (/.f64 (*.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8)))) (*.f64 (*.f64 x x) -1/8)) (pow.f64 y 6)) (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y)) 2) (*.f64 -2 (+.f64 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y)) (/.f64 (fma.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6)))) (fma.f64 -1/24 (*.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/576 (pow.f64 x 4))) (*.f64 x x)) (+.f64 (*.f64 (*.f64 (*.f64 x x) -1/8) (+.f64 (neg.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))))) (neg.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8))))))) (fma.f64 -1/18 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6))))))))) (pow.f64 y 6))))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))","(+.f64 1 (*.f64 -2 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))))))","(fma.f64 -2 (/.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8)))) (pow.f64 y 4)) (+.f64 1 (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y)) 2) (*.f64 -2 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y))))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (pow.f64 y 4))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))) 2)) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2) (pow.f64 y 4)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 -2 (/.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6))))) (+.f64 (*.f64 -1/24 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/576 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (*.f64 1/288 (pow.f64 x 4))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 1/576 (pow.f64 x 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4)))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -1/24 (pow.f64 x 2)) (*.f64 -1/12 (pow.f64 x 2))) 2)) (*.f64 1/288 (pow.f64 x 4)))))) (+.f64 (*.f64 -1/12 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 2))))) (+.f64 (*.f64 -1/18 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (*.f64 1/384 (pow.f64 x 4)) (*.f64 1/192 (pow.f64 x 4))) (pow.f64 x 2))) (*.f64 -1/13824 (pow.f64 x 6)))))))))) (pow.f64 y 6))))))))","(fma.f64 -2 (/.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8)))) (pow.f64 y 4)) (+.f64 1 (fma.f64 2 (/.f64 (*.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8)))) (*.f64 (*.f64 x x) -1/8)) (pow.f64 y 6)) (+.f64 (pow.f64 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y)) 2) (*.f64 -2 (+.f64 (/.f64 (*.f64 -1/8 (*.f64 x x)) (*.f64 y y)) (/.f64 (fma.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6)))) (fma.f64 -1/24 (*.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/576 (pow.f64 x 4))) (*.f64 x x)) (+.f64 (*.f64 (*.f64 (*.f64 x x) -1/8) (+.f64 (neg.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))))) (neg.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 4) -1/384) (-.f64 (fma.f64 1/576 (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 4) -1/384) (*.f64 1/288 (pow.f64 x 4)))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 -1/8))))))) (fma.f64 -1/18 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 x 6)) (fma.f64 -1/12 (*.f64 (*.f64 (pow.f64 x 4) -1/384) (*.f64 x x)) (*.f64 -1/13824 (pow.f64 x 6))))))))) (pow.f64 y 6))))))))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y)))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y))))","(+.f64 1 (+.f64 (*.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 61/46080 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))))","(+.f64 1 (fma.f64 5/384 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/8 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 61/46080 (pow.f64 x 6)) (pow.f64 y 6)))))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","(/.f64 1 (cos.f64 (*.f64 1/2 (/.f64 x y))))","(/.f64 1 (cos.f64 (/.f64 (*.f64 1/2 x) y)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (+.f64 1 (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y))) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y))) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 1/8 (*.f64 (*.f64 (pow.f64 x 4) -5/384) (*.f64 x x)) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))","1","(+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(-.f64 (+.f64 1 (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y))) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/46080 (pow.f64 x 6)) (*.f64 1/3072 (pow.f64 x 6)))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (*.f64 1/384 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 1 (*.f64 1/8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(-.f64 (-.f64 (+.f64 1 (/.f64 (*.f64 1/8 (*.f64 x x)) (*.f64 y y))) (/.f64 (*.f64 (pow.f64 x 4) -5/384) (pow.f64 y 4))) (/.f64 (fma.f64 1/8 (*.f64 (*.f64 (pow.f64 x 4) -5/384) (*.f64 x x)) (*.f64 (pow.f64 x 6) 7/23040)) (pow.f64 y 6)))"]],"time":349.718017578125,"type":"simplify"},{"compiler":[[6037,4772]],"time":80.871826171875,"type":"eval"},{"alts":[["(/.f64 1 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","fresh",33.466090250161464],["(/.f64 (cbrt.f64 1) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",27.61490935402324],["(/.f64 1 1)","fresh",26.843998203616596],["(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 1))","fresh",27.846561008968937],["(pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 3)","fresh",26.808007430073506],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","done",26.79239812263294],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 1))","fresh",27.84656100895443],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","done",26.79627306406622],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))","fresh",34.5346012119073],["(*.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))) 3) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))","fresh",28.242515013148918],["(/.f64 (cbrt.f64 (/.f64 1 (*.f64 (+.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y))) (-.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y)))))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",26.796304432662186],["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","fresh",33.70209465431392],["(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4) 2)) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","fresh",26.808023062591413]],"compiler":[[14,10],[12,10],[5,5],[14,12],[14,12],[21,17],[17,15],[22,18],[15,11],[25,21],[30,24],[26,20],[36,30]],"count":[[213,13]],"kept":[{"done":[1,1],"fresh":[10,9],"new":[201,2],"picked":[1,1]}],"min-error":[24.50514301238568],"time":62.422119140625,"type":"prune"},{"accuracy":[26.788476240080065],"baseline":[26.788476240080062],"branch":[["x",26.788476240080065,1],["y",26.788476240080072,1],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))",26.78847624008007,1],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))",26.78847624008007,1],["(/.f64 x (*.f64 y 2))",26.78847624008007,1],["(/.f64 x (*.f64 y 2))",26.78847624008007,1],["(*.f64 y 2)",26.788476240080072,1],["(*.f64 y 2)",26.788476240080072,1]],"compiler":[[3,2],[3,2],[15,11],[15,11],[7,5],[7,5],[5,4],[5,4],[364,282]],"count":[[21,1]],"inputs":[["(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 1))","(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","(*.f64 (pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3))) 3) (neg.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (neg.f64 2/3))))","(/.f64 (cbrt.f64 (/.f64 1 (*.f64 (+.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y))) (-.f64 -1 (sin.f64 (/.f64 (*.f64 x 1/2) y)))))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (*.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 4) 2)) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","(/.f64 (cbrt.f64 1) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 1))","(pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -3))) 3)","(/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cos.f64 (*.f64 1/2 (/.f64 x y))) 2))) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) 3) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) 3))","(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","(*.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) (-.f64 -2 1/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)))) -2))","(/.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -2)) (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))))","(/.f64 1 (fma.f64 -1/8 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(/.f64 1 1)","(pow.f64 (cbrt.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y))) -3)","(/.f64 (/.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) 2/3)) 2))","(pow.f64 (pow.f64 (cos.f64 (/.f64 (*.f64 x 1/2) y)) -1/3) 3)","(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))","(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))"]],"link":["."],"name":["Diagrams.TwoD.Layout.CirclePacking:approxRadius from diagrams-contrib-1.3.0.5"],"oracle":[41.96291923635158],"outputs":[["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))"]],"time":57.01904296875,"times":[["x",6.8701171875],["y",6.9609375],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))",4.35498046875],["(/.f64 (tan.f64 (/.f64 x (*.f64 y 2))) (sin.f64 (/.f64 x (*.f64 y 2))))",4.513916015625],["(/.f64 x (*.f64 y 2))",5.608154296875],["(/.f64 x (*.f64 y 2))",5.72998046875],["(*.f64 y 2)",7.06005859375],["(*.f64 y 2)",8.484130859375]],"type":"regimes"},{"compiler":[[10,8]],"inputs":[["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (cos.f64 (/.f64 (*.f64 x 1/2) y)))"]],"stop":[["fuel",1]],"time":20.01904296875,"type":"simplify"},{"time":0.017822265625,"type":"soundness"},{"compiler":[[10,8]],"remove-preprocessing":[[]],"time":8.35302734375,"type":"end"}]