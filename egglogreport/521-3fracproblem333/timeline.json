[{"compiler":[[17,14]],"method":["search"],"sampling":[[12,0.9975595474243164,0.0019521713256835938,0.00048828125],[11,0.9956073760986328,0.0039043426513671875,0.00048828125],[10,0.9917030334472656,0.007808685302734375,0.00048828125],[9,0.9838943481445313,0.01561737060546875,0.00048828125],[8,0.9682769775390625,0.0312347412109375,0.00048828125],[7,0.937042236328125,0.062469482421875,0.00048828125],[6,0.87457275390625,0.12493896484375,0.00048828125],[5,0.7496337890625,0.2498779296875,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":3.27099609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.122802734375,3],["body",512,"valid",125.033935546875,1553],["body",1024,"valid",162.177978515625,1393],["body",256,"valid",224.25537109375,5310]],"time":519.491943359375,"type":"sample"},{"compiler":[[16,13]],"inputs":[["0"],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))"]],"symmetry":[[]],"time":55.800048828125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))"]],"time":21.781005859375,"type":"simplify"},{"compiler":[[31,25]],"time":0.531005859375,"type":"eval"},{"alts":[["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","fresh",12.036934610869558],["(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))","next",12.031052053492756]],"compiler":[[16,13],[16,13],[16,13],[16,13]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[12.030743351101115],"time":1.510986328125,"type":"prune"},{"compiler":[[50,39]],"locations":[["(/.f64 1 (+.f64 1 x))",0.0078125,true],["(/.f64 1 (+.f64 x -1))",0.01171875,true],["(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))",2.4374960612955143,true],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))",2.6656323828028605,true]],"time":11.93896484375,"type":"localize"},{"count":[[4,48]],"series":[["(/.f64 1 (+.f64 1 x))","x","-inf",0.166015625],["(/.f64 1 (+.f64 1 x))","x","inf",0.22509765625],["(/.f64 1 (+.f64 1 x))","x","0",0.1708984375],["(/.f64 1 (+.f64 x -1))","x","-inf",0.300048828125],["(/.f64 1 (+.f64 x -1))","x","inf",0.236083984375],["(/.f64 1 (+.f64 x -1))","x","0",0.221923828125],["(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))","x","-inf",0.254150390625],["(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))","x","inf",0.348876953125],["(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))","x","0",0.217041015625],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","x","-inf",0.3271484375],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","x","inf",0.388916015625],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","x","0",0.4541015625]],"time":3.48193359375,"type":"series"},{"count":[[4,178]],"inputs":[["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))","(/.f64 1 (+.f64 x -1))","(/.f64 1 (+.f64 1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (*.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 0) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (*.f64 0 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 1 (+.f64 1 x)) 0) (/.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 1 (+.f64 x -1)) 0) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 -1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (cbrt.f64 (/.f64 -1 (*.f64 (+.f64 x -1) (-.f64 -1 x)))))) (+.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 -1 (*.f64 (+.f64 x -1) (-.f64 -1 x)))))) (+.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (cbrt.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (/.f64 -1 (*.f64 (+.f64 x -1) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (-.f64 x (-.f64 -1 x))) (/.f64 1 (*.f64 (+.f64 x -1) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 -1 (+.f64 x -1)) (/.f64 1 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (-.f64 x (-.f64 -1 x))) (-.f64 -1 x)) (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 1 x)) (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (cbrt.f64 (+.f64 x -1))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) 2)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (-.f64 x (-.f64 -1 x))) (*.f64 (+.f64 x -1) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 x -1)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (-.f64 x (-.f64 -1 x))) (+.f64 x -1)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (*.f64 (+.f64 x -1) (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) 1) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (-.f64 1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (-.f64 x (-.f64 -1 x))) (+.f64 1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 x -1)) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 x -1)) -1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 x -1)) (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (-.f64 -1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 x -1))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) (+.f64 x -1)) (+.f64 1 (pow.f64 x 3))) (/.f64 1 (+.f64 1 (*.f64 (+.f64 x -1) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 -1 (+.f64 x -1)) (/.f64 1 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (/.f64 1 (+.f64 x -1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) (*.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 0) (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (*.f64 (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))) 1) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) (*.f64 0 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))) (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 0) (/.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))) 0) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 -1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 1 (-.f64 -1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 2)) (cbrt.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 -1 (+.f64 x -1)) (/.f64 1 (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) (/.f64 1 (*.f64 x (*.f64 (-.f64 1 x) (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x)) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)) (/.f64 1 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))) (/.f64 1 (neg.f64 (*.f64 x (*.f64 (-.f64 1 x) (-.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) -2)) (/.f64 1 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)) (-.f64 (cbrt.f64 (/.f64 4 (*.f64 x x))) (cbrt.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))) (+.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (cbrt.f64 (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (/.f64 4 (*.f64 x x))) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)) (cbrt.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))) (+.f64 (cbrt.f64 (/.f64 -2 x)) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) -2)) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x)) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)) (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) (*.f64 x (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))) (neg.f64 (*.f64 x (*.f64 (-.f64 1 x) (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))) (neg.f64 (*.f64 x (*.f64 (-.f64 1 x) (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (neg.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x)) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))) (neg.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))))) (neg.f64 (neg.f64 (*.f64 x (*.f64 (-.f64 1 x) (-.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) -2))) (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x)) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)) (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))) (neg.f64 x)) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (*.f64 (+.f64 (+.f64 1 (+.f64 x -1)) x) x) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) -2)) (*.f64 (-.f64 1 x) (-.f64 -1 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 2 x) (+.f64 (/.f64 -1 (+.f64 x -1)) (/.f64 1 (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 -1 (+.f64 x -1)) (/.f64 1 (-.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -2 x)) (cbrt.f64 (/.f64 4 (*.f64 x x))) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x -1)) (*.f64 (/.f64 1 (+.f64 x -1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 x -1)) 0) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x -1)) (*.f64 0 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (+.f64 x -1))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 x -1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (+.f64 x -1))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 x -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) 2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (+.f64 x -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 (pow.f64 x 3) -1)) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (+.f64 x -1))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) 1) (cbrt.f64 (pow.f64 (+.f64 x -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x -1)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x -1) -3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (*.f64 (/.f64 1 (+.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 1 x)) 0) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (*.f64 0 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 1 (+.f64 1 x))) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (cbrt.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (/.f64 1 (+.f64 1 (*.f64 (+.f64 x -1) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 x)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) -3))))))"]],"rules":[["egg-rr",33],["egg-rr",34],["egg-rr",59],["egg-rr",52]],"time":41.486083984375,"type":"rewrite"},{"count":[[226,234]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3)))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3))))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 7)))))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3)))","(*.f64 -2 (+.f64 x (pow.f64 x 3)))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3))))","(*.f64 -2 (+.f64 x (+.f64 (pow.f64 x 5) (pow.f64 x 3))))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 7)))))","(fma.f64 -2 x (*.f64 -2 (+.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 7)) (pow.f64 x 5))))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(fma.f64 2 (pow.f64 x -3) (/.f64 2 x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (/.f64 2 x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5))) (/.f64 2 x))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(fma.f64 2 (pow.f64 x -3) (/.f64 2 x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (/.f64 2 x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5))) (/.f64 2 x))","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 x (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 (+.f64 x (pow.f64 x 3)) (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 -2 (+.f64 x (+.f64 (pow.f64 x 5) (pow.f64 x 3)))) (/.f64 -2 x))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -7) (+.f64 (pow.f64 x -3) (pow.f64 x -9)))))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -7) (+.f64 (pow.f64 x -3) (pow.f64 x -9)))))","-1","(-.f64 (*.f64 -1 x) 1)","(neg.f64 (+.f64 1 x))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(+.f64 (*.f64 x (-.f64 -1 x)) -1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(-.f64 (neg.f64 (pow.f64 x 3)) (+.f64 1 (fma.f64 x x x)))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (pow.f64 x -2) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (pow.f64 x -3) (/.f64 1 x)) (+.f64 (pow.f64 x -4) (pow.f64 x -2)))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (pow.f64 x -2) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (pow.f64 x -3) (/.f64 1 x)) (+.f64 (pow.f64 x -4) (pow.f64 x -2)))","1","(+.f64 1 (*.f64 -1 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 1 (*.f64 x (+.f64 x -1)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(-.f64 (+.f64 1 (*.f64 x (+.f64 x -1))) (pow.f64 x 3))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (pow.f64 x -2))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (pow.f64 x -3) (/.f64 1 x)) (pow.f64 x -2))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (pow.f64 x -3) (/.f64 1 x)) (+.f64 (pow.f64 x -4) (pow.f64 x -2)))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (pow.f64 x -2))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (pow.f64 x -3) (/.f64 1 x)) (pow.f64 x -2))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (pow.f64 x -3) (/.f64 1 x)) (+.f64 (pow.f64 x -4) (pow.f64 x -2)))"]],"time":151.7099609375,"type":"simplify"},{"compiler":[[4848,3884]],"time":59.77294921875,"type":"eval"},{"alts":[["(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","next",26.536869711561828],["(/.f64 2 (pow.f64 x 3))","fresh",32.55307548065786],["(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","fresh",32.168038826780396]],"compiler":[[30,22],[6,5],[14,11],[30,22],[6,5],[14,11]],"count":[[236,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[234,3],"picked":[1,0]}],"min-error":[0.00390625],"time":75.8662109375,"type":"prune"},{"compiler":[[120,87]],"locations":[["(*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))",0.0078125,true],["(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))",0.015625,true],["(+.f64 1 (+.f64 x -1))",2.672845151546775,true],["(+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))",16.214762564278036,true]],"time":26.091796875,"type":"localize"},{"count":[[4,48]],"series":[["(*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))","x","-inf",0.157958984375],["(*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))","x","inf",0.343017578125],["(*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))","x","0",0.158203125],["(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","x","-inf",0.260009765625],["(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","x","inf",0.27392578125],["(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","x","0",0.30517578125],["(+.f64 1 (+.f64 x -1))","x","-inf",0.14208984375],["(+.f64 1 (+.f64 x -1))","x","inf",0.166015625],["(+.f64 1 (+.f64 x -1))","x","0",0.140869140625],["(+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))","x","-inf",0.463134765625],["(+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))","x","inf",1.197998046875],["(+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))","x","0",0.68896484375]],"time":4.47802734375,"type":"series"},{"count":[[4,202]],"inputs":[["(+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x)))","(+.f64 1 (+.f64 x -1))","(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","(*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) x) (*.f64 x (+.f64 -1 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x (+.f64 x x)) (*.f64 -2 (+.f64 x -1))) (neg.f64 (*.f64 x (*.f64 -2 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 (*.f64 x (+.f64 -1 (+.f64 x x))) (*.f64 -2 (+.f64 -1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 (*.f64 x (+.f64 x -1)) (+.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2 (+.f64 x -1)) (+.f64 (neg.f64 (*.f64 x (*.f64 -2 (-.f64 1 x)))) (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2 (+.f64 x -1)) (+.f64 (neg.f64 (*.f64 (*.f64 -2 (-.f64 1 x)) x)) (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 x x)) (*.f64 -2 (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x (+.f64 x x)) (*.f64 -2 (+.f64 x -1))) (neg.f64 (*.f64 (*.f64 -2 (-.f64 1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 x -1)) (+.f64 x (+.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x x) (+.f64 (neg.f64 x) (+.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) (*.f64 x x)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (+.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (+.f64 x x)) (*.f64 (-.f64 1 (*.f64 x x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x))))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 2)) (cbrt.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x)))) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 x x)) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) 2)) (*.f64 (cbrt.f64 (*.f64 x (+.f64 x x))) (cbrt.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))))))) (+.f64 (cbrt.f64 (*.f64 x (+.f64 x x))) (cbrt.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 x x)) 2)) (*.f64 (cbrt.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (cbrt.f64 (*.f64 x (+.f64 x x)))))) (+.f64 (cbrt.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (cbrt.f64 (*.f64 x (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 x x) (*.f64 -2 (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (cbrt.f64 (pow.f64 (*.f64 -2 (+.f64 -1 (*.f64 x x))) 2)) (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (+.f64 x x))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 x x)) 2)) (*.f64 -2 (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -2 (+.f64 -1 (*.f64 x x))) (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (+.f64 x x)) (*.f64 -2 (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (+.f64 -1 (*.f64 x x)) (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 -1 (*.f64 x x)) -2 (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (-.f64 1 x)) (-.f64 -1 x) (*.f64 x (+.f64 x x)))))))","((#(struct:change #<rule egg-rr> (2) ((x . x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (-.f64 1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 x -1) 3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 x -1) 2) (-.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (cbrt.f64 (*.f64 x x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (neg.f64 x))) (pow.f64 (cbrt.f64 (neg.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x x)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 1 x) 3) -1) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 x) 2) (+.f64 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (pow.f64 (-.f64 1 x) 3)) (/.f64 1 (+.f64 (*.f64 (+.f64 x -1) (-.f64 2 x)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) 2)) (cbrt.f64 (+.f64 x -1)))) (+.f64 1 (cbrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) 2)) (-.f64 1 (*.f64 (cbrt.f64 (+.f64 x -1)) 1))) (+.f64 (cbrt.f64 (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 0 (*.f64 (cbrt.f64 x) 0))) (+.f64 (cbrt.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (*.f64 x x)) (*.f64 0 (cbrt.f64 x)))) (+.f64 0 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (+.f64 0 (*.f64 (cbrt.f64 x) 0))) (-.f64 (cbrt.f64 x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x -1) 3)) (+.f64 (pow.f64 (+.f64 x -1) 2) (-.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 x) 3) -1) (+.f64 (pow.f64 (+.f64 1 x) 2) (+.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (-.f64 1 x) 3)) (+.f64 (*.f64 (+.f64 x -1) (-.f64 2 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 x) 3) -1) (+.f64 1 (-.f64 (pow.f64 (+.f64 1 x) 2) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 x x (+.f64 1 x)) (+.f64 (pow.f64 x 3) -1)) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (fma.f64 x x (+.f64 1 x))) (-.f64 1 (pow.f64 x 3))) (neg.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) 1) (*.f64 (+.f64 1 (*.f64 x (+.f64 x -1))) -1)) (*.f64 (+.f64 1 (*.f64 x (+.f64 x -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) 1) (*.f64 (neg.f64 (fma.f64 x x (+.f64 1 x))) 1)) (*.f64 (neg.f64 (fma.f64 x x (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 3) -1) 1) (*.f64 (fma.f64 x x (+.f64 1 x)) 1)) (*.f64 (fma.f64 x x (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) 1) (*.f64 (+.f64 1 (*.f64 x (+.f64 x -1))) 1)) (*.f64 (+.f64 1 (*.f64 x (+.f64 x -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 x) 3) -1)) (neg.f64 (+.f64 (pow.f64 (+.f64 1 x) 2) (+.f64 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (neg.f64 (*.f64 x (+.f64 x -1))) -1) (+.f64 1 (pow.f64 x 3))) (+.f64 1 (*.f64 x (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 x)) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x -1)) (cbrt.f64 (pow.f64 (+.f64 x -1) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x 0)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 1 (*.f64 x x))) (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x))))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) 2)) (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) 2)) (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (neg.f64 x)) (/.f64 -1 (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x))))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) 2) (pow.f64 (+.f64 -1 (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x)) (-.f64 -1 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x)) (-.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) 2)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (cbrt.f64 (+.f64 -1 (*.f64 x x)))) (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (+.f64 -1 (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (-.f64 -1 x)) (/.f64 (/.f64 -1 x) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (-.f64 1 x)) (/.f64 (/.f64 -1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (/.f64 (/.f64 1 x) (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (/.f64 1 (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 (*.f64 x x))) (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 x)) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 (*.f64 x x)) (neg.f64 1/3)) (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (cbrt.f64 (pow.f64 (+.f64 -1 (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 x)) (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 x)) (cbrt.f64 (-.f64 -1 x))) (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 -1 x)) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (cbrt.f64 (+.f64 -1 (*.f64 x x)))) (pow.f64 (cbrt.f64 (+.f64 -1 (*.f64 x x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (+.f64 -1 (*.f64 x x))) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (/.f64 1 (*.f64 x (+.f64 -1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))) (+.f64 -1 (*.f64 x x))) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))) (/.f64 1 (*.f64 (neg.f64 x) (+.f64 -1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 x)) (cbrt.f64 (-.f64 -1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (cbrt.f64 (+.f64 -1 (*.f64 x x))))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (neg.f64 (*.f64 (neg.f64 x) (+.f64 -1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))) (+.f64 -1 (*.f64 x x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (+.f64 -1 (*.f64 x x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (cbrt.f64 (+.f64 -1 (*.f64 x x)))) (cbrt.f64 (pow.f64 (+.f64 -1 (*.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 -1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 x)) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))) (*.f64 (neg.f64 x) (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (+.f64 x -1)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (+.f64 -1 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))) (/.f64 (*.f64 (neg.f64 x) (+.f64 -1 (*.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (/.f64 (*.f64 x (+.f64 -1 (*.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 -1 x))) (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (*.f64 (-.f64 1 (*.f64 x x)) -2) (*.f64 x (+.f64 x x))) (+.f64 -1 (*.f64 x x)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (neg.f64 x)) (-.f64 1 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (neg.f64 x)) (/.f64 1 (+.f64 -1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 (*.f64 x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (+.f64 -1 (*.f64 x x))) (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) x) (-.f64 1 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 x x) x (*.f64 -2 (+.f64 -1 (*.f64 x x)))) (*.f64 x (+.f64 -1 (*.f64 x x)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x x) (fma.f64 x x x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x x) (*.f64 x (+.f64 x -1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 (*.f64 x (+.f64 x -1)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 x (+.f64 -1 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 -1 (+.f64 x x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x x) (*.f64 x (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 x -1)) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x x) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) (cbrt.f64 (pow.f64 (+.f64 x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (+.f64 (*.f64 (cbrt.f64 (*.f64 x x)) x) (*.f64 (cbrt.f64 (*.f64 x x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 x x))) (cbrt.f64 (pow.f64 (*.f64 x (+.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 x x)) 2)) (cbrt.f64 (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 x (cbrt.f64 x)) (*.f64 x (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 x x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 x x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 x x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 x x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (*.f64 x x))))))"]],"rules":[["egg-rr",30],["egg-rr",61],["egg-rr",68],["egg-rr",44]],"time":46.073974609375,"type":"rewrite"},{"count":[[250,221]],"inputs":[["2","2","2","2","2","2","2","2","2","2","2","2","x","x","x","x","x","x","x","x","x","x","x","x","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["2","2","2","2","2","2","2","2","2","2","2","2","x","x","x","x","x","x","x","x","x","x","x","x","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 x (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 (+.f64 x (pow.f64 x 3)) (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 -2 (+.f64 x (+.f64 (pow.f64 x 5) (pow.f64 x 3)))) (/.f64 -2 x))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -7) (+.f64 (pow.f64 x -3) (pow.f64 x -9)))))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -7) (+.f64 (pow.f64 x -3) (pow.f64 x -9)))))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))"]],"time":137.044189453125,"type":"simplify"},{"compiler":[[6319,3935]],"time":60.346923828125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","done",26.536869711561828],["(/.f64 2 (pow.f64 x 3))","fresh",32.55307548065786],["(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","fresh",32.168038826780396],["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","next",0.05078125]],"compiler":[[30,22],[6,5],[14,11],[12,9],[6,5],[14,11],[12,9]],"count":[[224,4]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[221,1],"picked":[1,1]}],"min-error":[0],"time":60.4150390625,"type":"prune"},{"compiler":[[32,23]],"locations":[["(*.f64 (-.f64 1 x) (-.f64 -1 x))",0.0078125,true],["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))",0.05078125,true]],"time":7.637939453125,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (-.f64 1 x) (-.f64 -1 x))","x","-inf",0.147216796875],["(*.f64 (-.f64 1 x) (-.f64 -1 x))","x","inf",0.231201171875],["(*.f64 (-.f64 1 x) (-.f64 -1 x))","x","0",0.217041015625],["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","x","-inf",0.248046875],["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","x","inf",0.239013671875],["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","x","0",0.302978515625]],"time":1.469970703125,"type":"series"},{"count":[[2,186]],"inputs":[["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","(*.f64 (-.f64 1 x) (-.f64 -1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 0) (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) (*.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) (*.f64 0 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 -2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) (/.f64 (/.f64 -2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (/.f64 (/.f64 -2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 -2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 x) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (cbrt.f64 (-.f64 -1 x))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2)) (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 1 x)) (/.f64 (/.f64 -1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 (/.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (*.f64 (-.f64 1 x) (-.f64 -1 x)))) (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 2 x)) (-.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 2 x)) (-.f64 -1 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 x) 2) (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 x)) (/.f64 (/.f64 -2 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 (/.f64 2 (-.f64 1 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (/.f64 (/.f64 2 x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 x) (/.f64 1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 x) (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (/.f64 2 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) (+.f64 -1 x)) (/.f64 2 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -2 x) (+.f64 1 x)) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))) (cbrt.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) (+.f64 1 x)) (/.f64 2 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (-.f64 -1 x)) (/.f64 (cbrt.f64 (/.f64 2 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (*.f64 (-.f64 1 x) (-.f64 -1 x))) (cbrt.f64 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (-.f64 1 x)) (/.f64 (cbrt.f64 (/.f64 2 x)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))) (cbrt.f64 (/.f64 8 (*.f64 (-.f64 1 x) (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 x) 2) (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))) (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 1 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 x) (+.f64 -1 x)) (/.f64 -1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 1 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (-.f64 1 x)) (/.f64 1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 2 x)) (-.f64 1 x)) (cbrt.f64 (pow.f64 (/.f64 2 x) 2))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2)) (cbrt.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 x) 2) (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x)) (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 x) (/.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (cbrt.f64 (-.f64 -1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 x) (+.f64 1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 x) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 x) (+.f64 -1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2 x) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) (cbrt.f64 (pow.f64 (/.f64 2 x) 2))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (*.f64 x 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (cbrt.f64 (/.f64 8 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 2 x)) (-.f64 -1 x)) (cbrt.f64 (pow.f64 (/.f64 2 x) 2))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2)) (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2)) (cbrt.f64 (/.f64 -2 x))) (cbrt.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 2 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 -2 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 (/.f64 2 x) (cbrt.f64 (-.f64 1 x)))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (/.f64 2 x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (*.f64 (-.f64 1 x) (-.f64 -1 x)))) (/.f64 1 x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (-.f64 -1 x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 x) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (/.f64 1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (cbrt.f64 (-.f64 -1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 -2 x) (+.f64 1 x)) 1) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 x) (+.f64 -1 x)) 1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 x) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)))) 1) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 x)) (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (*.f64 (-.f64 1 x) (-.f64 -1 x)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 x) 2)) (*.f64 (-.f64 1 x) (-.f64 -1 x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 x)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 x) 2) (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 x)) (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2))) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -2 x)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 x) 2) (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))) (cbrt.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -2 x)) (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 2))) (cbrt.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 (/.f64 -1 x) (+.f64 1 x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -2 x) (/.f64 1 (-.f64 -1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 x) (cbrt.f64 (-.f64 1 x))) (/.f64 1 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (/.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (neg.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 -2 x) (+.f64 1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 2 x) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 -2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -2 (/.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 -2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -2 x) (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 -1 x) (*.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 (neg.f64 x) (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 x) (+.f64 -1 (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 0) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) (*.f64 0 (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 -1 x) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x x) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (fma.f64 x (+.f64 -1 x) 1)) (-.f64 (/.f64 (pow.f64 x 3) (fma.f64 x (+.f64 -1 x) 1)) (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -1 (-.f64 x (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 x) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)) (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 x) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -1 x) (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (-.f64 1 x)) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (*.f64 (-.f64 1 x) (cbrt.f64 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (*.f64 (-.f64 -1 x) (cbrt.f64 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 x) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 x) (-.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 -1 (pow.f64 x 3))) (/.f64 1 (*.f64 (fma.f64 x x (+.f64 1 x)) (fma.f64 x (+.f64 -1 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 x) (-.f64 -1 (pow.f64 x 3))) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 -1 (pow.f64 x 3))) (*.f64 (fma.f64 x x (+.f64 1 x)) (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (neg.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 x) (+.f64 (pow.f64 x 3) 1)) (neg.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3))) 1) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 (pow.f64 x 3))) 1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 -1 (pow.f64 x 3))) 1) (*.f64 (fma.f64 x x (+.f64 1 x)) (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 x 3)) (-.f64 -1 x)) (neg.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 1) (-.f64 1 x)) (neg.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 x 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (-.f64 -1 x))) (cbrt.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 (pow.f64 x 3))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (-.f64 1 x))) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 x) (-.f64 -1 (pow.f64 x 3)))) (neg.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (-.f64 -1 (pow.f64 x 3)))) (neg.f64 (*.f64 (fma.f64 x x (+.f64 1 x)) (fma.f64 x (+.f64 -1 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 -1 x) (-.f64 1 (pow.f64 x 3)))) (neg.f64 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 1 x) (*.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 1 x) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (cbrt.f64 (-.f64 -1 x)) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 -1 x) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 -1 x) 1 (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 x) -1 (*.f64 x (+.f64 -1 x)))))))"]],"rules":[["egg-rr",67],["egg-rr",119]],"time":33.989990234375,"type":"rewrite"},{"count":[[210,206]],"inputs":[["(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","-1","(-.f64 (pow.f64 x 2) 1)","(-.f64 (pow.f64 x 2) 1)","(-.f64 (pow.f64 x 2) 1)","(pow.f64 x 2)","(-.f64 (pow.f64 x 2) 1)","(-.f64 (pow.f64 x 2) 1)","(-.f64 (pow.f64 x 2) 1)","(pow.f64 x 2)","(-.f64 (pow.f64 x 2) 1)","(-.f64 (pow.f64 x 2) 1)","(-.f64 (pow.f64 x 2) 1)"]],"method":["egg-herbie"],"outputs":[["(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 x (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 (+.f64 x (pow.f64 x 3)) (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 -2 (+.f64 (+.f64 (pow.f64 x 5) (pow.f64 x 3)) x)) (/.f64 -2 x))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -7) (+.f64 (pow.f64 x -3) (pow.f64 x -9)))))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -7) (+.f64 (pow.f64 x -3) (pow.f64 x -9)))))","-1","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(pow.f64 x 2)","(*.f64 x x)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(pow.f64 x 2)","(*.f64 x x)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)","(-.f64 (pow.f64 x 2) 1)","(fma.f64 x x -1)"]],"time":77.699951171875,"type":"simplify"},{"compiler":[[3553,2707]],"time":47.131103515625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)","next",0.0625],["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","done",0.05078125],["(/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))","fresh",0.3144705967279656],["(/.f64 (*.f64 (cbrt.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (/.f64 2 x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))","fresh",3.277156010299238],["(/.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))","fresh",0.10775375976844201],["(/.f64 (/.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 x))","fresh",0.07421875]],"compiler":[[12,9],[12,9],[12,9],[26,21],[20,16],[13,10],[12,9],[12,9],[26,21],[20,16],[13,10]],"count":[[210,6]],"kept":[{"done":[1,0],"fresh":[2,0],"new":[206,5],"picked":[1,1]}],"min-error":[0],"time":70.715087890625,"type":"prune"},{"compiler":[[36,27]],"locations":[["(/.f64 2 (-.f64 -1 x))",0.0078125,true],["(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)",0.05859375,true],["(/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))",0.08203125,true]],"time":8.539794921875,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 2 (-.f64 -1 x))","x","-inf",0.183837890625],["(/.f64 2 (-.f64 -1 x))","x","inf",0.23193359375],["(/.f64 2 (-.f64 -1 x))","x","0",0.18896484375],["(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)","x","-inf",0.20703125],["(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)","x","inf",0.180908203125],["(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)","x","0",0.24609375],["(/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))","x","-inf",0.238037109375],["(/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))","x","inf",0.343017578125],["(/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))","x","0",0.30322265625]],"time":2.253173828125,"type":"series"},{"count":[[3,260]],"inputs":[["(/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))","(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)","(/.f64 2 (-.f64 -1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (*.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 0) (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (*.f64 0 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 -1 x)) (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (+.f64 1 x) (-.f64 1 x))) (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (-.f64 1 x))) (/.f64 (/.f64 1 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)) (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 1 x))) (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (/.f64 1 (+.f64 -1 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (+.f64 1 x)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 x)) (/.f64 2 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (+.f64 -1 x)) (+.f64 1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (/.f64 1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 2 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (/.f64 8 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (-.f64 1 x)) (cbrt.f64 (/.f64 2 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) (pow.f64 (cbrt.f64 (-.f64 1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 (+.f64 -1 x)) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (+.f64 -1 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 1 (*.f64 (-.f64 -1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 1 (*.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (+.f64 -1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2 (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (*.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (+.f64 1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (*.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 1 x)) (cbrt.f64 (/.f64 8 (-.f64 -1 x)))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 1 x)) (*.f64 (-.f64 -1 x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 1 x))) (/.f64 2 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)) (cbrt.f64 (/.f64 2 (-.f64 -1 x)))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)) (cbrt.f64 (/.f64 2 (+.f64 1 x)))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (-.f64 1 x))) (/.f64 1 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x))) (/.f64 1 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -2 (+.f64 -1 x)) 1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (+.f64 -1 x)) 1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 (/.f64 1 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 1 (+.f64 -1 x))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (/.f64 1 (+.f64 -1 x))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2)))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (+.f64 1 x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2)))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (-.f64 1 x))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (-.f64 1 x))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (+.f64 -1 x)) -1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (+.f64 -1 x)) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (+.f64 -1 x)) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -2 (+.f64 -1 x)) (-.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 -1 x)) (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 -1 x)) (cbrt.f64 (-.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 -1 x)) -1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 -1 x)) 1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) -1) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (cbrt.f64 (-.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (-.f64 -1 x) (-.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 (-.f64 1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (+.f64 1 x) (-.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (*.f64 (-.f64 -1 x) (-.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (/.f64 (*.f64 (+.f64 1 x) (-.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (+.f64 1 x) (-.f64 1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (-.f64 -1 x) (-.f64 1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) (*.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 0) (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) (*.f64 0 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))) (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 (-.f64 1 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 (-.f64 1 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 (-.f64 1 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (+.f64 1 x)) x) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 2)) (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 (/.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 x)) (/.f64 (/.f64 1 (-.f64 1 x)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 1 x)) (cbrt.f64 (*.f64 x x))) (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) (+.f64 -1 x)) (/.f64 2 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 (-.f64 1 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2) (*.f64 x x))) (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)) x) (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 1 (*.f64 (-.f64 1 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (+.f64 1 x)) (/.f64 1 (*.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) 2) (*.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) -2) (*.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x))) (/.f64 (/.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 -1 x) (+.f64 -1 x)) (*.f64 (-.f64 -1 x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 1 x)) (*.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (/.f64 1 x)) (*.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 (-.f64 1 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 x)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 1 x)) x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (-.f64 -1 x)) (*.f64 (-.f64 1 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 2)) (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 2)) (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (/.f64 -2 (+.f64 -1 x))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x)))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (/.f64 2 (+.f64 -1 x))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 x)) (/.f64 1 (-.f64 1 x))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2) (*.f64 x x)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 2))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2) (*.f64 x x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 (/.f64 1 (-.f64 1 x)) (cbrt.f64 (*.f64 x x)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 (/.f64 -1 x) (+.f64 -1 x))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (/.f64 (/.f64 -1 x) (+.f64 -1 x))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) 1) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 (+.f64 1 x)) x) 1) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -2 (+.f64 -1 x)) (/.f64 1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) (/.f64 1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (+.f64 -1 x)) (/.f64 1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 2 (+.f64 1 x)) (/.f64 -1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)) x)) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (+.f64 1 x))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) 2)) x)) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) 1) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) -1) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) x) (-.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (+.f64 1 x)) x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (+.f64 1 x)) x) (cbrt.f64 (-.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (+.f64 1 x)) x) -1) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 2 (+.f64 1 x)) x) 1) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 (*.f64 (-.f64 1 x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 (*.f64 (-.f64 1 x) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 x))) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 (-.f64 1 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 2 (+.f64 1 x)) (/.f64 (/.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 (-.f64 1 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 x) (/.f64 (/.f64 2 (+.f64 1 x)) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 2 (+.f64 1 x)) (*.f64 x (+.f64 -1 x))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 2 (-.f64 -1 x)) (*.f64 (/.f64 2 (-.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 2 (-.f64 -1 x)) 0) (/.f64 2 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 2 (-.f64 -1 x)) (*.f64 0 (/.f64 2 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 2 (-.f64 -1 x))) (/.f64 2 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 2 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 2 (-.f64 -1 x)) (/.f64 0 (*.f64 (-.f64 -1 x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (-.f64 -1 x) 1/2)) (/.f64 2 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 1 x)) (/.f64 2 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (cbrt.f64 (/.f64 4 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2) (/.f64 (cbrt.f64 4) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (cbrt.f64 (-.f64 -1 x))) (/.f64 (sqrt.f64 2) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 2) (/.f64 (sqrt.f64 2) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (cbrt.f64 (/.f64 2 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 x))) (/.f64 2 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 2 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 2 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (pow.f64 (-.f64 -1 x) 2))) (cbrt.f64 (/.f64 2 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))) (cbrt.f64 (/.f64 1 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 4) (-.f64 -1 x)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (-.f64 -1 x)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (+.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))) (/.f64 (sqrt.f64 2) (cbrt.f64 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (+.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x))) (pow.f64 (cbrt.f64 (-.f64 -1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (-.f64 -1 x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 -1 x))) 2) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (cbrt.f64 4)) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 2) (cbrt.f64 (-.f64 -1 x))) (sqrt.f64 2)) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (cbrt.f64 2)) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (cbrt.f64 -2)) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 2) (/.f64 (sqrt.f64 2) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (cbrt.f64 (/.f64 4 (pow.f64 (-.f64 -1 x) 2)))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 2) (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2) (cbrt.f64 (/.f64 4 (pow.f64 (-.f64 -1 x) 2)))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -2) (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 -1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (-.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -2 (cbrt.f64 (-.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 -1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 2 (+.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -1 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (+.f64 1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (*.f64 (-.f64 -1 x) 1/2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (-.f64 -1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 (-.f64 -1 x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 8 (-.f64 -1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 -1 x) 1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2 (-.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 2 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 3))))))"]],"rules":[["egg-rr",69],["egg-rr",99],["egg-rr",92]],"time":39.808837890625,"type":"rewrite"},{"count":[[296,302]],"inputs":[["-2","(-.f64 (*.f64 -2 (pow.f64 x 2)) 2)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 (pow.f64 x 4))) 2)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (pow.f64 x 6)))) 2)","(/.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 8))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(/.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 8))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","-2","(-.f64 (*.f64 2 x) 2)","(-.f64 (+.f64 (*.f64 2 x) (*.f64 -2 (pow.f64 x 2))) 2)","(-.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 x) (*.f64 -2 (pow.f64 x 2)))) 2)","(/.f64 -2 x)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(/.f64 -2 x)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))"]],"method":["egg-herbie"],"outputs":[["-2","(-.f64 (*.f64 -2 (pow.f64 x 2)) 2)","(fma.f64 -2 (*.f64 x x) -2)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 (pow.f64 x 4))) 2)","(fma.f64 -2 (fma.f64 x x (pow.f64 x 4)) -2)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (pow.f64 x 6)))) 2)","(+.f64 (*.f64 -2 (+.f64 (fma.f64 x x (pow.f64 x 4)) (pow.f64 x 6))) -2)","(/.f64 2 (pow.f64 x 2))","(/.f64 2 (*.f64 x x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(*.f64 2 (+.f64 (pow.f64 x -4) (pow.f64 x -2)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) (pow.f64 x -6)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 8))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(fma.f64 2 (pow.f64 x -8) (*.f64 2 (+.f64 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) (pow.f64 x -6))))","(/.f64 2 (pow.f64 x 2))","(/.f64 2 (*.f64 x x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(*.f64 2 (+.f64 (pow.f64 x -4) (pow.f64 x -2)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) (pow.f64 x -6)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 8))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(fma.f64 2 (pow.f64 x -8) (*.f64 2 (+.f64 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) (pow.f64 x -6))))","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 x (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(fma.f64 -2 (+.f64 (pow.f64 x 3) x) (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 -2 (+.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 5)) x)) (/.f64 -2 x))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -9))))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (pow.f64 x -3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -9))))","-2","(-.f64 (*.f64 2 x) 2)","(fma.f64 2 x -2)","(-.f64 (+.f64 (*.f64 2 x) (*.f64 -2 (pow.f64 x 2))) 2)","(fma.f64 2 x (fma.f64 -2 (*.f64 x x) -2))","(-.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 x) (*.f64 -2 (pow.f64 x 2)))) 2)","(+.f64 (*.f64 2 (+.f64 (pow.f64 x 3) x)) (fma.f64 -2 (*.f64 x x) -2))","(/.f64 -2 x)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(fma.f64 2 (pow.f64 x -2) (/.f64 -2 x))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (-.f64 (pow.f64 x -2) (+.f64 (/.f64 1 x) (pow.f64 x -3))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (-.f64 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) (+.f64 (/.f64 1 x) (pow.f64 x -3))))","(/.f64 -2 x)","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(fma.f64 2 (pow.f64 x -2) (/.f64 -2 x))","(-.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (-.f64 (pow.f64 x -2) (+.f64 (/.f64 1 x) (pow.f64 x -3))))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(*.f64 2 (-.f64 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) (+.f64 (/.f64 1 x) (pow.f64 x -3))))"]],"time":119.88818359375,"type":"simplify"},{"compiler":[[5187,3999]],"time":68.27880859375,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)","done",0.0625],["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","done",0.05078125],["(/.f64 (*.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (-.f64 1 x))) x)","fresh",0.07259750976844201],["(/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))","fresh",0.3144705967279656]],"compiler":[[12,9],[12,9],[22,18],[12,9]],"count":[[308,4]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[302,1],"picked":[1,1]}],"min-error":[0],"time":143.80517578125,"type":"prune"},{"accuracy":[0.05078125],"baseline":[0.05078125],"branch":[["x",0.05078125,1],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))",0.05078125,1]],"compiler":[[2,1],[16,13],[188,145]],"count":[[12,1]],"inputs":[["(/.f64 (*.f64 (cbrt.f64 (/.f64 2 (-.f64 -1 x))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 2 (-.f64 -1 x)) 2)) (-.f64 1 x))) x)","(/.f64 (/.f64 (/.f64 2 (-.f64 -1 x)) (-.f64 1 x)) x)","(/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))","(/.f64 (*.f64 (cbrt.f64 (/.f64 -1 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (/.f64 2 x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) 2)))","(/.f64 (/.f64 (/.f64 (/.f64 2 (-.f64 1 x)) x) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)))","(/.f64 (/.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (neg.f64 x))","(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","(/.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 x) (-.f64 -1 x))) (*.f64 x (+.f64 (+.f64 1 (+.f64 x -1)) x))) x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","(/.f64 2 (pow.f64 x 3))","(*.f64 2 (+.f64 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (pow.f64 x -5)))","(+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))","(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))"]],"link":["."],"name":["3frac (problem 3.3.3)"],"oracle":[59.02033814943933],"outputs":[["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))"]],"time":12.501953125,"times":[["x",5.68310546875],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))",3.56591796875]],"type":"regimes"},{"compiler":[[12,9]],"inputs":[["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 2 x) (*.f64 (-.f64 1 x) (-.f64 -1 x)))","(/.f64 2 (*.f64 (*.f64 (-.f64 1 x) (-.f64 -1 x)) x))"]],"stop":[["fuel",1]],"time":19.906982421875,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[12,9]],"remove-preprocessing":[[]],"time":8.9169921875,"type":"end"}]