[{"compiler":[[11,7]],"method":["search"],"sampling":[[12,0.6396870426087844,0.35494829803292305,0.005364659358292556],[11,0.5304721816755773,0.46416315896613014,0.005364659358292556],[10,0.4602626282185156,0.5382732431708064,0.0014641286106780171],[9,0.3900530747614539,0.6084827966278681,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":69.380859375,"type":"analyze"},{"outcomes":[["body",256,"invalid",12.85107421875,345],["body",256,"valid",310.743896484375,8256]],"time":331.455078125,"type":"sample"},{"compiler":[[10,6]],"inputs":[["0","1","2"],["(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 (-.f64 y x) (-.f64 z x))","(/.f64 (-.f64 z y) (-.f64 x y))","(/.f64 (-.f64 x z) (-.f64 y z))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 (-.f64 y x) (-.f64 z x))","(/.f64 (-.f64 z y) (-.f64 x y))","(/.f64 (-.f64 x z) (-.f64 y z))"]],"symmetry":[[]],"time":69.595947265625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 (-.f64 y x) (-.f64 y z))"]],"time":18.028076171875,"type":"simplify"},{"compiler":[[17,9]],"time":0.298095703125,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (-.f64 z y))","next",0.015625]],"compiler":[[10,6],[10,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.015625],"time":1.934814453125,"type":"prune"},{"compiler":[[19,6]],"locations":[["(/.f64 (-.f64 x y) (-.f64 z y))",0.015625,true]],"time":3.946044921875,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (-.f64 x y) (-.f64 z y))","z","-inf",0.442138671875],["(/.f64 (-.f64 x y) (-.f64 z y))","z","inf",0.4169921875],["(/.f64 (-.f64 x y) (-.f64 z y))","z","0",0.4140625],["(/.f64 (-.f64 x y) (-.f64 z y))","y","-inf",0.337890625],["(/.f64 (-.f64 x y) (-.f64 z y))","y","inf",0.588134765625],["(/.f64 (-.f64 x y) (-.f64 z y))","y","0",0.52587890625],["(/.f64 (-.f64 x y) (-.f64 z y))","x","-inf",0.502197265625],["(/.f64 (-.f64 x y) (-.f64 z y))","x","inf",0.442138671875],["(/.f64 (-.f64 x y) (-.f64 z y))","x","0",0.4169921875]],"time":4.241943359375,"type":"series"},{"count":[[1,73]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 0) (/.f64 (-.f64 y x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (-.f64 y z)) (*.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 y (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 y x) (-.f64 y z))) (/.f64 (-.f64 y x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (-.f64 y z)) (*.f64 0 (/.f64 (-.f64 y x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x (-.f64 z y)) (pow.f64 (-.f64 z y) 2)) (/.f64 (*.f64 (-.f64 z y) y) (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 y z)) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y z)) (/.f64 (-.f64 y x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z y)) (/.f64 (-.f64 y x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (-.f64 z y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) (/.f64 1 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (-.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (-.f64 y z)) (*.f64 (-.f64 z y) (neg.f64 y))) (*.f64 (-.f64 z y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (*.f64 (-.f64 z y) (/.f64 y (cbrt.f64 (-.f64 z y))))) (*.f64 (-.f64 z y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (-.f64 y z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (neg.f64 y))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (-.f64 z y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (/.f64 y (cbrt.f64 (-.f64 z y))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2)) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (-.f64 z y)) (*.f64 (-.f64 y z) y)) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (*.f64 (-.f64 y z) (/.f64 y (cbrt.f64 (-.f64 z y))))) (*.f64 (-.f64 y z) (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y)))) (neg.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) 1) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 z y) (neg.f64 (*.f64 (-.f64 z y) y))) (-.f64 z y)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (*.f64 (-.f64 y z) (neg.f64 y))) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 y x) (-.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 z y)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 y z)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2))) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 y z)))))))"]],"rules":[["egg-rr",73]],"time":24.049072265625,"type":"rewrite"},{"count":[[109,109]],"inputs":[["(*.f64 -1 (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 y (-.f64 z y)))","(/.f64 y (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(fma.f64 (neg.f64 y) (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) z)) (/.f64 x z))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(-.f64 (fma.f64 (neg.f64 (*.f64 y y)) (-.f64 (pow.f64 z -2) (*.f64 x (pow.f64 z -3))) (/.f64 x z)) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","(-.f64 (-.f64 (fma.f64 (neg.f64 (*.f64 y y)) (-.f64 (pow.f64 z -2) (*.f64 x (pow.f64 z -3))) (/.f64 x z)) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 (/.f64 x z) z)))) (*.f64 (pow.f64 y 3) (-.f64 (pow.f64 z -3) (/.f64 x (pow.f64 z 4)))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(+.f64 1 (/.f64 (-.f64 z x) y))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(+.f64 (/.f64 (-.f64 z x) y) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) 1))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","(+.f64 (fma.f64 (*.f64 (-.f64 z x) (*.f64 z z)) (pow.f64 y -3) 1) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) (/.f64 (-.f64 z x) y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 1 (/.f64 (-.f64 z x) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(+.f64 (/.f64 (-.f64 z x) y) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) 1))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(+.f64 (fma.f64 (*.f64 (-.f64 z x) (*.f64 z z)) (pow.f64 y -3) 1) (+.f64 (/.f64 (*.f64 (-.f64 z x) z) (*.f64 y y)) (/.f64 (-.f64 z x) y)))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(/.f64 (-.f64 y x) y)","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (-.f64 y x) y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (+.f64 (-.f64 y x) (*.f64 (*.f64 z z) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))) y))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(fma.f64 (pow.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 y x))) y) z) 3) (pow.f64 y -2) (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (/.f64 (+.f64 (-.f64 y x) (*.f64 (*.f64 z z) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))) y)))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(fma.f64 (*.f64 y (-.f64 x y)) (pow.f64 z -2) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(+.f64 (fma.f64 (*.f64 y (-.f64 x y)) (pow.f64 z -2) (*.f64 (pow.f64 (/.f64 y z) 2) (/.f64 (-.f64 x y) z))) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(fma.f64 (*.f64 y (-.f64 x y)) (pow.f64 z -2) (+.f64 (fma.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4))) (/.f64 (-.f64 x y) z)))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(fma.f64 (*.f64 y (-.f64 x y)) (pow.f64 z -2) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(+.f64 (fma.f64 (*.f64 y (-.f64 x y)) (pow.f64 z -2) (*.f64 (pow.f64 (/.f64 y z) 2) (/.f64 (-.f64 x y) z))) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(fma.f64 (*.f64 y (-.f64 x y)) (pow.f64 z -2) (+.f64 (fma.f64 (*.f64 (*.f64 y y) (-.f64 x y)) (pow.f64 z -3) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4))) (/.f64 (-.f64 x y) z)))"]],"time":132.279052734375,"type":"simplify"},{"compiler":[[1972,759]],"time":18.387939453125,"type":"eval"},{"alts":[["(+.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","next",0.0859375],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625],["(/.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (-.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))","fresh",24.61083536648321]],"compiler":[[17,11],[10,6],[20,14],[17,11],[20,14]],"count":[[110,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[109,2],"picked":[1,1]}],"min-error":[0],"time":24.53515625,"type":"prune"},{"compiler":[[47,17]],"locations":[["(/.f64 x (-.f64 z y))",0.01171875,true],["(/.f64 -1 (-.f64 y z))",0.01953125,true],["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))",0.17578125,true]],"time":9.208984375,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 x (-.f64 z y))","y","-inf",0.244140625],["(/.f64 x (-.f64 z y))","y","inf",0.26806640625],["(/.f64 x (-.f64 z y))","y","0",0.259033203125],["(/.f64 x (-.f64 z y))","z","-inf",0.26806640625],["(/.f64 x (-.f64 z y))","z","inf",0.3310546875],["(/.f64 x (-.f64 z y))","z","0",0.35693359375],["(/.f64 x (-.f64 z y))","x","-inf",0.35205078125],["(/.f64 x (-.f64 z y))","x","inf",0.47900390625],["(/.f64 x (-.f64 z y))","x","0",0.36279296875],["(/.f64 -1 (-.f64 y z))","z","-inf",0.23388671875],["(/.f64 -1 (-.f64 y z))","z","inf",0.327880859375],["(/.f64 -1 (-.f64 y z))","z","0",0.262939453125],["(/.f64 -1 (-.f64 y z))","y","-inf",0.2109375],["(/.f64 -1 (-.f64 y z))","y","inf",0.30712890625],["(/.f64 -1 (-.f64 y z))","y","0",0.293212890625],["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))","z","-inf",0.239990234375],["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))","z","inf",0.289794921875],["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))","z","0",0.369140625],["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))","y","-inf",0.254150390625],["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))","y","inf",0.56591796875],["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))","y","0",0.492919921875]],"time":7.0439453125,"type":"series"},{"count":[[3,158]],"inputs":[["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))","(/.f64 -1 (-.f64 y z))","(/.f64 x (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 y z)) 0) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 (/.f64 y (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 y z)) 0) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (-.f64 y z))) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 0 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 y z))) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 y)) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (-.f64 y z)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (neg.f64 y)) (cbrt.f64 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (cbrt.f64 y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 z y)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (/.f64 y (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (neg.f64 (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) y) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (neg.f64 y))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (neg.f64 y)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 y (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 y (-.f64 y z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 y z)) 0) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 y z)) (*.f64 (/.f64 -1 (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 y z)) 0) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 y z)) (*.f64 0 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (-.f64 y z))) (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 y z)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (cbrt.f64 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 z y)) (-.f64 z y)) (*.f64 (-.f64 y z) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 y z)) (-.f64 y z)) (pow.f64 (-.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) -1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (-.f64 y z) (cbrt.f64 (/.f64 1 (-.f64 y z))))) (*.f64 (-.f64 y z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 z y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) 3) (neg.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 z y)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 z y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (-.f64 y z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 x (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 z y)) 0) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 0 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 z y))) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (cbrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 z y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (cbrt.f64 x)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) -2)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) -2))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 x) (/.f64 -1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3))))))"]],"rules":[["egg-rr",51],["egg-rr",46],["egg-rr",61]],"time":32.5048828125,"type":"rewrite"},{"count":[[230,201]],"inputs":[["(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (+.f64 (/.f64 z y) (pow.f64 (/.f64 z y) 3))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (+.f64 (/.f64 z y) (pow.f64 (/.f64 z y) 3))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (+.f64 (/.f64 z y) (pow.f64 (/.f64 z y) 3))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (/.f64 y z)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (/.f64 y z))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (*.f64 z z)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (fma.f64 (*.f64 y y) (pow.f64 z (neg.f64 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (fma.f64 (pow.f64 y 3) (pow.f64 z (neg.f64 4)) (/.f64 1 z))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (/.f64 (neg.f64 (*.f64 z z)) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (/.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) (pow.f64 y (neg.f64 3)) (/.f64 z (*.f64 y y)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (/.f64 (neg.f64 (*.f64 z z)) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (/.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) (pow.f64 y (neg.f64 3)) (/.f64 z (*.f64 y y)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (/.f64 (neg.f64 (*.f64 z z)) (pow.f64 y 3)) (+.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (/.f64 (pow.f64 z 3) (neg.f64 (pow.f64 y 4))) (+.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) (pow.f64 y (neg.f64 3)) (/.f64 z (*.f64 y y)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (*.f64 z z)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (fma.f64 (*.f64 y y) (pow.f64 z (neg.f64 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (fma.f64 (pow.f64 y 3) (pow.f64 z (neg.f64 4)) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (*.f64 z z)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (fma.f64 (*.f64 y y) (pow.f64 z (neg.f64 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (fma.f64 (pow.f64 y 3) (pow.f64 z (neg.f64 4)) (/.f64 1 z))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (pow.f64 y 3)) (/.f64 x y)) (/.f64 (*.f64 z x) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (pow.f64 y 3)) (/.f64 x y)) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (/.f64 (*.f64 z x) (*.f64 y y)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (fma.f64 (*.f64 (*.f64 y y) x) (pow.f64 z (neg.f64 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (fma.f64 (*.f64 (*.f64 y y) x) (pow.f64 z (neg.f64 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (fma.f64 (*.f64 (*.f64 y y) x) (pow.f64 z (neg.f64 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (fma.f64 (*.f64 (*.f64 y y) x) (pow.f64 z (neg.f64 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (fma.f64 (*.f64 (*.f64 y y) x) (pow.f64 z (neg.f64 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (/.f64 (*.f64 y x) z) z) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (fma.f64 (*.f64 (*.f64 y y) x) (pow.f64 z (neg.f64 3)) (/.f64 x z))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (pow.f64 y 3)) (/.f64 x y)) (/.f64 (*.f64 z x) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (pow.f64 y 3)) (/.f64 x y)) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (/.f64 (*.f64 z x) (*.f64 y y)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(-.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (pow.f64 y 3)) (/.f64 x y)) (/.f64 (*.f64 z x) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 z z) x)) (pow.f64 y 3)) (/.f64 x y)) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (/.f64 (*.f64 z x) (*.f64 y y)))"]],"time":231.761962890625,"type":"simplify"},{"compiler":[[4058,1553]],"time":35.739990234375,"type":"eval"},{"alts":[["(+.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","fresh",11.522102077535084],["(+.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z))))","next",2.682968574248624],["(+.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","done",0.0859375],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625]],"compiler":[[25,16],[25,15],[17,11],[10,6],[25,16],[25,15]],"count":[[204,4]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[201,2],"picked":[1,1]}],"min-error":[0],"time":67.01123046875,"type":"prune"},{"compiler":[[93,30]],"locations":[["(pow.f64 (/.f64 y (-.f64 y z)) 2)",0.09994125976844202,true],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))",0.125,true],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))",0.131191259768442,true],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))",16.835104125291675,true]],"time":16.220947265625,"type":"localize"},{"count":[[4,68]],"series":[["(pow.f64 (/.f64 y (-.f64 y z)) 2)","z","-inf",0.2880859375],["(pow.f64 (/.f64 y (-.f64 y z)) 2)","z","inf",1.405029296875],["(pow.f64 (/.f64 y (-.f64 y z)) 2)","z","0",0.281005859375],["(pow.f64 (/.f64 y (-.f64 y z)) 2)","y","-inf",0.22705078125],["(pow.f64 (/.f64 y (-.f64 y z)) 2)","y","inf",0.31005859375],["(pow.f64 (/.f64 y (-.f64 y z)) 2)","y","0",0.34619140625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))","z","-inf",1.8701171875],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))","z","inf",1.884765625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))","z","0",1.093017578125],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))","y","-inf",2.97314453125],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))","y","inf",1.739013671875],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))","y","0",1.5078125],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))","z","-inf",0.220947265625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))","z","inf",0.202880859375],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))","z","0",0.177978515625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))","y","-inf",0.198974609375],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))","y","inf",0.18798828125],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))","y","0",0.22705078125],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))","z","-inf",1.485107421875],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))","z","inf",1.703857421875],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))","z","0",0.406982421875],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))","y","-inf",0.576171875],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))","y","inf",0.68603515625],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))","y","0",1.47802734375]],"time":21.83984375,"type":"series"},{"count":[[4,251]],"inputs":[["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y))","(pow.f64 (/.f64 y (-.f64 y z)) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) 0) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (*.f64 0 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4)) (pow.f64 (/.f64 y (-.f64 y z)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (/.f64 (/.f64 y (-.f64 y z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 y z))) (pow.f64 (-.f64 y z) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (/.f64 y (-.f64 y z)))) (*.f64 -1 (cbrt.f64 (/.f64 y (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) -1) (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 y 2/3) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (/.f64 y (-.f64 y z)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 y 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 y 2/3) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 y 2/3) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 y 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 y 2/3)) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (*.f64 y y))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 z y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2) (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 y z)) 0) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 (/.f64 y (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 y z))) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 y z)) (*.f64 0 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (-.f64 z y))) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (pow.f64 y 2/3) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -1/3)) (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 -1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 2/3) (-.f64 y z)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (pow.f64 (-.f64 y z) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (neg.f64 (pow.f64 (-.f64 y z) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 y z) -1/3)) (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (pow.f64 (-.f64 y z) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 y z) -1/3) (/.f64 y (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)) (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 y)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -1/3)) (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (pow.f64 y 2/3)) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 y z) -1/3) y) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) 1) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) 1) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 y z))) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) -1) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 0) (/.f64 y (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (*.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (/.f64 y (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (*.f64 0 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y)) (*.f64 (cbrt.f64 (pow.f64 y 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3) (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 y 2/3)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y 2/3)) (*.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4)) y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (neg.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 y)) (neg.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (cbrt.f64 (pow.f64 (-.f64 y z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (pow.f64 (/.f64 y (-.f64 y z)) 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4))) (cbrt.f64 (*.f64 y (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) 0) (pow.f64 (/.f64 y (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (*.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 y (-.f64 z y)) 2)) (pow.f64 (/.f64 y (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (*.f64 0 (pow.f64 (/.f64 y (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y z)) (/.f64 y (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) (-.f64 y z)) (/.f64 -1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4)) (pow.f64 (/.f64 y (-.f64 y z)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (/.f64 y (-.f64 y z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (pow.f64 (-.f64 y z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4)) (pow.f64 (/.f64 y (-.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 3)) (cbrt.f64 (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 y z) -2) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 4)) (pow.f64 (/.f64 y (-.f64 y z)) 4))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (-.f64 y z)) (-.f64 y z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 z y)) (/.f64 (*.f64 y y) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2) (cbrt.f64 (pow.f64 (-.f64 y z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 y z))))) (*.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (*.f64 (/.f64 (pow.f64 y 2/3) (-.f64 y z)) (/.f64 (pow.f64 y 2/3) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (*.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2))) (*.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3))) (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z))))) (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (*.f64 (neg.f64 (pow.f64 (-.f64 y z) -1/3)) (neg.f64 (pow.f64 (-.f64 y z) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (-.f64 z y)) 1) (*.f64 (/.f64 y (-.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) (-.f64 z y)) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y y)) (/.f64 1 (neg.f64 (pow.f64 (-.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (/.f64 1 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) 2/3) (*.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (/.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) (-.f64 y z)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) (-.f64 z y)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) (pow.f64 (-.f64 z y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y y)) (neg.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (-.f64 y z)) (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z))))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (-.f64 y z)) (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (-.f64 y z)) (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (-.f64 y z)) (/.f64 y (cbrt.f64 (-.f64 y z)))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) (-.f64 y z)) (pow.f64 (-.f64 y z) -1/3)) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) (-.f64 y z)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) (-.f64 y z)) -1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y y)) 1) (neg.f64 (pow.f64 (-.f64 z y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y y) (-.f64 z y)) 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (/.f64 y (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)) (/.f64 y (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (/.f64 y (-.f64 y z))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 y z))) (/.f64 y (-.f64 y z))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 3))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 3))) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 y z) 2/3))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 3))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) (+.f64 2 3))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 z y)) (cbrt.f64 (-.f64 y z))) (neg.f64 (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 z y)) (cbrt.f64 (-.f64 z y))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 z y)) -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 z y)) 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 y z)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 y z)) -1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 y z)) (pow.f64 (-.f64 y z) 2/3)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 y z)) (cbrt.f64 (-.f64 y z))) (pow.f64 (-.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y y) (-.f64 y z)) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2/3)) (pow.f64 (-.f64 y z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y y) (-.f64 z y))) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 z y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 y z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 y z))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 y z)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 z y)) (/.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 y z)) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 6))))))"]],"rules":[["egg-rr",83],["egg-rr",42],["egg-rr",72],["egg-rr",54]],"time":42.010986328125,"type":"rewrite"},{"count":[[319,311]],"inputs":[["1","(+.f64 1 (*.f64 2/3 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 8/27 (pow.f64 z 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) z)) (+.f64 (*.f64 2 (pow.f64 z 3)) (*.f64 2 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 -4 (pow.f64 z 2))) z))))) (pow.f64 y 3))))))","1","(+.f64 1 (*.f64 2/3 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -8/27 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) z)) (*.f64 -2 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 -4 (pow.f64 z 2))) z))))) (pow.f64 y 3))) (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 2/3 (/.f64 z y)))","(+.f64 (*.f64 5/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 1 (*.f64 2/3 (/.f64 z y))))","(+.f64 (*.f64 5/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 40/81 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (*.f64 2/3 (/.f64 z y)))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 4)) 1/3) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 z 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 z 52)) 1/9)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 4)) 1/3) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 z 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 z 52)) 1/9)))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 z 5))) (+.f64 (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 17)) 1/9) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 z 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 z 52)) 1/9))))))) (pow.f64 y 4)) (pow.f64 (*.f64 1 (pow.f64 z 4)) 1/3))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y))))","(pow.f64 y 1/3)","(+.f64 (pow.f64 y 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9) z)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 7)) 1/3) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 y 52)) 1/9))) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9) z))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 7)) 1/3) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 y 52)) 1/9))) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9) z)) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 y 52)) 1/9))))) (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 y 23)) 1/3)))) (pow.f64 z 3)) (pow.f64 (*.f64 1 (pow.f64 y 7)) 1/3))))))","(/.f64 (pow.f64 y 2) (pow.f64 z 2))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (*.f64 3 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 y 5) (pow.f64 z 5))) (+.f64 (*.f64 3 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))","1","(+.f64 1 (*.f64 2 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (/.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 2 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (/.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","1","(+.f64 1 (*.f64 2 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 3 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 2 (/.f64 z y))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 3 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 2 (/.f64 z y)))))","(/.f64 (pow.f64 y 2) (pow.f64 z 2))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 5) (pow.f64 z 5))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))))","(/.f64 (pow.f64 y 2) (pow.f64 z 2))","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 5) (pow.f64 z 5))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 2/3 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 2/3 z) y))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 2/3 (/.f64 z y) (*.f64 -1/3 (/.f64 (*.f64 (*.f64 z z) (+.f64 -3 4/3)) (*.f64 y y)))))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 8/27 (pow.f64 z 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) z)) (+.f64 (*.f64 2 (pow.f64 z 3)) (*.f64 2 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 -4 (pow.f64 z 2))) z))))) (pow.f64 y 3))))))","(+.f64 1 (fma.f64 2/3 (/.f64 z y) (*.f64 -1/3 (+.f64 (/.f64 (*.f64 (*.f64 z z) (+.f64 -3 4/3)) (*.f64 y y)) (/.f64 (fma.f64 8/27 (pow.f64 z 3) (fma.f64 -4/3 (*.f64 (*.f64 (*.f64 z z) (+.f64 -3 4/3)) z) (*.f64 2 (*.f64 z (+.f64 (*.f64 z z) (*.f64 -3 (*.f64 z z))))))) (pow.f64 y 3))))))","1","(+.f64 1 (*.f64 2/3 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 2/3 z) y))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2)))))","(+.f64 1 (fma.f64 2/3 (/.f64 z y) (*.f64 -1/3 (/.f64 (*.f64 (*.f64 z z) (+.f64 -3 4/3)) (*.f64 y y)))))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 z y)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -8/27 (pow.f64 z 3)) (+.f64 (*.f64 -2 (pow.f64 z 3)) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) z)) (*.f64 -2 (*.f64 (+.f64 (pow.f64 z 2) (*.f64 -4 (pow.f64 z 2))) z))))) (pow.f64 y 3))) (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 z 2) (+.f64 (*.f64 -4 (pow.f64 z 2)) (*.f64 4/3 (pow.f64 z 2)))) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 2/3 (/.f64 z y) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 (pow.f64 z 3) (+.f64 -8/27 -2)) (*.f64 z (+.f64 (*.f64 -2 (*.f64 -3 (*.f64 z z))) (*.f64 4/3 (*.f64 (*.f64 z z) (+.f64 -3 4/3)))))) (pow.f64 y 3)) (*.f64 -1/3 (/.f64 (*.f64 (*.f64 z z) (+.f64 -3 4/3)) (*.f64 y y))))))","1","(+.f64 1 (*.f64 2/3 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 2/3 z) y))","(+.f64 (*.f64 5/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 1 (*.f64 2/3 (/.f64 z y))))","(fma.f64 5/9 (pow.f64 (/.f64 z y) 2) (+.f64 1 (/.f64 (*.f64 2/3 z) y)))","(+.f64 (*.f64 5/9 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (+.f64 (*.f64 40/81 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (*.f64 2/3 (/.f64 z y)))))","(fma.f64 5/9 (pow.f64 (/.f64 z y) 2) (fma.f64 40/81 (pow.f64 (/.f64 z y) 3) (+.f64 1 (/.f64 (*.f64 2/3 z) y))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 y z)) (pow.f64 (/.f64 y z) 2))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 y z)) (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3)) (pow.f64 (pow.f64 (/.f64 y z) 2) 2)) (/.f64 y z))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (pow.f64 (/.f64 z y) 3) (pow.f64 (/.f64 z y) 2))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (pow.f64 (/.f64 z y) 3) (pow.f64 (/.f64 z y) 2))))","1","(+.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 z y) 2) (/.f64 z y)))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 z y) (+.f64 (pow.f64 (/.f64 z y) 3) (pow.f64 (/.f64 z y) 2))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 y z)) (pow.f64 (/.f64 y z) 2))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 y z)) (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3)) (pow.f64 (pow.f64 (/.f64 y z) 2) 2)) (/.f64 y z))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 y z)) (pow.f64 (/.f64 y z) 2))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 y z)) (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 y z) 2)) (pow.f64 (/.f64 y z) 3)) (pow.f64 (pow.f64 (/.f64 y z) 2) 2)) (/.f64 y z))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y)","(*.f64 (cbrt.f64 (pow.f64 z -2)) y)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y))","(fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 z -23) 1/9) (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 z -2)) y))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 4)) 1/3) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 z 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 z 52)) 1/9)))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y)))","(fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 z -23) 1/9) (*.f64 y y)) (fma.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 z 4)) (pow.f64 y 3)) (fma.f64 3 (pow.f64 z -4) (*.f64 -4/3 (pow.f64 (pow.f64 z -52) 1/9)))) (*.f64 (cbrt.f64 (pow.f64 z -2)) y)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 4)) 1/3) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 z 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 z 52)) 1/9)))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 z 5))) (+.f64 (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 17)) 1/9) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 z 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 z 52)) 1/9))))))) (pow.f64 y 4)) (pow.f64 (*.f64 1 (pow.f64 z 4)) 1/3))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 2)) 1/3) y))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 z 4)) (pow.f64 y 3)) (fma.f64 3 (pow.f64 z -4) (*.f64 -4/3 (pow.f64 (pow.f64 z -52) 1/9)))) (*.f64 (-.f64 (*.f64 4 (pow.f64 z -5)) (fma.f64 8/27 (cbrt.f64 (pow.f64 z -23)) (*.f64 4/3 (*.f64 (pow.f64 (pow.f64 z -17) 1/9) (fma.f64 3 (pow.f64 z -4) (*.f64 -4/3 (pow.f64 (pow.f64 z -52) 1/9))))))) (*.f64 (pow.f64 y 4) (cbrt.f64 (pow.f64 z 4)))))) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 z -23) 1/9) (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 z -2)) y)))","(pow.f64 y 1/3)","(cbrt.f64 y)","(+.f64 (pow.f64 y 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9) z)))","(+.f64 (cbrt.f64 y) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -14) 1/9) z)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 7)) 1/3) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 y 52)) 1/9))) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9) z))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 y 7)) (*.f64 (fma.f64 3 (pow.f64 y -4) (*.f64 (pow.f64 (pow.f64 y -52) 1/9) -4/3)) (*.f64 z z))) (+.f64 (cbrt.f64 y) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -14) 1/9) z))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 7)) 1/3) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 y 52)) 1/9))) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 14)) 1/9) z)) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 4/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 17)) 1/9) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 4))) (*.f64 4/3 (pow.f64 (/.f64 1 (pow.f64 y 52)) 1/9))))) (*.f64 8/27 (pow.f64 (/.f64 1 (pow.f64 y 23)) 1/3)))) (pow.f64 z 3)) (pow.f64 (*.f64 1 (pow.f64 y 7)) 1/3))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 y 7)) (*.f64 (fma.f64 3 (pow.f64 y -4) (*.f64 (pow.f64 (pow.f64 y -52) 1/9) -4/3)) (*.f64 z z))) (+.f64 (cbrt.f64 y) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -14) 1/9) z) (*.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 4 (pow.f64 y -5)) (fma.f64 4/3 (*.f64 (pow.f64 (pow.f64 y -17) 1/9) (fma.f64 3 (pow.f64 y -4) (*.f64 (pow.f64 (pow.f64 y -52) 1/9) -4/3))) (*.f64 8/27 (cbrt.f64 (pow.f64 y -23))))) (pow.f64 z 3))) (cbrt.f64 (pow.f64 y 7))))))","(/.f64 (pow.f64 y 2) (pow.f64 z 2))","(pow.f64 (/.f64 y z) 2)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3)))","(+.f64 (*.f64 3 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))","(fma.f64 3 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 y 5) (pow.f64 z 5))) (+.f64 (*.f64 3 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))","(fma.f64 4 (*.f64 (pow.f64 y 5) (pow.f64 z -5)) (fma.f64 3 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3)))))","1","(+.f64 1 (*.f64 2 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 2 z) y))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (/.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 3 (pow.f64 (/.f64 z y) 2) (/.f64 (*.f64 2 z) y)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(fma.f64 4 (pow.f64 (/.f64 z y) 3) (+.f64 1 (fma.f64 3 (pow.f64 (/.f64 z y) 2) (/.f64 (*.f64 2 z) y))))","1","(+.f64 1 (*.f64 2 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 2 z) y))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (/.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(+.f64 1 (fma.f64 3 (pow.f64 (/.f64 z y) 2) (/.f64 (*.f64 2 z) y)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 z y)) (+.f64 (*.f64 2 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(fma.f64 4 (pow.f64 (/.f64 z y) 3) (+.f64 1 (fma.f64 3 (pow.f64 (/.f64 z y) 2) (/.f64 (*.f64 2 z) y))))","1","(+.f64 1 (*.f64 2 (/.f64 z y)))","(+.f64 1 (/.f64 (*.f64 2 z) y))","(+.f64 1 (+.f64 (*.f64 3 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 2 (/.f64 z y))))","(+.f64 1 (fma.f64 3 (pow.f64 (/.f64 z y) 2) (/.f64 (*.f64 2 z) y)))","(+.f64 (*.f64 4 (/.f64 (pow.f64 z 3) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 3 (/.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 2 (/.f64 z y)))))","(fma.f64 4 (pow.f64 (/.f64 z y) 3) (+.f64 1 (fma.f64 3 (pow.f64 (/.f64 z y) 2) (/.f64 (*.f64 2 z) y))))","(/.f64 (pow.f64 y 2) (pow.f64 z 2))","(pow.f64 (/.f64 y z) 2)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))","(fma.f64 3 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 5) (pow.f64 z 5))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))))","(fma.f64 4 (*.f64 (pow.f64 y 5) (pow.f64 z -5)) (fma.f64 3 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3)))))","(/.f64 (pow.f64 y 2) (pow.f64 z 2))","(pow.f64 (/.f64 y z) 2)","(+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))","(+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))","(fma.f64 3 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 5) (pow.f64 z 5))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 2)) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 z 3)))))))","(fma.f64 4 (*.f64 (pow.f64 y 5) (pow.f64 z -5)) (fma.f64 3 (pow.f64 (pow.f64 (/.f64 y z) 2) 2) (+.f64 (pow.f64 (/.f64 y z) 2) (*.f64 2 (pow.f64 (/.f64 y z) 3)))))"]],"time":277.78515625,"type":"simplify"},{"compiler":[[8975,3465]],"time":65.70703125,"type":"eval"},{"alts":[["(+.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","next",11.522102077535084],["(+.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z))))","done",2.682968574248624],["(+.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","done",0.0859375],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625]],"compiler":[[25,16],[25,15],[17,11],[10,6],[25,16]],"count":[[315,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[311,0],"picked":[1,1]}],"min-error":[0],"time":125.56201171875,"type":"prune"},{"compiler":[[85,32]],"locations":[["(*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y))",0.17578125,false],["(/.f64 x (cbrt.f64 (-.f64 z y)))",0.20703125,true],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))",0.2734375,true],["(cbrt.f64 (pow.f64 (-.f64 y z) 2))",25.79868389914359,true]],"time":17.1669921875,"type":"localize"},{"count":[[3,64]],"series":[["(/.f64 x (cbrt.f64 (-.f64 z y)))","y","-inf",0.76416015625],["(/.f64 x (cbrt.f64 (-.f64 z y)))","y","inf",0.94287109375],["(/.f64 x (cbrt.f64 (-.f64 z y)))","y","0",1.31103515625],["(/.f64 x (cbrt.f64 (-.f64 z y)))","z","-inf",0.900146484375],["(/.f64 x (cbrt.f64 (-.f64 z y)))","z","inf",1.8388671875],["(/.f64 x (cbrt.f64 (-.f64 z y)))","z","0",4.677978515625],["(/.f64 x (cbrt.f64 (-.f64 z y)))","x","-inf",0.317138671875],["(/.f64 x (cbrt.f64 (-.f64 z y)))","x","inf",0.276123046875],["(/.f64 x (cbrt.f64 (-.f64 z y)))","x","0",1.5029296875],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","y","-inf",0.233154296875],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","y","inf",1.745849609375],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","y","0",1.52099609375],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","z","-inf",0.484130859375],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","z","inf",1.365966796875],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","z","0",2.0771484375],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","x","-inf",0.364990234375],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","x","inf",0.40087890625],["(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","x","0",2.153076171875],["(cbrt.f64 (pow.f64 (-.f64 y z) 2))","z","-inf",0.2900390625],["(cbrt.f64 (pow.f64 (-.f64 y z) 2))","z","inf",0.278076171875],["(cbrt.f64 (pow.f64 (-.f64 y z) 2))","z","0",0.768798828125],["(cbrt.f64 (pow.f64 (-.f64 y z) 2))","y","-inf",0.278076171875],["(cbrt.f64 (pow.f64 (-.f64 y z) 2))","y","inf",0.382080078125],["(cbrt.f64 (pow.f64 (-.f64 y z) 2))","y","0",0.933837890625]],"time":26.31689453125,"type":"series"},{"count":[[3,171]],"inputs":[["(cbrt.f64 (pow.f64 (-.f64 y z) 2))","(/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))","(/.f64 x (cbrt.f64 (-.f64 z y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 z y) 2/3) (*.f64 (pow.f64 (-.f64 z y) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (-.f64 z y) 2/3) 0) (pow.f64 (-.f64 z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (-.f64 z y) 2/3) (*.f64 0 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (-.f64 z y) 2/3)) (pow.f64 (-.f64 z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y z)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 z y)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) (+.f64 2 3)) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 y z)) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 4)) (pow.f64 (-.f64 y z) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 z y) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 z y) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 z y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 y z) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 y z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 y z) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 y z) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 x (-.f64 z y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 z y)) 0) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (*.f64 0 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 z y))) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (-.f64 z y) 2/3))) (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (pow.f64 (/.f64 x (-.f64 z y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2/3) (cbrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2/3) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (/.f64 (/.f64 -1 (-.f64 y z)) (cbrt.f64 (pow.f64 (-.f64 y z) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 -1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2) (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2))) (/.f64 x (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2/3) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 -1 (-.f64 y z)) (cbrt.f64 (pow.f64 (-.f64 y z) 4)))) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (-.f64 z y) 2/3)) (pow.f64 (-.f64 z y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3))) (neg.f64 (pow.f64 (-.f64 z y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (*.f64 (cbrt.f64 (-.f64 z y)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2)) (*.f64 (cbrt.f64 (-.f64 y z)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) 1) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) -1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) (neg.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y))))) (*.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3)) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2) x) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2) (neg.f64 x)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4) (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (-.f64 z y) 2/3)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (pow.f64 (-.f64 z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) (neg.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y))))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y))))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 y z))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2) (/.f64 x (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (pow.f64 (-.f64 z y) -1/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (pow.f64 (-.f64 y z) -2))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) (pow.f64 (/.f64 x (-.f64 z y)) 2/3)) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 y z)))) (pow.f64 (/.f64 x (-.f64 z y)) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (/.f64 (/.f64 -1 (-.f64 y z)) (cbrt.f64 (pow.f64 (-.f64 y z) 4))))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3))) 1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 z y) 2/3)) 1) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2/3) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2/3) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) 1) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (-.f64 z y) 2/3)) 1) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (-.f64 z y) 2/3)) -1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (-.f64 z y) 2/3)) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (-.f64 z y) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3))) -1) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 y z)))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3))) 1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 y z))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) -1) (neg.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2) (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y))))) (pow.f64 (-.f64 z y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (neg.f64 (pow.f64 (-.f64 z y) 2/3)))) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) (cbrt.f64 (pow.f64 (-.f64 y z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y z) -2)) (/.f64 x (cbrt.f64 (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 0) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (*.f64 0 (/.f64 x (cbrt.f64 (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (cbrt.f64 (-.f64 z y)))) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (-.f64 y z))) (/.f64 x (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 x x) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (pow.f64 (-.f64 z y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 (-.f64 z y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -1/3)) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x x) (-.f64 z y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 z y) -1/3)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (pow.f64 (-.f64 z y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 y z)))) (neg.f64 (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -1/3)) x) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3) (cbrt.f64 x)) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) (pow.f64 x 2/3)) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 z y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 z y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y)))) 1) (cbrt.f64 (pow.f64 (-.f64 z y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 z y))))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 z y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (-.f64 z y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 z y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (-.f64 z y)))))))"]],"rules":[["egg-rr",48],["egg-rr",91],["egg-rr",32]],"time":36.89404296875,"type":"rewrite"},{"count":[[235,249]],"inputs":[["(pow.f64 (pow.f64 z 2) 1/3)","(+.f64 (pow.f64 (pow.f64 z 2) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/9) y)))","(+.f64 (pow.f64 (pow.f64 z 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 z 16)) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (pow.f64 z 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/9) y))))","(+.f64 (pow.f64 (pow.f64 z 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 z 16)) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (pow.f64 z 4)) 1/3))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 4)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -4/3 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 z 16)) 1/9))) (pow.f64 (/.f64 1 z) 1/9))) (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/3)))))))))","(pow.f64 (pow.f64 y 2) 1/3)","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/9) z)))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 z 2))))))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (*.f64 (+.f64 (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3)) (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 y) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9)))))) (pow.f64 z 3)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 z 2)))))))","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(/.f64 (*.f64 (cbrt.f64 -1) x) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) 1/3) (*.f64 z x))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) 1/3) (*.f64 z x))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1))) 1/3)) (*.f64 3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 y 7))))) (*.f64 (pow.f64 z 2) x))) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) 1/3) (*.f64 z x))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (*.f64 3 (/.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (pow.f64 y 7)))) (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2)))) (pow.f64 y 3))) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 y 7))) (+.f64 (/.f64 1 (pow.f64 y 6)) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 (cbrt.f64 -1) 5))) 1/3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1))) 1/3)) (*.f64 3 (/.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (pow.f64 y 7))))))))))) (*.f64 (pow.f64 z 3) x))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1))) 1/3)) (*.f64 3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 y 7))))) (*.f64 (pow.f64 z 2) x))) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","(/.f64 x z)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) x) (pow.f64 z 2))) (/.f64 x z))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) x) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2))))) x) (pow.f64 z 3))) (/.f64 x z)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) x) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 x (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2))))) (+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)))) (+.f64 (*.f64 -1/27 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 3)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)))))))))))) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2))))) x) (pow.f64 z 3))) (/.f64 x z))))","(*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 4)))))))","(/.f64 x z)","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 10)) 1/3) (*.f64 y x)) (/.f64 x z))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 10)) 1/3) (*.f64 y x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 z 5))) (*.f64 3 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)))) (*.f64 (pow.f64 z 2) x)))) (/.f64 x z)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 10)) 1/3) (*.f64 y x)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (*.f64 (pow.f64 z 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 6)) (+.f64 (/.f64 1 (pow.f64 z 10)) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 7)) 1/3) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 z 5))) (*.f64 3 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)))))) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 2 z) z) (pow.f64 z 7))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (*.f64 3 (/.f64 1 (pow.f64 z 5))))) (pow.f64 z 3))))))) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 z 5))) (*.f64 3 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)))) (*.f64 (pow.f64 z 2) x)))) (/.f64 x z))))","(/.f64 (*.f64 (cbrt.f64 -1) x) y)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 z) z) x) (pow.f64 y 2)))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 z) z) x) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (+.f64 (*.f64 2 z) z) 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2))))) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 2 z) z)) (+.f64 (*.f64 -1/27 (/.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (+.f64 (*.f64 2 z) z) 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 2 z) z)))) (+.f64 (pow.f64 z 3) (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (+.f64 (*.f64 2 z) z)))))) x) (*.f64 (pow.f64 y 4) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 z) z) x) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (+.f64 (*.f64 2 z) z) 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2))))) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 z x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 z x)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 1 (pow.f64 y 3))) x)) (pow.f64 (cbrt.f64 -1) 2))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 1 (pow.f64 y 3)))))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 (pow.f64 z 3) x)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 z x)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 1 (pow.f64 y 3))) x)) (pow.f64 (cbrt.f64 -1) 2)))))))","(*.f64 (pow.f64 (/.f64 1 z) 1/3) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 z) 1/3) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/9) (*.f64 y x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 z) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 z 35)) 1/9))) x))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/9) (*.f64 y x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 z) 1/3) x) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 3) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 z 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/3)))) x)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 z 35)) 1/9))) x)))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 z 2) 1/3)","(cbrt.f64 (*.f64 z z))","(+.f64 (pow.f64 (pow.f64 z 2) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/9) y)))","(+.f64 (cbrt.f64 (*.f64 z z)) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 z 5) 1/9) y)))","(+.f64 (pow.f64 (pow.f64 z 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 z 16)) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (pow.f64 z 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/9) y))))","(+.f64 (cbrt.f64 (*.f64 z z)) (fma.f64 1/3 (*.f64 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (pow.f64 z 16) 1/9))) (*.f64 y y)) (cbrt.f64 (pow.f64 z (neg.f64 4)))) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 z 5) 1/9) y))))","(+.f64 (pow.f64 (pow.f64 z 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 z 16)) 1/9))) (pow.f64 y 2)) (pow.f64 (/.f64 1 (pow.f64 z 4)) 1/3))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 4)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -4/3 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 z 16)) 1/9))) (pow.f64 (/.f64 1 z) 1/9))) (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 z 5)) 1/3)))))))))","(+.f64 (cbrt.f64 (*.f64 z z)) (fma.f64 1/3 (*.f64 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (pow.f64 z 16) 1/9))) (*.f64 y y)) (cbrt.f64 (pow.f64 z (neg.f64 4)))) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 z 5) 1/9) y) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 z (neg.f64 4))) (*.f64 (pow.f64 y 3) (fma.f64 -4/3 (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (pow.f64 z 16) 1/9))) (pow.f64 (/.f64 1 z) 1/9)) (*.f64 -8/27 (cbrt.f64 (pow.f64 z 5))))))))))","(pow.f64 (pow.f64 y 2) 1/3)","(cbrt.f64 (*.f64 y y))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/9) z)))","(+.f64 (cbrt.f64 (*.f64 y y)) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y 5) 1/9) z)))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 z 2))))))","(+.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y 5) 1/9) z) (*.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 y (neg.f64 4))) (-.f64 1 (*.f64 4/3 (pow.f64 (pow.f64 y 16) 1/9)))) (*.f64 z z)))))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (*.f64 (+.f64 (*.f64 -8/27 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/3)) (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 y) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9)))))) (pow.f64 z 3)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 5)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (*.f64 (-.f64 1 (*.f64 4/3 (pow.f64 (*.f64 1 (pow.f64 y 16)) 1/9))) (pow.f64 z 2)))))))","(+.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 y (neg.f64 4))) (*.f64 (fma.f64 -8/27 (cbrt.f64 (pow.f64 y 5)) (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 1 y) 1/9) (-.f64 1 (*.f64 4/3 (pow.f64 (pow.f64 y 16) 1/9)))))) (pow.f64 z 3))) (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y 5) 1/9) z) (*.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 y (neg.f64 4))) (-.f64 1 (*.f64 4/3 (pow.f64 (pow.f64 y 16) 1/9)))) (*.f64 z z))))))","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2))) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 (-.f64 z y) (pow.f64 (-.f64 y z) 2)))) x)","(/.f64 (*.f64 (cbrt.f64 -1) x) y)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) 1/3) (*.f64 z x))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(+.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 z x))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) 1/3) (*.f64 z x))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1))) 1/3)) (*.f64 3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 y 7))))) (*.f64 (pow.f64 z 2) x))) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(+.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 z x))) (fma.f64 1/3 (/.f64 (*.f64 (*.f64 y y) (*.f64 (-.f64 (/.f64 3 (pow.f64 y 5)) (*.f64 3 (+.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1)))) (/.f64 (*.f64 (+.f64 2 1) (*.f64 y y)) (pow.f64 y 7))))) (*.f64 (*.f64 z z) x))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) 1/3) (*.f64 z x))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (*.f64 3 (/.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (pow.f64 y 7)))) (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2)))) (pow.f64 y 3))) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 y 7))) (+.f64 (/.f64 1 (pow.f64 y 6)) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 (cbrt.f64 -1) 5))) 1/3) (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1))) 1/3)) (*.f64 3 (/.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (pow.f64 y 7))))))))))) (*.f64 (pow.f64 z 3) x))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (*.f64 3 (/.f64 1 (pow.f64 y 5))) (+.f64 (*.f64 3 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1))) 1/3)) (*.f64 3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 y 7))))) (*.f64 (pow.f64 z 2) x))) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","(+.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 z x))) (fma.f64 1/3 (/.f64 (*.f64 (*.f64 y y) (*.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 y 10) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 3 (-.f64 (pow.f64 y (neg.f64 5)) (/.f64 (*.f64 (+.f64 2 1) (*.f64 y y)) (pow.f64 y 7)))) (*.f64 (+.f64 2 1) (*.f64 y y))) (pow.f64 y 3))) (fma.f64 3 (/.f64 (*.f64 y (+.f64 -2 -1)) (pow.f64 y 7)) (+.f64 (pow.f64 y (neg.f64 6)) (*.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 (cbrt.f64 -1) 5))))) (-.f64 (/.f64 3 (pow.f64 y 5)) (*.f64 3 (+.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1)))) (/.f64 (*.f64 (+.f64 2 1) (*.f64 y y)) (pow.f64 y 7)))))))))) (*.f64 (pow.f64 z 3) x))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (/.f64 (*.f64 (*.f64 y y) (*.f64 (-.f64 (/.f64 3 (pow.f64 y 5)) (*.f64 3 (+.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 y 23) (cbrt.f64 -1)))) (/.f64 (*.f64 (+.f64 2 1) (*.f64 y y)) (pow.f64 y 7))))) (*.f64 (*.f64 z z) x))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","(/.f64 x z)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) x) (pow.f64 z 2))) (/.f64 x z))","(fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y (+.f64 -2 -1)) x) (*.f64 z z)) (/.f64 x z))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) x) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2))))) x) (pow.f64 z 3))) (/.f64 x z)))","(fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y (+.f64 -2 -1)) x) (*.f64 z z)) (fma.f64 -1/3 (/.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (*.f64 y (+.f64 -2 -1)) 2)) (+.f64 (*.f64 (+.f64 2 1) (*.f64 y y)) (*.f64 1/3 (pow.f64 (*.f64 y (+.f64 -2 -1)) 2)))) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) x) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 x (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2))))) (+.f64 (*.f64 -1 (pow.f64 y 3)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)))) (+.f64 (*.f64 -1/27 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 3)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)))))))))))) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) 2))))) x) (pow.f64 z 3))) (/.f64 x z))))","(fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y (+.f64 -2 -1)) x) (*.f64 z z)) (fma.f64 -1/3 (/.f64 (*.f64 x (+.f64 (neg.f64 (*.f64 (*.f64 y (+.f64 -2 -1)) (+.f64 (neg.f64 (pow.f64 (*.f64 y (+.f64 -2 -1)) 2)) (*.f64 (+.f64 2 1) (*.f64 y y))))) (+.f64 (neg.f64 (pow.f64 y 3)) (+.f64 (neg.f64 (*.f64 (*.f64 y (+.f64 -2 -1)) (*.f64 (+.f64 2 1) (*.f64 y y)))) (fma.f64 -1/27 (pow.f64 (*.f64 y (+.f64 -2 -1)) 3) (*.f64 2/3 (*.f64 (*.f64 y (+.f64 -2 -1)) (+.f64 (neg.f64 (pow.f64 (*.f64 y (+.f64 -2 -1)) 2)) (+.f64 (*.f64 (+.f64 2 1) (*.f64 y y)) (*.f64 1/3 (pow.f64 (*.f64 y (+.f64 -2 -1)) 2))))))))))) (pow.f64 z 4)) (fma.f64 -1/3 (/.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (*.f64 y (+.f64 -2 -1)) 2)) (+.f64 (*.f64 (+.f64 2 1) (*.f64 y y)) (*.f64 1/3 (pow.f64 (*.f64 y (+.f64 -2 -1)) 2)))) x) (pow.f64 z 3)) (/.f64 x z))))","(*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z)))","(neg.f64 (/.f64 x (*.f64 (cbrt.f64 -1) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (*.f64 z z)))) (neg.f64 (/.f64 x (*.f64 (cbrt.f64 -1) z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 3)))) (+.f64 (neg.f64 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (*.f64 z z)))) (neg.f64 (/.f64 x (*.f64 (cbrt.f64 -1) z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (cbrt.f64 -1) z))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 4)))))))","(+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 3)))) (+.f64 (neg.f64 (/.f64 (*.f64 y x) (*.f64 (cbrt.f64 -1) (*.f64 z z)))) (+.f64 (neg.f64 (/.f64 x (*.f64 (cbrt.f64 -1) z))) (neg.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (cbrt.f64 -1) (pow.f64 z 4)))))))","(/.f64 x z)","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 10)) 1/3) (*.f64 y x)) (/.f64 x z))","(fma.f64 (cbrt.f64 (pow.f64 z (neg.f64 10))) (*.f64 y x) (/.f64 x z))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 10)) 1/3) (*.f64 y x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 z 5))) (*.f64 3 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)))) (*.f64 (pow.f64 z 2) x)))) (/.f64 x z)))","(fma.f64 (cbrt.f64 (pow.f64 z (neg.f64 10))) (*.f64 y x) (fma.f64 -1/3 (*.f64 (*.f64 y y) (*.f64 (fma.f64 3 (/.f64 (*.f64 (*.f64 z z) (+.f64 -2 -1)) (pow.f64 z 7)) (*.f64 3 (+.f64 (pow.f64 z (neg.f64 5)) (cbrt.f64 (pow.f64 z (neg.f64 23)))))) (*.f64 (*.f64 z z) x))) (/.f64 x z)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 10)) 1/3) (*.f64 y x)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (*.f64 (pow.f64 z 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 6)) (+.f64 (/.f64 1 (pow.f64 z 10)) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 7)) 1/3) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 z 5))) (*.f64 3 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)))))) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 2 z) z) (pow.f64 z 7))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (*.f64 3 (/.f64 1 (pow.f64 z 5))))) (pow.f64 z 3))))))) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (*.f64 3 (/.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (pow.f64 z 7))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 z 5))) (*.f64 3 (pow.f64 (/.f64 1 (pow.f64 z 23)) 1/3)))) (*.f64 (pow.f64 z 2) x)))) (/.f64 x z))))","(fma.f64 (cbrt.f64 (pow.f64 z (neg.f64 10))) (*.f64 y x) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 y 3) (*.f64 z z)) (*.f64 (-.f64 (pow.f64 z (neg.f64 6)) (+.f64 (pow.f64 z (neg.f64 10)) (fma.f64 -2 (*.f64 (cbrt.f64 (pow.f64 z (neg.f64 7))) (fma.f64 3 (/.f64 (*.f64 (*.f64 z z) (+.f64 -2 -1)) (pow.f64 z 7)) (*.f64 3 (+.f64 (pow.f64 z (neg.f64 5)) (cbrt.f64 (pow.f64 z (neg.f64 23))))))) (fma.f64 3 (/.f64 (fma.f64 2 z z) (pow.f64 z 7)) (neg.f64 (/.f64 (*.f64 (*.f64 (*.f64 z z) (+.f64 -2 -1)) (*.f64 3 (+.f64 (/.f64 (*.f64 (*.f64 z z) (+.f64 -2 -1)) (pow.f64 z 7)) (pow.f64 z (neg.f64 5))))) (pow.f64 z 3))))))) x)) (fma.f64 -1/3 (*.f64 (*.f64 y y) (*.f64 (fma.f64 3 (/.f64 (*.f64 (*.f64 z z) (+.f64 -2 -1)) (pow.f64 z 7)) (*.f64 3 (+.f64 (pow.f64 z (neg.f64 5)) (cbrt.f64 (pow.f64 z (neg.f64 23)))))) (*.f64 (*.f64 z z) x))) (/.f64 x z))))","(/.f64 (*.f64 (cbrt.f64 -1) x) y)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 z) z) x) (pow.f64 y 2)))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) (/.f64 (*.f64 (fma.f64 2 z z) x) (*.f64 y y))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 z) z) x) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (+.f64 (*.f64 2 z) z) 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2))))) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) (/.f64 (*.f64 (fma.f64 2 z z) x) (*.f64 y y))) (fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 -2 (*.f64 z z) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (fma.f64 2 z z) 2)) (+.f64 (pow.f64 (fma.f64 2 z z) 2) (neg.f64 (*.f64 z z))))) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2)))) (+.f64 (*.f64 2 z) z)) (+.f64 (*.f64 -1/27 (/.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (+.f64 (*.f64 2 z) z) 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2))))) (+.f64 (*.f64 2 z) z)))) (+.f64 (pow.f64 z 3) (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (*.f64 -1 (pow.f64 z 2))) (+.f64 (*.f64 2 z) z)))))) x) (*.f64 (pow.f64 y 4) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 2 z) z) x) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 z 2)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (+.f64 (*.f64 2 z) z) 2))) (+.f64 (pow.f64 (+.f64 (*.f64 2 z) z) 2) (*.f64 -1 (pow.f64 z 2))))) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","(fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 (fma.f64 -2 (*.f64 z z) (+.f64 (pow.f64 (fma.f64 2 z z) 2) (neg.f64 (*.f64 z z)))) (fma.f64 2 z z) (fma.f64 -1/27 (/.f64 (pow.f64 (fma.f64 2 z z) 3) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/3 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 5))) (*.f64 (fma.f64 -2 (*.f64 z z) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (fma.f64 2 z z) 2)) (+.f64 (pow.f64 (fma.f64 2 z z) 2) (neg.f64 (*.f64 z z))))) (fma.f64 2 z z))) (+.f64 (pow.f64 z 3) (*.f64 (*.f64 (*.f64 z z) (+.f64 -2 -1)) (fma.f64 2 z z)))))) x) (*.f64 (pow.f64 y 4) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) (/.f64 (*.f64 (fma.f64 2 z z) x) (*.f64 y y))) (fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 -2 (*.f64 z z) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (fma.f64 2 z z) 2)) (+.f64 (pow.f64 (fma.f64 2 z z) 2) (neg.f64 (*.f64 z z))))) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (neg.f64 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 y 3))) (neg.f64 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (neg.f64 (/.f64 (*.f64 z x) (*.f64 y y))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 y 3))) (neg.f64 (/.f64 x y)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (-.f64 z y))) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x))","(*.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (cbrt.f64 -1) x))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 z x)))))","(fma.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (cbrt.f64 -1) x) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y (neg.f64 16)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) (*.f64 z x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 z x)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 1 (pow.f64 y 3))) x)) (pow.f64 (cbrt.f64 -1) 2))))))","(fma.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (cbrt.f64 -1) x) (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 y (neg.f64 16)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) (*.f64 z x))) (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (*.f64 (*.f64 z z) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y (neg.f64 35)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y (neg.f64 3))) x)) (pow.f64 (cbrt.f64 -1) 2))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 1 (pow.f64 y 3)))))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 (pow.f64 z 3) x)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (*.f64 (cbrt.f64 -1) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 16)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 z x)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 1 (pow.f64 y 3))) x)) (pow.f64 (cbrt.f64 -1) 2)))))))","(fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (+.f64 (pow.f64 y (neg.f64 4)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 y (neg.f64 13)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 5))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y (neg.f64 35)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y (neg.f64 3))))) (*.f64 -1/27 (/.f64 (cbrt.f64 (pow.f64 y (neg.f64 16))) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 z 3) x))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (cbrt.f64 -1) x) (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 y (neg.f64 16)) 1/9) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 -1) (neg.f64 2))) (*.f64 z x))) (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (*.f64 (*.f64 z z) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y (neg.f64 35)) 1/9) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y (neg.f64 3))) x)) (pow.f64 (cbrt.f64 -1) 2)))))))","(*.f64 (pow.f64 (/.f64 1 z) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 z)) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/9) (*.f64 y x))) (*.f64 (pow.f64 (/.f64 1 z) 1/3) x))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 z (neg.f64 16)) 1/9) (*.f64 y x)) (*.f64 (cbrt.f64 (/.f64 1 z)) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/9) (*.f64 y x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 z) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 z 35)) 1/9))) x))))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 z (neg.f64 16)) 1/9) (*.f64 y x)) (fma.f64 (cbrt.f64 (/.f64 1 z)) x (*.f64 1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 y y)) (*.f64 (-.f64 (pow.f64 z (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 z (neg.f64 35)) 1/9))) x)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/9) (*.f64 y x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 z) 1/3) x) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 3) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 z 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 z 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 z 16)) 1/3)))) x)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 z 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 z 35)) 1/9))) x)))))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 z (neg.f64 16)) 1/9) (*.f64 y x)) (fma.f64 (cbrt.f64 (/.f64 1 z)) x (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (pow.f64 y 3) (*.f64 (-.f64 (pow.f64 z (neg.f64 4)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 z (neg.f64 13)) 1/9) (-.f64 (pow.f64 z (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 z (neg.f64 35)) 1/9)))) (*.f64 1/27 (cbrt.f64 (pow.f64 z (neg.f64 16)))))) x))) (*.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (*.f64 y y)) (*.f64 (-.f64 (pow.f64 z (neg.f64 3)) (*.f64 1/3 (pow.f64 (pow.f64 z (neg.f64 35)) 1/9))) x))))))"]],"time":207.845947265625,"type":"simplify"},{"compiler":[[11353,5938]],"time":105.031982421875,"type":"eval"},{"alts":[["(+.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","done",11.522102077535084],["(+.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z))))","done",2.682968574248624],["(+.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","done",0.0859375],["(/.f64 (-.f64 x y) (-.f64 z y))","done",0.015625]],"compiler":[[25,16],[25,15],[17,11],[10,6]],"count":[[328,4]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[324,0],"picked":[1,1]}],"min-error":[0],"time":112.77001953125,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["x",0.015625,1],["y",0.015625,1],["z",0.015625,1],["(/.f64 (-.f64 x y) (-.f64 z y))",0.015625,1]],"compiler":[[4,3],[4,3],[4,3],[10,6],[85,40]],"count":[[5,1]],"inputs":[["(+.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","(+.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 y z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 y z))))","(+.f64 (/.f64 x (-.f64 z y)) (*.f64 (/.f64 -1 (-.f64 y z)) (neg.f64 y)))","(/.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y z))) (-.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 z y) 2)))","(/.f64 (-.f64 x y) (-.f64 z y))"]],"link":["."],"name":["Graphics.Rasterific.Shading:$sgradientColorAt from Rasterific-0.6.1"],"oracle":[25.66206941362535],"outputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"time":16.4130859375,"times":[["x",3.369873046875],["y",3.4189453125],["z",4.863037109375],["(/.f64 (-.f64 x y) (-.f64 z y))",3.157958984375]],"type":"regimes"},{"compiler":[[10,6]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (-.f64 z y))","(/.f64 (-.f64 y x) (-.f64 y z))"]],"stop":[["done",1]],"time":18.454833984375,"type":"simplify"},{"time":0.004150390625,"type":"soundness"},{"compiler":[[10,6]],"remove-preprocessing":[[]],"time":7.681884765625,"type":"end"}]