[{"compiler":[[7,6]],"method":["search"],"sampling":[[12,0.9985356330871582,0.0009760856628417969,0.00048828125],[11,0.9975595474243164,0.0019521713256835938,0.00048828125],[10,0.9956073760986328,0.0039043426513671875,0.00048828125],[9,0.9917030334472656,0.007808685302734375,0.00048828125],[8,0.9838943481445313,0.01561737060546875,0.00048828125],[7,0.9682769775390625,0.0312347412109375,0.00048828125],[6,0.937042236328125,0.062469482421875,0.00048828125],[5,0.87457275390625,0.12493896484375,0.00048828125],[4,0.7496337890625,0.2498779296875,0.00048828125],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.2490234375,"type":"analyze"},{"outcomes":[["body",256,"valid",236.39697265625,8256]],"time":244.724853515625,"type":"sample"},{"compiler":[[6,5]],"inputs":[["0"],["(/.f64 (+.f64 x 16) 116)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (+.f64 x 16) 116)","(*.f64 (-.f64 -16 x) -1/116)"]],"symmetry":[[]],"time":54.81201171875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 x 16) 116)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 x 16) 116)","(*.f64 (-.f64 -16 x) -1/116)"]],"time":19.169189453125,"type":"simplify"},{"compiler":[[11,9]],"time":0.39990234375,"type":"eval"},{"alts":[["(/.f64 (+.f64 x 16) 116)","next",0.00390625]],"compiler":[[6,5],[6,5]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.00390625],"time":0.85888671875,"type":"prune"},{"compiler":[[12,9]],"locations":[["(/.f64 (+.f64 x 16) 116)",0.00390625,true]],"time":3.052001953125,"type":"localize"},{"count":[[1,12]],"series":[["(/.f64 (+.f64 x 16) 116)","x","-inf",0.314208984375],["(/.f64 (+.f64 x 16) 116)","x","inf",0.375],["(/.f64 (+.f64 x 16) 116)","x","0",0.350830078125]],"time":1.091064453125,"type":"series"},{"count":[[1,96]],"inputs":[["(/.f64 (+.f64 x 16) 116)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 -16 x) -1/116) (*.f64 (*.f64 (-.f64 -16 x) -1/116) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 -16 x) -1/116) 0) (*.f64 (-.f64 -16 x) -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/116 16) (*.f64 1/116 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/116 x) (*.f64 1/116 16))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 -16 x) -1/116) (*.f64 0 (*.f64 (-.f64 -16 x) -1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 -16 x) -1/116)) (*.f64 (-.f64 -16 x) -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 16 1/116) (*.f64 x 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x 1/116) (*.f64 16 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 x 16) -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 -116) (*.f64 (+.f64 x 16) -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 x 16) -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) -1/116) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 -16 x) -1/116)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 2)) (cbrt.f64 (*.f64 (-.f64 -16 x) -1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 16)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x 16) 2)) 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -16 x) -1/116)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (+.f64 x 16)) (sqrt.f64 1/116)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x 16) 2)) (sqrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 16) 1/116)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/116 (+.f64 x 16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/116) (*.f64 (+.f64 x 16) (sqrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/116) (/.f64 (+.f64 x 16) (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 -16 x) -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 -16 x) -1/116) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) (sqrt.f64 1/116)) (sqrt.f64 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 x 16) 2)) (sqrt.f64 1/116)) (*.f64 (cbrt.f64 (+.f64 x 16)) (sqrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 16) (cbrt.f64 13456)) (cbrt.f64 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 x 16) 2)) 1/116) (cbrt.f64 (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/116 (-.f64 -16 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) 1/116) (/.f64 1 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) 4096) (/.f64 1 (*.f64 116 (+.f64 256 (*.f64 x (+.f64 x -16))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (/.f64 1 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 2)) (cbrt.f64 (-.f64 -16 x))) (cbrt.f64 -116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -16 x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 2))) (cbrt.f64 -116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) 1/116) (cbrt.f64 (+.f64 256 (*.f64 x (+.f64 x -16))))) (pow.f64 (cbrt.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 13456))) (pow.f64 (cbrt.f64 (cbrt.f64 13456)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -16 x) (sqrt.f64 116)) (neg.f64 (sqrt.f64 116)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (sqrt.f64 1/116)) (sqrt.f64 (sqrt.f64 116))) (sqrt.f64 (sqrt.f64 116)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 16) (neg.f64 (sqrt.f64 116))) (neg.f64 (sqrt.f64 116)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (*.f64 (cbrt.f64 13456) (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/116) (neg.f64 (+.f64 (pow.f64 x 3) 4096))) (*.f64 (cbrt.f64 13456) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (+.f64 (pow.f64 x 3) 4096))) (*.f64 -116 (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (*.f64 (sqrt.f64 116) (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/116) (neg.f64 (+.f64 (pow.f64 x 3) 4096))) (*.f64 (sqrt.f64 116) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) -1) (*.f64 (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))) -116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) (sqrt.f64 1/116)) (*.f64 (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))) (sqrt.f64 116)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) (cbrt.f64 1/116)) (*.f64 (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))) (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) 1) (*.f64 (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))) 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) -1) (*.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) -116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) (sqrt.f64 1/116)) (*.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) (sqrt.f64 116)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) (cbrt.f64 1/116)) (*.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) 1) (*.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) -116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) -1) (*.f64 116 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 x 16) (sqrt.f64 1/116))) (neg.f64 (sqrt.f64 116)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) (neg.f64 (*.f64 116 (+.f64 256 (*.f64 x (+.f64 x -16))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) 1/116) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x 16) (sqrt.f64 1/116)) (sqrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 4096) (*.f64 116 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x 16) 116)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -16 x) -116)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 -16 x) -1/116)) (cbrt.f64 (pow.f64 (+.f64 x 16) 2))) (cbrt.f64 13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 2)) (cbrt.f64 (+.f64 x 16))) (cbrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -16 x) -1/116) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/116) (+.f64 x 16)) (cbrt.f64 13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 x 16)) (sqrt.f64 1/116)) (cbrt.f64 (pow.f64 (+.f64 x 16) 2))) (sqrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/116) (+.f64 x 16)) (sqrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/116 (neg.f64 (+.f64 (pow.f64 x 3) 4096))) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 16) (cbrt.f64 13456)) (cbrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) 1/116) 1) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 1) (cbrt.f64 13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x 16) (sqrt.f64 1/116)) 1) (sqrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) -1/116) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x 16)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 2))) (cbrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) 4096)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x 16) 2)) 1/116)) (cbrt.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x 16)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x 16) 2)) (sqrt.f64 1/116))) (sqrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) 1/116) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) 1/116) 1) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 1) (cbrt.f64 13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -16 x) (cbrt.f64 116)) (neg.f64 (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (sqrt.f64 1/116)) (cbrt.f64 (sqrt.f64 116))) (cbrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (sqrt.f64 1/116)) 1) (sqrt.f64 116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x 16) -1) -116)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 4096) (/.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) (*.f64 -116 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) (*.f64 116 (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) 4096) (*.f64 (*.f64 116 (+.f64 256 (*.f64 x (+.f64 x -16)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) 1/116)) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (neg.f64 (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 -16 x) -1/116)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 -16 x) -1/116)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 -16 x) -1/116)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 -16 x) -1/116) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 x 16) -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 x 16) -1/116) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 -16 x) -1/116) 3))))))"]],"rules":[["egg-rr",96]],"time":23.56005859375,"type":"rewrite"},{"count":[[108,100]],"inputs":[["4/29","(+.f64 4/29 (*.f64 1/116 x))","(+.f64 4/29 (*.f64 1/116 x))","(+.f64 4/29 (*.f64 1/116 x))","(*.f64 1/116 x)","(+.f64 4/29 (*.f64 1/116 x))","(+.f64 4/29 (*.f64 1/116 x))","(+.f64 4/29 (*.f64 1/116 x))","(*.f64 1/116 x)","(+.f64 4/29 (*.f64 1/116 x))","(+.f64 4/29 (*.f64 1/116 x))","(+.f64 4/29 (*.f64 1/116 x))"]],"method":["egg-herbie"],"outputs":[["4/29","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(*.f64 1/116 x)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(*.f64 1/116 x)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)","(+.f64 4/29 (*.f64 1/116 x))","(fma.f64 1/116 x 4/29)"]],"time":48.6298828125,"type":"simplify"},{"compiler":[[1252,1071]],"time":20.35400390625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))","next",0.140625],["(/.f64 (+.f64 x 16) 116)","done",0.00390625]],"compiler":[[10,9],[6,5],[10,9]],"count":[[101,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[100,1],"picked":[1,1]}],"min-error":[0],"time":20.510009765625,"type":"prune"},{"compiler":[[27,23]],"locations":[["(*.f64 (+.f64 x 16) (cbrt.f64 1/116))",0.125,true],["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))",0.1484375,true]],"time":7.64306640625,"type":"localize"},{"count":[[2,24]],"series":[["(*.f64 (+.f64 x 16) (cbrt.f64 1/116))","x","-inf",0.27294921875],["(*.f64 (+.f64 x 16) (cbrt.f64 1/116))","x","inf",0.2001953125],["(*.f64 (+.f64 x 16) (cbrt.f64 1/116))","x","0",0.6240234375],["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))","x","-inf",1.01708984375],["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))","x","inf",1.765869140625],["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))","x","0",2.738037109375]],"time":6.843017578125,"type":"series"},{"count":[[2,125]],"inputs":[["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))","(*.f64 (+.f64 x 16) (cbrt.f64 1/116))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/13456) (*.f64 (cbrt.f64 1/116) x)) (*.f64 (cbrt.f64 1/13456) (cbrt.f64 (*.f64 1/116 4096))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/13456) (cbrt.f64 (*.f64 1/116 4096))) (*.f64 (cbrt.f64 1/13456) (*.f64 (cbrt.f64 1/116) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 x 16) 1/116) 0) (*.f64 (+.f64 x 16) 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x 16) 1/116) (*.f64 (*.f64 (+.f64 x 16) 1/116) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 1/13456)) (*.f64 (cbrt.f64 (*.f64 1/116 4096)) (cbrt.f64 1/13456)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 1/116 4096)) (cbrt.f64 1/13456)) (*.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 1/13456)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 x 16) 1/116)) (*.f64 (+.f64 x 16) 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x 16) 1/116) (*.f64 0 (*.f64 (+.f64 x 16) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (+.f64 x 16) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 -13456)) (neg.f64 (*.f64 (+.f64 x 16) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)) (pow.f64 (*.f64 (+.f64 x 16) 1/116) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 x 16) 1/116) 2/3) (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x 16) 2) (cbrt.f64 1/13456)) 1/13456)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)) (neg.f64 (cbrt.f64 1/13456)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 16) 1/116)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/13456)) (+.f64 x 16)) (cbrt.f64 (/.f64 1/116 (cbrt.f64 181063936))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/116) (*.f64 (+.f64 x 16) (cbrt.f64 1/13456)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/13456) 1/116)) (/.f64 (+.f64 x 16) (cbrt.f64 (cbrt.f64 181063936))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/13456)) (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 181063936))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 x 16) 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) 1/116) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 x 16) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 1/13456))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/13456) (*.f64 (+.f64 x 16) (cbrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/13456)) (cbrt.f64 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 16) (cbrt.f64 (cbrt.f64 181063936))) (cbrt.f64 (*.f64 (cbrt.f64 1/13456) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x 16) 2) (cbrt.f64 1/13456)) 1/13456)) (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/116 (cbrt.f64 181063936))) (*.f64 (cbrt.f64 (cbrt.f64 1/13456)) (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 181063936))) (cbrt.f64 (cbrt.f64 1/13456)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 1/13456)) (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/116 (+.f64 x 16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (+.f64 x 16) 1/116)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 1/13456))) (/.f64 1 (cbrt.f64 (cbrt.f64 181063936))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)) (cbrt.f64 -13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 1/13456))) (cbrt.f64 (cbrt.f64 181063936)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 x 16) 1/116) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)))) (cbrt.f64 (cbrt.f64 -13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (+.f64 x 16) 1/116) 2/3) (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)))) (cbrt.f64 (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x 16) 1/116) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/13456) (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096))) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/13456)) (+.f64 x 16)) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 181063936)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/13456)) (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (cbrt.f64 (cbrt.f64 181063936)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/13456) 1/116)) (+.f64 x 16)) (cbrt.f64 (cbrt.f64 181063936)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)) (pow.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 2/3)) (cbrt.f64 (cbrt.f64 181063936)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16))) (pow.f64 (*.f64 (+.f64 x 16) 1/116) 2/3)) (cbrt.f64 (cbrt.f64 -13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (pow.f64 (*.f64 (+.f64 x 16) 1/116) 2/3)) (cbrt.f64 (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) 4096) 1/116) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) 1/116) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (cbrt.f64 1/13456)) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 181063936))) (cbrt.f64 (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 1/13456))) 1) (cbrt.f64 (cbrt.f64 181063936)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x 16) (cbrt.f64 (/.f64 1/116 (cbrt.f64 181063936)))) (cbrt.f64 (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/116) (/.f64 (+.f64 x 16) (cbrt.f64 (cbrt.f64 181063936)))) (cbrt.f64 (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)) (cbrt.f64 (cbrt.f64 13456))) (neg.f64 (cbrt.f64 (cbrt.f64 181063936))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 1/13456))) (cbrt.f64 (cbrt.f64 (cbrt.f64 181063936)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 181063936)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 1/13456))) 1) (cbrt.f64 (cbrt.f64 181063936)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (sqrt.f64 13456))) (cbrt.f64 (sqrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) -1) (cbrt.f64 -13456))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) 1) (*.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) (cbrt.f64 13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) -1) (*.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) (cbrt.f64 -13456)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (cbrt.f64 (cbrt.f64 1/13456))) (*.f64 (+.f64 256 (*.f64 x (+.f64 x -16))) (cbrt.f64 (cbrt.f64 181063936))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096))) (*.f64 (cbrt.f64 -13456) (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (*.f64 (cbrt.f64 13456) (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/13456)) (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096))) (*.f64 (cbrt.f64 (cbrt.f64 181063936)) (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 (cbrt.f64 1/13456)))) (neg.f64 (cbrt.f64 (cbrt.f64 181063936))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 x 16) 1/116) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 x 16) 1/116) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 x 16) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 (+.f64 x 16) 1/116)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 x 16) 1/116) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 (*.f64 1/116 4096)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 1/116 4096)) (*.f64 (cbrt.f64 1/116) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 0) (*.f64 (+.f64 x 16) (cbrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (*.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 1/116) x) 1) (*.f64 (cbrt.f64 (*.f64 1/116 4096)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 1/116 4096)) 1) (*.f64 (*.f64 (cbrt.f64 1/116) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (*.f64 (+.f64 x 16) (cbrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (*.f64 0 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 16)) (*.f64 (pow.f64 (+.f64 x 16) 2/3) (cbrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 16) (cbrt.f64 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/116) (+.f64 x 16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (pow.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 2/3) (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)) (pow.f64 (+.f64 x 16) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 (cbrt.f64 1/13456)) (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x 16) (cbrt.f64 (cbrt.f64 1/116))) (cbrt.f64 (cbrt.f64 1/13456)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/13456)) (*.f64 (+.f64 x 16) (cbrt.f64 (cbrt.f64 1/116))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/13456)) (+.f64 x 16)) (cbrt.f64 (cbrt.f64 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x 16) 2/3) (cbrt.f64 1/116)) (cbrt.f64 (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 16) 2/3) (cbrt.f64 (*.f64 (+.f64 x 16) 1/116)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/116) (neg.f64 (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x 16)) (cbrt.f64 -1/116))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16))) (neg.f64 (pow.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (/.f64 1 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/116) (neg.f64 (+.f64 (pow.f64 x 3) 4096))) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) 4096)) (cbrt.f64 1/116)) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) 1) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) 4096)) (*.f64 (pow.f64 (+.f64 x 16) 2/3) (cbrt.f64 1/116))) (cbrt.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) 1) (+.f64 256 (*.f64 x (+.f64 x -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096)) (cbrt.f64 (+.f64 256 (*.f64 x (+.f64 x -16))))) (pow.f64 (cbrt.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 1/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 1/116) (+.f64 (pow.f64 x 3) 4096))) (neg.f64 (+.f64 256 (*.f64 x (+.f64 x -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 x 16) 3) 1/116) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 -1/116) (+.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 x 16) 3) 1/116))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 16 (cbrt.f64 1/116) (*.f64 (cbrt.f64 1/116) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (cbrt.f64 1/116) (cbrt.f64 (*.f64 1/116 4096)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/116) x (cbrt.f64 (*.f64 1/116 4096)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/116) 16 (*.f64 (cbrt.f64 1/116) x))))))"]],"rules":[["egg-rr",52],["egg-rr",73]],"time":38.715087890625,"type":"rewrite"},{"count":[[149,137]],"inputs":[["(*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456)))","(+.f64 (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)) (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)) (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)) (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))))","(/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(*.f64 16 (cbrt.f64 1/116))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(*.f64 (cbrt.f64 1/116) x)","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(*.f64 (cbrt.f64 1/116) x)","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456)))","4/29","(+.f64 (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)) (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))))","(*.f64 1/116 (+.f64 16 x))","(+.f64 (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)) (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))))","(*.f64 1/116 (+.f64 16 x))","(+.f64 (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)) (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))))","(*.f64 1/116 (+.f64 16 x))","(/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456))","(*.f64 x 1/116)","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(*.f64 1/116 (+.f64 16 x))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(*.f64 1/116 (+.f64 16 x))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(*.f64 1/116 (+.f64 16 x))","(/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456))","(*.f64 x 1/116)","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(*.f64 1/116 (+.f64 16 x))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(*.f64 1/116 (+.f64 16 x))","(+.f64 (*.f64 16 (/.f64 (cbrt.f64 1/116) (cbrt.f64 13456))) (/.f64 (*.f64 (cbrt.f64 1/116) x) (cbrt.f64 13456)))","(*.f64 1/116 (+.f64 16 x))","(*.f64 16 (cbrt.f64 1/116))","(cbrt.f64 1024/29)","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(*.f64 (cbrt.f64 1/116) x)","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(*.f64 (cbrt.f64 1/116) x)","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))","(+.f64 (*.f64 16 (cbrt.f64 1/116)) (*.f64 (cbrt.f64 1/116) x))","(fma.f64 (cbrt.f64 1/116) x (cbrt.f64 1024/29))"]],"time":91.60595703125,"type":"simplify"},{"compiler":[[1853,1655]],"time":31.743896484375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))","done",0.140625],["(/.f64 (+.f64 x 16) 116)","done",0.00390625]],"compiler":[[10,9],[6,5]],"count":[[139,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[137,0],"picked":[1,1]}],"min-error":[0],"time":32.4521484375,"type":"prune"},{"accuracy":[0.00390625],"baseline":[0.00390625],"branch":[["x",0.00390625,1],["(/.f64 (+.f64 x 16) 116)",0.00390625,1],["(+.f64 x 16)",0.00390625,1]],"compiler":[[2,1],[6,5],[4,3],[15,13]],"count":[[2,1]],"inputs":[["(/.f64 (*.f64 (+.f64 x 16) (cbrt.f64 1/116)) (cbrt.f64 13456))","(/.f64 (+.f64 x 16) 116)"]],"link":["."],"name":["Data.Colour.CIE:cieLAB from colour-2.3.3, B"],"oracle":[0.14453125],"outputs":[["(/.f64 (+.f64 x 16) 116)"]],"time":7.31689453125,"times":[["x",2.475830078125],["(/.f64 (+.f64 x 16) 116)",2.151123046875],["(+.f64 x 16)",2.115966796875]],"type":"regimes"},{"compiler":[[6,5]],"inputs":[["(/.f64 (+.f64 x 16) 116)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 x 16) 116)","(*.f64 (-.f64 -16 x) -1/116)"]],"stop":[["done",1]],"time":18.467041015625,"type":"simplify"},{"time":0.0029296875,"type":"soundness"},{"compiler":[[6,5]],"remove-preprocessing":[[]],"time":7.583984375,"type":"end"}]