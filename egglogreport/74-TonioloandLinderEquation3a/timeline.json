[{"compiler":[[34,30]],"method":["search"],"sampling":[[12,0.8732922669151364,0.12475603813073377,0.0019516949541298345],[11,0.8732922669151364,0.12475603813073377,0.0019516949541298345],[10,0.7485362287844026,0.24951207626146754,0.0019516949541298345],[9,0.7485362287844026,0.24951207626146754,0.0019516949541298345],[8,0.7485362287844026,0.24951207626146754,0.0019516949541298345],[7,0.7485362287844026,0.24951207626146754,0.0019516949541298345],[6,0.4990241525229351,0.4990241525229351,0.0019516949541298345],[5,0.4990241525229351,0.4990241525229351,0.0019516949541298345],[4,0.4990241525229351,0.4990241525229351,0.0019516949541298345],[3,0.4990241525229351,0.4990241525229351,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":145.580078125,"type":"analyze"},{"outcomes":[["body",1024,"valid",408.283203125,760],["body",512,"valid",193.746826171875,588],["body",256,"valid",1053.947021484375,6908]],"time":1664.1689453125,"type":"sample"},{"compiler":[[33,29]],"inputs":[["0","1","2","3"],["(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 Om) l) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 kx) Om) 2) (+.f64 (pow.f64 (sin.f64 l) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 ky) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 l) 2)))))))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) kx) 2) (+.f64 (pow.f64 (sin.f64 Om) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) ky) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 Om) 2)))))))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 kx) (sin.f64 kx) (pow.f64 (sin.f64 ky) 2)) (pow.f64 (/.f64 (*.f64 2 l) Om) 2) 1)))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 Om) l) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 kx) (sin.f64 kx) (pow.f64 (sin.f64 ky) 2)) (pow.f64 (/.f64 (*.f64 2 Om) l) 2) 1)))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 kx) Om) 2) (+.f64 (pow.f64 (sin.f64 l) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 l) 2)) (pow.f64 (/.f64 (*.f64 2 kx) Om) 2) 1)))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 ky) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 l) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 kx) (sin.f64 kx) (pow.f64 (sin.f64 l) 2)) (pow.f64 (/.f64 (*.f64 2 ky) Om) 2) 1)))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) kx) 2) (+.f64 (pow.f64 (sin.f64 Om) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 Om) 2)) (pow.f64 (/.f64 (*.f64 2 l) kx) 2) 1)))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) ky) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 Om) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 kx) (sin.f64 kx) (pow.f64 (sin.f64 Om) 2)) (pow.f64 (/.f64 (*.f64 2 l) ky) 2) 1)))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 kx) (sin.f64 kx) (pow.f64 (sin.f64 ky) 2)) (pow.f64 (/.f64 (*.f64 2 l) Om) 2) 1)))))"]],"symmetry":[[]],"time":78.051025390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))"]],"time":26.39404296875,"type":"simplify"},{"compiler":[[57,45]],"time":0.848876953125,"type":"eval"},{"alts":[["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","next",0.5078125]],"compiler":[[28,22],[28,22]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.5078125],"time":1.301025390625,"type":"prune"},{"compiler":[[148,89]],"locations":[["(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))",0.178066259768442,true],["(pow.f64 (sin.f64 kx) 2)",0.244472509768442,true],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)",1.4304128513999623,true],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))",9.841177201013533,true]],"time":35.572998046875,"type":"localize"},{"count":[[4,124]],"series":[["(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))","kx","-inf",0.153076171875],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))","kx","inf",0.155029296875],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))","kx","0",0.18896484375],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))","ky","-inf",0.154052734375],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))","ky","inf",0.158935546875],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))","ky","0",0.191162109375],["(pow.f64 (sin.f64 kx) 2)","kx","-inf",0.143798828125],["(pow.f64 (sin.f64 kx) 2)","kx","inf",0.162109375],["(pow.f64 (sin.f64 kx) 2)","kx","0",0.232177734375],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","Om","-inf",0.31591796875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","Om","inf",0.35498046875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","Om","0",0.68994140625],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","l","-inf",0.39990234375],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","l","inf",0.51904296875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","l","0",0.56005859375],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","kx","-inf",0.19091796875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","kx","inf",0.205078125],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","kx","0",0.31396484375],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","ky","-inf",0.201904296875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","ky","inf",0.192138671875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","ky","0",0.3330078125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","Om","-inf",0.64892578125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","Om","inf",0.47705078125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","Om","0",0.72314453125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","l","-inf",0.557861328125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","l","inf",0.85009765625],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","l","0",0.75],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","kx","-inf",1.4111328125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","kx","inf",1.363037109375],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","kx","0",1.60205078125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","ky","-inf",0.677001953125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","ky","inf",1.86083984375],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","ky","0",1.9580078125]],"time":19.368896484375,"type":"series"},{"count":[[4,236]],"inputs":[["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","(pow.f64 (sin.f64 kx) 2)","(fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1/2) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (*.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 0 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (fabs.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1/2) (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0) (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 1/2 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 0 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 1/2 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) -1) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (*.f64 1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1) (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0) (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (sqrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2)) (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1) (+.f64 1 (-.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1)) (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1) (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1) 1) (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (*.f64 l 2) Om) 2) (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (/.f64 (*.f64 l 2) Om)) (/.f64 (*.f64 l 2) Om) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 l 2) Om) 2))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 l 2) Om) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) 1/2) (*.f64 (pow.f64 (sin.f64 kx) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) 0) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 (pow.f64 (sin.f64 kx) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (sin.f64 kx) 2)) (*.f64 1/2 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 kx) 2)) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 0 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cos.f64 kx)) (cos.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 1/2 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 0) 2) (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (cos.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 kx) (sin.f64 kx))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 kx)) (pow.f64 (cbrt.f64 (sin.f64 kx)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 kx)) (neg.f64 (sin.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 kx)) -1) (*.f64 (neg.f64 (sin.f64 kx)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 kx) -1) (*.f64 (sin.f64 kx) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 kx)) 1) (*.f64 (neg.f64 (sin.f64 kx)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sin.f64 kx))) (*.f64 1 (neg.f64 (sin.f64 kx))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (cos.f64 kx)) (-.f64 -1 (cos.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cos.f64 kx)) (-.f64 1 (cos.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 4)) (cbrt.f64 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 kx) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (cbrt.f64 (pow.f64 (sin.f64 kx) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 1 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 kx) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 3)) (+.f64 1/4 (+.f64 (*.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) (*.f64 1/2 (cos.f64 (+.f64 kx kx)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (cos.f64 kx) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 kx) 2) (pow.f64 (cos.f64 kx) 2)) (*.f64 1 (pow.f64 (cos.f64 kx) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 kx) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 kx) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 kx)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 kx) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 kx) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 kx) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sin.f64 kx)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (cos.f64 kx) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 kx) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (sqrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 1/2)) (neg.f64 (sqrt.f64 1/2)) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (cbrt.f64 1/4) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1/2 (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/2) (neg.f64 (cbrt.f64 1/4)) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 1 (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1/2 (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1/2) (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 0) (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (*.f64 1/2 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (*.f64 0 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (sin.f64 kx) 2) 1) (pow.f64 (cos.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) 1) (pow.f64 (cos.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (sin.f64 kx) 2) 1/2) (*.f64 1/2 (cos.f64 (+.f64 ky ky))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) 1/2) (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 (pow.f64 (cos.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 (pow.f64 (cos.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 ky ky))) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) (pow.f64 (sin.f64 ky) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (cbrt.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 2)) (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 ky ky))) (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx))) (-.f64 (cos.f64 0) (cos.f64 (+.f64 ky ky)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx))) 2) (*.f64 2 (-.f64 (cos.f64 0) (cos.f64 (+.f64 ky ky))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 ky ky))) 2) (*.f64 2 (-.f64 (cos.f64 0) (cos.f64 (+.f64 kx kx))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (sin.f64 ky) 2)) (cbrt.f64 (pow.f64 (sin.f64 ky) 4)) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (sin.f64 ky) 4)) (cbrt.f64 (pow.f64 (sin.f64 ky) 2)) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 ky)) (pow.f64 (cbrt.f64 (sin.f64 ky)) (+.f64 2 3)) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 ky) 2) 1 (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 kx)) (neg.f64 (sin.f64 kx)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (sin.f64 kx) 2)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 kx)) (pow.f64 (cbrt.f64 (sin.f64 kx)) (+.f64 2 3)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 4)) (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (cbrt.f64 (pow.f64 (sin.f64 kx) 4)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 kx) 2) 1 (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 kx) (sin.f64 kx) (pow.f64 (sin.f64 ky) 2))))))"]],"rules":[["egg-rr",49],["egg-rr",68],["egg-rr",74],["egg-rr",45]],"time":48.774169921875,"type":"rewrite"},{"count":[[360,320]],"inputs":[["(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1)))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) 2))) (*.f64 (pow.f64 Om 2) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (pow.f64 ky 6)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 kx 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 kx 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 l 2)) (*.f64 (pow.f64 Om 2) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (pow.f64 kx 6)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3) (pow.f64 l 6)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4))))))","(*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om)))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l)))))","(+.f64 (*.f64 1/512 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 5))) (/.f64 (pow.f64 Om 5) (pow.f64 l 5)))) (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))))","(*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om)))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))) (*.f64 1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3))))))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))) (+.f64 (*.f64 -1/512 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 5))) (/.f64 (pow.f64 Om 5) (pow.f64 l 5)))) (*.f64 1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))))))","(*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om)))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l)))))","(+.f64 (*.f64 1/512 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 5))) (/.f64 (pow.f64 Om 5) (pow.f64 l 5)))) (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3) (pow.f64 l 6)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4))))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3) (pow.f64 l 6)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4))))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1)","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2))))))","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 6)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2))))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 1 (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 6)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2)))))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","1","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","1","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","1","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(pow.f64 kx 2)","(+.f64 (pow.f64 kx 2) (*.f64 -1/3 (pow.f64 kx 4)))","(+.f64 (pow.f64 kx 2) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6))))","(+.f64 (pow.f64 kx 2) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (+.f64 (*.f64 2/45 (pow.f64 kx 6)) (*.f64 -1/315 (pow.f64 kx 8)))))","(pow.f64 (sin.f64 kx) 2)","(+.f64 (pow.f64 ky 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (+.f64 (pow.f64 ky 2) (pow.f64 (sin.f64 kx) 2)))","(+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (+.f64 (pow.f64 ky 2) (+.f64 (*.f64 2/45 (pow.f64 ky 6)) (pow.f64 (sin.f64 kx) 2))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (sin.f64 ky) 2)","(+.f64 (pow.f64 kx 2) (pow.f64 (sin.f64 ky) 2))","(+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 -1/3 (pow.f64 kx 4))))","(+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6)))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))))","(+.f64 (sqrt.f64 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 l ky) 2) (pow.f64 Om -2))) (sqrt.f64 (/.f64 1 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1)))))))","(+.f64 (sqrt.f64 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1))) (+.f64 (*.f64 1/2 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (sqrt.f64 (/.f64 1 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)))) 2))) (pow.f64 ky 4))) (*.f64 2 (*.f64 (pow.f64 (*.f64 l ky) 2) (pow.f64 Om -2))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) 2))) (*.f64 (pow.f64 Om 2) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (pow.f64 ky 6)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 l 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1))))))))","(+.f64 (sqrt.f64 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)) (fma.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 l ky) 2) (pow.f64 Om -2)) (sqrt.f64 (/.f64 1 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1))) (+.f64 (*.f64 (fma.f64 8/45 (/.f64 (*.f64 l l) (*.f64 Om Om)) (*.f64 (*.f64 (*.f64 (*.f64 l l) (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (sqrt.f64 (/.f64 1 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)))) 2)))) (/.f64 (pow.f64 Om -2) (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1))) -2)) (pow.f64 ky 6)) (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (sqrt.f64 (/.f64 1 (fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)))) 2))) (pow.f64 ky 4)))))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))) (*.f64 (*.f64 2 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2))) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 kx 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2))))) (+.f64 (*.f64 1/2 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))))) 2))) (pow.f64 kx 4))) (*.f64 2 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 kx 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) 2)) (pow.f64 l 2)) (*.f64 (pow.f64 Om 2) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (pow.f64 kx 6)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))))))))","(+.f64 (sqrt.f64 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))) (fma.f64 1/2 (*.f64 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))))) 2))) (pow.f64 kx 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2))))) (+.f64 (*.f64 1/2 (*.f64 (fma.f64 8/45 (/.f64 (*.f64 l l) (*.f64 Om Om)) (*.f64 -2 (*.f64 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))))) 2))) (*.f64 l l)) (/.f64 (pow.f64 Om -2) (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2))))))) (pow.f64 kx 6))) (*.f64 2 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2)))))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4)))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 2) (pow.f64 l 4))) (pow.f64 Om 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3) (pow.f64 l 6)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4))))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 3) (pow.f64 l 6)) (pow.f64 Om 6)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 2) (pow.f64 l 4))) (pow.f64 Om 4)))))","(*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om)))","(*.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))","(fma.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (*.f64 (*.f64 1/4 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)))) (/.f64 Om l)))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l)))))","(fma.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (fma.f64 -1/64 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -3)) (pow.f64 (/.f64 Om l) 3)) (*.f64 (*.f64 1/4 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)))) (/.f64 Om l))))","(+.f64 (*.f64 1/512 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 5))) (/.f64 (pow.f64 Om 5) (pow.f64 l 5)))) (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))))","(fma.f64 1/512 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -5)) (*.f64 (pow.f64 Om 5) (pow.f64 l -5))) (fma.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (fma.f64 -1/64 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -3)) (pow.f64 (/.f64 Om l) 3)) (*.f64 (*.f64 1/4 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)))) (/.f64 Om l)))))","(*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om)))","(*.f64 -2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))","(fma.f64 -2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (*.f64 (*.f64 -1/4 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)))) (/.f64 Om l)))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))) (*.f64 1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3))))))","(fma.f64 -2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2))) (/.f64 Om l)) (*.f64 (*.f64 1/64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -3))) (pow.f64 (/.f64 Om l) 3))))","(+.f64 (*.f64 -2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))) (+.f64 (*.f64 -1/512 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 5))) (/.f64 (pow.f64 Om 5) (pow.f64 l 5)))) (*.f64 1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))))))","(fma.f64 -2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (fma.f64 -1/4 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2))) (/.f64 Om l)) (fma.f64 -1/512 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -5)) (*.f64 (pow.f64 Om 5) (pow.f64 l -5))) (*.f64 (*.f64 1/64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -3))) (pow.f64 (/.f64 Om l) 3)))))","(*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om)))","(*.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))","(fma.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (*.f64 (*.f64 1/4 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)))) (/.f64 Om l)))","(+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l)))))","(fma.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (fma.f64 -1/64 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -3)) (pow.f64 (/.f64 Om l) 3)) (*.f64 (*.f64 1/4 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)))) (/.f64 Om l))))","(+.f64 (*.f64 1/512 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 5))) (/.f64 (pow.f64 Om 5) (pow.f64 l 5)))) (+.f64 (*.f64 2 (*.f64 (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (/.f64 l Om))) (+.f64 (*.f64 -1/64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3))) (/.f64 (pow.f64 Om 3) (pow.f64 l 3)))) (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (/.f64 Om l))))))","(fma.f64 1/512 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -5)) (*.f64 (pow.f64 Om 5) (pow.f64 l -5))) (fma.f64 2 (*.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) (/.f64 l Om)) (fma.f64 -1/64 (*.f64 (sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) -3)) (pow.f64 (/.f64 Om l) 3)) (*.f64 (*.f64 1/4 (sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)))) (/.f64 Om l)))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4)))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 2) (pow.f64 l 4))) (pow.f64 Om 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3) (pow.f64 l 6)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4))))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 3) (pow.f64 l 6)) (pow.f64 Om 6)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 2) (pow.f64 l 4))) (pow.f64 Om 4)))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4)))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 2) (pow.f64 l 4))) (pow.f64 Om 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3) (pow.f64 l 6)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2) (pow.f64 l 4)) (pow.f64 Om 4))))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 3) (pow.f64 l 6)) (pow.f64 Om 6)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) 2) (pow.f64 l 4))) (pow.f64 Om 4)))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 Om -2)) 1)","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))","(+.f64 1 (*.f64 4 (*.f64 (pow.f64 Om -2) (+.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 (*.f64 l ky) 2)))))","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2))))))","(+.f64 1 (+.f64 (*.f64 4 (*.f64 (pow.f64 Om -2) (+.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 (*.f64 l ky) 2)))) (/.f64 (*.f64 (*.f64 (*.f64 l l) (pow.f64 ky 4)) -4/3) (*.f64 Om Om))))","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 Om 2))) (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 6)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))))","(+.f64 1 (+.f64 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (*.f64 l l) (pow.f64 ky 4))) (*.f64 8/45 (*.f64 (*.f64 l l) (pow.f64 ky 6)))) (*.f64 Om Om)) (*.f64 4 (*.f64 (pow.f64 Om -2) (+.f64 (pow.f64 (*.f64 (sin.f64 kx) l) 2) (pow.f64 (*.f64 l ky) 2))))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2)))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2)))))","(fma.f64 4 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2)) (+.f64 1 (*.f64 (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2)) (pow.f64 Om -2))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2))))))","(fma.f64 4 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2)) (+.f64 1 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (*.f64 l l) (pow.f64 kx 4))) (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2))) (*.f64 Om Om))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 1 (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 6)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 (sin.f64 ky) 2)) (pow.f64 Om 2))) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2)))))))","(fma.f64 4 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2)) (+.f64 1 (fma.f64 8/45 (*.f64 (*.f64 (*.f64 l l) (pow.f64 kx 6)) (pow.f64 Om -2)) (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (*.f64 l l) (pow.f64 kx 4))) (*.f64 4 (pow.f64 (*.f64 l (sin.f64 ky)) 2))) (*.f64 Om Om)))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","1","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))","(*.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))","(*.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2)))","(*.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))))","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","1","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","1","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(pow.f64 kx 2)","(*.f64 kx kx)","(+.f64 (pow.f64 kx 2) (*.f64 -1/3 (pow.f64 kx 4)))","(+.f64 (*.f64 kx kx) (*.f64 -1/3 (pow.f64 kx 4)))","(+.f64 (pow.f64 kx 2) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6))))","(+.f64 (*.f64 kx kx) (fma.f64 -1/3 (pow.f64 kx 4) (*.f64 2/45 (pow.f64 kx 6))))","(+.f64 (pow.f64 kx 2) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (+.f64 (*.f64 2/45 (pow.f64 kx 6)) (*.f64 -1/315 (pow.f64 kx 8)))))","(+.f64 (*.f64 kx kx) (fma.f64 -1/3 (pow.f64 kx 4) (fma.f64 2/45 (pow.f64 kx 6) (*.f64 -1/315 (pow.f64 kx 8)))))","(pow.f64 (sin.f64 kx) 2)","(+.f64 (pow.f64 ky 2) (pow.f64 (sin.f64 kx) 2))","(+.f64 (*.f64 ky ky) (pow.f64 (sin.f64 kx) 2))","(+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (+.f64 (pow.f64 ky 2) (pow.f64 (sin.f64 kx) 2)))","(fma.f64 -1/3 (pow.f64 ky 4) (+.f64 (*.f64 ky ky) (pow.f64 (sin.f64 kx) 2)))","(+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (+.f64 (pow.f64 ky 2) (+.f64 (*.f64 2/45 (pow.f64 ky 6)) (pow.f64 (sin.f64 kx) 2))))","(fma.f64 -1/3 (pow.f64 ky 4) (+.f64 (*.f64 ky ky) (fma.f64 2/45 (pow.f64 ky 6) (pow.f64 (sin.f64 kx) 2))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(pow.f64 (sin.f64 ky) 2)","(+.f64 (pow.f64 kx 2) (pow.f64 (sin.f64 ky) 2))","(+.f64 (*.f64 kx kx) (pow.f64 (sin.f64 ky) 2))","(+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 -1/3 (pow.f64 kx 4))))","(+.f64 (*.f64 kx kx) (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 -1/3 (pow.f64 kx 4))))","(+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6)))))","(+.f64 (*.f64 kx kx) (+.f64 (pow.f64 (sin.f64 ky) 2) (fma.f64 -1/3 (pow.f64 kx 4) (*.f64 2/45 (pow.f64 kx 6)))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(pow.f64 (hypot.f64 (sin.f64 kx) (sin.f64 ky)) 2)"]],"time":544.134033203125,"type":"simplify"},{"compiler":[[11893,8225]],"time":136.142822265625,"type":"eval"},{"alts":[["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","done",0.5078125],["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","next",2.224295645381079]],"compiler":[[28,22],[36,29],[36,29]],"count":[[321,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[320,1],"picked":[1,1]}],"min-error":[0.0078125],"time":171.676025390625,"type":"prune"},{"compiler":[[227,142]],"locations":[["(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))",0.178066259768442,true],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)",2.8300273193359406,true],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))",9.128410637831426,true],["(fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))",33.10522063253761,true]],"time":54.4560546875,"type":"localize"},{"count":[[4,132]],"series":[["(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))","kx","-inf",0.198974609375],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))","kx","inf",0.1748046875],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))","kx","0",0.22216796875],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))","ky","-inf",0.177001953125],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))","ky","inf",0.19677734375],["(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))","ky","0",0.203125],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","Om","-inf",0.2529296875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","Om","inf",0.23486328125],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","Om","0",1.032958984375],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","l","-inf",0.278076171875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","l","inf",0.565185546875],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","l","0",1.56494140625],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","kx","-inf",0.216064453125],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","kx","inf",0.2109375],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","kx","0",0.299072265625],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","ky","-inf",0.2080078125],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","ky","inf",0.23291015625],["(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","ky","0",0.281982421875],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","Om","-inf",0.337890625],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","Om","inf",1.064208984375],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","Om","0",0.7958984375],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","l","-inf",0.52587890625],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","l","inf",0.8720703125],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","l","0",0.718994140625],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","kx","-inf",0.623046875],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","kx","inf",0.56494140625],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","kx","0",1.31884765625],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","ky","-inf",0.606201171875],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","ky","inf",2.31005859375],["(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","ky","0",1.612060546875],["(fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))","kx","-inf",0.370849609375],["(fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))","kx","inf",3.336181640625],["(fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))","kx","0",0.635009765625]],"time":23.094970703125,"type":"series"},{"count":[[4,283]],"inputs":[["(fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))","(sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1))","(fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)","(fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) 0) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) 1/2) (*.f64 (pow.f64 (sin.f64 kx) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 (pow.f64 (sin.f64 kx) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 kx) 2)) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (sin.f64 kx) 2)) (*.f64 1/2 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 0 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 4) (*.f64 (pow.f64 (cos.f64 kx) 2) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cos.f64 kx) 2) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (sin.f64 kx) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 1/2 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 -1 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cos.f64 kx)) (cos.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 kx) 2))) (pow.f64 (cbrt.f64 (pow.f64 (cos.f64 kx) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (cos.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 1/2) (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 kx) (sin.f64 kx))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (cbrt.f64 (pow.f64 (sin.f64 kx) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 4)) (cbrt.f64 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (+.f64 (cbrt.f64 1/4) (neg.f64 (*.f64 (cbrt.f64 1/4) (cos.f64 (+.f64 kx kx))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (+.f64 (sqrt.f64 1/2) (neg.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 (+.f64 kx kx))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (+.f64 (neg.f64 (*.f64 (cbrt.f64 1/4) (cos.f64 (+.f64 kx kx)))) (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (+.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 (+.f64 kx kx)))) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (-.f64 (cbrt.f64 1/4) (*.f64 (cbrt.f64 1/4) (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1/2 (*.f64 -1/2 (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (cos.f64 (+.f64 kx kx)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (+.f64 -1 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (+.f64 (cos.f64 (+.f64 kx kx)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/4) (-.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 (+.f64 kx kx)) (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (-.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 (+.f64 kx kx)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 kx)) 2) (*.f64 (pow.f64 (cbrt.f64 (sin.f64 kx)) 2) (pow.f64 (cbrt.f64 (sin.f64 kx)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 kx) 1) (*.f64 (sin.f64 kx) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 kx) -1) (*.f64 (sin.f64 kx) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 kx)) (neg.f64 (sin.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cos.f64 kx)) (-.f64 1 (cos.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (cos.f64 kx)) (-.f64 -1 (cos.f64 kx)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 2/3) (-.f64 (cbrt.f64 1/4) (*.f64 (cbrt.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx)))) (cbrt.f64 1/2)))) (+.f64 (cbrt.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx)))) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 1/4) (-.f64 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 2/3) (*.f64 (cbrt.f64 1/2) (cbrt.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (+.f64 (cbrt.f64 1/2) (cbrt.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 1/4) (+.f64 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 2/3) (*.f64 (cbrt.f64 1/2) (cbrt.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))) (-.f64 (cbrt.f64 1/2) (cbrt.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 kx) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 (cos.f64 (+.f64 kx kx))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (-.f64 1 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (+.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (cos.f64 (+.f64 kx kx))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (cos.f64 (+.f64 kx kx))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/8 (pow.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 3)) (+.f64 1/4 (*.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) (-.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 3) 1/8) (+.f64 (pow.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 2) (-.f64 1/4 (*.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (cos.f64 kx) 2) 3)) (+.f64 1 (+.f64 (pow.f64 (cos.f64 kx) 4) (pow.f64 (cos.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/8 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 3)) (+.f64 1/4 (+.f64 (pow.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 2) (*.f64 1/2 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -2 (*.f64 -2 (neg.f64 (cos.f64 (+.f64 kx kx))))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 2 (*.f64 2 (neg.f64 (cos.f64 (+.f64 kx kx))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 2) (neg.f64 (cos.f64 (+.f64 kx kx))))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (neg.f64 (cos.f64 (+.f64 kx kx))))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) (sqrt.f64 2)) (*.f64 2 (sqrt.f64 1/2))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) (cbrt.f64 4)) (*.f64 2 (cbrt.f64 1/2))) (*.f64 2 (cbrt.f64 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) 2) 2) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) -2) -2) (*.f64 2 -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 2 (+.f64 (cos.f64 (+.f64 kx kx)) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -2 (*.f64 -2 (cos.f64 (+.f64 kx kx)))) (*.f64 -2 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 2 (*.f64 2 (cos.f64 (+.f64 kx kx)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (sqrt.f64 1/2) 2) (*.f64 (sqrt.f64 2) (cos.f64 (+.f64 kx kx)))) (sqrt.f64 8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 1/2) 2) (*.f64 (cbrt.f64 4) (cos.f64 (+.f64 kx kx)))) (*.f64 (cbrt.f64 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (cos.f64 (+.f64 kx kx)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 kx) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 kx) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (sin.f64 kx) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 kx) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (cos.f64 kx) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (sin.f64 kx) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 1/2)) (neg.f64 (sqrt.f64 1/2)) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 1/16)) 2) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (sqrt.f64 1/2) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (cbrt.f64 (cbrt.f64 1/16)) (cbrt.f64 1/2)) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (cbrt.f64 1/4) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1/2 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 kx) 2) (*.f64 (pow.f64 (cos.f64 kx) 2) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (cos.f64 (+.f64 kx kx)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx)))) (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 2/3) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) -1 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (cbrt.f64 (cos.f64 (+.f64 kx kx)))) (pow.f64 (cos.f64 (+.f64 kx kx)) 2/3) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 2/3) (cbrt.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 kx kx)) -1/2 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) 1 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (neg.f64 (cos.f64 (+.f64 kx kx))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cos.f64 (+.f64 kx kx))) 1/2 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (neg.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 (+.f64 kx kx)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/2) (neg.f64 (*.f64 (cbrt.f64 1/4) (cos.f64 (+.f64 kx kx)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))) (neg.f64 (pow.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) 2/3)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 1 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/2) (neg.f64 (cbrt.f64 1/4)) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1/2 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 3 (neg.f64 (pow.f64 (cos.f64 kx) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1/2) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (*.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 0 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (fabs.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0) (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1/2) (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (*.f64 1/2 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (*.f64 0 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 1/2 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 0 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2/3) (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (sqrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) -1) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (*.f64 1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0) (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) (pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1) (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1)) (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1) (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 3) 1) (+.f64 1 (-.f64 (pow.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 2) (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 3 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2/3)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 l 2) Om) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (*.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 2/3) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (*.f64 l 2) Om) 2) (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (/.f64 (*.f64 l 2) Om)) (/.f64 (*.f64 l 2) Om) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2)) 1 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 0) (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1/2) (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (*.f64 1/2 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (*.f64 0 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) 1/2) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) (fma.f64 (sin.f64 ky) (sin.f64 ky) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) 1/2) 1) (*.f64 -1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 -1/2 (cos.f64 (+.f64 kx kx)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 (*.f64 -1/2 (cos.f64 (+.f64 kx kx))) (pow.f64 (sin.f64 ky) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (sin.f64 kx) 2) 1) (pow.f64 (cos.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (sin.f64 kx) 2) 1/2) (*.f64 1/2 (cos.f64 (+.f64 ky ky))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) 1) (pow.f64 (cos.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) 1/2) (*.f64 1/2 (cos.f64 (+.f64 kx kx))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 ky ky))) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 (pow.f64 (cos.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (-.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx))) (pow.f64 (sin.f64 ky) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 (pow.f64 (cos.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 2/3) (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 (cos.f64 (+.f64 kx kx))) (-.f64 1 (cos.f64 (+.f64 ky ky)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 (cos.f64 (+.f64 ky ky))) (-.f64 1 (cos.f64 (+.f64 kx kx)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 1 (cos.f64 (+.f64 ky ky))) 2) (*.f64 2 (-.f64 1 (cos.f64 (+.f64 kx kx))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 1 (cos.f64 (+.f64 kx kx))) 2) (*.f64 2 (-.f64 1 (cos.f64 (+.f64 ky ky))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (cbrt.f64 (pow.f64 (sin.f64 kx) 4)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (sin.f64 kx) 2)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 kx) (sin.f64 kx) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (sin.f64 kx) 4)) (cbrt.f64 (pow.f64 (sin.f64 kx) 2)) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 ky)) (*.f64 (pow.f64 (sin.f64 ky) 2/3) (sin.f64 ky)) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (sin.f64 ky)) 4) (pow.f64 (sin.f64 ky) 2/3) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 ky) 2/3) (pow.f64 (cbrt.f64 (sin.f64 ky)) 4) (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 ky) 2) 1 (pow.f64 (sin.f64 kx) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 kx) 2) 1 (pow.f64 (sin.f64 ky) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))))))"]],"rules":[["egg-rr",52],["egg-rr",72],["egg-rr",44],["egg-rr",115]],"time":54.97900390625,"type":"rewrite"},{"count":[[415,372]],"inputs":[["(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) 1/2)","(-.f64 (+.f64 (pow.f64 kx 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2)","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 -1/3 (pow.f64 kx 4)))) 1/2)","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6))))) 1/2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))) (/.f64 (pow.f64 l 2) (pow.f64 Om 2)))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))) (/.f64 (pow.f64 l 2) (pow.f64 Om 2)))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))) (/.f64 (pow.f64 l 2) (pow.f64 Om 2)))) 2)) (pow.f64 l 2)) (*.f64 (pow.f64 Om 2) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (pow.f64 ky 6)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))","(+.f64 (sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))) (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) 2)) (pow.f64 kx 4))))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))) (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) 2)) (pow.f64 kx 4)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) 2))) (*.f64 (pow.f64 Om 2) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) (pow.f64 kx 6)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4))))))","(*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 1/512 (*.f64 (/.f64 (pow.f64 Om 5) (pow.f64 l 5)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 5))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3))))))))","(*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))","(+.f64 (*.f64 -1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))))","(+.f64 (*.f64 -1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (*.f64 1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)))))))","(+.f64 (*.f64 -1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3))))) (*.f64 -1/512 (*.f64 (/.f64 (pow.f64 Om 5) (pow.f64 l 5)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 5))))))))","(*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 1/512 (*.f64 (/.f64 (pow.f64 Om 5) (pow.f64 l 5)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 5))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3))))))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4))))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4))))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))","(+.f64 1 (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2))))))","(+.f64 1 (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 6)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 1 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2))))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 1 (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 6)) (pow.f64 Om 2))) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2)))))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","1","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","1","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","1","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (pow.f64 ky 2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (pow.f64 ky 2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (+.f64 (pow.f64 ky 2) (*.f64 2/45 (pow.f64 ky 6))))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2)","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)))) 1/2)","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 -1/3 (pow.f64 kx 4))))) 1/2)","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6)))))) 1/2)","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) 1/2)","0","(-.f64 (+.f64 (pow.f64 kx 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2)","(*.f64 kx kx)","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 -1/3 (pow.f64 kx 4)))) 1/2)","(neg.f64 (-.f64 (neg.f64 (*.f64 kx kx)) (*.f64 -1/3 (pow.f64 kx 4))))","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6))))) 1/2)","(neg.f64 (-.f64 (neg.f64 (*.f64 kx kx)) (fma.f64 -1/3 (pow.f64 kx 4) (*.f64 2/45 (pow.f64 kx 6)))))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(pow.f64 (sin.f64 kx) 2)","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))))))","(fma.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 l ky) 2) (pow.f64 Om -2)) (pow.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))) -1/2)) (sqrt.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))) (/.f64 (pow.f64 l 2) (pow.f64 Om 2)))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))","(+.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))) -1/2) (+.f64 (/.f64 (*.f64 2 (pow.f64 (*.f64 l ky) 2)) (*.f64 Om Om)) (*.f64 1/2 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))) -1/2) (/.f64 (*.f64 l l) (*.f64 Om Om)))) 2))) (pow.f64 ky 4))))) (sqrt.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2))))))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))) (/.f64 (pow.f64 l 2) (pow.f64 Om 2)))) 2)) (pow.f64 ky 4)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))) (/.f64 (pow.f64 l 2) (pow.f64 Om 2)))) 2)) (pow.f64 l 2)) (*.f64 (pow.f64 Om 2) (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))) (pow.f64 ky 6)) (sqrt.f64 (/.f64 1 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2)))))))))))","(+.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))) -1/2) (+.f64 (/.f64 (*.f64 2 (pow.f64 (*.f64 l ky) 2)) (*.f64 Om Om)) (*.f64 1/2 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))) -1/2) (/.f64 (*.f64 l l) (*.f64 Om Om)))) 2))) (pow.f64 ky 4))))) (+.f64 (sqrt.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2))))) (*.f64 1/2 (*.f64 (*.f64 (fma.f64 8/45 (/.f64 (*.f64 l l) (*.f64 Om Om)) (*.f64 -2 (*.f64 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))) -1/2) (/.f64 (*.f64 l l) (*.f64 Om Om)))) 2))) (*.f64 l l)) (/.f64 (pow.f64 Om -2) (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))))))) (pow.f64 ky 6)) (pow.f64 (+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2)))) -1/2)))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))","(sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1))","(+.f64 (sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))))","(+.f64 (sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)) (*.f64 (/.f64 (*.f64 2 (pow.f64 (*.f64 l kx) 2)) (*.f64 Om Om)) (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2)))","(+.f64 (sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))) (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) 2)) (pow.f64 kx 4))))))","(+.f64 (sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)) (fma.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2)) (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2)) (*.f64 (*.f64 1/2 (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2)) (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2)) 2))) (pow.f64 kx 4)))))","(+.f64 (sqrt.f64 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))) (*.f64 (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) 2)) (pow.f64 kx 4)))) (*.f64 1/2 (*.f64 (*.f64 (-.f64 (*.f64 8/45 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (*.f64 -4/3 (/.f64 (pow.f64 l 2) (pow.f64 Om 2))) (pow.f64 (*.f64 2 (*.f64 (/.f64 (pow.f64 l 2) (pow.f64 Om 2)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) 2))) (*.f64 (pow.f64 Om 2) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))) (pow.f64 kx 6)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))))))))","(+.f64 (sqrt.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)) (fma.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 l kx) 2) (pow.f64 Om -2)) (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2)) (*.f64 1/2 (*.f64 (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2) (+.f64 (*.f64 (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2)) 2))) (pow.f64 kx 4)) (*.f64 (fma.f64 8/45 (/.f64 (*.f64 l l) (*.f64 Om Om)) (/.f64 (*.f64 -2 (*.f64 (*.f64 l l) (fma.f64 -4/3 (/.f64 (*.f64 l l) (*.f64 Om Om)) (neg.f64 (pow.f64 (*.f64 (/.f64 (*.f64 2 (*.f64 l l)) (*.f64 Om Om)) (pow.f64 (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1) -1/2)) 2))))) (*.f64 (*.f64 Om Om) (fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)))) (pow.f64 kx 6)))))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","(sqrt.f64 (+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2)))))","(sqrt.f64 (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 (*.f64 2 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (pow.f64 Om -2)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4)))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (pow.f64 Om -2)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 l 4) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2))) (pow.f64 Om 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4))))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (pow.f64 Om -2)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3)) (pow.f64 Om 6)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 l 4) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2))) (pow.f64 Om 4)))))","(*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))","(*.f64 (/.f64 (*.f64 2 l) Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))))","(fma.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (*.f64 (/.f64 (*.f64 1/4 Om) l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)))))))","(fma.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (fma.f64 1/4 (*.f64 (/.f64 Om l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)) (*.f64 (*.f64 -1/64 (pow.f64 (/.f64 Om l) 3)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -3)))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 1/512 (*.f64 (/.f64 (pow.f64 Om 5) (pow.f64 l 5)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 5))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3))))))))","(fma.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (fma.f64 1/4 (*.f64 (/.f64 Om l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)) (fma.f64 1/512 (*.f64 (*.f64 (pow.f64 Om 5) (pow.f64 l -5)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -5))) (*.f64 (*.f64 -1/64 (pow.f64 (/.f64 Om l) 3)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -3))))))","(*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))","(*.f64 (/.f64 (*.f64 -2 l) Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))))","(+.f64 (*.f64 -1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))))","(fma.f64 -1/4 (*.f64 (/.f64 Om l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)) (*.f64 (/.f64 (*.f64 -2 l) Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))))","(+.f64 (*.f64 -1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (*.f64 1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)))))))","(fma.f64 -1/4 (*.f64 (/.f64 Om l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)) (fma.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (*.f64 (*.f64 1/64 (pow.f64 (/.f64 Om l) 3)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -3)))))","(+.f64 (*.f64 -1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3))))) (*.f64 -1/512 (*.f64 (/.f64 (pow.f64 Om 5) (pow.f64 l 5)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 5))))))))","(fma.f64 -1/4 (*.f64 (/.f64 Om l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)) (fma.f64 -2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (fma.f64 1/64 (*.f64 (pow.f64 (/.f64 Om l) 3) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -3))) (*.f64 -1/512 (*.f64 (*.f64 (pow.f64 Om 5) (pow.f64 l -5)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -5)))))))","(*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))","(*.f64 (/.f64 (*.f64 2 l) Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))))","(fma.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (*.f64 (/.f64 (*.f64 1/4 Om) l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)))))))","(fma.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (fma.f64 1/4 (*.f64 (/.f64 Om l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)) (*.f64 (*.f64 -1/64 (pow.f64 (/.f64 Om l) 3)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -3)))))","(+.f64 (*.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))))) (+.f64 (*.f64 1/4 (*.f64 (/.f64 Om l) (sqrt.f64 (/.f64 1 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))))))) (+.f64 (*.f64 1/512 (*.f64 (/.f64 (pow.f64 Om 5) (pow.f64 l 5)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 5))))) (*.f64 -1/64 (*.f64 (/.f64 (pow.f64 Om 3) (pow.f64 l 3)) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3))))))))","(fma.f64 2 (*.f64 (/.f64 l Om) (sqrt.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (fma.f64 1/4 (*.f64 (/.f64 Om l) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -1/2)) (fma.f64 1/512 (*.f64 (*.f64 (pow.f64 Om 5) (pow.f64 l -5)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -5))) (*.f64 (*.f64 -1/64 (pow.f64 (/.f64 Om l) 3)) (sqrt.f64 (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) -3))))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 (*.f64 2 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (pow.f64 Om -2)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4)))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (pow.f64 Om -2)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 l 4) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2))) (pow.f64 Om 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4))))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (pow.f64 Om -2)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3)) (pow.f64 Om 6)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 l 4) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2))) (pow.f64 Om 4)))))","1","(+.f64 1 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (*.f64 (*.f64 2 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)))) (pow.f64 Om -2)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4)))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (pow.f64 Om -2)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 l 4) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2))) (pow.f64 Om 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 3)) (pow.f64 Om 6))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 l 4) (pow.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) 2)) (pow.f64 Om 4))))))","(+.f64 1 (fma.f64 2 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) (pow.f64 Om -2)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 l 6) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 3)) (pow.f64 Om 6)) (/.f64 (*.f64 -2 (*.f64 (pow.f64 l 4) (pow.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2)) 2))) (pow.f64 Om 4)))))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))))","(+.f64 1 (*.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 Om -2))))","(+.f64 1 (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))","(+.f64 1 (*.f64 4 (*.f64 (pow.f64 Om -2) (+.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 (*.f64 l ky) 2)))))","(+.f64 1 (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2))))))","(+.f64 1 (fma.f64 -4/3 (*.f64 (*.f64 (*.f64 l l) (pow.f64 ky 4)) (pow.f64 Om -2)) (*.f64 4 (*.f64 (pow.f64 Om -2) (+.f64 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)) (pow.f64 (*.f64 l ky) 2))))))","(+.f64 1 (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 4)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx)))) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 6)) (pow.f64 Om 2))) (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 ky 2)) (pow.f64 Om 2)))))))","(+.f64 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 (*.f64 l l) (pow.f64 ky 4))) (*.f64 4 (*.f64 (pow.f64 (sin.f64 kx) 2) (*.f64 l l)))) (*.f64 Om Om)) (+.f64 (/.f64 (+.f64 (*.f64 4 (pow.f64 (*.f64 l ky) 2)) (*.f64 8/45 (*.f64 (*.f64 l l) (pow.f64 ky 6)))) (*.f64 Om Om)) 1))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1)","(fma.f64 4 (*.f64 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)) (pow.f64 Om -2)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) 1))","(+.f64 (/.f64 (+.f64 (*.f64 4 (pow.f64 (*.f64 l kx) 2)) (*.f64 4 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)))) (*.f64 Om Om)) 1)","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 1 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2))))))","(+.f64 (/.f64 (+.f64 (*.f64 4 (pow.f64 (*.f64 l kx) 2)) (*.f64 4 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)))) (*.f64 Om Om)) (+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (pow.f64 kx 4)) -4/3) (*.f64 Om Om))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 2)) (pow.f64 Om 2))) (+.f64 (*.f64 4 (/.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2) (pow.f64 l 2)) (pow.f64 Om 2))) (+.f64 1 (+.f64 (*.f64 8/45 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 6)) (pow.f64 Om 2))) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 l 2) (pow.f64 kx 4)) (pow.f64 Om 2)))))))","(+.f64 (+.f64 (/.f64 (+.f64 (*.f64 4 (pow.f64 (*.f64 l kx) 2)) (*.f64 4 (*.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 l l)))) (*.f64 Om Om)) (/.f64 (+.f64 (*.f64 8/45 (*.f64 (*.f64 l l) (pow.f64 kx 6))) (*.f64 -4/3 (*.f64 (*.f64 l l) (pow.f64 kx 4)))) (*.f64 Om Om))) 1)","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","1","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))","(/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))","(/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2)))","(/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","1","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","1","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(+.f64 1 (*.f64 4 (/.f64 (*.f64 (pow.f64 l 2) (-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))) (pow.f64 Om 2))))","(+.f64 1 (/.f64 (*.f64 (*.f64 (*.f64 l l) (+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))) 4) (*.f64 Om Om)))","(-.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(pow.f64 (sin.f64 kx) 2)","(-.f64 (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (pow.f64 ky 2)) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (*.f64 ky ky) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (pow.f64 ky 2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (fma.f64 -1/3 (pow.f64 ky 4) (*.f64 ky ky)) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 ky 4)) (+.f64 (pow.f64 ky 2) (*.f64 2/45 (pow.f64 ky 6))))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (+.f64 (fma.f64 -1/3 (pow.f64 ky 4) (*.f64 ky ky)) (*.f64 2/45 (pow.f64 ky 6))) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) 1/2)","(pow.f64 (sin.f64 ky) 2)","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)))) 1/2)","(+.f64 (*.f64 kx kx) (pow.f64 (sin.f64 ky) 2))","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (*.f64 -1/3 (pow.f64 kx 4))))) 1/2)","(+.f64 (*.f64 kx kx) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) 0)))","(-.f64 (+.f64 (pow.f64 kx 2) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2)) (+.f64 (*.f64 -1/3 (pow.f64 kx 4)) (*.f64 2/45 (pow.f64 kx 6)))))) 1/2)","(+.f64 (*.f64 kx kx) (+.f64 (pow.f64 (sin.f64 ky) 2) (+.f64 (fma.f64 -1/3 (pow.f64 kx 4) (*.f64 2/45 (pow.f64 kx 6))) 0)))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (*.f64 2 kx))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))","(-.f64 (+.f64 (pow.f64 (sin.f64 ky) 2) (*.f64 (cbrt.f64 1/4) (cbrt.f64 1/2))) (*.f64 1/2 (cos.f64 (neg.f64 (*.f64 -2 kx)))))","(+.f64 (pow.f64 (sin.f64 ky) 2) (pow.f64 (sin.f64 kx) 2))"]],"time":645.134033203125,"type":"simplify"},{"compiler":[[14400,10190]],"time":168.343994140625,"type":"eval"},{"alts":[["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","done",0.5078125],["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","done",2.224295645381079]],"compiler":[[28,22],[36,29]],"count":[[374,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[372,0],"picked":[1,1]}],"min-error":[0.0078125],"time":228.962890625,"type":"prune"},{"accuracy":[0.5078125],"baseline":[0.5078125],"branch":[["l",0.5078125,1],["Om",0.5078125,1],["kx",0.5078125,1],["ky",0.5078125,1],["(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))",0.5078125,1],["(*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))))))",0.5078125,1],["(+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))",0.5078125,1],["(/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))))",0.5078125,1],["(sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))",0.5078125,1],["(+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))",0.5078125,1],["(*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))",0.5078125,1],["(pow.f64 (/.f64 (*.f64 2 l) Om) 2)",0.5078125,1],["(/.f64 (*.f64 2 l) Om)",0.5078125,1],["(*.f64 2 l)",0.5078125,1],["(+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))",0.5078125,1],["(pow.f64 (sin.f64 kx) 2)",0.5078125,1],["(sin.f64 kx)",0.5078125,1],["(pow.f64 (sin.f64 ky) 2)",0.5078125,1],["(sin.f64 ky)",0.5078125,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[33,29],[32,28],[28,24],[26,22],[24,20],[23,19],[21,17],[11,9],[9,7],[7,6],[13,11],[8,7],[6,5],[8,7],[6,5],[89,69]],"count":[[3,1]],"inputs":[["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (fma.f64 (cbrt.f64 1/4) (cbrt.f64 1/2) (neg.f64 (*.f64 1/2 (cos.f64 (+.f64 kx kx)))))) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))"]],"link":["."],"name":["Toniolo and Linder, Equation (3a)"],"oracle":[2.724295645381079],"outputs":[["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))"]],"time":49.927001953125,"times":[["l",2.662109375],["Om",2.72509765625],["kx",2.72314453125],["ky",2.70703125],["(sqrt.f64 (*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))))",2.340087890625],["(*.f64 (/.f64 1 2) (+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))))))",2.203857421875],["(+.f64 1 (/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))))",2.10595703125],["(/.f64 1 (sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))))",2.31201171875],["(sqrt.f64 (+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))))",2.14892578125],["(+.f64 1 (*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))))",2.1181640625],["(*.f64 (pow.f64 (/.f64 (*.f64 2 l) Om) 2) (+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2)))",2.464111328125],["(pow.f64 (/.f64 (*.f64 2 l) Om) 2)",2.18505859375],["(/.f64 (*.f64 2 l) Om)",2.51904296875],["(*.f64 2 l)",2.677978515625],["(+.f64 (pow.f64 (sin.f64 kx) 2) (pow.f64 (sin.f64 ky) 2))",2.755859375],["(pow.f64 (sin.f64 kx) 2)",2.401123046875],["(sin.f64 kx)",2.751953125],["(pow.f64 (sin.f64 ky) 2)",2.35107421875],["(sin.f64 ky)",2.787841796875]],"type":"regimes"},{"compiler":[[28,22]],"inputs":[["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 l (*.f64 Om 1/2)) 2) 1)))))","(sqrt.f64 (+.f64 1/2 (/.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 (sin.f64 ky) (sin.f64 ky) (pow.f64 (sin.f64 kx) 2)) (pow.f64 (/.f64 (*.f64 l 2) Om) 2) 1)))))"]],"stop":[["done",1]],"time":24.443115234375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[28,22]],"remove-preprocessing":[[]],"time":14.232177734375,"type":"end"}]