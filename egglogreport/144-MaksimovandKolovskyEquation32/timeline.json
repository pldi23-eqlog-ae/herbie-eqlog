[{"compiler":[[35,24]],"method":["search"],"sampling":[[12,0.18704268314473538,0.8105182936271866,0.0024390232280779856],[11,0.18704268314473538,0.8105182936271866,0.0024390232280779856],[10,0.12469512209649025,0.8728658546754318,0.0024390232280779856],[9,0.12469512209649025,0.8728658546754318,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":390.052978515625,"type":"analyze"},{"outcomes":[["body",512,"invalid",17.38037109375,89],["body",2048,"invalid",12.07763671875,25],["body",256,"invalid",37.414794921875,375],["body",1024,"valid",20.14453125,63],["body",512,"valid",11.521484375,58],["body",1024,"invalid",28.500732421875,93],["body",2048,"valid",0.617919921875,1],["body",256,"valid",804.37353515625,8134]],"time":940.671142578125,"type":"sample"},{"compiler":[[34,23]],"inputs":[["0","1","2","3","4"],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 m (+.f64 K n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 K n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 n (+.f64 m K)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m K) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m K))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 M (+.f64 m n)) 2) K)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 l (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 K (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 n m)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n m) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 n m))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 M n)) 2) m)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 M n) 2) m) 2)) (-.f64 l (fabs.f64 (-.f64 M n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 l n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 l n) 2) M) 2)) (-.f64 m (fabs.f64 (-.f64 l n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m M)) 2) n)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m M) 2) n) 2)) (-.f64 l (fabs.f64 (-.f64 m M))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m l)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m l) 2) M) 2)) (-.f64 n (fabs.f64 (-.f64 m l))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) l)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2)) (-.f64 M (fabs.f64 (-.f64 m n))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 m n)) l))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 m (+.f64 K n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 K n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 m (+.f64 K n)) 1/2 (neg.f64 M))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 K n) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 K n)) l))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 n (+.f64 m K)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m K) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m K))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 n (+.f64 m K)) 1/2 (neg.f64 M))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m K) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 m K)) l))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 M (+.f64 m n)) 2) K)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 M (+.f64 m n)) 1/2 (neg.f64 K))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 K)) 2)) (-.f64 (fabs.f64 (-.f64 m n)) l))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 l (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 K (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 l (+.f64 m n)) 1/2 (neg.f64 M))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 m n)) K))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 n m)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n m) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 n m))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 m n)) l))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 M n)) 2) m)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 M n) 2) m) 2)) (-.f64 l (fabs.f64 (-.f64 M n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 M n)) 1/2 (neg.f64 m))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 M n) 1/2 (neg.f64 m)) 2)) (-.f64 (fabs.f64 (-.f64 M n)) l))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 l n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 l n) 2) M) 2)) (-.f64 m (fabs.f64 (-.f64 l n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 l n)) 1/2 (neg.f64 M))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 l n) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 l n)) m))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m M)) 2) n)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m M) 2) n) 2)) (-.f64 l (fabs.f64 (-.f64 m M))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m M)) 1/2 (neg.f64 n))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m M) 1/2 (neg.f64 n)) 2)) (-.f64 (fabs.f64 (-.f64 m M)) l))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m l)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m l) 2) M) 2)) (-.f64 n (fabs.f64 (-.f64 m l))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m l)) 1/2 (neg.f64 M))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m l) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 m l)) n))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) l)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2)) (-.f64 M (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 l))) (exp.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 l)) 2)) (-.f64 (fabs.f64 (-.f64 m n)) M))))"]],"symmetry":[[]],"time":95.597900390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))"]],"time":25.55810546875,"type":"simplify"},{"compiler":[[62,37]],"time":0.7099609375,"type":"eval"},{"alts":[["(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","next",13.734338736241272]],"compiler":[[33,21],[33,21]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[13.734338736241272],"time":2.126953125,"type":"prune"},{"compiler":[[131,45]],"locations":[["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))",0.0078125,true],["(*.f64 K (+.f64 m n))",0.01171875,true],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)",0.02734375,true],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))",33.664860736235866,true]],"time":27.922119140625,"type":"localize"},{"count":[[4,168]],"series":[["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","M","-inf",0.159912109375],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","M","inf",0.214111328125],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","M","0",0.2470703125],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","n","-inf",0.240966796875],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","n","inf",0.22998046875],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","n","0",0.239990234375],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","m","-inf",0.217041015625],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","m","inf",0.2548828125],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","m","0",0.25390625],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","K","-inf",0.215087890625],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","K","inf",0.22412109375],["(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","K","0",0.220947265625],["(*.f64 K (+.f64 m n))","n","-inf",0.234130859375],["(*.f64 K (+.f64 m n))","n","inf",0.237060546875],["(*.f64 K (+.f64 m n))","n","0",0.22802734375],["(*.f64 K (+.f64 m n))","m","-inf",0.197998046875],["(*.f64 K (+.f64 m n))","m","inf",0.681884765625],["(*.f64 K (+.f64 m n))","m","0",0.2060546875],["(*.f64 K (+.f64 m n))","K","-inf",0.26611328125],["(*.f64 K (+.f64 m n))","K","inf",0.284912109375],["(*.f64 K (+.f64 m n))","K","0",0.31982421875],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","M","-inf",0.281005859375],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","M","inf",0.280029296875],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","M","0",0.315185546875],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","n","-inf",0.321044921875],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","n","inf",0.345947265625],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","n","0",0.34814453125],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","m","-inf",0.783203125],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","m","inf",0.337158203125],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","m","0",0.474853515625],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","M","-inf",0.22216796875],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","M","inf",0.192138671875],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","M","0",0.456787109375],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","n","-inf",0.30517578125],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","n","inf",0.203125],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","n","0",0.508056640625],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","m","-inf",0.322998046875],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","m","inf",0.2138671875],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","m","0",0.658935546875],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","K","-inf",0.239013671875],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","K","inf",0.244140625],["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","K","0",0.7119140625]],"time":13.7119140625,"type":"series"},{"count":[[4,148]],"inputs":[["(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)","(*.f64 K (+.f64 m n))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 0) (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))) (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (*.f64 0 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2))) (sin.f64 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (cos.f64 M)) (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (sin.f64 (neg.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (sin.f64 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))) (cbrt.f64 (pow.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 2)) (cbrt.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (sin.f64 (neg.f64 M))) (*.f64 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (cos.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (cos.f64 M) (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (sin.f64 (neg.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2) 0) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2) (*.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (*.f64 (+.f64 m n) 1/2)) 1) (*.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (neg.f64 M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (*.f64 (+.f64 m n) 1/2)) (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2) (*.f64 0 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (neg.f64 M)) (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (*.f64 (+.f64 m n) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) (neg.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) (+.f64 2 3)) (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) 1) (*.f64 (neg.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 4)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (*.f64 (+.f64 m n) 1/2) (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m n) 1/2) (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (*.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) (neg.f64 M)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 K (+.f64 m n)) 0) (*.f64 K (+.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 K (+.f64 m n)) (*.f64 (*.f64 K (+.f64 m n)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 K (+.f64 m n))) (*.f64 K (+.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 K (+.f64 m n)) (*.f64 0 (*.f64 K (+.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 K m) (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 K n) (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 K (+.f64 m n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 m n) K)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 K) (*.f64 (cbrt.f64 (*.f64 K K)) (+.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 m n)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 m n) 2)) K))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 K (+.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 m n) 2)) K) (cbrt.f64 (+.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 K (+.f64 m n))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 K K)) (+.f64 m n)) (cbrt.f64 K))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 K (+.f64 m n))) (cbrt.f64 (pow.f64 (*.f64 K (+.f64 m n)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 K (+.f64 m n)) 2)) (cbrt.f64 (*.f64 K (+.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 m n) (cbrt.f64 K)) (cbrt.f64 (*.f64 K K)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 K (cbrt.f64 (+.f64 m n))) (cbrt.f64 (pow.f64 (+.f64 m n) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 K (+.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 K (+.f64 m n)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 m n) 2)) (*.f64 K (cbrt.f64 (+.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 K K)) (*.f64 (+.f64 m n) (cbrt.f64 K)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 K K)) (+.f64 (*.f64 m (cbrt.f64 K)) (*.f64 n (cbrt.f64 K))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 K K)) (+.f64 (*.f64 n (cbrt.f64 K)) (*.f64 m (cbrt.f64 K))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 K (+.f64 m n)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 K (+.f64 m n)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 K (+.f64 m n))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 K (+.f64 m n))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 K (+.f64 m n))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 K (+.f64 m n)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 K (+.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 K (+.f64 m n)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m K (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 K m (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 K (cbrt.f64 n)) (cbrt.f64 (*.f64 n n)) (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 K) (*.f64 (cbrt.f64 (*.f64 K K)) n) (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 n) (*.f64 (cbrt.f64 (*.f64 n n)) K) (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 n (cbrt.f64 K)) (cbrt.f64 (*.f64 K K)) (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 K n (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 n K (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 K n)) (cbrt.f64 (pow.f64 (*.f64 K n) 2)) (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 K m)) (cbrt.f64 (pow.f64 (*.f64 K m) 2)) (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (*.f64 (cbrt.f64 (*.f64 m m)) K) (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 K (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (cbrt.f64 K)) (cbrt.f64 (*.f64 K K)) (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 K) (*.f64 (cbrt.f64 (*.f64 K K)) m) (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 K n) (*.f64 K m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 K m) (*.f64 K n))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 K m) 1 (*.f64 K n))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 0) (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) (*.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) (*.f64 0 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 M) (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 M (*.f64 (*.f64 K (+.f64 m n)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2) M)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 2)) (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 M (*.f64 (*.f64 K (+.f64 m n)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 M)) (cbrt.f64 (*.f64 M M)) (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 M M)) (cbrt.f64 (neg.f64 M)) (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 M) (neg.f64 (cbrt.f64 (*.f64 M M))) (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 K (*.f64 (+.f64 m n) 1/2) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 K (+.f64 m n)) (sqrt.f64 1/2)) (sqrt.f64 1/2) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 K (+.f64 m n))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 K (+.f64 m n)) 2)) 1/2) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (*.f64 K (+.f64 m n)) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 K (+.f64 m n)) (cbrt.f64 1/2)) (cbrt.f64 1/4) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 m n) (*.f64 K 1/2) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2) 2)) (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 M -1 (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 M) (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 M) 1 (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 M (*.f64 (*.f64 K (+.f64 m n)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2) 1 (neg.f64 M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 K (+.f64 m n)) 1/2) (neg.f64 M))))))"]],"rules":[["egg-rr",41],["egg-rr",49],["egg-rr",33],["egg-rr",25]],"time":34.39794921875,"type":"rewrite"},{"count":[[316,230]],"inputs":[["(cos.f64 (neg.f64 M))","(+.f64 (cos.f64 (neg.f64 M)) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m))))))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 (+.f64 n m) 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M))","(+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m)))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (+.f64 (*.f64 1/48 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 (pow.f64 K 3) (pow.f64 m 3)))) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 n 3) (*.f64 (pow.f64 K 3) (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 3))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2))))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(pow.f64 (-.f64 (*.f64 1/2 n) M) 2)","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (pow.f64 (-.f64 (*.f64 1/2 n) M) 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(*.f64 1/4 (pow.f64 m 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(*.f64 1/4 (pow.f64 m 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(pow.f64 (-.f64 (*.f64 1/2 m) M) 2)","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (*.f64 n (-.f64 (*.f64 1/2 m) M)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(*.f64 1/4 (pow.f64 n 2))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(*.f64 1/4 (pow.f64 n 2))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(*.f64 1/4 (pow.f64 (+.f64 n m) 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (*.f64 1/4 (pow.f64 (+.f64 n m) 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(pow.f64 M 2)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(pow.f64 M 2)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 n m))","(*.f64 n K)","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K m)","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K m)","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K m)","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 n K)","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 n K)","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 -1 M)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(*.f64 1/2 (*.f64 K (+.f64 n m)))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(*.f64 1/2 (*.f64 K (+.f64 n m)))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(-.f64 (*.f64 1/2 (*.f64 n K)) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(*.f64 1/2 (*.f64 K m))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(*.f64 1/2 (*.f64 K m))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (*.f64 1/2 (*.f64 K m)) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(*.f64 1/2 (*.f64 n K))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(*.f64 1/2 (*.f64 n K))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(*.f64 1/2 (*.f64 K (+.f64 n m)))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(*.f64 -1 M)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(*.f64 -1 M)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (cos.f64 (neg.f64 M)) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))","(fma.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 m n))) -1/2 (cos.f64 M))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m))))))","(+.f64 (cos.f64 M) (fma.f64 -1/8 (*.f64 (cos.f64 M) (pow.f64 (*.f64 K (+.f64 m n)) 2)) (*.f64 (*.f64 -1/2 K) (*.f64 (sin.f64 (neg.f64 M)) (+.f64 m n)))))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 (+.f64 n m) 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))))","(+.f64 (cos.f64 M) (fma.f64 1/48 (pow.f64 (*.f64 K (*.f64 (cbrt.f64 (sin.f64 (neg.f64 M))) (+.f64 m n))) 3) (fma.f64 -1/8 (*.f64 (cos.f64 M) (pow.f64 (*.f64 K (+.f64 m n)) 2)) (*.f64 (*.f64 -1/2 K) (*.f64 (sin.f64 (neg.f64 M)) (+.f64 m n))))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M))","(cos.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M)))","(+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))","(fma.f64 (*.f64 (sin.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M))) (*.f64 K m)) -1/2 (cos.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m)))))","(fma.f64 (*.f64 -1/8 (*.f64 K K)) (*.f64 (cos.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M))) (*.f64 m m)) (fma.f64 (*.f64 (sin.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M))) (*.f64 K m)) -1/2 (cos.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M)))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (+.f64 (*.f64 1/48 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 (pow.f64 K 3) (pow.f64 m 3)))) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))))","(+.f64 (fma.f64 (*.f64 -1/8 (*.f64 K K)) (*.f64 (cos.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M))) (*.f64 m m)) (cos.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M)))) (fma.f64 1/48 (*.f64 (sin.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M))) (pow.f64 (*.f64 K m) 3)) (*.f64 (*.f64 -1/2 (sin.f64 (fma.f64 1/2 (*.f64 n K) (neg.f64 M)))) (*.f64 K m))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 n (*.f64 -1 m))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (fma.f64 -1/8 (*.f64 (*.f64 n n) (*.f64 (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))) (*.f64 K K))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 n 3) (*.f64 (pow.f64 K 3) (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))))","(fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (fma.f64 -1/8 (*.f64 (*.f64 n n) (*.f64 (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))) (*.f64 K K))) (fma.f64 1/48 (*.f64 (pow.f64 (*.f64 n K) 3) (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (-.f64 m (*.f64 -1 n))) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))","(cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))","(fma.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) M (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2)))))","(fma.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) M (fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (*.f64 M M)) -1/2 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 3))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2))))))","(+.f64 (fma.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) M (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2))) (fma.f64 -1/6 (*.f64 (sin.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2)) (pow.f64 M 3)) (*.f64 (*.f64 -1/2 (cos.f64 (*.f64 (*.f64 K (+.f64 m n)) 1/2))) (*.f64 M M))))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 n m)) 1/2 (*.f64 -1 M)))","(cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M)))","(pow.f64 (-.f64 (*.f64 1/2 n) M) 2)","(pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (pow.f64 (-.f64 (*.f64 1/2 n) M) 2))","(*.f64 (fma.f64 1/2 n (neg.f64 M)) (+.f64 m (fma.f64 1/2 n (neg.f64 M))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (fma.f64 1/2 n (neg.f64 M)) (+.f64 m (fma.f64 1/2 n (neg.f64 M)))) (*.f64 1/4 (*.f64 m m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (fma.f64 1/2 n (neg.f64 M)) (+.f64 m (fma.f64 1/2 n (neg.f64 M)))) (*.f64 1/4 (*.f64 m m)))","(*.f64 1/4 (pow.f64 m 2))","(*.f64 1/4 (*.f64 m m))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(fma.f64 m (fma.f64 1/2 n (neg.f64 M)) (*.f64 1/4 (*.f64 m m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (fma.f64 1/2 n (neg.f64 M)) (+.f64 m (fma.f64 1/2 n (neg.f64 M)))) (*.f64 1/4 (*.f64 m m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (fma.f64 1/2 n (neg.f64 M)) (+.f64 m (fma.f64 1/2 n (neg.f64 M)))) (*.f64 1/4 (*.f64 m m)))","(*.f64 1/4 (pow.f64 m 2))","(*.f64 1/4 (*.f64 m m))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(fma.f64 m (fma.f64 1/2 n (neg.f64 M)) (*.f64 1/4 (*.f64 m m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (fma.f64 1/2 n (neg.f64 M)) (+.f64 m (fma.f64 1/2 n (neg.f64 M)))) (*.f64 1/4 (*.f64 m m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (fma.f64 1/2 n (neg.f64 M)) (+.f64 m (fma.f64 1/2 n (neg.f64 M)))) (*.f64 1/4 (*.f64 m m)))","(pow.f64 (-.f64 (*.f64 1/2 m) M) 2)","(pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2)","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (*.f64 n (-.f64 (*.f64 1/2 m) M)))","(*.f64 (fma.f64 1/2 m (neg.f64 M)) (+.f64 (fma.f64 1/2 m (neg.f64 M)) n))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (*.f64 (fma.f64 1/2 m (neg.f64 M)) (+.f64 (fma.f64 1/2 m (neg.f64 M)) n)) (*.f64 1/4 (*.f64 n n)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (*.f64 (fma.f64 1/2 m (neg.f64 M)) (+.f64 (fma.f64 1/2 m (neg.f64 M)) n)) (*.f64 1/4 (*.f64 n n)))","(*.f64 1/4 (pow.f64 n 2))","(*.f64 1/4 (*.f64 n n))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(fma.f64 (fma.f64 1/2 m (neg.f64 M)) n (*.f64 1/4 (*.f64 n n)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (*.f64 (fma.f64 1/2 m (neg.f64 M)) (+.f64 (fma.f64 1/2 m (neg.f64 M)) n)) (*.f64 1/4 (*.f64 n n)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (*.f64 (fma.f64 1/2 m (neg.f64 M)) (+.f64 (fma.f64 1/2 m (neg.f64 M)) n)) (*.f64 1/4 (*.f64 n n)))","(*.f64 1/4 (pow.f64 n 2))","(*.f64 1/4 (*.f64 n n))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(fma.f64 (fma.f64 1/2 m (neg.f64 M)) n (*.f64 1/4 (*.f64 n n)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (*.f64 (fma.f64 1/2 m (neg.f64 M)) (+.f64 (fma.f64 1/2 m (neg.f64 M)) n)) (*.f64 1/4 (*.f64 n n)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (*.f64 (fma.f64 1/2 m (neg.f64 M)) (+.f64 (fma.f64 1/2 m (neg.f64 M)) n)) (*.f64 1/4 (*.f64 n n)))","(*.f64 1/4 (pow.f64 (+.f64 n m) 2))","(*.f64 1/4 (pow.f64 (+.f64 m n) 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (*.f64 1/4 (pow.f64 (+.f64 n m) 2)))","(fma.f64 1/4 (pow.f64 (+.f64 m n) 2) (neg.f64 (*.f64 (+.f64 m n) M)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 M (+.f64 M (neg.f64 (+.f64 m n)))) (*.f64 1/4 (pow.f64 (+.f64 m n) 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 M (+.f64 M (neg.f64 (+.f64 m n)))) (*.f64 1/4 (pow.f64 (+.f64 m n) 2)))","(pow.f64 M 2)","(*.f64 M M)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(*.f64 M (+.f64 M (neg.f64 (+.f64 m n))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 M (+.f64 M (neg.f64 (+.f64 m n)))) (*.f64 1/4 (pow.f64 (+.f64 m n) 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 M (+.f64 M (neg.f64 (+.f64 m n)))) (*.f64 1/4 (pow.f64 (+.f64 m n) 2)))","(pow.f64 M 2)","(*.f64 M M)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(*.f64 M (+.f64 M (neg.f64 (+.f64 m n))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 M (+.f64 M (neg.f64 (+.f64 m n)))) (*.f64 1/4 (pow.f64 (+.f64 m n) 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 M (+.f64 M (neg.f64 (+.f64 m n)))) (*.f64 1/4 (pow.f64 (+.f64 m n) 2)))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 K (+.f64 n m))","(*.f64 K (+.f64 m n))","(*.f64 n K)","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(*.f64 K m)","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(*.f64 K m)","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(*.f64 K m)","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(*.f64 n K)","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(*.f64 n K)","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(+.f64 (*.f64 n K) (*.f64 K m))","(*.f64 K (+.f64 m n))","(*.f64 -1 M)","(neg.f64 M)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 1/2 (*.f64 K (+.f64 n m)))","(*.f64 (*.f64 K (+.f64 m n)) 1/2)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 1/2 (*.f64 K (+.f64 n m)))","(*.f64 (*.f64 K (+.f64 m n)) 1/2)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (*.f64 1/2 (*.f64 n K)) M)","(fma.f64 1/2 (*.f64 n K) (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 1/2 (*.f64 K m))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 1/2 (*.f64 K m))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (*.f64 1/2 (*.f64 K m)) M)","(fma.f64 1/2 (*.f64 K m) (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 1/2 (*.f64 n K))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 1/2 (*.f64 n K))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 1/2 (*.f64 n K))) M)","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 1/2 (*.f64 K (+.f64 n m)))","(*.f64 (*.f64 K (+.f64 m n)) 1/2)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 -1 M)","(neg.f64 M)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(*.f64 -1 M)","(neg.f64 M)","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))","(+.f64 (*.f64 -1 M) (*.f64 1/2 (*.f64 K (+.f64 n m))))","(fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))"]],"time":522.8330078125,"type":"simplify"},{"compiler":[[7955,3243]],"time":63.948974609375,"type":"eval"},{"alts":[["(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","next",0.8951957840018394],["(*.f64 (cos.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",13.698977164630996],["(*.f64 (fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",12.957680866998759],["(*.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",8.689688813228463]],"compiler":[[25,18],[36,24],[45,28],[29,21],[25,18],[36,24],[45,28],[29,21]],"count":[[231,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[230,4],"picked":[1,0]}],"min-error":[0.8394132314572593],"time":98.4501953125,"type":"prune"},{"compiler":[[100,37]],"locations":[["(-.f64 (fabs.f64 (-.f64 n m)) l)",0.00390625,true],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))",0.00390625,true],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)",0.02734375,false]],"time":21.052978515625,"type":"localize"},{"count":[[2,68]],"series":[["(-.f64 (fabs.f64 (-.f64 n m)) l)","l","-inf",0.15380859375],["(-.f64 (fabs.f64 (-.f64 n m)) l)","l","inf",0.159912109375],["(-.f64 (fabs.f64 (-.f64 n m)) l)","l","0",0.18798828125],["(-.f64 (fabs.f64 (-.f64 n m)) l)","m","-inf",0.1689453125],["(-.f64 (fabs.f64 (-.f64 n m)) l)","m","inf",0.18798828125],["(-.f64 (fabs.f64 (-.f64 n m)) l)","m","0",0.155029296875],["(-.f64 (fabs.f64 (-.f64 n m)) l)","n","-inf",0.177978515625],["(-.f64 (fabs.f64 (-.f64 n m)) l)","n","inf",0.180908203125],["(-.f64 (fabs.f64 (-.f64 n m)) l)","n","0",0.164794921875],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","M","-inf",0.239013671875],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","M","inf",0.218994140625],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","M","0",0.286865234375],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","l","-inf",0.212158203125],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","l","inf",0.289794921875],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","l","0",0.43505859375],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","m","-inf",0.291015625],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","m","inf",0.243896484375],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","m","0",0.29296875],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","n","-inf",0.43017578125],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","n","inf",0.278076171875],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","n","0",0.3779296875]],"time":5.470947265625,"type":"series"},{"count":[[2,115]],"inputs":[["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))","(-.f64 (fabs.f64 (-.f64 n m)) l)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 0) (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) (*.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))) (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) (*.f64 0 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fabs.f64 (-.f64 m n)) (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (fabs.f64 (-.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (fabs.f64 (-.f64 m n))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 l) (+.f64 (fabs.f64 (-.f64 m n)) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 l) (-.f64 (fabs.f64 (-.f64 m n)) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (-.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2) (fabs.f64 (-.f64 m n)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (-.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2) (fabs.f64 (-.f64 m n)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fabs.f64 (-.f64 m n)) (*.f64 (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (*.f64 (-.f64 l (fabs.f64 (-.f64 m n))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2) (fabs.f64 (-.f64 m n))) -1) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2) (fabs.f64 (-.f64 m n)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (*.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) (*.f64 (+.f64 n m) 1/2))) (*.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) (neg.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (*.f64 (*.f64 (+.f64 n m) 1/2) (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)))) (*.f64 (neg.f64 M) (fma.f64 (+.f64 n m) 1/2 (neg.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) 0) (-.f64 l (fabs.f64 (-.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (fabs.f64 (-.f64 m n))) l)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 0) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (fabs.f64 (-.f64 m n)) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) l)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (-.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2) (fabs.f64 (-.f64 m n)))) l)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))) (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 2)) (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))) (pow.f64 (cbrt.f64 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 2)) (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 4)) (cbrt.f64 (*.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))) (-.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) (neg.f64 (pow.f64 (cbrt.f64 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)) (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 2)) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fabs.f64 (-.f64 m n))) (cbrt.f64 (pow.f64 (-.f64 n m) 2)) (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (fabs.f64 (-.f64 m n)) l) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fabs.f64 (-.f64 m n)) (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 l (fabs.f64 (-.f64 m n))) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 1 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 2)) (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)) (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (neg.f64 (*.f64 (+.f64 n m) 1/2)) M) (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) (+.f64 (neg.f64 (*.f64 (+.f64 n m) 1/2)) M) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 4)) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 4))) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fabs.f64 (-.f64 m n)) 1 (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fabs.f64 (cbrt.f64 (-.f64 n m))) (cbrt.f64 (pow.f64 (-.f64 n m) 2)) (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 n m) 2)) (cbrt.f64 (fabs.f64 (-.f64 m n))) (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fabs.f64 (-.f64 m n))) (-.f64 (neg.f64 l) (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2) (-.f64 (fabs.f64 (-.f64 m n)) l))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fabs.f64 (-.f64 m n)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 l) (fabs.f64 (-.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 0) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (*.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (fabs.f64 (-.f64 m n)) l)) (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (*.f64 0 (-.f64 (fabs.f64 (-.f64 m n)) l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 l) (*.f64 (neg.f64 (fabs.f64 (-.f64 m n))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 l (fabs.f64 (-.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 l) (neg.f64 (fabs.f64 (-.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fabs.f64 (-.f64 m n)) l)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fabs.f64 (-.f64 m n)) 0) l)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)) (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 2)) (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 l (fabs.f64 (-.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (fabs.f64 (-.f64 m n))) (neg.f64 l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 l (fabs.f64 (-.f64 m n))))) (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 l (fabs.f64 (-.f64 m n)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (-.f64 n m) 2)) (+.f64 (cbrt.f64 (*.f64 l l)) (cbrt.f64 (*.f64 (fabs.f64 (-.f64 m n)) l)))) (-.f64 (cbrt.f64 (fabs.f64 (-.f64 m n))) (cbrt.f64 l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fabs.f64 (-.f64 m n)) l)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 l (fabs.f64 (-.f64 m n))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 l (fabs.f64 (-.f64 m n))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fabs.f64 (-.f64 m n))) (cbrt.f64 (pow.f64 (-.f64 n m) 2)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fabs.f64 (-.f64 m n)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 l)) (cbrt.f64 (*.f64 l l)) (fabs.f64 (-.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 l) (neg.f64 (cbrt.f64 (*.f64 l l))) (fabs.f64 (-.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 l) (fabs.f64 (-.f64 m n)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fabs.f64 (-.f64 m n)) 1 (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fabs.f64 (cbrt.f64 (-.f64 n m))) (cbrt.f64 (pow.f64 (-.f64 n m) 2)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 n m) 2)) (cbrt.f64 (fabs.f64 (-.f64 m n))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fabs.f64 (-.f64 m n))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (fabs.f64 (-.f64 m n)) l))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 l (fabs.f64 (-.f64 m n)))))))"]],"rules":[["egg-rr",45],["egg-rr",70]],"time":31.905029296875,"type":"rewrite"},{"count":[[183,162]],"inputs":[["(-.f64 (fabs.f64 (-.f64 n m)) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (fabs.f64 (-.f64 n m))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(*.f64 -1/4 (pow.f64 n 2))","(+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (*.f64 -1/4 (pow.f64 n 2)))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(*.f64 -1/4 (pow.f64 n 2))","(+.f64 (*.f64 -1/4 (pow.f64 n 2)) (*.f64 -1 (*.f64 n (-.f64 (*.f64 1/2 m) M))))","(-.f64 (+.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (*.f64 -1 (*.f64 n (-.f64 (*.f64 1/2 m) M))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (+.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (*.f64 -1 (*.f64 n (-.f64 (*.f64 1/2 m) M))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fabs.f64 (-.f64 n m)) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(*.f64 -1/4 (pow.f64 m 2))","(+.f64 (*.f64 -1/4 (pow.f64 m 2)) (*.f64 (-.f64 M (*.f64 1/2 n)) m))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(*.f64 -1/4 (pow.f64 m 2))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/2 n) M) m)) (*.f64 -1/4 (pow.f64 m 2)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/2 n) M) m)) (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (fabs.f64 (+.f64 n (*.f64 -1 m))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/2 n) M) m)) (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (fabs.f64 (+.f64 n (*.f64 -1 m))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (fabs.f64 (-.f64 n m)) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(*.f64 -1 l)","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(*.f64 -1 l)","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (fabs.f64 (-.f64 n m)) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m))) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l))","(*.f64 -1 (pow.f64 M 2))","(+.f64 (*.f64 -1 (pow.f64 M 2)) (*.f64 (+.f64 n m) M))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(*.f64 -1 (pow.f64 M 2))","(+.f64 (*.f64 -1 (pow.f64 M 2)) (*.f64 (+.f64 n m) M))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(fabs.f64 (-.f64 n m))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(*.f64 -1 l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(*.f64 -1 l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (fabs.f64 (-.f64 n m)) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fabs.f64 (-.f64 n m)) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (fabs.f64 (-.f64 n m))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 m)) n (fabs.f64 (-.f64 n m))) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 m)) n (fma.f64 -1/4 (*.f64 n n) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 m)) n (fma.f64 -1/4 (*.f64 n n) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(*.f64 -1/4 (pow.f64 n 2))","(*.f64 -1/4 (*.f64 n n))","(+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (*.f64 -1/4 (pow.f64 n 2)))","(fma.f64 (+.f64 M (*.f64 -1/2 m)) n (*.f64 -1/4 (*.f64 n n)))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 m)) n (fma.f64 -1/4 (*.f64 n n) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 m)) n) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 m)) n (fma.f64 -1/4 (*.f64 n n) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(*.f64 -1/4 (pow.f64 n 2))","(*.f64 -1/4 (*.f64 n n))","(+.f64 (*.f64 -1/4 (pow.f64 n 2)) (*.f64 -1 (*.f64 n (-.f64 (*.f64 1/2 m) M))))","(fma.f64 (+.f64 M (*.f64 -1/2 m)) n (*.f64 -1/4 (*.f64 n n)))","(-.f64 (+.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (*.f64 -1 (*.f64 n (-.f64 (*.f64 1/2 m) M))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 m)) n (fma.f64 -1/4 (*.f64 n n) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(-.f64 (+.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) (+.f64 (*.f64 -1/4 (pow.f64 n 2)) (*.f64 -1 (*.f64 n (-.f64 (*.f64 1/2 m) M))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 m)) n (fma.f64 -1/4 (*.f64 n n) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (fma.f64 1/2 m (neg.f64 M)) 2) l))","(-.f64 (fabs.f64 (-.f64 n m)) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (fma.f64 (+.f64 M (*.f64 -1/2 n)) m (fabs.f64 (-.f64 n m))) (+.f64 l (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (fma.f64 -1/4 (*.f64 m m) (fma.f64 (+.f64 M (*.f64 -1/2 n)) m (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (fma.f64 -1/4 (*.f64 m m) (fma.f64 (+.f64 M (*.f64 -1/2 n)) m (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)))","(*.f64 -1/4 (pow.f64 m 2))","(*.f64 -1/4 (*.f64 m m))","(+.f64 (*.f64 -1/4 (pow.f64 m 2)) (*.f64 (-.f64 M (*.f64 1/2 n)) m))","(fma.f64 -1/4 (*.f64 m m) (*.f64 (+.f64 M (*.f64 -1/2 n)) m))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(-.f64 (fma.f64 -1/4 (*.f64 m m) (fma.f64 (+.f64 M (*.f64 -1/2 n)) m (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)))","(-.f64 (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (+.f64 (*.f64 (-.f64 M (*.f64 1/2 n)) m) (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(-.f64 (fma.f64 -1/4 (*.f64 m m) (fma.f64 (+.f64 M (*.f64 -1/2 n)) m (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)))","(*.f64 -1/4 (pow.f64 m 2))","(*.f64 -1/4 (*.f64 m m))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/2 n) M) m)) (*.f64 -1/4 (pow.f64 m 2)))","(fma.f64 -1/4 (*.f64 m m) (*.f64 (+.f64 M (*.f64 -1/2 n)) m))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/2 n) M) m)) (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (fabs.f64 (+.f64 n (*.f64 -1 m))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (fma.f64 -1/4 (*.f64 m m) (fma.f64 (+.f64 M (*.f64 -1/2 n)) m (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 1/2 n) M) m)) (+.f64 (*.f64 -1/4 (pow.f64 m 2)) (fabs.f64 (+.f64 n (*.f64 -1 m))))) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l))","(-.f64 (fma.f64 -1/4 (*.f64 m m) (fma.f64 (+.f64 M (*.f64 -1/2 n)) m (fabs.f64 (-.f64 n m)))) (+.f64 l (pow.f64 (fma.f64 1/2 n (neg.f64 M)) 2)))","(-.f64 (fabs.f64 (-.f64 n m)) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (fabs.f64 (-.f64 n m)) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(*.f64 -1 l)","(neg.f64 l)","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(*.f64 -1 l)","(neg.f64 l)","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m))) (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2))","(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 1/2 (+.f64 n m) (neg.f64 M)) 2))","(-.f64 (fabs.f64 (-.f64 n m)) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (fabs.f64 (-.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(-.f64 (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m))) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l))","(-.f64 (fma.f64 (+.f64 n m) M (fabs.f64 (-.f64 n m))) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l))","(-.f64 (-.f64 (fma.f64 (+.f64 n m) M (fabs.f64 (-.f64 n m))) (*.f64 M M)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l))","(-.f64 (-.f64 (fma.f64 (+.f64 n m) M (fabs.f64 (-.f64 n m))) (*.f64 M M)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(*.f64 -1 (pow.f64 M 2))","(neg.f64 (*.f64 M M))","(+.f64 (*.f64 -1 (pow.f64 M 2)) (*.f64 (+.f64 n m) M))","(fma.f64 (+.f64 n m) M (neg.f64 (*.f64 M M)))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (-.f64 (fma.f64 (+.f64 n m) M (fabs.f64 (-.f64 n m))) (*.f64 M M)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (-.f64 (fma.f64 (+.f64 n m) M (fabs.f64 (-.f64 n m))) (*.f64 M M)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(*.f64 -1 (pow.f64 M 2))","(neg.f64 (*.f64 M M))","(+.f64 (*.f64 -1 (pow.f64 M 2)) (*.f64 (+.f64 n m) M))","(fma.f64 (+.f64 n m) M (neg.f64 (*.f64 M M)))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (-.f64 (fma.f64 (+.f64 n m) M (fabs.f64 (-.f64 n m))) (*.f64 M M)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 M 2)) (+.f64 (*.f64 (+.f64 n m) M) (fabs.f64 (-.f64 n m)))) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2))))","(-.f64 (-.f64 (fma.f64 (+.f64 n m) M (fabs.f64 (-.f64 n m))) (*.f64 M M)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l))","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(-.f64 (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(-.f64 (fabs.f64 (+.f64 n (*.f64 -1 m))) l)","(-.f64 (fabs.f64 (-.f64 n m)) l)","(fabs.f64 (-.f64 n m))","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(*.f64 -1 l)","(neg.f64 l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(*.f64 -1 l)","(neg.f64 l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)","(+.f64 (*.f64 -1 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fabs.f64 (-.f64 n m)) l)"]],"time":200.7900390625,"type":"simplify"},{"compiler":[[5465,2361]],"time":46.81298828125,"type":"eval"},{"alts":[["(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","done",0.8951957840018394],["(*.f64 (cos.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",13.698977164630996],["(*.f64 (fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",12.957680866998759],["(*.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","next",8.689688813228463]],"compiler":[[25,18],[36,24],[45,28],[29,21],[36,24],[45,28],[29,21]],"count":[[229,4]],"kept":[{"done":[0,0],"fresh":[3,3],"new":[225,0],"picked":[1,1]}],"min-error":[0.8394132314572593],"time":102.36279296875,"type":"prune"},{"compiler":[[117,45]],"locations":[["(-.f64 (fabs.f64 (-.f64 n m)) l)",0.00390625,false],["(-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))",0.00390625,false],["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)",0.02734375,false],["(cos.f64 (*.f64 1/2 (*.f64 n K)))",30.017326471156796,true]],"time":25.4560546875,"type":"localize"},{"count":[[1,8]],"series":[["(cos.f64 (*.f64 1/2 (*.f64 n K)))","K","-inf",0.173095703125],["(cos.f64 (*.f64 1/2 (*.f64 n K)))","K","inf",0.204833984375],["(cos.f64 (*.f64 1/2 (*.f64 n K)))","K","0",0.305908203125],["(cos.f64 (*.f64 1/2 (*.f64 n K)))","n","-inf",0.2041015625],["(cos.f64 (*.f64 1/2 (*.f64 n K)))","n","inf",0.188232421875],["(cos.f64 (*.f64 1/2 (*.f64 n K)))","n","0",0.51318359375]],"time":1.6630859375,"type":"series"},{"count":[[1,22]],"inputs":[["(cos.f64 (*.f64 1/2 (*.f64 n K)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 1/2 (*.f64 n K))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) (cos.f64 0)) (*.f64 (sin.f64 (*.f64 1/2 (*.f64 n K))) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 (*.f64 1/2 (*.f64 n K)))) (*.f64 (sin.f64 0) (sin.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3) (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))) (neg.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/2 (*.f64 n K))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/2 (*.f64 n K)))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 -1/2 (*.f64 n K)))))))"]],"rules":[["egg-rr",22]],"time":35.60888671875,"type":"rewrite"},{"count":[[30,29]],"inputs":[["1","(+.f64 1 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4)))))","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (+.f64 (*.f64 -1/46080 (*.f64 (pow.f64 n 6) (pow.f64 K 6))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4))))))","1","(+.f64 1 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4)))))","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (+.f64 (*.f64 -1/46080 (*.f64 (pow.f64 n 6) (pow.f64 K 6))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(fma.f64 -1/8 (pow.f64 (*.f64 n K) 2) 1)","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4)))))","(+.f64 (fma.f64 -1/8 (pow.f64 (*.f64 n K) 2) 1) (*.f64 1/384 (pow.f64 (*.f64 n K) 4)))","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (+.f64 (*.f64 -1/46080 (*.f64 (pow.f64 n 6) (pow.f64 K 6))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4))))))","(+.f64 (fma.f64 -1/8 (pow.f64 (*.f64 n K) 2) 1) (fma.f64 -1/46080 (pow.f64 (*.f64 n K) 6) (*.f64 1/384 (pow.f64 (*.f64 n K) 4))))","1","(+.f64 1 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(fma.f64 -1/8 (pow.f64 (*.f64 n K) 2) 1)","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4)))))","(+.f64 (fma.f64 -1/8 (pow.f64 (*.f64 n K) 2) 1) (*.f64 1/384 (pow.f64 (*.f64 n K) 4)))","(+.f64 1 (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (pow.f64 K 2))) (+.f64 (*.f64 -1/46080 (*.f64 (pow.f64 n 6) (pow.f64 K 6))) (*.f64 1/384 (*.f64 (pow.f64 n 4) (pow.f64 K 4))))))","(+.f64 (fma.f64 -1/8 (pow.f64 (*.f64 n K) 2) 1) (fma.f64 -1/46080 (pow.f64 (*.f64 n K) 6) (*.f64 1/384 (pow.f64 (*.f64 n K) 4))))"]],"time":48.297119140625,"type":"simplify"},{"compiler":[[7228,3469]],"time":63.674072265625,"type":"eval"},{"alts":[["(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","done",0.8951957840018394],["(*.f64 (cos.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",13.698977164630996],["(*.f64 (fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",12.957680866998759],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","next",8.689688813228463]],"compiler":[[25,18],[36,24],[45,28],[32,24],[36,24],[45,28],[32,24]],"count":[[258,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[254,1],"picked":[1,0]}],"min-error":[0.8394132314572593],"time":117.626953125,"type":"prune"},{"compiler":[[137,59]],"locations":[["(pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2)",0.02734375,false],["(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))",0.07421875,true],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)",0.39298637698974626,true],["(cos.f64 (*.f64 1/2 (*.f64 n K)))",30.017326471156796,false]],"time":31.488037109375,"type":"localize"},{"count":[[2,48]],"series":[["(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))","K","-inf",0.177001953125],["(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))","K","inf",0.15283203125],["(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))","K","0",0.302001953125],["(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))","n","-inf",0.154052734375],["(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))","n","inf",0.2041015625],["(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))","n","0",0.2919921875],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)","K","-inf",1.369140625],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)","K","inf",2.18212890625],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)","K","0",1.31591796875],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)","n","-inf",2.444091796875],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)","n","inf",1.595947265625],["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)","n","0",1.47900390625]],"time":11.875,"type":"series"},{"count":[[2,46]],"inputs":[["(pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)","(cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 1/2 (*.f64 n K))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) (cos.f64 0)) (*.f64 (sin.f64 (*.f64 1/2 (*.f64 n K))) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 (*.f64 1/2 (*.f64 n K)))) (*.f64 (sin.f64 0) (sin.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))) (pow.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3) 4/3) (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3) (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 7/3) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3)) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))) (neg.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/2 (*.f64 n K))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 1/2 (*.f64 n K)))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (*.f64 -1/2 (*.f64 n K)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3)) (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))) (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))) (cbrt.f64 (pow.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))) (neg.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))))))))"]],"rules":[["egg-rr",20],["egg-rr",26]],"time":45.93798828125,"type":"rewrite"},{"count":[[94,72]],"inputs":[["1","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (pow.f64 K 2)) (*.f64 -1/24 (pow.f64 K 2))) (pow.f64 n 2)) 1)","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (pow.f64 K 2)) (*.f64 -1/24 (pow.f64 K 2))) (pow.f64 n 2)) (+.f64 1 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/576 (pow.f64 K 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (*.f64 1/288 (pow.f64 K 4))))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (pow.f64 K 2)) (*.f64 -1/24 (pow.f64 K 2))) (pow.f64 n 2)) (+.f64 1 (+.f64 (*.f64 (pow.f64 n 6) (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 K 6)) (+.f64 (*.f64 -1/13824 (pow.f64 K 6)) (*.f64 -1/12 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))))))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 1/576 (pow.f64 K 4)) (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))))) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 K 6)) (+.f64 (*.f64 -1/13824 (pow.f64 K 6)) (*.f64 -1/12 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))))))))))) (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/576 (pow.f64 K 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (*.f64 1/288 (pow.f64 K 4)))))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","1","(+.f64 1 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/24 (pow.f64 n 2)) (*.f64 -1/12 (pow.f64 n 2)))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/576 (pow.f64 n 4)) (*.f64 1/288 (pow.f64 n 4))))) (pow.f64 K 4)) (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/24 (pow.f64 n 2)) (*.f64 -1/12 (pow.f64 n 2))))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 K 6) (+.f64 (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/13824 (pow.f64 n 6))))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/13824 (pow.f64 n 6))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (*.f64 1/576 (pow.f64 n 4))))))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/576 (pow.f64 n 4)) (*.f64 1/288 (pow.f64 n 4))))) (pow.f64 K 4)) (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/24 (pow.f64 n 2)) (*.f64 -1/12 (pow.f64 n 2)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","1","(+.f64 1 (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 n 4) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 n 6) (-.f64 (*.f64 -1/46080 (pow.f64 K 6)) (+.f64 (*.f64 -1/13824 (pow.f64 K 6)) (*.f64 -1/12 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 n 4) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","1","(+.f64 1 (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 K 4) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 K 4) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 K 6) (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/13824 (pow.f64 n 6)))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (pow.f64 K 2)) (*.f64 -1/24 (pow.f64 K 2))) (pow.f64 n 2)) 1)","(fma.f64 (*.f64 (*.f64 K K) -1/8) (*.f64 n n) 1)","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (pow.f64 K 2)) (*.f64 -1/24 (pow.f64 K 2))) (pow.f64 n 2)) (+.f64 1 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/576 (pow.f64 K 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (*.f64 1/288 (pow.f64 K 4))))))))","(+.f64 (fma.f64 (*.f64 (*.f64 K K) -1/8) (*.f64 n n) 1) (*.f64 (pow.f64 n 4) (fma.f64 1/576 (pow.f64 K 4) (+.f64 (*.f64 (*.f64 (pow.f64 K 4) -1/384) (+.f64 1/3 2/3)) (*.f64 1/288 (pow.f64 K 4))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (pow.f64 K 2)) (*.f64 -1/24 (pow.f64 K 2))) (pow.f64 n 2)) (+.f64 1 (+.f64 (*.f64 (pow.f64 n 6) (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 K 6)) (+.f64 (*.f64 -1/13824 (pow.f64 K 6)) (*.f64 -1/12 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))))))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))) (+.f64 (*.f64 -1/24 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 1/576 (pow.f64 K 4)) (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))))) (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 K 6)) (+.f64 (*.f64 -1/13824 (pow.f64 K 6)) (*.f64 -1/12 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))))))))))) (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/576 (pow.f64 K 4)) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4)))) (*.f64 1/288 (pow.f64 K 4)))))))))","(+.f64 (fma.f64 (*.f64 (*.f64 K K) -1/8) (*.f64 n n) 1) (fma.f64 (pow.f64 n 6) (fma.f64 2/3 (-.f64 (*.f64 (pow.f64 K 6) (-.f64 -1/46080 -1/13824)) (*.f64 -1/12 (*.f64 (*.f64 K K) (*.f64 (pow.f64 K 4) -1/384)))) (fma.f64 -1/18 (*.f64 (*.f64 K K) (*.f64 (pow.f64 K 4) -1/384)) (fma.f64 -1/24 (*.f64 (*.f64 K K) (fma.f64 1/576 (pow.f64 K 4) (*.f64 2/3 (*.f64 (pow.f64 K 4) -1/384)))) (*.f64 1/3 (-.f64 (*.f64 (pow.f64 K 6) (-.f64 -1/46080 -1/13824)) (*.f64 -1/12 (*.f64 (*.f64 K K) (*.f64 (pow.f64 K 4) -1/384)))))))) (*.f64 (pow.f64 n 4) (fma.f64 1/576 (pow.f64 K 4) (+.f64 (*.f64 (*.f64 (pow.f64 K 4) -1/384) (+.f64 1/3 2/3)) (*.f64 1/288 (pow.f64 K 4)))))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","1","(+.f64 1 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/24 (pow.f64 n 2)) (*.f64 -1/12 (pow.f64 n 2)))))","(+.f64 1 (*.f64 (*.f64 K K) (*.f64 (*.f64 n n) -1/8)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/576 (pow.f64 n 4)) (*.f64 1/288 (pow.f64 n 4))))) (pow.f64 K 4)) (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/24 (pow.f64 n 2)) (*.f64 -1/12 (pow.f64 n 2))))))","(+.f64 1 (fma.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n 4) -1/384) (+.f64 2/3 1/3)) (*.f64 (pow.f64 n 4) 1/192)) (pow.f64 K 4) (*.f64 (*.f64 K K) (*.f64 (*.f64 n n) -1/8))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 K 6) (+.f64 (*.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/13824 (pow.f64 n 6))))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/13824 (pow.f64 n 6))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (*.f64 1/576 (pow.f64 n 4))))))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4)))) (+.f64 (*.f64 1/576 (pow.f64 n 4)) (*.f64 1/288 (pow.f64 n 4))))) (pow.f64 K 4)) (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/24 (pow.f64 n 2)) (*.f64 -1/12 (pow.f64 n 2)))))))","(+.f64 1 (fma.f64 (pow.f64 K 6) (fma.f64 1/3 (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (fma.f64 -1/12 (*.f64 (*.f64 n n) (*.f64 (pow.f64 n 4) -1/384)) (*.f64 -1/13824 (pow.f64 n 6)))) (fma.f64 -1/18 (*.f64 (*.f64 n n) (*.f64 (pow.f64 n 4) -1/384)) (fma.f64 2/3 (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (fma.f64 -1/12 (*.f64 (*.f64 n n) (*.f64 (pow.f64 n 4) -1/384)) (*.f64 -1/13824 (pow.f64 n 6)))) (*.f64 (*.f64 -1/24 (*.f64 n n)) (fma.f64 2/3 (*.f64 (pow.f64 n 4) -1/384) (*.f64 1/576 (pow.f64 n 4))))))) (fma.f64 (+.f64 (*.f64 (*.f64 (pow.f64 n 4) -1/384) (+.f64 2/3 1/3)) (*.f64 (pow.f64 n 4) 1/192)) (pow.f64 K 4) (*.f64 (*.f64 K K) (*.f64 (*.f64 n n) -1/8)))))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","(*.f64 (pow.f64 1 1/3) (cos.f64 (*.f64 1/2 (*.f64 n K))))","(cos.f64 (*.f64 (*.f64 1/2 n) K))","1","(+.f64 1 (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(+.f64 1 (*.f64 -1/24 (pow.f64 (*.f64 n K) 2)))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 n 4) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2)))))","(+.f64 1 (fma.f64 1/3 (*.f64 (pow.f64 n 4) (*.f64 (pow.f64 K 4) -1/384)) (*.f64 -1/24 (pow.f64 (*.f64 n K) 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 n 6) (-.f64 (*.f64 -1/46080 (pow.f64 K 6)) (+.f64 (*.f64 -1/13824 (pow.f64 K 6)) (*.f64 -1/12 (*.f64 (pow.f64 K 2) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 n 4) (-.f64 (*.f64 1/384 (pow.f64 K 4)) (*.f64 1/192 (pow.f64 K 4))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (pow.f64 n 6) (-.f64 (*.f64 (pow.f64 K 6) (-.f64 -1/46080 -1/13824)) (*.f64 -1/12 (*.f64 (*.f64 K K) (*.f64 (pow.f64 K 4) -1/384))))) (*.f64 (pow.f64 n 4) (*.f64 (pow.f64 K 4) -1/384)))) (+.f64 1 (*.f64 -1/24 (pow.f64 (*.f64 n K) 2))))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","1","(+.f64 1 (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))","(+.f64 1 (*.f64 -1/24 (pow.f64 (*.f64 n K) 2)))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 K 4) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2)))))","(+.f64 1 (fma.f64 1/3 (*.f64 (pow.f64 K 4) (*.f64 (pow.f64 n 4) -1/384)) (*.f64 -1/24 (pow.f64 (*.f64 n K) 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 K 4) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 K 6) (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (+.f64 (*.f64 -1/12 (*.f64 (pow.f64 n 2) (-.f64 (*.f64 1/384 (pow.f64 n 4)) (*.f64 1/192 (pow.f64 n 4))))) (*.f64 -1/13824 (pow.f64 n 6)))))) (*.f64 -1/24 (*.f64 (pow.f64 n 2) (pow.f64 K 2))))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (pow.f64 K 4) (*.f64 (pow.f64 n 4) -1/384)) (*.f64 (pow.f64 K 6) (-.f64 (*.f64 -1/46080 (pow.f64 n 6)) (fma.f64 -1/12 (*.f64 (*.f64 n n) (*.f64 (pow.f64 n 4) -1/384)) (*.f64 -1/13824 (pow.f64 n 6))))))) (+.f64 1 (*.f64 -1/24 (pow.f64 (*.f64 n K) 2))))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))","(pow.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) 1/3)","(cbrt.f64 (cos.f64 (*.f64 (*.f64 1/2 n) K)))"]],"time":179.953857421875,"type":"simplify"},{"compiler":[[6038,3408]],"time":59.31103515625,"type":"eval"},{"alts":[["(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","done",0.8951957840018394],["(*.f64 (cos.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",13.698977164630996],["(*.f64 (fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","fresh",12.957680866998759],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","done",8.689688813228463]],"compiler":[[25,18],[36,24],[45,28],[32,24]],"count":[[168,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[164,0],"picked":[1,1]}],"min-error":[0.8394132314572593],"time":50.859130859375,"type":"prune"},{"accuracy":[0.8951957840018393],"baseline":[0.8951957840018394],"branch":[["K",0.8951957840018394,1],["m",0.8951957840018393,1],["n",0.8951957840018394,1],["M",0.8951957840018394,1],["l",0.8951957840018394,1],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))",0.8951957840018394,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[34,23],[204,100]],"count":[[7,1]],"inputs":[["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/2 (*.f64 n K)))) 3) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","(*.f64 (cos.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) 3)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","(*.f64 (fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M))))) (cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","(*.f64 (cos.f64 (*.f64 1/2 (*.f64 n K))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","(*.f64 (cos.f64 (fma.f64 (*.f64 K (+.f64 m n)) 1/2 (neg.f64 M))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))"]],"link":["."],"name":["Maksimov and Kolovsky, Equation (32)"],"oracle":[13.735615633743437],"outputs":[["(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))"]],"time":24.572998046875,"times":[["K",3.623779296875],["m",3.630859375],["n",3.60791015625],["M",3.778076171875],["l",3.612060546875],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))",2.244873046875]],"type":"regimes"},{"compiler":[[25,18]],"inputs":[["(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 M) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 n m)) l) (pow.f64 (fma.f64 (+.f64 m n) 1/2 (neg.f64 M)) 2))))","(*.f64 (cos.f64 M) (exp.f64 (-.f64 (fabs.f64 (-.f64 m n)) (+.f64 l (pow.f64 (fma.f64 (+.f64 n m) 1/2 (neg.f64 M)) 2)))))"]],"stop":[["fuel",1]],"time":22.52294921875,"type":"simplify"},{"time":0.01904296875,"type":"soundness"},{"compiler":[[25,18]],"remove-preprocessing":[[]],"time":11.828857421875,"type":"end"}]