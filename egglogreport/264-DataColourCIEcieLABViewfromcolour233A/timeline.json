[{"compiler":[[11,10]],"method":["search"],"sampling":[[12,0.9975595474243164,0.0009760856628417969,0.0014643669128417969],[11,0.9975595474243164,0.0019521713256835938,0.00048828125],[10,0.9956073760986328,0.0039043426513671875,0.00048828125],[9,0.9917030334472656,0.007808685302734375,0.00048828125],[8,0.9838943481445313,0.01561737060546875,0.00048828125],[7,0.9682769775390625,0.0312347412109375,0.00048828125],[6,0.937042236328125,0.062469482421875,0.00048828125],[5,0.87457275390625,0.12493896484375,0.00048828125],[4,0.7496337890625,0.2498779296875,0.00048828125],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.580078125,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.125,3],["body",1024,"valid",0.177001953125,2],["body",512,"valid",0.06005859375,1],["body",256,"valid",282.139892578125,8253]],"time":290.1630859375,"type":"sample"},{"compiler":[[10,9]],"inputs":[["0"],["(+.f64 (*.f64 (/.f64 841 108) x) (/.f64 4 29))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (*.f64 (/.f64 841 108) x) (/.f64 4 29))","(fma.f64 841/108 x 4/29)"]],"symmetry":[[]],"time":56.85693359375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (*.f64 (/.f64 841 108) x) (/.f64 4 29))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (/.f64 841 108) x) (/.f64 4 29))","(fma.f64 841/108 x 4/29)"]],"time":23.198974609375,"type":"simplify"},{"compiler":[[14,12]],"time":0.365966796875,"type":"eval"},{"alts":[["(fma.f64 841/108 x 4/29)","next",0.0703125]],"compiler":[[5,4],[5,4]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.0703125],"time":0.81005859375,"type":"prune"},{"compiler":[[8,6]],"locations":[["(fma.f64 841/108 x 4/29)",0.0703125,true]],"time":2.1220703125,"type":"localize"},{"count":[[1,12]],"series":[["(fma.f64 841/108 x 4/29)","x","-inf",0.39306640625],["(fma.f64 841/108 x 4/29)","x","inf",0.3681640625],["(fma.f64 841/108 x 4/29)","x","0",0.349853515625]],"time":1.154052734375,"type":"series"},{"count":[[1,49]],"inputs":[["(fma.f64 841/108 x 4/29)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 841/108 x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 841/108 x 4/29) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 841/108 x) -4/29)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 4/29 (*.f64 -841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (*.f64 -841/108 x) -4/29))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2/3)) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2/3) 2)) (cbrt.f64 (fma.f64 841/108 x 4/29))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 841/108 x 4/29))) (pow.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 841/108 x 4/29)) (pow.f64 (fma.f64 841/108 x 4/29) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2/3) (cbrt.f64 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 -841/108 x) -4/29)) (neg.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (/.f64 1 (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 16/841) (-.f64 (cbrt.f64 (*.f64 707281/11664 (*.f64 x x))) (*.f64 (cbrt.f64 4/29) (cbrt.f64 (*.f64 841/108 x))))) (+.f64 (cbrt.f64 4/29) (cbrt.f64 (*.f64 841/108 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 707281/11664 (*.f64 x x))) (-.f64 (cbrt.f64 16/841) (*.f64 (cbrt.f64 (*.f64 841/108 x)) (cbrt.f64 4/29)))) (+.f64 (cbrt.f64 (*.f64 841/108 x)) (cbrt.f64 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 -841/108 x) -4/29))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 -841/108 x) -4/29) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 841/108 x 4/29) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -64/24389 (neg.f64 (pow.f64 (*.f64 841/108 x) 3))) (/.f64 1 (neg.f64 (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 -64/24389 (neg.f64 (pow.f64 (*.f64 841/108 x) 3)))) (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -64/24389 (neg.f64 (pow.f64 (*.f64 841/108 x) 3))) (neg.f64 (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 -841/108 x) -4/29) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 -64/24389 (neg.f64 (pow.f64 (*.f64 841/108 x) 3)))) (neg.f64 (neg.f64 (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2) (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389))) (cbrt.f64 (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 841/108 x 4/29) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 841/108 x 4/29)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (*.f64 -841/108 x) -4/29))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (neg.f64 (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 841/108 x 4/29) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 841/108 x 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 4/29) (sqrt.f64 4/29) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4/29) (cbrt.f64 16/841) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 4/29)) (neg.f64 (sqrt.f64 4/29)) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 16/841) (cbrt.f64 4/29) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 841/108 x)) (cbrt.f64 (*.f64 707281/11664 (*.f64 x x))) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 841/108 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 594823321/1259712 x)) (pow.f64 x 2/3) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4/29 1 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 841/108 x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 841/108 x) 1 4/29)))))"]],"rules":[["egg-rr",49]],"time":38.08984375,"type":"rewrite"},{"count":[[61,51]],"inputs":[["4/29","(+.f64 4/29 (*.f64 841/108 x))","(+.f64 4/29 (*.f64 841/108 x))","(+.f64 4/29 (*.f64 841/108 x))","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 841/108 x))","(+.f64 4/29 (*.f64 841/108 x))","(+.f64 4/29 (*.f64 841/108 x))","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 841/108 x))","(+.f64 4/29 (*.f64 841/108 x))","(+.f64 4/29 (*.f64 841/108 x))"]],"method":["egg-herbie"],"outputs":[["4/29","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 841/108 x))","(fma.f64 841/108 x 4/29)"]],"time":46.787109375,"type":"simplify"},{"compiler":[[529,445]],"time":10.162841796875,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","fresh",0.21875],["(fma.f64 841/108 x 4/29)","done",0.0703125],["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","next",0.135097509768442],["(/.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))","fresh",18.603553808610656]],"compiler":[[9,8],[5,4],[9,8],[19,16],[9,8],[9,8],[19,16]],"count":[[52,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[51,3],"picked":[1,1]}],"min-error":[0.00390625],"time":9.72216796875,"type":"prune"},{"compiler":[[21,18]],"locations":[["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)",0.12890625,true],["(*.f64 (cbrt.f64 707281/11664) x)",0.2890625,true]],"time":6.322021484375,"type":"localize"},{"count":[[2,12]],"series":[["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","x","-inf",0.287109375],["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","x","inf",0.246826171875],["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","x","0",0.658203125],["(*.f64 (cbrt.f64 707281/11664) x)","x","-inf",0.305908203125],["(*.f64 (cbrt.f64 707281/11664) x)","x","inf",0.54296875],["(*.f64 (cbrt.f64 707281/11664) x)","x","0",1.428955078125]],"time":3.552001953125,"type":"series"},{"count":[[2,66]],"inputs":[["(*.f64 (cbrt.f64 707281/11664) x)","(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 707281/11664) x) (*.f64 (*.f64 (cbrt.f64 707281/11664) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 707281/11664) x) 0) (*.f64 (cbrt.f64 707281/11664) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 707281/11664) x) (*.f64 0 (*.f64 (cbrt.f64 707281/11664) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 707281/11664) x)) (*.f64 (cbrt.f64 707281/11664) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 707281/11664 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 (*.f64 x x) 707281/11664)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 707281/11664)) (*.f64 (cbrt.f64 (cbrt.f64 500246412961/136048896)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x x) 707281/11664)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (cbrt.f64 (*.f64 707281/11664 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 500246412961/136048896)) x) (cbrt.f64 (cbrt.f64 707281/11664)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 707281/11664) x)) (pow.f64 (*.f64 (cbrt.f64 707281/11664) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 707281/11664) x) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 707281/11664) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 707281/11664) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (cbrt.f64 707281/11664))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (cbrt.f64 707281/11664))) (cbrt.f64 (cbrt.f64 500246412961/136048896)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 500246412961/136048896)) (*.f64 x (cbrt.f64 (cbrt.f64 707281/11664))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 707281/11664) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 707281/11664) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cbrt.f64 707281/11664) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 707281/11664) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 707281/11664) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 707281/11664) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) 707281/11664) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 707281/11664) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cbrt.f64 707281/11664) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) 707281/11664))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 841/108 x 4/29) (*.f64 (fma.f64 841/108 x 4/29) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 841/108 x 4/29) 0) (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 841/108 x 4/29) (*.f64 0 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 841/108 x 4/29)) (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 841/108 x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (/.f64 1 (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 4/29 (*.f64 841/108 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 841/108 x 4/29)) (pow.f64 (fma.f64 841/108 x 4/29) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2/3) (cbrt.f64 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 841/108 x 4/29)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (-.f64 (*.f64 707281/11664 (*.f64 x x)) (*.f64 4/29 (*.f64 841/108 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) 1) (*.f64 (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 4/29 (*.f64 841/108 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389)) (neg.f64 (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 4/29 (*.f64 841/108 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 4/29 (*.f64 841/108 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) 1) (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 4/29 (*.f64 841/108 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 841/108 x 4/29)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 841/108 x 4/29) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 841/108 x 4/29) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 841/108 (*.f64 (cbrt.f64 707281/11664) x))) (pow.f64 (*.f64 (cbrt.f64 707281/11664) x) 2/3) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 841/108 x)) (cbrt.f64 (*.f64 707281/11664 (*.f64 x x))) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 841/108)) (*.f64 (cbrt.f64 (cbrt.f64 707281/11664)) (*.f64 (cbrt.f64 707281/11664) x)) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 841/108 x 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4/29) (cbrt.f64 16/841) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 4/29)) (neg.f64 (sqrt.f64 4/29)) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 4/29) (sqrt.f64 4/29) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 16/841) (cbrt.f64 4/29) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 707281/11664) x) (cbrt.f64 841/108) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 841/108 x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 841/108 x) 1 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4/29 1 (*.f64 841/108 x))))))"]],"rules":[["egg-rr",40],["egg-rr",26]],"time":25.391845703125,"type":"rewrite"},{"count":[[78,70]],"inputs":[["4/29","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))"]],"method":["egg-herbie"],"outputs":[["4/29","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)"]],"time":48.30712890625,"type":"simplify"},{"compiler":[[747,630]],"time":14.22802734375,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","fresh",0.21875],["(fma.f64 841/108 x 4/29)","done",0.0703125],["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","next",0.19140625],["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","done",0.135097509768442],["(/.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))","fresh",18.603553808610656]],"compiler":[[9,8],[5,4],[9,8],[9,8],[19,16],[9,8],[9,8],[19,16]],"count":[[74,5]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[70,1],"picked":[1,1]}],"min-error":[0],"time":14.89794921875,"type":"prune"},{"compiler":[[21,18]],"locations":[["(*.f64 (cbrt.f64 841/108) x)",0.140625,true],["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)",0.22265625,true]],"time":6.35791015625,"type":"localize"},{"count":[[2,12]],"series":[["(*.f64 (cbrt.f64 841/108) x)","x","-inf",0.22802734375],["(*.f64 (cbrt.f64 841/108) x)","x","inf",0.2119140625],["(*.f64 (cbrt.f64 841/108) x)","x","0",0.715087890625],["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","x","-inf",0.863037109375],["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","x","inf",0.343017578125],["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","x","0",0.3359375]],"time":2.77294921875,"type":"series"},{"count":[[2,66]],"inputs":[["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","(*.f64 (cbrt.f64 841/108) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 841/108 4/29) (*.f64 (fma.f64 x 841/108 4/29) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x 841/108 4/29) 0) (fma.f64 x 841/108 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 841/108 4/29) (*.f64 0 (fma.f64 x 841/108 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x 841/108 4/29)) (fma.f64 x 841/108 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x 841/108) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 4/29 (*.f64 x 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x 841/108) 3) 64/24389) (/.f64 1 (-.f64 (+.f64 (*.f64 (*.f64 x x) 707281/11664) 16/841) (*.f64 4/29 (*.f64 x 841/108)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 841/108 4/29)) (pow.f64 (fma.f64 x 841/108 4/29) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 841/108 4/29) 2/3) (cbrt.f64 (fma.f64 x 841/108 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x 841/108 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 841/108 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x 841/108 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x 841/108 4/29)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x 841/108) 3) 64/24389) (+.f64 16/841 (-.f64 (*.f64 (*.f64 x x) 707281/11664) (*.f64 4/29 (*.f64 x 841/108)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 x 841/108) 3) 64/24389) 1) (*.f64 (-.f64 (+.f64 (*.f64 (*.f64 x x) 707281/11664) 16/841) (*.f64 4/29 (*.f64 x 841/108))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 x 841/108) 3) 64/24389)) (neg.f64 (-.f64 (+.f64 (*.f64 (*.f64 x x) 707281/11664) 16/841) (*.f64 4/29 (*.f64 x 841/108)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x 841/108) 3) 64/24389) (-.f64 (+.f64 (*.f64 (*.f64 x x) 707281/11664) 16/841) (*.f64 4/29 (*.f64 x 841/108))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 x 841/108) 3) 64/24389) 1) (-.f64 (+.f64 (*.f64 (*.f64 x x) 707281/11664) 16/841) (*.f64 4/29 (*.f64 x 841/108))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x 841/108 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 841/108 4/29)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 841/108 4/29) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 841/108 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x 841/108 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x 841/108 4/29) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x 841/108)) (cbrt.f64 (*.f64 (*.f64 x x) 707281/11664)) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 841/108 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 (cbrt.f64 707281/11664))) (cbrt.f64 (cbrt.f64 500246412961/136048896)) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cbrt.f64 841/108) x)) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 707281/11664) (*.f64 x x)) 707281/11664)) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4/29) (cbrt.f64 16/841) (*.f64 x 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 4/29)) (neg.f64 (sqrt.f64 4/29)) (*.f64 x 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 4/29) (sqrt.f64 4/29) (*.f64 x 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 16/841) (cbrt.f64 4/29) (*.f64 x 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 841/108) (*.f64 x (cbrt.f64 707281/11664)) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -4/29 (*.f64 x 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x 841/108) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 841/108) 1 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 4/29 (*.f64 x 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4/29 1 (*.f64 x 841/108))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 841/108) x) (*.f64 (*.f64 (cbrt.f64 841/108) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 841/108) x) 0) (*.f64 (cbrt.f64 841/108) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 841/108) x) (*.f64 0 (*.f64 (cbrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 841/108) x)) (*.f64 (cbrt.f64 841/108) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 (*.f64 x x) 841/108)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x x) 841/108)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 841/108) x)) (pow.f64 (*.f64 (cbrt.f64 841/108) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 841/108) x) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x 841/108)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 841/108)) (*.f64 (cbrt.f64 (cbrt.f64 707281/11664)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (cbrt.f64 841/108))) (cbrt.f64 (cbrt.f64 707281/11664)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 707281/11664)) (*.f64 x (cbrt.f64 (cbrt.f64 841/108))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 707281/11664)) x) (cbrt.f64 (cbrt.f64 841/108)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (cbrt.f64 (*.f64 x 841/108)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 841/108) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 841/108) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cbrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 841/108) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 841/108) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (cbrt.f64 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 841/108) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 841/108) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) 841/108) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 841/108) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cbrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) 841/108))))))"]],"rules":[["egg-rr",26],["egg-rr",40]],"time":26.2490234375,"type":"rewrite"},{"count":[[78,71]],"inputs":[["4/29","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))"]],"method":["egg-herbie"],"outputs":[["4/29","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x))","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (cbrt.f64 707281/11664) (*.f64 (cbrt.f64 841/108) x)))","(fma.f64 841/108 x 4/29)"]],"time":48.833984375,"type":"simplify"},{"compiler":[[752,632]],"time":14.130126953125,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","next",0.21875],["(fma.f64 841/108 x 4/29)","done",0.0703125],["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","done",0.19140625],["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","done",0.135097509768442],["(/.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))","fresh",18.603553808610656]],"compiler":[[9,8],[5,4],[9,8],[9,8],[19,16],[9,8],[19,16]],"count":[[76,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[71,0],"picked":[1,1]}],"min-error":[0],"time":15.48291015625,"type":"prune"},{"compiler":[[18,15]],"locations":[["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)",0.171875,true],["(*.f64 (sqrt.f64 841/108) x)",0.1796875,true]],"time":5.09814453125,"type":"localize"},{"count":[[2,12]],"series":[["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","x","-inf",0.268798828125],["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","x","inf",0.25],["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","x","0",0.284912109375],["(*.f64 (sqrt.f64 841/108) x)","x","-inf",0.31591796875],["(*.f64 (sqrt.f64 841/108) x)","x","inf",0.3359375],["(*.f64 (sqrt.f64 841/108) x)","x","0",0.4130859375]],"time":1.949951171875,"type":"series"},{"count":[[2,72]],"inputs":[["(*.f64 (sqrt.f64 841/108) x)","(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 841/108) x) 0) (*.f64 (sqrt.f64 841/108) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 841/108) x) (*.f64 (*.f64 (sqrt.f64 841/108) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 841/108) x) 1/2) (*.f64 (*.f64 (sqrt.f64 841/108) x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 841/108) x)) (*.f64 (sqrt.f64 841/108) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 841/108) x) (*.f64 0 (*.f64 (sqrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 841/108) x)) (*.f64 1/2 (*.f64 (sqrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 841/108)) (*.f64 (cbrt.f64 841/108) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (sqrt.f64 841/108)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (sqrt.f64 841/108)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 (sqrt.f64 841/108)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 841/108) x)) (cbrt.f64 (*.f64 841/108 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 841/108) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (sqrt.f64 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 841/108 (*.f64 x x))) (cbrt.f64 (*.f64 (sqrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (sqrt.f64 841/108))) (cbrt.f64 841/108))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 (sqrt.f64 841/108))) (sqrt.f64 (sqrt.f64 841/108)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 841/108) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 841/108)) (*.f64 x (sqrt.f64 (sqrt.f64 841/108))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (sqrt.f64 841/108) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 841/108) (*.f64 x (cbrt.f64 (sqrt.f64 841/108))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 841/108) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 841/108) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 841/108) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 841/108) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 594823321/1259712) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 841/108) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 841/108) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 841/108) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (sqrt.f64 594823321/1259712) (pow.f64 x 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 841/108 x 4/29) 0) (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 841/108 x 4/29) (*.f64 (fma.f64 841/108 x 4/29) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 841/108 x 4/29) 1/2) (*.f64 (fma.f64 841/108 x 4/29) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 841/108 x 4/29)) (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 841/108 x 4/29) (*.f64 0 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 841/108 x 4/29)) (*.f64 1/2 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 841/108 x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (/.f64 1 (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 (*.f64 841/108 x) 4/29))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 841/108 x 4/29)) (pow.f64 (fma.f64 841/108 x 4/29) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 841/108 x 4/29) 2/3) (cbrt.f64 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 841/108 x 4/29)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 841/108 x 4/29))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (-.f64 (*.f64 707281/11664 (*.f64 x x)) (*.f64 (*.f64 841/108 x) 4/29))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) 1) (*.f64 (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 (*.f64 841/108 x) 4/29)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389)) (neg.f64 (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 (*.f64 841/108 x) 4/29))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 (*.f64 841/108 x) 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) 1) (-.f64 (+.f64 (*.f64 707281/11664 (*.f64 x x)) 16/841) (*.f64 (*.f64 841/108 x) 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 841/108 x 4/29) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 841/108 x 4/29)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 841/108 x 4/29) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 841/108 x 4/29)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 841/108 x 4/29) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 16/841) (cbrt.f64 4/29) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 4/29) (sqrt.f64 4/29) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4/29) (cbrt.f64 16/841) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 4/29)) (neg.f64 (sqrt.f64 4/29)) (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 841/108)) (*.f64 (cbrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x)) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 841/108 x 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 841/108 x)) (cbrt.f64 (*.f64 707281/11664 (*.f64 x x))) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 841/108) x) (sqrt.f64 841/108) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 841/108)) (*.f64 (sqrt.f64 (sqrt.f64 841/108)) (*.f64 (sqrt.f64 841/108) x)) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 841/108) (cbrt.f64 (*.f64 (sqrt.f64 841/108) x))) (cbrt.f64 (*.f64 841/108 (*.f64 x x))) 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 4/29 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4/29 1 (*.f64 841/108 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 841/108 x) 1 4/29)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 841/108 x) 4/29)))))"]],"rules":[["egg-rr",42],["egg-rr",30]],"time":24.875,"type":"rewrite"},{"count":[[84,76]],"inputs":[["4/29","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(*.f64 (pow.f64 (sqrt.f64 841/108) 2) x)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(*.f64 (pow.f64 (sqrt.f64 841/108) 2) x)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))"]],"method":["egg-herbie"],"outputs":[["4/29","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(*.f64 (pow.f64 (sqrt.f64 841/108) 2) x)","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(*.f64 (pow.f64 (sqrt.f64 841/108) 2) x)","(*.f64 841/108 x)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)","(+.f64 4/29 (*.f64 (pow.f64 (sqrt.f64 841/108) 2) x))","(fma.f64 841/108 x 4/29)"]],"time":48.8369140625,"type":"simplify"},{"compiler":[[836,705]],"time":15.242919921875,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","done",0.21875],["(fma.f64 841/108 x 4/29)","done",0.0703125],["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","done",0.19140625],["(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","done",0.135097509768442],["(/.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))","fresh",18.603553808610656]],"compiler":[[9,8],[5,4],[9,8],[9,8],[19,16]],"count":[[81,5]],"kept":[{"done":[3,3],"fresh":[1,1],"new":[76,0],"picked":[1,1]}],"min-error":[0],"time":15.114990234375,"type":"prune"},{"accuracy":[0.0703125],"baseline":[0.0703125],"branch":[["x",0.0703125,1],["(+.f64 (*.f64 (/.f64 841 108) x) (/.f64 4 29))",0.0703125,1],["(*.f64 (/.f64 841 108) x)",0.0703125,1]],"compiler":[[2,1],[10,9],[6,5],[56,48]],"count":[[6,1]],"inputs":[["(fma.f64 (*.f64 (cbrt.f64 841/108) x) (cbrt.f64 707281/11664) 4/29)","(fma.f64 (sqrt.f64 841/108) (*.f64 (sqrt.f64 841/108) x) 4/29)","(fma.f64 (cbrt.f64 841/108) (*.f64 (cbrt.f64 707281/11664) x) 4/29)","(/.f64 (+.f64 (pow.f64 (*.f64 841/108 x) 3) 64/24389) (+.f64 16/841 (*.f64 (*.f64 841/108 x) (fma.f64 x 841/108 -4/29))))","(fma.f64 841/108 x 4/29)","(+.f64 (*.f64 (/.f64 841 108) x) (/.f64 4 29))"]],"link":["."],"name":["Data.Colour.CIE:cieLABView from colour-2.3.3, A"],"oracle":[18.691776318379095],"outputs":[["(fma.f64 841/108 x 4/29)"]],"time":11.55517578125,"times":[["x",3.452880859375],["(+.f64 (*.f64 (/.f64 841 108) x) (/.f64 4 29))",2.900146484375],["(*.f64 (/.f64 841 108) x)",3.60302734375]],"type":"regimes"},{"compiler":[[5,4]],"inputs":[["(fma.f64 841/108 x 4/29)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 841/108 x 4/29)"]],"stop":[["fuel",1]],"time":36.546875,"type":"simplify"},{"time":0.01416015625,"type":"soundness"},{"compiler":[[5,4]],"remove-preprocessing":[[]],"time":8.876953125,"type":"end"}]