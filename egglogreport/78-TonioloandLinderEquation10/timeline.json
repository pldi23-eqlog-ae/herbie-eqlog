[{"compiler":[[29,22]],"method":["search"],"sampling":[[12,0.11311539168082163,0.8571416317882949,0.029742976530883425],[11,0.08386141107371259,0.9029728680727658,0.013165720853521634],[10,0.07411008420467624,0.9205252564370312,0.005364659358292556],[9,0.023403184485687234,0.9751326869036347,0.0014641286106780171],[8,0.015602122990458156,0.9829337483988638,0.0014641286106780171],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":458.031982421875,"type":"analyze"},{"outcomes":[["body",512,"invalid",38.91796875,161],["body",256,"invalid",293.213134765625,2541],["body",1024,"invalid",23.263671875,61],["body",1024,"valid",1098.717041015625,2768],["body",512,"valid",313.774658203125,1296],["body",2048,"valid",2.89599609375,4],["body",256,"valid",499.16357421875,4188]],"time":2281.925048828125,"type":"sample"},{"compiler":[[28,21]],"inputs":[["0","1","2"],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 l 3) (*.f64 t t)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k l) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 k 3) (*.f64 l l)) (sin.f64 t)) (tan.f64 t)) (+.f64 (+.f64 1 (pow.f64 (/.f64 t k) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 k k)) (sin.f64 l)) (tan.f64 l)) (+.f64 (+.f64 1 (pow.f64 (/.f64 l t) 2)) 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 l 3) (*.f64 t t)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k l) 2)) 1)))","(/.f64 2 (*.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 l 3) (pow.f64 t -2)) (*.f64 (tan.f64 k) (+.f64 (+.f64 1 (pow.f64 (/.f64 k l) 2)) 1)))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 k 3) (*.f64 l l)) (sin.f64 t)) (tan.f64 t)) (+.f64 (+.f64 1 (pow.f64 (/.f64 t k) 2)) 1)))","(/.f64 2 (*.f64 (sin.f64 t) (*.f64 (*.f64 (pow.f64 k 3) (pow.f64 l -2)) (*.f64 (tan.f64 t) (+.f64 (+.f64 1 (pow.f64 (/.f64 t k) 2)) 1)))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 k k)) (sin.f64 l)) (tan.f64 l)) (+.f64 (+.f64 1 (pow.f64 (/.f64 l t) 2)) 1)))","(/.f64 2 (*.f64 (sin.f64 l) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 k -2)) (*.f64 (tan.f64 l) (+.f64 (+.f64 1 (pow.f64 (/.f64 l t) 2)) 1)))))"]],"symmetry":[[]],"time":65.48193359375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))"]],"time":24.8740234375,"type":"simplify"},{"compiler":[[51,35]],"time":0.68310546875,"type":"eval"},{"alts":[["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","next",36.40860211637047],["(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))","fresh",39.17700615404025]],"compiler":[[28,21],[26,20],[28,21],[26,20]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[36.39791084451826],"time":1.993896484375,"type":"prune"},{"compiler":[[121,62]],"locations":[["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))",3.1460718072155296,true],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))",4.596719724215511,true],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))",13.284283097783895,true],["(/.f64 (pow.f64 t 3) (*.f64 l l))",19.640967904604235,true]],"time":28.818115234375,"type":"localize"},{"count":[[4,132]],"series":[["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","k","-inf",0.7939453125],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","k","inf",0.803955078125],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","k","0",0.736083984375],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","l","-inf",1.117919921875],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","l","inf",0.39013671875],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","l","0",0.382080078125],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","t","-inf",0.35791015625],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","t","inf",0.363037109375],["(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))","t","0",0.583984375],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","k","-inf",0.48583984375],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","k","inf",0.573974609375],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","k","0",0.5009765625],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","l","-inf",0.19384765625],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","l","inf",0.320068359375],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","l","0",0.44384765625],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","t","-inf",0.31396484375],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","t","inf",0.366943359375],["(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","t","0",0.52587890625],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","k","-inf",2.9140625],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","k","inf",1.56787109375],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","k","0",1.43701171875],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","l","-inf",0.224853515625],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","l","inf",0.524169921875],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","l","0",2.468994140625],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","t","-inf",0.947021484375],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","t","inf",0.842041015625],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","t","0",1.858154296875],["(/.f64 (pow.f64 t 3) (*.f64 l l))","l","-inf",0.202880859375],["(/.f64 (pow.f64 t 3) (*.f64 l l))","l","inf",0.323974609375],["(/.f64 (pow.f64 t 3) (*.f64 l l))","l","0",0.89697265625],["(/.f64 (pow.f64 t 3) (*.f64 l l))","t","-inf",0.4208984375],["(/.f64 (pow.f64 t 3) (*.f64 l l))","t","inf",0.60107421875],["(/.f64 (pow.f64 t 3) (*.f64 l l))","t","0",0.8779296875]],"time":25.970947265625,"type":"series"},{"count":[[4,242]],"inputs":[["(/.f64 (pow.f64 t 3) (*.f64 l l))","(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))","(*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k))","(*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 0) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 0 (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 l l))) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2) (*.f64 t (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t l) (/.f64 (*.f64 t t) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t t) l) (/.f64 t l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (/.f64 (*.f64 t t) (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t t) (cbrt.f64 (pow.f64 l -2))) (/.f64 t (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l -2)) (/.f64 (pow.f64 t 3) (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (pow.f64 t 3) l) (cbrt.f64 l)) (cbrt.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (cbrt.f64 (pow.f64 l -2))) (/.f64 1 (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t t) (/.f64 t (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 t 3)) (neg.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 3) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 l -2) (pow.f64 t 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (*.f64 t t) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 t 3) l) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 l) (/.f64 (pow.f64 t 3) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 t 3) (neg.f64 l)) (/.f64 -1 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t 3) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (pow.f64 l 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 t 3) (neg.f64 l)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (pow.f64 t 3) l) (cbrt.f64 l))) (neg.f64 (cbrt.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 t 3) (cbrt.f64 (pow.f64 l -2)))) (neg.f64 (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 t 3) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 t 3) l) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 t 3)) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 t 3) l) (cbrt.f64 l)) (cbrt.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (pow.f64 t 3) 3) (pow.f64 l 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (pow.f64 t 3) l) (neg.f64 l)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 t 3) 3) (pow.f64 l 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 0) (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 0 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (pow.f64 (/.f64 k t) 2)) (+.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 2) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (pow.f64 (/.f64 k t) 2)) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (pow.f64 (/.f64 k t) 2)) (*.f64 2 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (pow.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)) 2)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 k) (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (*.f64 (sin.f64 k) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k))))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (+.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (+.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (+.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (+.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k))))) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 3) 1)) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (/.f64 k t) 4) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (sin.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 (cos.f64 k) (*.f64 l l)) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))))) (*.f64 (*.f64 (cos.f64 k) (*.f64 l l)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))) (*.f64 l (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))))) (*.f64 l (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))) (*.f64 (cos.f64 k) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))))) (*.f64 (cos.f64 k) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (sin.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 (*.f64 l l) (cos.f64 k)) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))))) (*.f64 (*.f64 (*.f64 l l) (cos.f64 k)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 l l) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))))) (*.f64 (*.f64 l l) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k)))) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))) (*.f64 (neg.f64 (*.f64 l l)) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))))) (*.f64 (neg.f64 (*.f64 l l)) (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))) (neg.f64 (*.f64 l l))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (neg.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k)))))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))) (*.f64 (*.f64 l l) (cos.f64 k))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (sin.f64 k)))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 l l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))) l) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))) (*.f64 l l)) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))) (*.f64 (cos.f64 k) (*.f64 l l))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 6))) (cos.f64 k)) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (*.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))))) (*.f64 (-.f64 (+.f64 1 (pow.f64 (/.f64 k t) 4)) (pow.f64 (/.f64 k t) 2)) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 3) 1)) (+.f64 1 (+.f64 (pow.f64 (/.f64 k t) 4) (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 3) 1))) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (/.f64 k t) 4) (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))) (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (+.f64 1 (pow.f64 (/.f64 k t) 2)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 2)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (+.f64 1 (pow.f64 (/.f64 k t) 2))) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 2)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 k) (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (+.f64 1 (pow.f64 (/.f64 k t) 2))) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k))) 2) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (*.f64 (sin.f64 k) (tan.f64 k)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (tan.f64 k)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (tan.f64 k)) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (+.f64 1 (pow.f64 (/.f64 k t) 2))) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k))))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)) 1 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (sin.f64 k) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (pow.f64 (tan.f64 k) 2)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2) (tan.f64 k)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 k) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (tan.f64 k)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (tan.f64 k) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 k)) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 k) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 1 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) -1 (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 t 3) (*.f64 (pow.f64 l -2) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (*.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (tan.f64 k)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) 0) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (*.f64 0 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (pow.f64 (sin.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2)) (*.f64 (pow.f64 t 3) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (*.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2) (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (cbrt.f64 (pow.f64 l -2))) (/.f64 (sin.f64 k) (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) l) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (cbrt.f64 (pow.f64 l -2))) (/.f64 1 (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (sin.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 3) (*.f64 (sin.f64 k) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 t 3) l) (/.f64 (sin.f64 k) l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 3) (*.f64 (pow.f64 l -2) (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (neg.f64 (pow.f64 t 3))) (neg.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) l) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (pow.f64 l 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) l)) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (cbrt.f64 (pow.f64 l -2)))) (neg.f64 (cbrt.f64 (pow.f64 l 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 k) (neg.f64 (pow.f64 t 3))) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))) (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 k) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (neg.f64 (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) 0) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 0) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) (*.f64 0 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))) (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (tan.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (tan.f64 k) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (pow.f64 (tan.f64 k) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 k)) (*.f64 (cbrt.f64 (pow.f64 (tan.f64 k) 2)) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (*.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (pow.f64 t 3) (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 2) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (sin.f64 k)) (/.f64 1 (*.f64 (*.f64 l l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) (/.f64 1 l))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (pow.f64 l -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (/.f64 1 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (/.f64 1 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (pow.f64 l -2))) (sin.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 3) (*.f64 (pow.f64 l -2) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k)))) (neg.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) l)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (sin.f64 k)) (*.f64 (*.f64 l l) (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 (cos.f64 k) (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (sin.f64 k))) (neg.f64 (*.f64 (*.f64 l l) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k)))) (neg.f64 l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k)))) (neg.f64 (*.f64 (cos.f64 k) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2)))) (neg.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 k) (*.f64 (*.f64 (pow.f64 t 3) (sin.f64 k)) (pow.f64 l -2))) (cos.f64 k))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k)))) (neg.f64 (*.f64 l l)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))))) (*.f64 l l))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (tan.f64 k)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2))) (*.f64 (sin.f64 k) (tan.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 k) (tan.f64 k)) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (tan.f64 k) (*.f64 (pow.f64 t 3) (sin.f64 k))) (*.f64 l l)) 3))))))"]],"rules":[["egg-rr",53],["egg-rr",42],["egg-rr",99],["egg-rr",48]],"time":54.555908203125,"type":"rewrite"},{"count":[[374,279]],"inputs":[["(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)))","(+.f64 (*.f64 (pow.f64 k 4) (+.f64 (/.f64 t (pow.f64 l 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 t 3)) (*.f64 -1/6 (pow.f64 t 3))) (pow.f64 l 2))))) (*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))))","(+.f64 (*.f64 (pow.f64 k 4) (+.f64 (/.f64 t (pow.f64 l 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 t 3)) (*.f64 -1/6 (pow.f64 t 3))) (pow.f64 l 2))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))) (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/120 (pow.f64 t 3)) (+.f64 (*.f64 2/15 (pow.f64 t 3)) (*.f64 -1/18 (pow.f64 t 3)))) (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2))))) (pow.f64 k 6))))","(+.f64 (*.f64 (pow.f64 k 4) (+.f64 (/.f64 t (pow.f64 l 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 t 3)) (*.f64 -1/6 (pow.f64 t 3))) (pow.f64 l 2))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 (pow.f64 k 8) (+.f64 (*.f64 1/120 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 2/15 (/.f64 t (pow.f64 l 2))) (*.f64 2 (/.f64 (+.f64 (*.f64 17/315 (pow.f64 t 3)) (+.f64 (*.f64 -1/5040 (pow.f64 t 3)) (+.f64 (*.f64 1/360 (pow.f64 t 3)) (*.f64 -1/45 (pow.f64 t 3))))) (pow.f64 l 2))))))) (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/120 (pow.f64 t 3)) (+.f64 (*.f64 2/15 (pow.f64 t 3)) (*.f64 -1/18 (pow.f64 t 3)))) (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2))))) (pow.f64 k 6)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 k 3) (pow.f64 t 3)) (pow.f64 l 2))) (/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2)))","(+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 k 5) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 k 3) (pow.f64 t 3)) (pow.f64 l 2))) (/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2))))","(+.f64 (*.f64 -1/5040 (/.f64 (*.f64 (pow.f64 k 7) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 k 5) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 k 3) (pow.f64 t 3)) (pow.f64 l 2))) (/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2)))))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 -1/6 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))) (pow.f64 k 4)) (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 -1/6 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))) (pow.f64 k 4)) (+.f64 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)) (*.f64 (pow.f64 k 6) (+.f64 (*.f64 2/15 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 1/120 (/.f64 (pow.f64 t 3) (pow.f64 l 2))))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 -1/6 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))) (pow.f64 k 4)) (+.f64 (*.f64 (pow.f64 k 8) (+.f64 (*.f64 -1/5040 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 1/360 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 -1/45 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 17/315 (/.f64 (pow.f64 t 3) (pow.f64 l 2))))))) (+.f64 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)) (*.f64 (pow.f64 k 6) (+.f64 (*.f64 2/15 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 1/120 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))))))))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (pow.f64 t 3) (pow.f64 l 2))","(/.f64 (/.f64 (pow.f64 t 3) l) l)","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(/.f64 (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(/.f64 (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (pow.f64 k 2) (pow.f64 t 2))))) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (pow.f64 t 3) (+.f64 2 (/.f64 (*.f64 k k) (*.f64 t t))))) (*.f64 (cos.f64 k) (*.f64 l l)))","(*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)))","(/.f64 (/.f64 (*.f64 2 (*.f64 (*.f64 k k) (pow.f64 t 3))) l) l)","(+.f64 (*.f64 (pow.f64 k 4) (+.f64 (/.f64 t (pow.f64 l 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 t 3)) (*.f64 -1/6 (pow.f64 t 3))) (pow.f64 l 2))))) (*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))))","(fma.f64 (pow.f64 k 4) (/.f64 (+.f64 t (*.f64 2 (*.f64 (pow.f64 t 3) 1/6))) (*.f64 l l)) (/.f64 (/.f64 (*.f64 2 (*.f64 (*.f64 k k) (pow.f64 t 3))) l) l))","(+.f64 (*.f64 (pow.f64 k 4) (+.f64 (/.f64 t (pow.f64 l 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 t 3)) (*.f64 -1/6 (pow.f64 t 3))) (pow.f64 l 2))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))) (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/120 (pow.f64 t 3)) (+.f64 (*.f64 2/15 (pow.f64 t 3)) (*.f64 -1/18 (pow.f64 t 3)))) (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2))))) (pow.f64 k 6))))","(fma.f64 (/.f64 (+.f64 t (*.f64 2 (*.f64 (pow.f64 t 3) 1/6))) (*.f64 l l)) (pow.f64 k 4) (fma.f64 (pow.f64 k 6) (fma.f64 -1/6 (/.f64 (/.f64 t l) l) (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 t 3) (+.f64 7/90 1/120))) (*.f64 1/3 t)) (*.f64 l l))) (/.f64 (/.f64 (*.f64 2 (*.f64 (*.f64 k k) (pow.f64 t 3))) l) l)))","(+.f64 (*.f64 (pow.f64 k 4) (+.f64 (/.f64 t (pow.f64 l 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 t 3)) (*.f64 -1/6 (pow.f64 t 3))) (pow.f64 l 2))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 (pow.f64 k 8) (+.f64 (*.f64 1/120 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 2/15 (/.f64 t (pow.f64 l 2))) (*.f64 2 (/.f64 (+.f64 (*.f64 17/315 (pow.f64 t 3)) (+.f64 (*.f64 -1/5040 (pow.f64 t 3)) (+.f64 (*.f64 1/360 (pow.f64 t 3)) (*.f64 -1/45 (pow.f64 t 3))))) (pow.f64 l 2))))))) (*.f64 (+.f64 (*.f64 -1/6 (/.f64 t (pow.f64 l 2))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/120 (pow.f64 t 3)) (+.f64 (*.f64 2/15 (pow.f64 t 3)) (*.f64 -1/18 (pow.f64 t 3)))) (pow.f64 l 2))) (*.f64 1/3 (/.f64 t (pow.f64 l 2))))) (pow.f64 k 6)))))","(fma.f64 (/.f64 (+.f64 t (*.f64 2 (*.f64 (pow.f64 t 3) 1/6))) (*.f64 l l)) (pow.f64 k 4) (fma.f64 2 (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l) (fma.f64 (pow.f64 k 8) (+.f64 (*.f64 (/.f64 (/.f64 t l) l) -17/360) (/.f64 (+.f64 (*.f64 2 (fma.f64 17/315 (pow.f64 t 3) (*.f64 (pow.f64 t 3) (+.f64 -7/360 -1/5040)))) (*.f64 2/15 t)) (*.f64 l l))) (*.f64 (fma.f64 -1/6 (/.f64 (/.f64 t l) l) (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 t 3) (+.f64 7/90 1/120))) (*.f64 1/3 t)) (*.f64 l l))) (pow.f64 k 6)))))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(+.f64 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))))","(/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 k (pow.f64 t 3)) l) l)","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 k 3) (pow.f64 t 3)) (pow.f64 l 2))) (/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2)))","(/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 k t) 3)) (*.f64 k (pow.f64 t 3))) (*.f64 l l))","(+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 k 5) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 k 3) (pow.f64 t 3)) (pow.f64 l 2))) (/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2))))","(fma.f64 1/120 (/.f64 (/.f64 (*.f64 (pow.f64 k 5) (pow.f64 t 3)) l) l) (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 k t) 3)) (*.f64 k (pow.f64 t 3))) (*.f64 l l)))","(+.f64 (*.f64 -1/5040 (/.f64 (*.f64 (pow.f64 k 7) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 k 5) (pow.f64 t 3)) (pow.f64 l 2))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 k 3) (pow.f64 t 3)) (pow.f64 l 2))) (/.f64 (*.f64 k (pow.f64 t 3)) (pow.f64 l 2)))))","(+.f64 (/.f64 (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 k 7) (pow.f64 t 3))) (*.f64 1/120 (*.f64 (pow.f64 k 5) (pow.f64 t 3)))) (*.f64 l l)) (/.f64 (+.f64 (*.f64 -1/6 (pow.f64 (*.f64 k t) 3)) (*.f64 k (pow.f64 t 3))) (*.f64 l l)))","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) l) l)","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2))","(/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l)","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 -1/6 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))) (pow.f64 k 4)) (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)))","(fma.f64 (/.f64 (/.f64 (*.f64 (pow.f64 t 3) 1/6) l) l) (pow.f64 k 4) (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 -1/6 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))) (pow.f64 k 4)) (+.f64 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)) (*.f64 (pow.f64 k 6) (+.f64 (*.f64 2/15 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 1/120 (/.f64 (pow.f64 t 3) (pow.f64 l 2))))))))","(fma.f64 (pow.f64 k 4) (/.f64 (/.f64 (*.f64 (pow.f64 t 3) 1/6) l) l) (fma.f64 (*.f64 (/.f64 (/.f64 (pow.f64 t 3) l) l) (+.f64 -17/360 2/15)) (pow.f64 k 6) (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 -1/6 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))) (pow.f64 k 4)) (+.f64 (*.f64 (pow.f64 k 8) (+.f64 (*.f64 -1/5040 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 1/360 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 -1/45 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 17/315 (/.f64 (pow.f64 t 3) (pow.f64 l 2))))))) (+.f64 (/.f64 (*.f64 (pow.f64 k 2) (pow.f64 t 3)) (pow.f64 l 2)) (*.f64 (pow.f64 k 6) (+.f64 (*.f64 2/15 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 t 3) (pow.f64 l 2))) (*.f64 1/120 (/.f64 (pow.f64 t 3) (pow.f64 l 2)))))))))","(fma.f64 (/.f64 (/.f64 (*.f64 (pow.f64 t 3) 1/6) l) l) (pow.f64 k 4) (fma.f64 (pow.f64 k 8) (fma.f64 -1/5040 (/.f64 (/.f64 (pow.f64 t 3) l) l) (*.f64 (/.f64 (/.f64 (pow.f64 t 3) l) l) (+.f64 1/360 2/63))) (fma.f64 (*.f64 (/.f64 (/.f64 (pow.f64 t 3) l) l) (+.f64 -17/360 2/15)) (pow.f64 k 6) (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l))))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (pow.f64 l 2)))","(/.f64 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)) (*.f64 (cos.f64 k) (*.f64 l l)))"]],"time":471.572998046875,"type":"simplify"},{"compiler":[[9842,5948]],"time":95.09716796875,"type":"eval"},{"alts":[["(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","fresh",33.01100875784945],["(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",29.327088679322337],["(/.f64 2 (*.f64 (/.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",36.7272587462566],["(/.f64 2 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3))","fresh",22.232335514131464],["(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",26.655497261571465],["(/.f64 2 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",38.88025833475809],["(/.f64 2 (*.f64 (*.f64 (*.f64 (tan.f64 k) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",24.55905697540715],["(/.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 3) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",25.97057101798482],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (/.f64 (sin.f64 k) l)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",32.899746969968696],["(/.f64 2 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))","fresh",23.713138951061612],["(/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l))))","fresh",27.948783194217107],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","next",22.207845433369776]],"compiler":[[22,17],[30,21],[28,21],[29,23],[36,28],[26,19],[41,30],[30,24],[28,21],[39,28],[31,22],[52,36],[22,17],[30,21],[28,21],[29,23],[36,28],[26,19],[41,30],[30,24],[28,21],[39,28],[31,22],[52,36]],"count":[[281,12]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[279,12],"picked":[1,0]}],"min-error":[12.897050097595324],"time":100.659912109375,"type":"prune"},{"compiler":[[216,122]],"locations":[["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))",1.1714462172201245,true],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))",3.8866739811737556,true],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))",19.700005092037028,true],["(cbrt.f64 (pow.f64 l -2))",29.281506898025707,true]],"time":52.049072265625,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","k","-inf",1.48193359375],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","k","inf",1.569091796875],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","k","0",4.156982421875],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","l","-inf",0.218017578125],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","l","inf",0.221923828125],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","l","0",0.278076171875],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","t","-inf",0.35107421875],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","t","inf",1.02587890625],["(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))","t","0",1.9541015625],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","-inf",0.51220703125],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","inf",0.515869140625],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","0",1.22509765625],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","l","-inf",0.2919921875],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","l","inf",0.35498046875],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","l","0",0.83984375],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","-inf",0.906982421875],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","inf",2.054931640625],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","0",0.54296875],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))","t","-inf",0.4599609375],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))","t","inf",1.605224609375],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))","t","0",0.2900390625],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))","k","-inf",0.318115234375],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))","k","inf",0.36083984375],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))","k","0",0.547119140625],["(cbrt.f64 (pow.f64 l -2))","l","-inf",0.283935546875],["(cbrt.f64 (pow.f64 l -2))","l","inf",0.35498046875],["(cbrt.f64 (pow.f64 l -2))","l","0",0.491943359375]],"time":23.643798828125,"type":"series"},{"count":[[4,120]],"inputs":[["(cbrt.f64 (pow.f64 l -2))","(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))","(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","(*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (cbrt.f64 (pow.f64 l -2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) 0) (cbrt.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 0 (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (cbrt.f64 (pow.f64 l -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -4))) (cbrt.f64 (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 l -2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 l -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cbrt.f64 (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 l -2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 0) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 0 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 k)) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (cbrt.f64 (tan.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2)) (sin.f64 k))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (sin.f64 k) (+.f64 8 (pow.f64 (/.f64 k t) 6)))) (cbrt.f64 (*.f64 (cos.f64 k) (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (+.f64 8 (pow.f64 (/.f64 k t) 6)) (sin.f64 k))) (cbrt.f64 (*.f64 (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4) (cos.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (tan.f64 k)) (cbrt.f64 (+.f64 8 (pow.f64 (/.f64 k t) 6)))) (cbrt.f64 (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 8 (pow.f64 (/.f64 k t) 6))) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (+.f64 8 (pow.f64 (/.f64 k t) 6)) (tan.f64 k))) (cbrt.f64 (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 0) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) (*.f64 0 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))) (*.f64 (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 2/3) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (*.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2/3) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (*.f64 t (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2/3) (cbrt.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 t (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (cbrt.f64 (pow.f64 l -2)) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 8 (pow.f64 (/.f64 k t) 6)))) (cbrt.f64 (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (pow.f64 t 3))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (pow.f64 t 3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 0) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (*.f64 0 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (*.f64 (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2/3) (cbrt.f64 (sin.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))) (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 2/3) (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (cbrt.f64 (sin.f64 k)))) (cbrt.f64 (pow.f64 (sin.f64 k) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 k))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2/3)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 t (cbrt.f64 (sin.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (pow.f64 t 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)) (pow.f64 t 3)))))))"]],"rules":[["egg-rr",31],["egg-rr",39],["egg-rr",30],["egg-rr",20]],"time":39.85205078125,"type":"rewrite"},{"count":[[156,139]],"inputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 2)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 6))))) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 2)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 6))))) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2))","(cbrt.f64 (*.f64 (tan.f64 k) 2))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)))","(*.f64 (cbrt.f64 (tan.f64 k)) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (pow.f64 (*.f64 (cbrt.f64 2) t) 2)) (cbrt.f64 2)))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3)))))","(fma.f64 1/3 (/.f64 (*.f64 (*.f64 k k) (cbrt.f64 (tan.f64 k))) (pow.f64 (*.f64 (cbrt.f64 2) t) 2)) (*.f64 (cbrt.f64 (tan.f64 k)) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (cbrt.f64 2))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 2)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 6))))) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 (tan.f64 k)) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (pow.f64 (*.f64 (cbrt.f64 2) t) 2)) (cbrt.f64 2))) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 (sin.f64 k) 2)))) (/.f64 (*.f64 (/.f64 (pow.f64 k 6) (pow.f64 (cbrt.f64 2) 6)) (tan.f64 k)) (/.f64 (*.f64 (cbrt.f64 (*.f64 2 2)) (pow.f64 t 6)) -5/27)) (*.f64 -1/9 (/.f64 (*.f64 (pow.f64 k 4) (cbrt.f64 (tan.f64 k))) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2))","(cbrt.f64 (*.f64 (tan.f64 k) 2))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)))","(*.f64 (cbrt.f64 (tan.f64 k)) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (pow.f64 (*.f64 (cbrt.f64 2) t) 2)) (cbrt.f64 2)))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3)))))","(fma.f64 1/3 (/.f64 (*.f64 (*.f64 k k) (cbrt.f64 (tan.f64 k))) (pow.f64 (*.f64 (cbrt.f64 2) t) 2)) (*.f64 (cbrt.f64 (tan.f64 k)) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (cbrt.f64 2))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 2))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3) (cbrt.f64 2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 2)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (sin.f64 k)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 6))))) (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))) (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (cos.f64 k)) 1/3))))))","(+.f64 (*.f64 (cbrt.f64 (tan.f64 k)) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (pow.f64 (*.f64 (cbrt.f64 2) t) 2)) (cbrt.f64 2))) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 (sin.f64 k) 2)))) (/.f64 (*.f64 (/.f64 (pow.f64 k 6) (pow.f64 (cbrt.f64 2) 6)) (tan.f64 k)) (/.f64 (*.f64 (cbrt.f64 (*.f64 2 2)) (pow.f64 t 6)) -5/27)) (*.f64 -1/9 (/.f64 (*.f64 (pow.f64 k 4) (cbrt.f64 (tan.f64 k))) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 4))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(*.f64 (cbrt.f64 (*.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k)) 2)) t)","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(*.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(fma.f64 -1/9 (*.f64 (/.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 3)) (pow.f64 (cbrt.f64 2) 5)) (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k)))) (*.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))","(+.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k))) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)))) (fma.f64 (cbrt.f64 (*.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k)) 2)) t (*.f64 -1/3 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (*.f64 l l)))) (/.f64 (*.f64 (cbrt.f64 (*.f64 2 2)) (pow.f64 t 5)) -5/27)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 l 4)) (pow.f64 (sin.f64 k) 4)))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(*.f64 (cbrt.f64 (*.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k)) 2)) t)","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(*.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(fma.f64 -1/9 (*.f64 (/.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 3)) (pow.f64 (cbrt.f64 2) 5)) (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k)))) (*.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))","(+.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k))) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)))) (fma.f64 (cbrt.f64 (*.f64 (*.f64 (/.f64 (sin.f64 k) (*.f64 l l)) (tan.f64 k)) 2)) t (*.f64 -1/3 (*.f64 (/.f64 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (*.f64 l l)))) (/.f64 (*.f64 (cbrt.f64 (*.f64 2 2)) (pow.f64 t 5)) -5/27)) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 l 4)) (pow.f64 (sin.f64 k) 4)))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)","(*.f64 (pow.f64 (/.f64 (*.f64 1 (sin.f64 k)) (pow.f64 l 2)) 1/3) t)","(*.f64 (cbrt.f64 (/.f64 (sin.f64 k) (*.f64 l l))) t)"]],"time":128.89697265625,"type":"simplify"},{"compiler":[[16577,10332]],"time":157.64501953125,"type":"eval"},{"alts":[["(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","fresh",33.01100875784945],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.190847989456792],["(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",29.327088679322337],["(/.f64 2 (*.f64 (/.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",36.7272587462566],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","next",22.16891658850782],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (pow.f64 l -2) 1/3)) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",23.07367366279046],["(/.f64 2 (*.f64 (pow.f64 (*.f64 t (*.f64 (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",25.306032057257738],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",25.301462037720853],["(/.f64 2 (*.f64 (*.f64 (*.f64 (tan.f64 k) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",24.55905697540715],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.33516753823193],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.25390426584914],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))))))","fresh",25.280680503422328],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3))))","fresh",22.183221697470046],["(/.f64 2 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",38.88025833475809],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))","fresh",25.287899241338557],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (/.f64 (sin.f64 k) l)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",32.899746969968696],["(/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l))))","fresh",27.948783194217107]],"compiler":[[22,17],[52,36],[30,21],[28,21],[52,36],[53,37],[51,36],[51,36],[41,30],[64,47],[64,47],[52,37],[55,39],[26,19],[51,36],[28,21],[31,22],[22,17],[52,36],[30,21],[28,21],[52,36],[53,37],[51,36],[51,36],[41,30],[64,47],[64,47],[52,37],[55,39],[26,19],[51,36],[28,21],[31,22]],"count":[[290,17]],"kept":[{"done":[0,0],"fresh":[11,7],"new":[278,10],"picked":[1,0]}],"min-error":[12.859308776900862],"time":113.198974609375,"type":"prune"},{"compiler":[[253,135]],"locations":[["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))",3.8866739811737556,false],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))",3.8866739811737556,true],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))",19.700005092037028,false],["(cbrt.f64 (pow.f64 l -2))",29.281506898025707,false]],"time":60.7421875,"type":"localize"},{"count":[[1,8]],"series":[["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","l","-inf",0.201904296875],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","l","inf",0.22314453125],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","l","0",0.19287109375],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","-inf",0.39208984375],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","inf",0.389892578125],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","0",0.18505859375],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","-inf",0.240966796875],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","inf",0.22802734375],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","0",0.4169921875]],"time":2.640869140625,"type":"series"},{"count":[[1,39]],"inputs":[["(*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 0) (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (*.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (*.f64 0 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t)) (*.f64 (pow.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) 2/3) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)) (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2))))) (*.f64 (pow.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2/3) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (pow.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (*.f64 (cbrt.f64 (sin.f64 k)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 2/3) (cbrt.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 (cbrt.f64 (sin.f64 k)) t)) (cbrt.f64 (pow.f64 l -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) (*.f64 t (cbrt.f64 (pow.f64 l -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))) (pow.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 8 (pow.f64 (/.f64 k t) 6)))) (cbrt.f64 (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (sin.f64 k)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (pow.f64 l -2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (sin.f64 k)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))"]],"rules":[["egg-rr",39]],"time":26.512939453125,"type":"rewrite"},{"count":[[47,48]],"inputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l))) 2)) t)","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l)))) (+.f64 (*.f64 (cbrt.f64 2) t) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(fma.f64 -1/9 (*.f64 (/.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 3)) (pow.f64 (cbrt.f64 2) 5)) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l))))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l)))) (+.f64 (*.f64 (cbrt.f64 2) t) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))","(+.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l)))) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)))) (fma.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l))) 2)) t (*.f64 -1/3 (*.f64 (/.f64 (/.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) -5/27) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (*.f64 l l)))) (pow.f64 t 5)) (cbrt.f64 (*.f64 2 2))) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 l 4)) (pow.f64 (sin.f64 k) 4)))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))","(*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l))) 2)) t)","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))","(*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l)))) (+.f64 (*.f64 (cbrt.f64 2) t) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t))))","(fma.f64 -1/9 (*.f64 (/.f64 (/.f64 (pow.f64 k 4) (pow.f64 t 3)) (pow.f64 (cbrt.f64 2) 5)) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l))))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l)))) (+.f64 (*.f64 (cbrt.f64 2) t) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (*.f64 1 (pow.f64 l 4))) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2))))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (pow.f64 l 2)))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 l 2))) 1/3) (*.f64 (cbrt.f64 2) t)))))","(+.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l)))) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)))) (fma.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (*.f64 (cos.f64 k) (*.f64 l l))) 2)) t (*.f64 -1/3 (*.f64 (/.f64 (/.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) -5/27) (*.f64 (cos.f64 k) (*.f64 (pow.f64 (cbrt.f64 2) 6) (*.f64 l l)))) (pow.f64 t 5)) (cbrt.f64 (*.f64 2 2))) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 l 4)) (pow.f64 (sin.f64 k) 4)))))))"]],"time":39.583984375,"type":"simplify"},{"compiler":[[13076,7985]],"time":116.8720703125,"type":"eval"},{"alts":[["(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","fresh",33.01100875784945],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) 3)) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.220955370128472],["(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",29.327088679322337],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (pow.f64 l -2) 1/3)) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",23.07367366279046],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.31533480553403],["(/.f64 2 (*.f64 (pow.f64 (*.f64 t (*.f64 (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",25.306032057257738],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.25390426584914],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3))))","fresh",22.161309039366778],["(/.f64 2 (*.f64 (/.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",36.7272587462566],["(/.f64 2 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",38.88025833475809],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))","fresh",25.287899241338557],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (/.f64 (sin.f64 k) l)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",32.899746969968696],["(/.f64 2 (*.f64 (*.f64 (*.f64 (tan.f64 k) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",24.55905697540715],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","next",22.15610035290691],["(/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l))))","fresh",27.948783194217107]],"compiler":[[22,17],[55,39],[30,21],[53,37],[64,47],[51,36],[64,47],[55,39],[28,21],[26,19],[51,36],[28,21],[41,30],[52,36],[31,22],[22,17],[55,39],[30,21],[53,37],[64,47],[51,36],[64,47],[55,39],[28,21],[26,19],[51,36],[28,21],[41,30],[52,36],[31,22]],"count":[[229,15]],"kept":[{"done":[0,0],"fresh":[16,11],"new":[212,4],"picked":[1,0]}],"min-error":[12.851496276900862],"time":80.093994140625,"type":"prune"},{"compiler":[[260,138]],"locations":[["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))",2.0333266720438012,true],["(*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))",3.8866739811737556,false],["(cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))",19.700005092037028,false],["(cbrt.f64 (pow.f64 l -2))",29.281506898025707,false]],"time":58.485107421875,"type":"localize"},{"count":[[1,8]],"series":[["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","-inf",0.722900390625],["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","inf",1.68798828125],["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","t","0",0.257080078125],["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","-inf",0.238037109375],["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","inf",0.26806640625],["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))","k","0",0.80810546875]],"time":4.12890625,"type":"series"},{"count":[[1,34]],"inputs":[["(*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) 0) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) (*.f64 0 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)) (*.f64 (cbrt.f64 (sin.f64 k)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (cbrt.f64 (sin.f64 k)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t)) (*.f64 (pow.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) 2/3) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sin.f64 k))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 k) 2/3)) (*.f64 t (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 (cbrt.f64 (sin.f64 k)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 k)) (*.f64 t (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) (cbrt.f64 (sin.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)) (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) 2/3) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) (cbrt.f64 (pow.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t))) (pow.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (cbrt.f64 (sin.f64 k)) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 (cbrt.f64 (sin.f64 k)) t))) (cbrt.f64 (cos.f64 k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 8 (pow.f64 (/.f64 k t) 6)))) (cbrt.f64 (fma.f64 (pow.f64 (/.f64 k t) 2) (+.f64 (pow.f64 (/.f64 k t) 2) -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (sin.f64 k)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (cbrt.f64 (sin.f64 k))) t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (sin.f64 k)))))))"]],"rules":[["egg-rr",34]],"time":24.446044921875,"type":"rewrite"},{"count":[[42,43]],"inputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3)))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3)))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t))","(*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k)) 2)) t)","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))))","(*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3)))))","(fma.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))))))","(+.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k))) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (*.f64 (cbrt.f64 2) t))) (fma.f64 1/3 (*.f64 (/.f64 (/.f64 (*.f64 k k) t) (cbrt.f64 (*.f64 2 2))) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 (sin.f64 k) 4)))) (/.f64 (/.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) -5/27) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))) (pow.f64 t 5)) (cbrt.f64 (*.f64 2 2))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t))","(*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k)) 2)) t)","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))))","(*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t)))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3)))))","(fma.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k))) (+.f64 (/.f64 (*.f64 1/3 (*.f64 k k)) (*.f64 (cbrt.f64 (*.f64 2 2)) t)) (*.f64 (cbrt.f64 2) t))))","(+.f64 (*.f64 -1/9 (*.f64 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3) (*.f64 (cbrt.f64 2) t)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (pow.f64 k 2) (*.f64 (pow.f64 (cbrt.f64 2) 2) t)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (sin.f64 k) 2)) (cos.f64 k)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 k) 2) 1) (pow.f64 (sin.f64 k) 4)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6)))) (*.f64 -2/9 (/.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))))) (*.f64 (pow.f64 (cbrt.f64 2) 2) (pow.f64 t 5))))))))","(+.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k))) (+.f64 (/.f64 (*.f64 -1/9 (pow.f64 k 4)) (*.f64 (pow.f64 (cbrt.f64 2) 5) (pow.f64 t 3))) (*.f64 (cbrt.f64 2) t))) (fma.f64 1/3 (*.f64 (/.f64 (/.f64 (*.f64 k k) t) (cbrt.f64 (*.f64 2 2))) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 k) 2) (cos.f64 k)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 (pow.f64 (cos.f64 k) 2) (pow.f64 (sin.f64 k) 4)))) (/.f64 (/.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k 6) (pow.f64 (sin.f64 k) 2)) -5/27) (*.f64 (cos.f64 k) (pow.f64 (cbrt.f64 2) 6))) (pow.f64 t 5)) (cbrt.f64 (*.f64 2 2))))))"]],"time":38.552978515625,"type":"simplify"},{"compiler":[[12733,7790]],"time":113.76513671875,"type":"eval"},{"alts":[["(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","fresh",33.01100875784945],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) 3)) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.220955370128472],["(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",29.327088679322337],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.31533480553403],["(/.f64 2 (*.f64 (pow.f64 (*.f64 t (*.f64 (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",25.306032057257738],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (/.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))) (cbrt.f64 (cos.f64 k)))))","fresh",25.28209679279492],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",22.25390426584914],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3))))","fresh",22.161309039366778],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (sin.f64 k)))))","fresh",22.157516642279507],["(/.f64 2 (*.f64 (/.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",36.7272587462566],["(/.f64 2 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",38.88025833475809],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 l -2) 1/3) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","fresh",23.073769782083605],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (/.f64 (sin.f64 k) l)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",32.899746969968696],["(/.f64 2 (*.f64 (*.f64 (*.f64 (tan.f64 k) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","fresh",24.55905697540715],["(/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l))))","fresh",27.948783194217107],["(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))","fresh",25.269395469486344]],"compiler":[[22,17],[55,39],[30,21],[64,47],[51,36],[56,39],[64,47],[55,39],[52,36],[28,21],[26,19],[53,37],[28,21],[41,30],[31,22],[51,36]],"count":[[222,16]],"kept":[{"done":[0,0],"fresh":[14,12],"new":[207,4],"picked":[1,0]}],"min-error":[12.843683776900862],"time":67.5849609375,"type":"prune"},{"accuracy":[17.364270521068345],"baseline":[22.15610035290691],"branch":[["t",18.608532959732877,3],["l",17.577079857900248,5],["k",17.364270521068345,4],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))",18.40174380253276,2],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))",18.40174380253276,2],["(*.f64 l l)",17.646483704575832,4],["(*.f64 l l)",17.646483704575832,4]],"compiler":[[4,3],[4,3],[4,3],[28,21],[26,19],[6,4],[6,4],[1336,814]],"count":[[32,4]],"inputs":[["(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (/.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))) (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))))) (cbrt.f64 (cos.f64 k)))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (cbrt.f64 (sin.f64 k)))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 l -2) 1/3) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) 3)) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (sin.f64 k)) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (pow.f64 (pow.f64 l -2) 1/3)) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 t (*.f64 (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 l -2)))) 2) 3))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k)))) (cbrt.f64 (tan.f64 k))) (cbrt.f64 (+.f64 2 (pow.f64 (/.f64 k t) 2))))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) t) (cbrt.f64 (*.f64 (pow.f64 l -2) (sin.f64 k))))))","(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (/.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (*.f64 (sin.f64 k) (tan.f64 k))) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 3))","(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (sin.f64 k) (*.f64 t (cbrt.f64 (pow.f64 l -2)))) (pow.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) 2)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (/.f64 (/.f64 (*.f64 (*.f64 k k) (pow.f64 t 3)) l) l) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (tan.f64 k) (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k)))) (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 3) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) l) (/.f64 (sin.f64 k) l)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (*.f64 (pow.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) 2) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))","(/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l))))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 l -2)) (*.f64 (sin.f64 k) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))"]],"link":["."],"name":["Toniolo and Linder, Equation (10+)"],"oracle":[46.04729400812174],"outputs":[["(/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2))))","(/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))","(/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))))","(/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l))))"]],"time":172.280029296875,"times":[["t",25.77294921875],["l",40.337890625],["k",32.8369140625],["(/.f64 2 (*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)))",5.4150390625],["(*.f64 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (*.f64 l l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))",5.450927734375],["(*.f64 l l)",19.093017578125],["(*.f64 l l)",19.982177734375]],"type":"regimes"},{"bstep":[[2.00661313870352e-61,2.4616092281176456e-57,80.51708984375],[-9.22320596793909e-148,-2.3673123703745498e-160,56.35888671875],[-9780299675.284414,-6636759027.259976,21.130859375]],"compiler":[[32,23],[53,37],[32,23],[53,37],[32,23],[53,37],[32,23],[53,37],[32,23],[53,37],[32,23],[53,37],[32,23],[53,37],[32,23],[53,37],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[53,37],[31,22],[31,22],[23,18],[30,23],[4,3]],"method":["binary-search","binary-search","binary-search"],"time":158.494873046875,"type":"bsearch"},{"compiler":[[138,90]],"inputs":[["(if (<=.f64 k -8000000000) (/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))) (if (<=.f64 k -7597989933253771/31658291388557380359744322690514840324496812684955115509000071179890844813636078997800499335839109758668501942530065835436974724391264154875845907853042325493325666835033489408) (/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))) (if (<=.f64 k 8480865910936245/3533694129556768659166595001485837031654967793751237916243212402585239552) (/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 k -8000000000) (/.f64 2 (/.f64 (*.f64 (pow.f64 k 2) (*.f64 (pow.f64 (sin.f64 k) 2) t)) (*.f64 (cos.f64 k) (pow.f64 l 2)))) (if (<=.f64 k -7597989933253771/31658291388557380359744322690514840324496812684955115509000071179890844813636078997800499335839109758668501942530065835436974724391264154875845907853042325493325666835033489408) (/.f64 2 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 (*.f64 t t) l) (/.f64 t l)) (sin.f64 k)) (tan.f64 k)) (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1))) (if (<=.f64 k 8480865910936245/3533694129556768659166595001485837031654967793751237916243212402585239552) (/.f64 2 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (pow.f64 l -2)) (*.f64 (*.f64 (cbrt.f64 (sin.f64 k)) t) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))))) 2) (*.f64 (*.f64 (*.f64 t (cbrt.f64 (pow.f64 l -2))) (cbrt.f64 (sin.f64 k))) (cbrt.f64 (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2))))))) (/.f64 2 (/.f64 (+.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))))))","(if (<=.f64 k -8000000000) (/.f64 2 (/.f64 (*.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t) (*.f64 (cos.f64 k) (*.f64 l l)))) (if (<=.f64 k -7597989933253771/31658291388557380359744322690514840324496812684955115509000071179890844813636078997800499335839109758668501942530065835436974724391264154875845907853042325493325666835033489408) (/.f64 (/.f64 2 (+.f64 (+.f64 1 (pow.f64 (/.f64 k t) 2)) 1)) (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (sin.f64 k) (tan.f64 k))) (*.f64 l l))) (if (<=.f64 k 8480865910936245/3533694129556768659166595001485837031654967793751237916243212402585239552) (/.f64 2 (*.f64 (*.f64 (*.f64 (sin.f64 k) (pow.f64 t 3)) (*.f64 (tan.f64 k) (+.f64 2 (pow.f64 (/.f64 k t) 2)))) (pow.f64 l -2))) (/.f64 2 (/.f64 (fma.f64 (pow.f64 (*.f64 k (sin.f64 k)) 2) t (*.f64 2 (*.f64 (pow.f64 (sin.f64 k) 2) (pow.f64 t 3)))) (*.f64 (cos.f64 k) (*.f64 l l)))))))"]],"stop":[["fuel",1]],"time":17.89501953125,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[138,90]],"remove-preprocessing":[[]],"time":39.81298828125,"type":"end"}]