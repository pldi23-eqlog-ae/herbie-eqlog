[{"compiler":[[17,11]],"method":["search"],"sampling":[[12,3.299142804693328e-8,1.392971406426073e-8,0.9999999530788579],[11,3.299142804693328e-8,1.392971406426073e-8,0.9999999530788579],[10,3.079199951047106e-8,1.612914260072295e-8,0.9999999530788579],[9,2.0527999673647374e-8,2.6393142437546637e-8,0.9999999530788579],[8,2.0527999673647374e-8,2.6393142437546637e-8,0.9999999530788579],[7,1.759542829169775e-8,2.9325713819496262e-8,0.9999999530788578],[6,0.0,4.692114211119401e-8,0.9999999530788579],[5,0.0,4.692114211119401e-8,0.9999999530788579],[4,0.0,4.692114211119401e-8,0.9999999530788579],[3,0.0,4.692114211119401e-8,0.9999999530788579],[2,0.0,4.692114211119401e-8,0.9999999530788579],[1,0.0,4.692114211119401e-8,0.9999999530788579],[0,0.0,4.692114211119401e-8,0.9999999530788579]],"time":57.900146484375,"type":"analyze"},{"outcomes":[["body",256,"valid",343.701904296875,8256]],"time":351.765869140625,"type":"sample"},{"compiler":[[10,6]],"inputs":[["0","1","2"],["(/.f64 (-.f64 x lo) (-.f64 hi lo))","(/.f64 (-.f64 x hi) (-.f64 lo hi))","(/.f64 (-.f64 lo x) (-.f64 hi x))","(/.f64 (-.f64 hi lo) (-.f64 x lo))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 x lo) (-.f64 hi lo))","(/.f64 (-.f64 x hi) (-.f64 lo hi))","(/.f64 (-.f64 lo x) (-.f64 hi x))","(/.f64 (-.f64 hi lo) (-.f64 x lo))"]],"symmetry":[[]],"time":69.47314453125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 x lo) (-.f64 hi lo))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x lo) (-.f64 hi lo))","(/.f64 (-.f64 lo x) (-.f64 lo hi))"]],"time":18.078857421875,"type":"simplify"},{"compiler":[[17,9]],"time":0.31201171875,"type":"eval"},{"alts":[["(/.f64 (-.f64 lo x) (-.f64 lo hi))","next",62.01279314736873]],"compiler":[[10,6],[10,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[62.01279314736873],"time":0.838134765625,"type":"prune"},{"compiler":[[19,6]],"locations":[["(/.f64 (-.f64 lo x) (-.f64 lo hi))",61.997174331068116,true]],"time":4.764892578125,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (-.f64 lo x) (-.f64 lo hi))","hi","-inf",0.333984375],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","hi","inf",0.489990234375],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","hi","0",0.385986328125],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","x","-inf",0.330078125],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","x","inf",0.52099609375],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","x","0",0.37109375],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","lo","-inf",0.432861328125],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","lo","inf",0.43896484375],["(/.f64 (-.f64 lo x) (-.f64 lo hi))","lo","0",0.62109375]],"time":4.066162109375,"type":"series"},{"count":[[1,73]],"inputs":[["(/.f64 (-.f64 lo x) (-.f64 lo hi))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 lo (-.f64 lo hi)) (/.f64 x (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 hi lo)) (/.f64 lo (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) (*.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 0) (/.f64 (-.f64 x lo) (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 lo hi)) (neg.f64 x)) (/.f64 lo (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 (/.f64 1 (-.f64 lo hi)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) (*.f64 0 (/.f64 (-.f64 x lo) (-.f64 hi lo))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x lo) (-.f64 hi lo))) (/.f64 (-.f64 x lo) (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 (/.f64 x (-.f64 hi lo)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 lo (-.f64 lo hi)) (/.f64 x (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 x lo) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 lo (-.f64 lo hi)) (pow.f64 (-.f64 lo hi) 2)) (/.f64 (*.f64 (-.f64 lo hi) x) (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 hi lo)) (/.f64 lo (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 hi lo)) (/.f64 (-.f64 x lo) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 lo hi)) (/.f64 (-.f64 x lo) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 lo x)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 lo x) 2)) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 lo hi))) (/.f64 (-.f64 lo x) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 x lo) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (-.f64 lo hi))) (pow.f64 (cbrt.f64 (-.f64 lo hi)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 2)) (cbrt.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x lo) (/.f64 1 (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 lo x) (/.f64 1 (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 lo hi)) (-.f64 lo x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x lo) (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 hi lo)) (-.f64 x lo))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))) (cbrt.f64 (/.f64 1 (-.f64 lo hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 lo x) 2)) (-.f64 lo hi)) (cbrt.f64 (-.f64 lo x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x lo) (-.f64 lo hi)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 lo (-.f64 lo hi) (neg.f64 (*.f64 (-.f64 lo hi) x))) (/.f64 1 (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (-.f64 lo hi))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 lo hi))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 lo hi))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 lo (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))) (*.f64 (-.f64 lo hi) (/.f64 x (cbrt.f64 (-.f64 lo hi))))) (*.f64 (-.f64 lo hi) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 lo) (-.f64 lo hi)) (*.f64 (-.f64 hi lo) x)) (*.f64 (-.f64 hi lo) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 lo) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))) (*.f64 (-.f64 hi lo) (/.f64 x (cbrt.f64 (-.f64 lo hi))))) (*.f64 (-.f64 hi lo) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 lo (cbrt.f64 (-.f64 lo hi))) (-.f64 hi lo)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)) (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 lo (cbrt.f64 (-.f64 lo hi))) (-.f64 lo hi)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 lo (cbrt.f64 (-.f64 lo hi))) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)) (/.f64 x (cbrt.f64 (-.f64 lo hi))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 lo (-.f64 hi lo)) (*.f64 (-.f64 lo hi) (neg.f64 x))) (*.f64 (-.f64 lo hi) (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 lo (-.f64 lo hi) (neg.f64 (*.f64 (-.f64 lo hi) x)))) (neg.f64 (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x lo) (-.f64 hi lo))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (-.f64 lo hi))) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 lo (-.f64 lo hi) (neg.f64 (*.f64 (-.f64 lo hi) x))) (pow.f64 (-.f64 lo hi) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 lo x) (-.f64 lo hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 lo hi))) (-.f64 lo x)) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo))) (cbrt.f64 (pow.f64 (-.f64 lo x) 2))) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 2)) (cbrt.f64 (-.f64 lo x))) (cbrt.f64 (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 2)) (cbrt.f64 (-.f64 x lo))) (cbrt.f64 (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (-.f64 lo hi))) 1) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 lo (-.f64 lo hi) (neg.f64 (*.f64 (-.f64 lo hi) x))) 1) (pow.f64 (-.f64 lo hi) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))) (cbrt.f64 (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 lo x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 2))) (cbrt.f64 (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x lo)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 2))) (cbrt.f64 (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (-.f64 lo hi))) 1) (cbrt.f64 (pow.f64 (-.f64 lo hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 lo (-.f64 lo hi) (neg.f64 (*.f64 (-.f64 lo hi) x))) (-.f64 lo hi)) (-.f64 lo hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 lo x) -1) (-.f64 hi lo))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x lo) (cbrt.f64 (-.f64 lo hi))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 lo) (-.f64 hi lo)) (*.f64 (-.f64 hi lo) (neg.f64 x))) (pow.f64 (-.f64 lo hi) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 lo x) (cbrt.f64 (-.f64 lo hi)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x lo) (-.f64 lo hi)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x lo) (-.f64 lo hi)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x lo) (-.f64 hi lo)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 lo) (/.f64 (cbrt.f64 (*.f64 lo lo)) (-.f64 lo hi)) (/.f64 x (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 lo (-.f64 lo hi))) (cbrt.f64 (pow.f64 (/.f64 lo (-.f64 lo hi)) 2)) (/.f64 x (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 lo hi))) (/.f64 lo (cbrt.f64 (pow.f64 (-.f64 lo hi) 2))) (/.f64 x (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 lo (/.f64 1 (-.f64 lo hi)) (/.f64 x (-.f64 hi lo)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 lo (-.f64 lo hi)) (/.f64 x (-.f64 hi lo)))))))"]],"rules":[["egg-rr",73]],"time":22.6318359375,"type":"rewrite"},{"count":[[109,109]],"inputs":[["(/.f64 x hi)","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 lo (+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2)))))))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (*.f64 lo (+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 3))) (/.f64 1 (pow.f64 hi 2))) (pow.f64 lo 2)))))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (*.f64 lo (+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 lo 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 4))) (/.f64 1 (pow.f64 hi 3))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 3))) (/.f64 1 (pow.f64 hi 2))) (pow.f64 lo 2))))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) 1) (*.f64 -1 (/.f64 hi lo)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) (+.f64 (/.f64 (*.f64 hi (-.f64 (*.f64 -1 x) (*.f64 -1 hi))) (pow.f64 lo 2)) 1)) (*.f64 -1 (/.f64 hi lo)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) (+.f64 (/.f64 (*.f64 (pow.f64 hi 2) (-.f64 (*.f64 -1 x) (*.f64 -1 hi))) (pow.f64 lo 3)) (+.f64 (/.f64 (*.f64 hi (-.f64 (*.f64 -1 x) (*.f64 -1 hi))) (pow.f64 lo 2)) 1))) (*.f64 -1 (/.f64 hi lo)))","1","(+.f64 (*.f64 -1 (/.f64 (-.f64 x hi) lo)) 1)","(+.f64 (*.f64 -1 (/.f64 (-.f64 x hi) lo)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x hi) hi) (pow.f64 lo 2))) 1))","(+.f64 (*.f64 -1 (/.f64 (-.f64 x hi) lo)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x hi) hi) (pow.f64 lo 2))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 x hi) (pow.f64 hi 2)) (pow.f64 lo 3))))))","(/.f64 lo (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(*.f64 -1 (/.f64 x (-.f64 lo hi)))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(*.f64 -1 (/.f64 x (-.f64 lo hi)))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) lo)","(-.f64 (+.f64 1 (/.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo 2))) (/.f64 x lo))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 hi 2)) (pow.f64 lo 3)) (/.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo 2)))) (/.f64 x lo))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 hi 2)) (pow.f64 lo 3)) (+.f64 (/.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo 2)) (/.f64 (*.f64 (-.f64 lo x) (pow.f64 hi 3)) (pow.f64 lo 4))))) (/.f64 x lo))","(*.f64 -1 (/.f64 (-.f64 lo x) hi))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (*.f64 -1 (/.f64 (-.f64 lo x) hi)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 3)) (pow.f64 hi 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3))))))","(*.f64 -1 (/.f64 (-.f64 lo x) hi))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (*.f64 -1 (/.f64 (-.f64 lo x) hi)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 3)) (pow.f64 hi 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x hi)","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 lo (+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2)))))))","(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (*.f64 lo (+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 3))) (/.f64 1 (pow.f64 hi 2))) (pow.f64 lo 2)))))","(-.f64 (fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi)) (*.f64 (-.f64 (pow.f64 hi -2) (*.f64 x (pow.f64 hi -3))) (*.f64 lo lo)))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (*.f64 lo (+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 lo 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 4))) (/.f64 1 (pow.f64 hi 3))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 3))) (/.f64 1 (pow.f64 hi 2))) (pow.f64 lo 2))))))","(+.f64 (/.f64 x hi) (fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (neg.f64 (fma.f64 (-.f64 (pow.f64 hi -3) (/.f64 x (pow.f64 hi 4))) (pow.f64 lo 3) (*.f64 (-.f64 (pow.f64 hi -2) (*.f64 x (pow.f64 hi -3))) (*.f64 lo lo))))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) 1) (*.f64 -1 (/.f64 hi lo)))","(+.f64 (/.f64 (-.f64 hi x) lo) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) (+.f64 (/.f64 (*.f64 hi (-.f64 (*.f64 -1 x) (*.f64 -1 hi))) (pow.f64 lo 2)) 1)) (*.f64 -1 (/.f64 hi lo)))","(+.f64 (fma.f64 (*.f64 hi (-.f64 hi x)) (pow.f64 lo -2) 1) (/.f64 (-.f64 hi x) lo))","(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) (+.f64 (/.f64 (*.f64 (pow.f64 hi 2) (-.f64 (*.f64 -1 x) (*.f64 -1 hi))) (pow.f64 lo 3)) (+.f64 (/.f64 (*.f64 hi (-.f64 (*.f64 -1 x) (*.f64 -1 hi))) (pow.f64 lo 2)) 1))) (*.f64 -1 (/.f64 hi lo)))","(+.f64 (fma.f64 (*.f64 (*.f64 hi hi) (-.f64 hi x)) (pow.f64 lo -3) (fma.f64 (*.f64 hi (-.f64 hi x)) (pow.f64 lo -2) 1)) (/.f64 (-.f64 hi x) lo))","1","(+.f64 (*.f64 -1 (/.f64 (-.f64 x hi) lo)) 1)","(+.f64 (/.f64 (-.f64 hi x) lo) 1)","(+.f64 (*.f64 -1 (/.f64 (-.f64 x hi) lo)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x hi) hi) (pow.f64 lo 2))) 1))","(+.f64 (fma.f64 (*.f64 hi (-.f64 hi x)) (pow.f64 lo -2) 1) (/.f64 (-.f64 hi x) lo))","(+.f64 (*.f64 -1 (/.f64 (-.f64 x hi) lo)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x hi) hi) (pow.f64 lo 2))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 x hi) (pow.f64 hi 2)) (pow.f64 lo 3))))))","(+.f64 (fma.f64 (*.f64 (*.f64 hi hi) (-.f64 hi x)) (pow.f64 lo -3) (fma.f64 (*.f64 hi (-.f64 hi x)) (pow.f64 lo -2) 1)) (/.f64 (-.f64 hi x) lo))","(/.f64 lo (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(*.f64 -1 (/.f64 x (-.f64 lo hi)))","(/.f64 x (-.f64 hi lo))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(*.f64 -1 (/.f64 x (-.f64 lo hi)))","(/.f64 x (-.f64 hi lo))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(+.f64 (/.f64 lo (-.f64 lo hi)) (*.f64 -1 (/.f64 x (-.f64 lo hi))))","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(/.f64 (-.f64 lo x) lo)","(-.f64 (+.f64 1 (/.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo 2))) (/.f64 x lo))","(-.f64 (fma.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo -2) 1) (/.f64 x lo))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 hi 2)) (pow.f64 lo 3)) (/.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo 2)))) (/.f64 x lo))","(+.f64 (fma.f64 (*.f64 (-.f64 lo x) (*.f64 hi hi)) (pow.f64 lo -3) (/.f64 (*.f64 (-.f64 lo x) hi) (*.f64 lo lo))) (/.f64 (-.f64 lo x) lo))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 hi 2)) (pow.f64 lo 3)) (+.f64 (/.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo 2)) (/.f64 (*.f64 (-.f64 lo x) (pow.f64 hi 3)) (pow.f64 lo 4))))) (/.f64 x lo))","(+.f64 (fma.f64 (*.f64 (-.f64 lo x) (*.f64 hi hi)) (pow.f64 lo -3) (fma.f64 (*.f64 (-.f64 lo x) hi) (pow.f64 lo -2) (/.f64 (*.f64 (-.f64 lo x) (pow.f64 hi 3)) (pow.f64 lo 4)))) (/.f64 (-.f64 lo x) lo))","(*.f64 -1 (/.f64 (-.f64 lo x) hi))","(/.f64 (-.f64 x lo) hi)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (*.f64 -1 (/.f64 (-.f64 lo x) hi)))","(+.f64 (/.f64 (*.f64 lo (-.f64 x lo)) (*.f64 hi hi)) (/.f64 (-.f64 x lo) hi))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 lo (-.f64 x lo)) (*.f64 hi hi)) (/.f64 (-.f64 x lo) hi)) (*.f64 (*.f64 (-.f64 x lo) (*.f64 lo lo)) (pow.f64 hi -3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 3)) (pow.f64 hi 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3))))))","(+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 lo 3) (-.f64 x lo)) (pow.f64 hi 4)) (+.f64 (/.f64 (*.f64 lo (-.f64 x lo)) (*.f64 hi hi)) (/.f64 (-.f64 x lo) hi))) (*.f64 (*.f64 (-.f64 x lo) (*.f64 lo lo)) (pow.f64 hi -3)))","(*.f64 -1 (/.f64 (-.f64 lo x) hi))","(/.f64 (-.f64 x lo) hi)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (*.f64 -1 (/.f64 (-.f64 lo x) hi)))","(+.f64 (/.f64 (*.f64 lo (-.f64 x lo)) (*.f64 hi hi)) (/.f64 (-.f64 x lo) hi))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 lo (-.f64 x lo)) (*.f64 hi hi)) (/.f64 (-.f64 x lo) hi)) (*.f64 (*.f64 (-.f64 x lo) (*.f64 lo lo)) (pow.f64 hi -3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 3)) (pow.f64 hi 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) lo) (pow.f64 hi 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 lo x) hi)) (*.f64 -1 (/.f64 (*.f64 (-.f64 lo x) (pow.f64 lo 2)) (pow.f64 hi 3))))))","(+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 lo 3) (-.f64 x lo)) (pow.f64 hi 4)) (+.f64 (/.f64 (*.f64 lo (-.f64 x lo)) (*.f64 hi hi)) (/.f64 (-.f64 x lo) hi))) (*.f64 (*.f64 (-.f64 x lo) (*.f64 lo lo)) (pow.f64 hi -3)))"]],"time":131.191162109375,"type":"simplify"},{"compiler":[[1945,734]],"time":16.02490234375,"type":"eval"},{"alts":[["(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) 1) (*.f64 -1 (/.f64 hi lo)))","fresh",57.41412494968762],["1","next",51.981800401920665],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","fresh",52.00112623966347],["(/.f64 x hi)","fresh",61.58274375231911],["(/.f64 (-.f64 x lo) hi)","fresh",52.09486305318341]],"compiler":[[16,12],[4,4],[18,11],[6,4],[8,5],[16,12],[4,4],[18,11],[6,4],[8,5]],"count":[[110,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[109,5],"picked":[1,0]}],"min-error":[51.77940369926338],"time":12.570068359375,"type":"prune"},{"compiler":[[4,4]],"time":0.97802734375,"type":"localize"},{"compiler":[[3,3]],"time":0.0888671875,"type":"eval"},{"alts":[["(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) 1) (*.f64 -1 (/.f64 hi lo)))","fresh",57.41412494968762],["1","done",51.981800401920665],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","next",52.00112623966347],["(/.f64 x hi)","fresh",61.58274375231911],["(/.f64 (-.f64 x lo) hi)","fresh",52.09486305318341]],"compiler":[[16,12],[4,4],[18,11],[6,4],[8,5],[16,12],[18,11],[6,4],[8,5]],"count":[[5,5]],"kept":[{"done":[0,0],"fresh":[4,4],"new":[0,0],"picked":[1,1]}],"min-error":[51.77940369926338],"time":2.217041015625,"type":"prune"},{"compiler":[[47,17]],"locations":[["(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))",0.015625,true],["(/.f64 x (*.f64 hi hi))",0.9837161633853825,true],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))",0.9942669435593842,true]],"time":9.471923828125,"type":"localize"},{"count":[[3,84]],"series":[["(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))","x","-inf",0.1572265625],["(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))","x","inf",0.155029296875],["(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))","x","0",0.184814453125],["(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))","hi","-inf",0.158935546875],["(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))","hi","inf",0.18603515625],["(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))","hi","0",0.160888671875],["(/.f64 x (*.f64 hi hi))","hi","-inf",0.14599609375],["(/.f64 x (*.f64 hi hi))","hi","inf",0.22900390625],["(/.f64 x (*.f64 hi hi))","hi","0",0.2900390625],["(/.f64 x (*.f64 hi hi))","x","-inf",0.343994140625],["(/.f64 x (*.f64 hi hi))","x","inf",0.31689453125],["(/.f64 x (*.f64 hi hi))","x","0",0.31591796875],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","x","-inf",1.012939453125],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","x","inf",0.875],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","x","0",0.5859375],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","hi","-inf",0.491943359375],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","hi","inf",0.4169921875],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","hi","0",0.602783203125],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","lo","-inf",0.26318359375],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","lo","inf",0.336181640625],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","lo","0",1.01904296875]],"time":8.56005859375,"type":"series"},{"count":[[3,176]],"inputs":[["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","(/.f64 x (*.f64 hi hi))","(-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 lo) hi) (+.f64 (*.f64 (neg.f64 lo) (neg.f64 (/.f64 x (*.f64 hi hi)))) (/.f64 x hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) (*.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 0) (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) (*.f64 0 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))) (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x hi) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x hi) (/.f64 (neg.f64 lo) hi)) (*.f64 (neg.f64 lo) (neg.f64 (/.f64 x (*.f64 hi hi)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)) (neg.f64 (/.f64 x hi)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x hi) (*.f64 lo (/.f64 (/.f64 (-.f64 hi x) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 lo (/.f64 (/.f64 (-.f64 hi x) hi) hi)) (neg.f64 (/.f64 x hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (/.f64 x hi)) (*.f64 lo (/.f64 (/.f64 (-.f64 hi x) hi) hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))) (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 2)) (cbrt.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (*.f64 lo (/.f64 (/.f64 (-.f64 hi x) hi) hi)) (neg.f64 (/.f64 x hi))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (neg.f64 (/.f64 x hi)) (*.f64 lo (/.f64 (/.f64 (-.f64 hi x) hi) hi))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 hi) x (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x hi)) (cbrt.f64 (pow.f64 (/.f64 x hi) 2)) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 hi)) (cbrt.f64 (pow.f64 hi -2)) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) hi) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 hi)) (*.f64 x (cbrt.f64 (pow.f64 hi -2))) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x hi) 2)) (cbrt.f64 (/.f64 x hi)) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 -1 hi) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 x hi)) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 hi) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi))) (cbrt.f64 (pow.f64 (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)) 2)) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 lo) (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi)) (pow.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi) 2) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 lo)) (*.f64 (cbrt.f64 (*.f64 lo lo)) (/.f64 (/.f64 (-.f64 hi x) hi) hi)) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) (neg.f64 lo) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 lo (/.f64 (/.f64 (-.f64 hi x) hi) hi)) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)) 1 (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x hi) 1 (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x hi) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)) (/.f64 x hi))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 hi hi)) (*.f64 (/.f64 x (*.f64 hi hi)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (*.f64 hi hi)) 0) (/.f64 x (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 hi hi)) (*.f64 0 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (*.f64 hi hi))) (/.f64 x (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 hi hi))) (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 hi hi))) (cbrt.f64 (pow.f64 (/.f64 x (*.f64 hi hi)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (pow.f64 hi -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (/.f64 (cbrt.f64 x) hi) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) hi) (/.f64 (cbrt.f64 (*.f64 x x)) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 hi)) (/.f64 (cbrt.f64 (pow.f64 hi -2)) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x hi)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x hi) 2)) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 hi -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 hi -2) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 hi) (/.f64 x hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x hi) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 hi -2)) (/.f64 x (cbrt.f64 (pow.f64 hi 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 hi)) (*.f64 (/.f64 x hi) (cbrt.f64 (pow.f64 hi -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x hi) (cbrt.f64 (pow.f64 hi -2))) (cbrt.f64 (/.f64 1 hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 hi -2)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 hi -2)) hi) (/.f64 x (cbrt.f64 hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 x) hi) 2) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (*.f64 hi hi))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x hi) 2)) hi) (cbrt.f64 (/.f64 x hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 hi 4))) (cbrt.f64 (pow.f64 hi -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) hi) (/.f64 (cbrt.f64 x) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 hi -2))) (/.f64 1 (cbrt.f64 (pow.f64 hi 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x hi) (cbrt.f64 hi)) (cbrt.f64 (pow.f64 hi -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x hi)) (/.f64 -1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 hi hi)) 2)) (cbrt.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 hi hi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 hi hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x hi) (cbrt.f64 hi)) (cbrt.f64 (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x hi)) (neg.f64 hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x hi) hi)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (pow.f64 hi -2))) (cbrt.f64 (pow.f64 hi 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 hi hi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (cbrt.f64 (pow.f64 hi -2)))) (neg.f64 (cbrt.f64 (pow.f64 hi 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x hi) (cbrt.f64 hi))) (cbrt.f64 (neg.f64 (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 hi hi)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 hi hi))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 hi hi)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 hi hi)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 hi) (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 x (*.f64 hi hi))) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) (*.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) 0) (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) (*.f64 0 (/.f64 (/.f64 (-.f64 hi x) hi) hi)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (-.f64 hi x) hi) hi)) (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 hi (-.f64 2 3)) (neg.f64 (*.f64 (*.f64 hi x) (pow.f64 hi -3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 hi (*.f64 hi hi)) (/.f64 (*.f64 hi (/.f64 x hi)) (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 hi (-.f64 2 3)) (*.f64 (*.f64 hi x) (pow.f64 hi -3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (-.f64 x hi) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (/.f64 x (*.f64 hi hi))) 0) (/.f64 -1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 -1 hi) (neg.f64 (/.f64 x (*.f64 hi hi)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 x (*.f64 hi hi))) (/.f64 -1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 hi) (neg.f64 (*.f64 hi hi))) (/.f64 (*.f64 (neg.f64 hi) (/.f64 x hi)) (neg.f64 (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 1 hi) 0) (/.f64 x (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (-.f64 x hi) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 x hi) hi) hi) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 hi)) (-.f64 (cbrt.f64 (pow.f64 hi -2)) (*.f64 (/.f64 x hi) (cbrt.f64 (pow.f64 hi -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 -1 hi) (neg.f64 (/.f64 x (*.f64 hi hi)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 x hi))) hi)) (pow.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 hi -2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 hi hi)) 2)) (/.f64 (cbrt.f64 x) hi))) (-.f64 (cbrt.f64 (/.f64 1 hi)) (cbrt.f64 (/.f64 x (*.f64 hi hi)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi) (pow.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi) 2) (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 hi) (/.f64 (-.f64 hi x) hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 hi x) hi) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 hi (-.f64 x hi)) (/.f64 1 (neg.f64 (pow.f64 hi 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 hi (-.f64 hi x)) (pow.f64 hi -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 x hi) (neg.f64 hi) hi)) (neg.f64 (pow.f64 hi -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 hi (-.f64 hi x)) hi) (pow.f64 hi -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 hi -3) (*.f64 hi (-.f64 hi x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 x hi))) hi) (neg.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 hi)) hi) (*.f64 (cbrt.f64 (*.f64 hi hi)) (/.f64 x hi))) (*.f64 hi (cbrt.f64 (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 hi)) (neg.f64 hi)) (*.f64 (cbrt.f64 (*.f64 hi hi)) (neg.f64 (/.f64 x hi)))) (*.f64 (cbrt.f64 (*.f64 hi hi)) (neg.f64 hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 hi)) (neg.f64 (*.f64 hi hi))) (*.f64 (cbrt.f64 (*.f64 hi hi)) (neg.f64 x))) (*.f64 (cbrt.f64 (*.f64 hi hi)) (neg.f64 (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (pow.f64 hi 4))) (*.f64 (neg.f64 hi) (*.f64 x (cbrt.f64 (pow.f64 hi -2))))) (*.f64 (neg.f64 hi) (cbrt.f64 (pow.f64 hi 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (neg.f64 (*.f64 hi hi))) (*.f64 (neg.f64 hi) (/.f64 (/.f64 x hi) (cbrt.f64 hi)))) (*.f64 (neg.f64 hi) (cbrt.f64 (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 hi 4)) (*.f64 hi (*.f64 x (cbrt.f64 (pow.f64 hi -2))))) (*.f64 hi (cbrt.f64 (pow.f64 hi 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (*.f64 hi hi)) (*.f64 hi (/.f64 (/.f64 x hi) (cbrt.f64 hi)))) (*.f64 hi (cbrt.f64 (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 hi (-.f64 hi x)) (pow.f64 hi 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 hi (-.f64 hi x)) hi) (*.f64 hi hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (/.f64 x hi) (neg.f64 hi) hi)) (neg.f64 (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 hi x) hi) hi)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (/.f64 1 hi)) (/.f64 (/.f64 x hi) (cbrt.f64 hi))) (cbrt.f64 (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (neg.f64 (/.f64 x hi))) (neg.f64 hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (/.f64 x hi)) 1) hi)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 hi)) (*.f64 hi hi)) (*.f64 (cbrt.f64 (*.f64 hi hi)) x)) (pow.f64 (cbrt.f64 (*.f64 hi hi)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 hi)) (cbrt.f64 (pow.f64 hi 4))) (*.f64 (cbrt.f64 (*.f64 hi hi)) (*.f64 x (cbrt.f64 (pow.f64 hi -2))))) (*.f64 hi hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 1 hi)) (cbrt.f64 (*.f64 hi hi))) (*.f64 (cbrt.f64 (*.f64 hi hi)) (/.f64 (/.f64 x hi) (cbrt.f64 hi)))) (cbrt.f64 (pow.f64 hi 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 hi (*.f64 (neg.f64 hi) (neg.f64 (/.f64 x hi)))) (*.f64 hi hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 hi) (*.f64 hi (neg.f64 (/.f64 x hi)))) (neg.f64 (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 hi hi) (pow.f64 hi 3)) (*.f64 (pow.f64 hi 3) (*.f64 hi x))) (pow.f64 hi 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x hi) hi) (neg.f64 hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 hi (-.f64 x hi)) (neg.f64 (pow.f64 hi 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 x hi) (neg.f64 hi) hi) (*.f64 hi hi))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 x hi) hi (neg.f64 hi)) (neg.f64 (*.f64 hi hi)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 hi (-.f64 hi x))) hi) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (-.f64 x hi) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (/.f64 (-.f64 x hi) hi) hi) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (-.f64 hi x) hi) hi) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 hi)) (cbrt.f64 (pow.f64 hi -2)) (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (*.f64 hi hi))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 x (*.f64 hi hi)) 2))) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 x (*.f64 hi hi)))) (cbrt.f64 (pow.f64 (/.f64 x (*.f64 hi hi)) 2)) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (pow.f64 hi -2) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (neg.f64 (pow.f64 hi -2)) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 -1 hi) (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 hi)) (cbrt.f64 (neg.f64 (pow.f64 hi -2))) (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 hi -2)) (cbrt.f64 (/.f64 1 hi)) (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 hi) (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 x (*.f64 hi hi))) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (*.f64 hi hi)) (/.f64 1 hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 hi) 1 (neg.f64 (/.f64 x (*.f64 hi hi))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (/.f64 (-.f64 hi x) hi) hi))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (/.f64 (-.f64 hi x) hi) hi))))))"]],"rules":[["egg-rr",83],["egg-rr",47],["egg-rr",46]],"time":35.154052734375,"type":"rewrite"},{"count":[[260,204]],"inputs":[["(/.f64 x hi)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)) (/.f64 x hi))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)) (/.f64 x hi))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)) (/.f64 x hi))","(*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(/.f64 (*.f64 lo x) (pow.f64 hi 2))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (/.f64 lo hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2))))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (/.f64 lo hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2))))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (/.f64 lo hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2))))","(/.f64 (+.f64 (*.f64 -1 lo) x) hi)","(+.f64 (/.f64 x hi) (+.f64 (/.f64 (*.f64 lo x) (pow.f64 hi 2)) (*.f64 -1 (/.f64 lo hi))))","(+.f64 (/.f64 x hi) (+.f64 (/.f64 (*.f64 lo x) (pow.f64 hi 2)) (*.f64 -1 (/.f64 lo hi))))","(+.f64 (/.f64 x hi) (+.f64 (/.f64 (*.f64 lo x) (pow.f64 hi 2)) (*.f64 -1 (/.f64 lo hi))))","(*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi))","(+.f64 (*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2)))","(*.f64 -1 (/.f64 lo hi))","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x)","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x)) (*.f64 -1 (/.f64 lo hi)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x)) (*.f64 -1 (/.f64 lo hi)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x)) (*.f64 -1 (/.f64 lo hi)))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (pow.f64 hi 2))","(*.f64 -1 (/.f64 x (pow.f64 hi 2)))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 1 hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 1 hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 1 hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(*.f64 -1 (/.f64 x (pow.f64 hi 2)))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(*.f64 -1 (/.f64 x (pow.f64 hi 2)))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x hi)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)) (/.f64 x hi))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)) (/.f64 x hi))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)) (/.f64 x hi))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo))","(*.f64 (/.f64 lo hi) (+.f64 (/.f64 x hi) -1))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo))","(*.f64 (/.f64 lo hi) (+.f64 (/.f64 x hi) -1))","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 hi) (/.f64 x (pow.f64 hi 2))) lo)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(/.f64 (*.f64 lo x) (pow.f64 hi 2))","(/.f64 (*.f64 lo x) (*.f64 hi hi))","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (/.f64 lo hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2))))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (/.f64 lo hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2))))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (+.f64 (*.f64 -1 (/.f64 lo hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2))))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(/.f64 (+.f64 (*.f64 -1 lo) x) hi)","(/.f64 (-.f64 x lo) hi)","(+.f64 (/.f64 x hi) (+.f64 (/.f64 (*.f64 lo x) (pow.f64 hi 2)) (*.f64 -1 (/.f64 lo hi))))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (+.f64 (/.f64 (*.f64 lo x) (pow.f64 hi 2)) (*.f64 -1 (/.f64 lo hi))))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (/.f64 x hi) (+.f64 (/.f64 (*.f64 lo x) (pow.f64 hi 2)) (*.f64 -1 (/.f64 lo hi))))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi))","(/.f64 (-.f64 x lo) hi)","(+.f64 (*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (/.f64 (+.f64 lo (*.f64 -1 x)) hi)) (/.f64 (*.f64 lo x) (pow.f64 hi 2)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(*.f64 -1 (/.f64 lo hi))","(neg.f64 (/.f64 lo hi))","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x)","(*.f64 (/.f64 x hi) (+.f64 (/.f64 lo hi) 1))","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (/.f64 lo hi)) (*.f64 (+.f64 (/.f64 lo (pow.f64 hi 2)) (/.f64 1 hi)) x))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x))","(*.f64 (/.f64 x hi) (+.f64 (/.f64 lo hi) 1))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x)) (*.f64 -1 (/.f64 lo hi)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x)) (*.f64 -1 (/.f64 lo hi)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (/.f64 lo (pow.f64 hi 2))) (/.f64 1 hi)) x)) (*.f64 -1 (/.f64 lo hi)))","(/.f64 (-.f64 (/.f64 (*.f64 lo x) hi) (-.f64 lo x)) hi)","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(/.f64 x (pow.f64 hi 2))","(/.f64 x (*.f64 hi hi))","(*.f64 -1 (/.f64 x (pow.f64 hi 2)))","(neg.f64 (/.f64 x (*.f64 hi hi)))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(/.f64 1 hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(/.f64 1 hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(/.f64 1 hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (*.f64 -1 (/.f64 x (pow.f64 hi 2))) (/.f64 1 hi))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(*.f64 -1 (/.f64 x (pow.f64 hi 2)))","(neg.f64 (/.f64 x (*.f64 hi hi)))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(*.f64 -1 (/.f64 x (pow.f64 hi 2)))","(neg.f64 (/.f64 x (*.f64 hi hi)))","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)","(+.f64 (/.f64 1 hi) (*.f64 -1 (/.f64 x (pow.f64 hi 2))))","(/.f64 (-.f64 1 (/.f64 x hi)) hi)"]],"time":292.669921875,"type":"simplify"},{"compiler":[[3717,1145]],"time":30.22509765625,"type":"eval"},{"alts":[["(*.f64 (/.f64 lo hi) (+.f64 (/.f64 x hi) -1))","fresh",52.04987921356082],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","done",52.00112623966347],["(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) 1) (*.f64 -1 (/.f64 hi lo)))","fresh",57.41412494968762],["1","done",51.981800401920665],["(fma.f64 (neg.f64 lo) (-.f64 (pow.f64 hi (-.f64 2 3)) (*.f64 (*.f64 hi x) (pow.f64 hi -3))) (/.f64 x hi))","fresh",58.24130193645382],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))) 3)","fresh",51.96879123962639],["(/.f64 (-.f64 x lo) hi)","fresh",52.09486305318341],["(neg.f64 (/.f64 lo hi))","next",51.96652907144435],["(fma.f64 (/.f64 x (cbrt.f64 hi)) (cbrt.f64 (pow.f64 hi -2)) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))","fresh",52.04987921356082]],"compiler":[[12,8],[18,11],[16,12],[4,4],[22,15],[19,12],[8,5],[7,5],[21,13],[12,8],[16,12],[22,15],[19,12],[8,5],[7,5],[21,13]],"count":[[209,9]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[204,5],"picked":[1,1]}],"min-error":[51.777732334770675],"time":33.676025390625,"type":"prune"},{"compiler":[[12,5]],"time":2.794921875,"type":"localize"},{"compiler":[[3,3]],"time":0.094970703125,"type":"eval"},{"alts":[["(*.f64 (/.f64 lo hi) (+.f64 (/.f64 x hi) -1))","fresh",52.04987921356082],["(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","done",52.00112623966347],["(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) 1) (*.f64 -1 (/.f64 hi lo)))","fresh",57.41412494968762],["1","done",51.981800401920665],["(fma.f64 (neg.f64 lo) (-.f64 (pow.f64 hi (-.f64 2 3)) (*.f64 (*.f64 hi x) (pow.f64 hi -3))) (/.f64 x hi))","fresh",58.24130193645382],["(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))) 3)","fresh",51.96879123962639],["(/.f64 (-.f64 x lo) hi)","fresh",52.09486305318341],["(neg.f64 (/.f64 lo hi))","done",51.96652907144435],["(fma.f64 (/.f64 x (cbrt.f64 hi)) (cbrt.f64 (pow.f64 hi -2)) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))","fresh",52.04987921356082]],"compiler":[[12,8],[18,11],[16,12],[4,4],[22,15],[19,12],[8,5],[7,5],[21,13]],"count":[[9,9]],"kept":[{"done":[2,2],"fresh":[6,6],"new":[0,0],"picked":[1,1]}],"min-error":[51.777732334770675],"time":2.4951171875,"type":"prune"},{"accuracy":[51.966529071444334],"baseline":[51.96652907144435],"branch":[["lo",51.96652907144434,1],["hi",51.966529071444334,1],["x",51.96652907144439,1],["(/.f64 (-.f64 x lo) (-.f64 hi lo))",51.96652907144434,1],["(/.f64 (-.f64 x lo) (-.f64 hi lo))",51.96652907144434,1]],"compiler":[[4,3],[4,3],[4,3],[10,6],[10,6],[120,60]],"count":[[12,1]],"inputs":[["(*.f64 (/.f64 lo hi) (+.f64 (/.f64 x hi) -1))","(fma.f64 (neg.f64 lo) (-.f64 (pow.f64 hi (-.f64 2 3)) (*.f64 (*.f64 hi x) (pow.f64 hi -3))) (/.f64 x hi))","(pow.f64 (cbrt.f64 (fma.f64 (neg.f64 lo) (/.f64 (/.f64 (-.f64 hi x) hi) hi) (/.f64 x hi))) 3)","(neg.f64 (/.f64 lo hi))","(fma.f64 (/.f64 x (cbrt.f64 hi)) (cbrt.f64 (pow.f64 hi -2)) (*.f64 lo (/.f64 (/.f64 (-.f64 x hi) hi) hi)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 x lo)) 1) (*.f64 -1 (/.f64 hi lo)))","1","(fma.f64 (neg.f64 lo) (-.f64 (/.f64 1 hi) (/.f64 x (*.f64 hi hi))) (/.f64 x hi))","(/.f64 x hi)","(/.f64 (-.f64 x lo) hi)","(/.f64 (-.f64 lo x) (-.f64 lo hi))","(/.f64 (-.f64 x lo) (-.f64 hi lo))"]],"link":["."],"name":["(/ (- x lo) (- hi lo))"],"oracle":[63.256121749974064],"outputs":[["(neg.f64 (/.f64 lo hi))"]],"time":21.718994140625,"times":[["lo",4.6708984375],["hi",4.870849609375],["x",4.760986328125],["(/.f64 (-.f64 x lo) (-.f64 hi lo))",3.108154296875],["(/.f64 (-.f64 x lo) (-.f64 hi lo))",1.891845703125]],"type":"regimes"},{"compiler":[[7,5]],"inputs":[["(neg.f64 (/.f64 lo hi))"]],"method":["egg-herbie"],"outputs":[["(neg.f64 (/.f64 lo hi))"]],"stop":[["fuel",1]],"time":37.27587890625,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[7,5]],"remove-preprocessing":[[]],"time":7.22607421875,"type":"end"}]