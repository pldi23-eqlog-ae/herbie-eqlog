[{"compiler":[[9,6]],"method":["search"],"sampling":[[12,0.5187705894327337,0.4212573207423702,0.0599720898248961],[11,0.43685944373282837,0.5031684664422755,0.0599720898248961],[10,0.37445095177099574,0.5694774891517227,0.05607155907728156],[9,0.2808382138282468,0.7176976575610752,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":71.611083984375,"type":"analyze"},{"outcomes":[["body",256,"invalid",21.0234375,612],["body",256,"valid",287.939697265625,8256]],"time":317.968017578125,"type":"sample"},{"compiler":[[8,5]],"inputs":[["0","1","2"],["(-.f64 x (*.f64 y z))","(-.f64 y (*.f64 x z))","(-.f64 z (*.f64 y x))","(-.f64 x (*.f64 z y))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(-.f64 x (*.f64 y z))","(fma.f64 (neg.f64 z) y x)","(-.f64 y (*.f64 x z))","(fma.f64 (neg.f64 z) x y)","(-.f64 z (*.f64 y x))","(fma.f64 (neg.f64 y) x z)","(-.f64 x (*.f64 z y))","(fma.f64 (neg.f64 z) y x)"]],"symmetry":[[]],"time":64.841064453125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 x (*.f64 y z))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (*.f64 y z))","(fma.f64 (neg.f64 y) z x)"]],"time":36.35791015625,"type":"simplify"},{"compiler":[[13,7]],"time":0.281005859375,"type":"eval"},{"alts":[["(fma.f64 (neg.f64 y) z x)","next",0]],"compiler":[[8,5],[8,5]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0],"time":0.81396484375,"type":"prune"},{"compiler":[[13,5]],"time":3.343994140625,"type":"localize"},{"compiler":[[3,3]],"time":0.119140625,"type":"eval"},{"alts":[["(fma.f64 (neg.f64 y) z x)","done",0]],"compiler":[[8,5]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.466796875,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["y",0,1],["z",0,1],["(-.f64 x (*.f64 y z))",0,1],["(*.f64 y z)",0,1]],"compiler":[[4,3],[4,3],[4,3],[8,5],[6,4],[13,7]],"count":[[2,1]],"inputs":[["(fma.f64 (neg.f64 y) z x)","(-.f64 x (*.f64 y z))"]],"link":["."],"name":["Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, C"],"oracle":[0.00390625],"outputs":[["(fma.f64 (neg.f64 y) z x)"]],"time":12.674072265625,"times":[["x",2.325927734375],["y",2.365966796875],["z",2.342041015625],["(-.f64 x (*.f64 y z))",2.808837890625],["(*.f64 y z)",2.305908203125]],"type":"regimes"},{"compiler":[[8,5]],"inputs":[["(fma.f64 (neg.f64 y) z x)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (neg.f64 y) z x)"]],"stop":[["done",1]],"time":32.468994140625,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[8,5]],"remove-preprocessing":[[]],"time":7.93798828125,"type":"end"}]