[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[11,0.8468286627903581,0.15219501312822104,0.0009763240814208984],[10,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[9,0.7024385221302509,0.29658515378832817,0.0009763240814208984],[8,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[7,0.43707285821437836,0.5619508177042007,0.0009763240814208984],[6,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":32.61083984375,"type":"analyze"},{"outcomes":[["body",256,"valid",309.732177734375,8256]],"time":317.524169921875,"type":"sample"},{"compiler":[[11,7]],"inputs":[["0","1"],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","(/.f64 (*.f64 (*.f64 y 2) x) (-.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","(/.f64 (*.f64 (+.f64 y y) x) (-.f64 x y))","(/.f64 (*.f64 (*.f64 y 2) x) (-.f64 y x))","(/.f64 (*.f64 (+.f64 y y) x) (-.f64 y x))"]],"symmetry":[[]],"time":58.199951171875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","(/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))"]],"time":17.509033203125,"type":"simplify"},{"compiler":[[20,12]],"time":0.325927734375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","next",13.097266994459217]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[13.097266994459217],"time":0.841064453125,"type":"prune"},{"compiler":[[25,13]],"locations":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))",12.76653728624451,true]],"time":5.7158203125,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","y","-inf",0.33203125],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","y","inf",0.407958984375],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","y","0",0.298828125],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","x","-inf",0.359130859375],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","x","inf",0.48388671875],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))","x","0",0.569091796875]],"time":2.548095703125,"type":"series"},{"count":[[1,65]],"inputs":[["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (*.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 0) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (*.f64 0 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)) (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 x x) y) 2)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (*.f64 x y)) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (+.f64 y y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (+.f64 x x) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) y) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (*.f64 (+.f64 x x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 x x) y) 2)) (-.f64 x y)) (cbrt.f64 (*.f64 (+.f64 x x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (-.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 y (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 x (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (*.f64 -2 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) (/.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 x y))) (+.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (*.f64 (+.f64 x x) y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (+.f64 x x)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)) (cbrt.f64 (*.f64 (+.f64 x x) y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)) (cbrt.f64 (*.f64 -2 (*.f64 x y)))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 x x) y) 2))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (+.f64 y y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 (*.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 3))))))"]],"rules":[["egg-rr",65]],"time":21.427978515625,"type":"rewrite"},{"count":[[89,79]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (*.f64 (/.f64 (*.f64 x x) y) (+.f64 (/.f64 x y) 1)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 (+.f64 (*.f64 (pow.f64 y -2) (+.f64 (/.f64 (pow.f64 x 4) y) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 (/.f64 y x) 1)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 (/.f64 y x) 1)) y) (*.f64 (pow.f64 y 4) (pow.f64 x -3))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 (/.f64 y x) 1)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 (/.f64 y x) 1)) y) (*.f64 (pow.f64 y 4) (pow.f64 x -3))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 (/.f64 y x) 1)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 (/.f64 y x) 1)) y) (*.f64 (pow.f64 y 4) (pow.f64 x -3))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (*.f64 (/.f64 (*.f64 x x) y) (+.f64 (/.f64 x y) 1)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 (+.f64 (*.f64 (pow.f64 y -2) (+.f64 (/.f64 (pow.f64 x 4) y) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (*.f64 (/.f64 (*.f64 x x) y) (+.f64 (/.f64 x y) 1)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 (+.f64 (*.f64 (pow.f64 y -2) (+.f64 (/.f64 (pow.f64 x 4) y) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 x x) y) x)))"]],"time":111.325927734375,"type":"simplify"},{"compiler":[[1248,519]],"time":11.901123046875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","fresh",8.404937606765731],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) 3)","fresh",13.589730916892611],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","next",6.770667468007526]],"compiler":[[11,6],[14,10],[11,6],[11,6],[14,10],[11,6]],"count":[[80,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[79,3],"picked":[1,0]}],"min-error":[0],"time":13.825927734375,"type":"prune"},{"compiler":[[24,6]],"locations":[["(/.f64 y (-.f64 x y))",0.01171875,true],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))",6.762854968007527,true]],"time":5.43115234375,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 y (-.f64 x y))","x","-inf",0.257080078125],["(/.f64 y (-.f64 x y))","x","inf",0.233154296875],["(/.f64 y (-.f64 x y))","x","0",0.208984375],["(/.f64 y (-.f64 x y))","y","-inf",0.2041015625],["(/.f64 y (-.f64 x y))","y","inf",0.27099609375],["(/.f64 y (-.f64 x y))","y","0",0.26513671875],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","y","-inf",0.208984375],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","y","inf",0.183837890625],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","y","0",0.198974609375],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","x","-inf",0.23095703125],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","x","inf",0.220947265625],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","x","0",0.216064453125]],"time":2.85986328125,"type":"series"},{"count":[[2,154]],"inputs":[["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","(/.f64 y (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (-.f64 x y)) (/.f64 (*.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (*.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 0) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 x y)) 1) (*.f64 (/.f64 (*.f64 x y) (-.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (*.f64 0 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (+.f64 x x) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 y x))) (/.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) -1) (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) (cbrt.f64 y)) -1) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) (cbrt.f64 y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x x)) -1) (/.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4)) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4)) y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (-.f64 x y))) (/.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4)) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 x x)) (-.f64 x y)) (/.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4)) y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 -1) (/.f64 (*.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (cbrt.f64 (-.f64 x y))) (/.f64 (*.f64 x y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) -1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) 2) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) 2) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) 1) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) 2) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)) (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y 2) (-.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (-.f64 x y)) (cbrt.f64 (+.f64 x x))) (cbrt.f64 (*.f64 (*.f64 x x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) y) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x x)) (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4)) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (+.f64 x x) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (*.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (*.f64 (+.f64 x x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4)) (*.f64 (/.f64 y (-.f64 x y)) (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (*.f64 y 2) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (+.f64 x x)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 4)) (/.f64 y (-.f64 x y))) (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (-.f64 x y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (*.f64 x y)) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 (+.f64 x x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) (cbrt.f64 y)) 1) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) (cbrt.f64 y)) (-.f64 x y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 y (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y -1) (/.f64 (+.f64 x x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (-.f64 x y)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x x) y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)) (cbrt.f64 (*.f64 (+.f64 x x) y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (+.f64 x x)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 (*.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (+.f64 x x))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (+.f64 x x))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 y x)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 x x) (/.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y (-.f64 x y)) (/.f64 (*.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 x y)) x (/.f64 (*.f64 x y) (-.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 (/.f64 y (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 0 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 y x))) (/.f64 (neg.f64 (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) -1) (/.f64 (neg.f64 (cbrt.f64 (*.f64 y y))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 y)) 1) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) -1) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) -1) (/.f64 (cbrt.f64 y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 x y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y x))) (/.f64 y (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 y x))) (/.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y -1) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2)) (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (cbrt.f64 y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 y (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3))))))"]],"rules":[["egg-rr",60],["egg-rr",94]],"time":29.135986328125,"type":"rewrite"},{"count":[[202,182]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 2)) (+.f64 (/.f64 (*.f64 x x) y) x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 2)) (+.f64 (/.f64 (*.f64 x x) y) x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 y (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 y (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 y (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 2)) (+.f64 (/.f64 (*.f64 x x) y) x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 2)) (+.f64 (/.f64 (*.f64 x x) y) x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 2)) (+.f64 (/.f64 (*.f64 x x) y) x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (*.f64 x (pow.f64 (/.f64 x y) 2)) (+.f64 (/.f64 (*.f64 x x) y) x))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))) (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(+.f64 (neg.f64 (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (neg.f64 (pow.f64 (/.f64 x y) 2)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (-.f64 (-.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) (pow.f64 (/.f64 x y) 2)) -1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))) (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))) (pow.f64 (pow.f64 (/.f64 y x) 2) 2))"]],"time":150.85498046875,"type":"simplify"},{"compiler":[[2936,1069]],"time":26.131103515625,"type":"eval"},{"alts":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","next",8.404937606765731],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","done",6.770667468007526],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","fresh",16.082294830361366]],"compiler":[[11,6],[11,6],[21,11],[11,6],[21,11]],"count":[[185,3]],"kept":[{"done":[0,0],"fresh":[2,0],"new":[182,2],"picked":[1,1]}],"min-error":[0],"time":48.6689453125,"type":"prune"},{"compiler":[[26,6]],"locations":[["(/.f64 (+.f64 x x) (-.f64 x y))",0.01953125,true],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)",8.40884385676573,true]],"time":4.672119140625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (+.f64 x x) (-.f64 x y))","y","-inf",0.23193359375],["(/.f64 (+.f64 x x) (-.f64 x y))","y","inf",0.261962890625],["(/.f64 (+.f64 x x) (-.f64 x y))","y","0",0.180908203125],["(/.f64 (+.f64 x x) (-.f64 x y))","x","-inf",0.239013671875],["(/.f64 (+.f64 x x) (-.f64 x y))","x","inf",0.375],["(/.f64 (+.f64 x x) (-.f64 x y))","x","0",0.361083984375],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","y","-inf",0.208984375],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","y","inf",0.183837890625],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","y","0",0.173095703125],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","x","-inf",0.218017578125],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","x","inf",0.19189453125],["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","x","0",0.253173828125]],"time":3.0439453125,"type":"series"},{"count":[[2,114]],"inputs":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","(/.f64 (+.f64 x x) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (*.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 0) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (*.f64 0 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)) (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (*.f64 -2 x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) y) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (*.f64 -2 x) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) y) (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) (*.f64 y (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (*.f64 -2 x) (-.f64 y x))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (*.f64 (+.f64 x x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (*.f64 x y)) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x x) y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2)) (cbrt.f64 (*.f64 (+.f64 x x) y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) 2)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 (*.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 x x) y)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) y)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 (*.f64 x y)) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 y x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 y (/.f64 (+.f64 x x) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) (*.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 0) (/.f64 (*.f64 -2 x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x y)) (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) (*.f64 0 (/.f64 (*.f64 -2 x) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 -2 x) (-.f64 y x))) (/.f64 (*.f64 -2 x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 (+.f64 x x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 x x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 x x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 x) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x x)) (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 8 (-.f64 x y))) (/.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 -1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 y x)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 -2 x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 4 (*.f64 x x))) (-.f64 x y)) (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (/.f64 -1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 x y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (*.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (/.f64 8 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x x) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 8 (-.f64 x y))) x) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 y x))) (+.f64 x x)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) (cbrt.f64 (+.f64 x x))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2)) (cbrt.f64 (*.f64 -2 x))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))) (cbrt.f64 (*.f64 4 (*.f64 x x)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (/.f64 x (cbrt.f64 (pow.f64 (-.f64 x y) 2)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -2 x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y))) 1) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x x) -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) (cbrt.f64 (-.f64 x y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 x x) (cbrt.f64 (-.f64 x y)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 x) (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 x x) (-.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 -2 x) (-.f64 y x)) 3))))))"]],"rules":[["egg-rr",54],["egg-rr",60]],"time":27.15087890625,"type":"rewrite"},{"count":[[162,143]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 x x) y) x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 x x) y) x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)) y)))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)) y)))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)) y))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 (fma.f64 (pow.f64 y 3) (pow.f64 x (neg.f64 2)) (/.f64 (*.f64 y y) x)) y)))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 x x) y) x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 x x) y) x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 x x) y) x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 x x) y) x))))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 (/.f64 y x) 2 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(fma.f64 2 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 (/.f64 y x) 2 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(fma.f64 2 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 (/.f64 y x) 2 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(fma.f64 2 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (*.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)))))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (pow.f64 (/.f64 x y) 2) (pow.f64 (/.f64 x y) 3))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 2)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))"]],"time":145.123046875,"type":"simplify"},{"compiler":[[2257,1057]],"time":23.875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","done",8.404937606765731],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","done",6.770667468007526],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","next",16.082294830361366]],"compiler":[[11,6],[11,6],[21,11],[21,11]],"count":[[146,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[143,0],"picked":[1,1]}],"min-error":[0],"time":31.945068359375,"type":"prune"},{"compiler":[[71,21]],"locations":[["(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))",0.1328125,true],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))",6.762854968007527,true],["(cbrt.f64 (/.f64 y (-.f64 x y)))",6.987268173744667,true],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))",14.411355037362094,true]],"time":11.9189453125,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))","x","-inf",0.3359375],["(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))","x","inf",0.19091796875],["(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))","x","0",0.2109375],["(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))","y","-inf",0.33203125],["(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))","y","inf",0.22412109375],["(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))","y","0",0.206787109375],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","y","-inf",0.490966796875],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","y","inf",0.27197265625],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","y","0",0.216064453125],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","x","-inf",0.492919921875],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","x","inf",0.25390625],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","x","0",0.2431640625],["(cbrt.f64 (/.f64 y (-.f64 x y)))","x","-inf",0.710205078125],["(cbrt.f64 (/.f64 y (-.f64 x y)))","x","inf",0.68408203125],["(cbrt.f64 (/.f64 y (-.f64 x y)))","x","0",0.967041015625],["(cbrt.f64 (/.f64 y (-.f64 x y)))","y","-inf",1.050048828125],["(cbrt.f64 (/.f64 y (-.f64 x y)))","y","inf",0.909912109375],["(cbrt.f64 (/.f64 y (-.f64 x y)))","y","0",0.47900390625],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))","x","-inf",1.482177734375],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))","x","inf",1.810791015625],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))","x","0",0.4150390625],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))","y","-inf",0.575927734375],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))","y","inf",0.654052734375],["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))","y","0",1.071044921875]],"time":14.68798828125,"type":"series"},{"count":[[4,218]],"inputs":[["(cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))","(cbrt.f64 (/.f64 y (-.f64 x y)))","(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","(*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) 0) (pow.f64 (/.f64 y (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (*.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (pow.f64 (/.f64 y (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (*.f64 0 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y x))) (cbrt.f64 (/.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 4) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 1))) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))) (pow.f64 (-.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))) (/.f64 (pow.f64 y 2/3) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 y 2/3)) 1) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 4))) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 y 2/3)) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 4))) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 4))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 y) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))) (/.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 4)) (pow.f64 (/.f64 y (-.f64 x y)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (/.f64 (/.f64 y (-.f64 x y)) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (*.f64 y y))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 y 2/3) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))) 1) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 1)))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 y 2/3) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))) 1) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 y 2/3)) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y)))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 y x))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 0) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 0 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (pow.f64 (-.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 y)) (neg.f64 (pow.f64 (-.f64 x y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 y)) 1) (/.f64 (cbrt.f64 (pow.f64 y 2/3)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (/.f64 (pow.f64 y 2/3) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -1/3)) (cbrt.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 4)) (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 1)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) 1) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 y (-.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (-.f64 x y)) (/.f64 (*.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 0) (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) (*.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))) (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) (*.f64 0 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) (-.f64 x y)) 1) (*.f64 (/.f64 (*.f64 x y) (-.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x x)) (*.f64 (pow.f64 (+.f64 x x) 2/3) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x x) 2/3) (/.f64 y (-.f64 x y))) (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))) (pow.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 2/3) (cbrt.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (+.f64 x x) (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y 2) (-.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (-.f64 x y)) (cbrt.f64 (+.f64 x x))) (pow.f64 (+.f64 x x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (/.f64 y (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (*.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 4) (*.f64 (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x x) 2/3) (*.f64 (/.f64 y (-.f64 x y)) (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (*.f64 y 2) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (-.f64 x y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (*.f64 (+.f64 x x) (cbrt.f64 y))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 y 2/3)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y)))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x x) (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x x) (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (/.f64 y (pow.f64 (-.f64 x y) 2/3))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (neg.f64 y)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (/.f64 y (cbrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 x x) (cbrt.f64 y)) (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 2/3) (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))) (*.f64 (+.f64 x x) (cbrt.f64 (/.f64 y (-.f64 x y))))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (*.f64 (+.f64 x x) (pow.f64 (/.f64 y (-.f64 x y)) 2/3))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (*.f64 (+.f64 x x) (pow.f64 (/.f64 y (-.f64 x y)) 2/3))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (+.f64 x x)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3)) (+.f64 x x)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (+.f64 x x)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (+.f64 x x)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 y x)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 x x) (/.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (+.f64 x x) y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 x y)) x (/.f64 (*.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y (-.f64 x y)) (/.f64 (*.f64 x y) (-.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 (/.f64 y (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (*.f64 0 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 y x)) (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 2/3) -1) (/.f64 (cbrt.f64 y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y -1) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) -1) (/.f64 (neg.f64 (pow.f64 y 2/3)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (pow.f64 (/.f64 y (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/3)) (/.f64 y (neg.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/3) (/.f64 y (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (pow.f64 y 2/3) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 4)) (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 4) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 4)) (/.f64 y (-.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 2/3) (-.f64 x y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 2))) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3)) (pow.f64 (-.f64 x y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (/.f64 y (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) -1) (/.f64 (pow.f64 y 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (/.f64 (cbrt.f64 y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y y) (-.f64 x y))) (/.f64 (cbrt.f64 y) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/3)) (/.f64 (neg.f64 y) (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y x))) (/.f64 (pow.f64 y 2/3) (neg.f64 (pow.f64 (-.f64 x y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 y)) 1) (/.f64 (pow.f64 y 2/3) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 y x))) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (/.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 2)))) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (pow.f64 y 2/3)) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2/3) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 x y) -1/3) y) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (pow.f64 (/.f64 y (-.f64 x y)) 2/3)) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3)) 1) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) 1) (pow.f64 (-.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3)) 1) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 x y))) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (pow.f64 (-.f64 x y) 2/3))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (neg.f64 (pow.f64 (-.f64 x y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 y) (pow.f64 (/.f64 y (-.f64 x y)) 2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3))))))"]],"rules":[["egg-rr",77],["egg-rr",56],["egg-rr",35],["egg-rr",50]],"time":40.1650390625,"type":"rewrite"},{"count":[[290,297]],"inputs":[["1","(+.f64 1 (*.f64 2/3 (/.f64 x y)))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 8/27 (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y)))))","1","(+.f64 1 (*.f64 2/3 (/.f64 x y)))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -8/27 (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y)))))","1","(+.f64 1 (*.f64 2/3 (/.f64 x y)))","(+.f64 1 (+.f64 (*.f64 5/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y))))","(+.f64 1 (+.f64 (*.f64 5/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 x y)) (*.f64 40/81 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(cbrt.f64 -1)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 (*.f64 y (cbrt.f64 -1)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) x)) (*.f64 -2 (*.f64 y (cbrt.f64 -1))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 -2 (*.f64 y (cbrt.f64 -1)))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (*.f64 y (cbrt.f64 -1))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 4) (cbrt.f64 -1)) (pow.f64 x 3))))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 (*.f64 (cbrt.f64 -1) x))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) y)) (*.f64 2 (*.f64 (cbrt.f64 -1) x)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 3)) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) y)) (*.f64 2 (*.f64 (cbrt.f64 -1) x))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 4)) (pow.f64 y 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 3)) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) y)) (*.f64 2 (*.f64 (cbrt.f64 -1) x)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) (pow.f64 y 2)) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 3)) (pow.f64 y 3)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) (pow.f64 y 2)) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 2/3 (/.f64 x y)))","(+.f64 1 (/.f64 (*.f64 2/3 x) y))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) (+.f64 7/3 -4)) (*.f64 y y)) (/.f64 (*.f64 2/3 x) y)))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 8/27 (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y)))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (fma.f64 2 (pow.f64 x 3) (+.f64 (*.f64 x (+.f64 (*.f64 -4/3 (*.f64 (*.f64 x x) (+.f64 7/3 -4))) (*.f64 2 (*.f64 -3 (*.f64 x x))))) (*.f64 8/27 (pow.f64 x 3)))) (pow.f64 y -3)) (/.f64 (*.f64 (*.f64 x x) (+.f64 7/3 -4)) (*.f64 y y)))) (+.f64 1 (/.f64 (*.f64 2/3 x) y)))","1","(+.f64 1 (*.f64 2/3 (/.f64 x y)))","(+.f64 1 (/.f64 (*.f64 2/3 x) y))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) (+.f64 7/3 -4)) (*.f64 y y)) (/.f64 (*.f64 2/3 x) y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -8/27 (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y)))))","(+.f64 1 (fma.f64 1/3 (*.f64 (+.f64 (*.f64 x (+.f64 (*.f64 4/3 (*.f64 (*.f64 x x) (+.f64 7/3 -4))) (*.f64 -2 (*.f64 -3 (*.f64 x x))))) (*.f64 (pow.f64 x 3) -62/27)) (pow.f64 y -3)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) (+.f64 7/3 -4)) (*.f64 y y)) (/.f64 (*.f64 2/3 x) y))))","1","(+.f64 1 (*.f64 2/3 (/.f64 x y)))","(+.f64 1 (/.f64 (*.f64 2/3 x) y))","(+.f64 1 (+.f64 (*.f64 5/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2/3 (/.f64 x y))))","(+.f64 1 (fma.f64 5/9 (pow.f64 (/.f64 x y) 2) (/.f64 (*.f64 2/3 x) y)))","(+.f64 1 (+.f64 (*.f64 5/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2/3 (/.f64 x y)) (*.f64 40/81 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 1 (fma.f64 5/9 (pow.f64 (/.f64 x y) 2) (fma.f64 2/3 (/.f64 x y) (*.f64 40/81 (pow.f64 (/.f64 x y) 3)))))","(cbrt.f64 -1)","-1","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 -1 (/.f64 (*.f64 -1/3 x) y))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(fma.f64 -1/3 (*.f64 (neg.f64 (*.f64 (*.f64 x x) -2/3)) (pow.f64 y -2)) (+.f64 -1 (/.f64 (*.f64 -1/3 x) y)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(fma.f64 -1/3 (*.f64 (neg.f64 (*.f64 (*.f64 x x) -2/3)) (pow.f64 y -2)) (+.f64 -1 (*.f64 -1/3 (+.f64 (*.f64 (fma.f64 2/3 (*.f64 (*.f64 (*.f64 x x) -2/3) x) (*.f64 26/27 (pow.f64 x 3))) (pow.f64 y -3)) (/.f64 x y)))))","(cbrt.f64 -1)","-1","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (cbrt.f64 -1))","(fma.f64 1/3 (neg.f64 (/.f64 x y)) -1)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2)))))","(+.f64 (fma.f64 1/3 (neg.f64 (/.f64 x y)) -1) (*.f64 -1/3 (*.f64 (neg.f64 (*.f64 (*.f64 x x) -2/3)) (pow.f64 y -2))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2))))))","(+.f64 (+.f64 (*.f64 1/3 (+.f64 (/.f64 (fma.f64 2/3 (*.f64 (*.f64 (*.f64 x x) -2/3) x) (*.f64 26/27 (pow.f64 x 3))) (neg.f64 (pow.f64 y 3))) (neg.f64 (/.f64 x y)))) (*.f64 -1/3 (*.f64 (neg.f64 (*.f64 (*.f64 x x) -2/3)) (pow.f64 y -2)))) -1)","(cbrt.f64 -1)","-1","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 -1 (/.f64 (*.f64 -1/3 x) y))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(+.f64 -1 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (pow.f64 y -2) (+.f64 1 -1/3)) (*.f64 x x)) (/.f64 x y))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(fma.f64 1/3 (*.f64 (-.f64 (*.f64 (pow.f64 y -3) (-.f64 1/27 1)) (*.f64 2 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y -2) (+.f64 1 -1/3)) y)))) (pow.f64 x 3)) (+.f64 -1 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (pow.f64 y -2) (+.f64 1 -1/3)) (*.f64 x x)) (/.f64 x y)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (+.f64 (/.f64 (*.f64 x x) y) x) (*.f64 (pow.f64 x 3) (pow.f64 y -2))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (*.f64 (pow.f64 x 4) (pow.f64 y -3)) (*.f64 -2 (+.f64 (+.f64 (/.f64 (*.f64 x x) y) x) (*.f64 (pow.f64 x 3) (pow.f64 y -2)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 y (+.f64 (*.f64 (pow.f64 y 3) (pow.f64 x -2)) (/.f64 (*.f64 y y) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (*.f64 (pow.f64 y 4) (pow.f64 x -3)) (*.f64 2 (+.f64 y (+.f64 (*.f64 (pow.f64 y 3) (pow.f64 x -2)) (/.f64 (*.f64 y y) x)))))","(*.f64 -2 (*.f64 y (cbrt.f64 -1)))","(*.f64 -2 (neg.f64 y))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) x)) (*.f64 -2 (*.f64 y (cbrt.f64 -1))))","(*.f64 -2 (+.f64 (neg.f64 (/.f64 (*.f64 y y) x)) (neg.f64 y)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 -2 (*.f64 y (cbrt.f64 -1)))))","(*.f64 -2 (+.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 x -2)) (neg.f64 y)) (neg.f64 (/.f64 (*.f64 y y) x))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) x)) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (*.f64 y (cbrt.f64 -1))) (*.f64 -2 (/.f64 (*.f64 (pow.f64 y 4) (cbrt.f64 -1)) (pow.f64 x 3))))))","(fma.f64 -2 (neg.f64 (/.f64 (*.f64 y y) x)) (*.f64 -2 (+.f64 (+.f64 (neg.f64 y) (*.f64 (neg.f64 (pow.f64 y 4)) (pow.f64 x -3))) (*.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 x -2)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(*.f64 2 (+.f64 y (+.f64 (*.f64 (pow.f64 y 3) (pow.f64 x -2)) (/.f64 (*.f64 y y) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (*.f64 (pow.f64 y 4) (pow.f64 x -3)) (*.f64 2 (+.f64 y (+.f64 (*.f64 (pow.f64 y 3) (pow.f64 x -2)) (/.f64 (*.f64 y y) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(*.f64 -2 (+.f64 (+.f64 (/.f64 (*.f64 x x) y) x) (*.f64 (pow.f64 x 3) (pow.f64 y -2))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (*.f64 (pow.f64 x 4) (pow.f64 y -3)) (*.f64 -2 (+.f64 (+.f64 (/.f64 (*.f64 x x) y) x) (*.f64 (pow.f64 x 3) (pow.f64 y -2)))))","(*.f64 2 (*.f64 (cbrt.f64 -1) x))","(*.f64 -2 x)","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) y)) (*.f64 2 (*.f64 (cbrt.f64 -1) x)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 3)) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) y)) (*.f64 2 (*.f64 (cbrt.f64 -1) x))))","(fma.f64 2 (*.f64 (neg.f64 (pow.f64 x 3)) (pow.f64 y -2)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 4)) (pow.f64 y 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 3)) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) y)) (*.f64 2 (*.f64 (cbrt.f64 -1) x)))))","(+.f64 (*.f64 2 (+.f64 (*.f64 (neg.f64 (pow.f64 x 4)) (pow.f64 y -3)) (*.f64 (neg.f64 (pow.f64 x 3)) (pow.f64 y -2)))) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3)) (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (-.f64 -1 (pow.f64 (/.f64 x y) 2)) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(-.f64 (-.f64 (-.f64 -1 (pow.f64 (/.f64 x y) 2)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3))","(cbrt.f64 -1)","-1","(+.f64 (cbrt.f64 -1) (/.f64 (*.f64 (cbrt.f64 -1) x) y))","(-.f64 -1 (/.f64 x y))","(+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) (pow.f64 y 2)) (/.f64 (*.f64 (cbrt.f64 -1) x) y)))","(-.f64 (-.f64 -1 (pow.f64 (/.f64 x y) 2)) (/.f64 x y))","(+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 3)) (pow.f64 y 3)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1) (pow.f64 x 2)) (pow.f64 y 2)) (/.f64 (*.f64 (cbrt.f64 -1) x) y))))","(-.f64 (-.f64 (-.f64 -1 (pow.f64 (/.f64 x y) 2)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (-.f64 -1 (pow.f64 (/.f64 x y) 2)) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(-.f64 (-.f64 (-.f64 -1 (pow.f64 (/.f64 x y) 2)) (/.f64 x y)) (pow.f64 (/.f64 x y) 3))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3)) (pow.f64 (pow.f64 (/.f64 y x) 2) 2))","(*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x))","(/.f64 y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (cbrt.f64 -1)) x)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 4) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 -1)) (pow.f64 x 3))))))","(+.f64 (+.f64 (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2)) (pow.f64 (/.f64 y x) 3)) (pow.f64 (pow.f64 (/.f64 y x) 2) 2))"]],"time":305.072998046875,"type":"simplify"},{"compiler":[[6808,2929]],"time":59.18408203125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","done",8.404937606765731],["(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","done",6.770667468007526],["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","done",16.082294830361366]],"compiler":[[11,6],[11,6],[21,11]],"count":[[300,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[297,0],"picked":[1,1]}],"min-error":[0],"time":55.302001953125,"type":"prune"},{"accuracy":[0.02734375],"baseline":[6.770667468007526],"branch":[["x",0.046875,3],["y",0.02734375,3],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))",0.4749807214245243,5]],"compiler":[[3,2],[3,2],[11,7],[69,26]],"count":[[6,3]],"inputs":[["(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","(pow.f64 (cbrt.f64 (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))) 3)","(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))","(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))"]],"link":["."],"name":["Linear.Projection:perspective from linear-1.19.1.3, B"],"oracle":[36.17788361633113],"outputs":[["(*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))","(*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y)","(*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))"]],"time":35.18798828125,"times":[["x",9.663818359375],["y",9.611083984375],["(/.f64 (*.f64 (*.f64 x 2) y) (-.f64 x y))",14.60986328125]],"type":"regimes"},{"bstep":[[1.221997360927531e-92,1.7916431962431696e-83,8.239013671875],[-9.679743729693019e+116,-1.6407784032010344e+115,8.383056640625]],"compiler":[[13,9],[3,2]],"method":["binary-search","binary-search"],"time":16.73095703125,"type":"bsearch"},{"compiler":[[47,20]],"inputs":[["(if (<=.f64 y -967974372969301890649427188122334668298810948264177402468996243994072698026860719594328571926339680596864500083195904) (*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))) (if (<=.f64 y 7174782095438879/587135645693458306972370149197334256843920637227079967676822742883052256278652110865924749596192175757983744) (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) (*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 y -967974372969301890649427188122334668298810948264177402468996243994072698026860719594328571926339680596864500083195904) (*.f64 (+.f64 x x) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))) (if (<=.f64 y 7174782095438879/587135645693458306972370149197334256843920637227079967676822742883052256278652110865924749596192175757983744) (*.f64 (/.f64 (+.f64 x x) (-.f64 x y)) y) (*.f64 (+.f64 x x) (/.f64 y (-.f64 x y)))))","(if (<=.f64 y -967974372969301890649427188122334668298810948264177402468996243994072698026860719594328571926339680596864500083195904) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (if (<=.f64 y 7174782095438879/587135645693458306972370149197334256843920637227079967676822742883052256278652110865924749596192175757983744) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x)) (/.f64 (*.f64 -2 (*.f64 x y)) (-.f64 y x))))"]],"stop":[["done",1]],"time":21.596923828125,"type":"simplify"},{"time":0.006103515625,"type":"soundness"},{"compiler":[[47,20]],"remove-preprocessing":[[]],"time":13.296875,"type":"end"}]