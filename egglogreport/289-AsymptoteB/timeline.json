[{"compiler":[[13,10]],"method":["search"],"sampling":[[12,0.9975595474243164,0.0019521713256835938,0.00048828125],[11,0.9956073760986328,0.0039043426513671875,0.00048828125],[10,0.9917030334472656,0.007808685302734375,0.00048828125],[9,0.9838943481445313,0.01561737060546875,0.00048828125],[8,0.9682769775390625,0.0312347412109375,0.00048828125],[7,0.937042236328125,0.062469482421875,0.00048828125],[6,0.87457275390625,0.12493896484375,0.00048828125],[5,0.7496337890625,0.2498779296875,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.0,0.99951171875,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":2.931884765625,"type":"analyze"},{"outcomes":[["body",256,"valid",295.444091796875,8256]],"time":303.174072265625,"type":"sample"},{"compiler":[[12,9]],"inputs":[["0"],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))","(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))"]],"symmetry":[[]],"time":53.56591796875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))","(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))"]],"time":20.256103515625,"type":"simplify"},{"compiler":[[23,17]],"time":0.4169921875,"type":"eval"},{"alts":[["(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","next",0.015625]],"compiler":[[12,9],[12,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.015625],"time":0.85205078125,"type":"prune"},{"compiler":[[31,22]],"locations":[["(/.f64 x (+.f64 1 x))",0.00390625,true],["(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))",0.0078125,true],["(/.f64 -1 (-.f64 1 x))",0.01953125,true]],"time":8.135986328125,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 x (+.f64 1 x))","x","-inf",0.219970703125],["(/.f64 x (+.f64 1 x))","x","inf",0.218994140625],["(/.f64 x (+.f64 1 x))","x","0",0.180908203125],["(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","x","-inf",0.27587890625],["(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","x","inf",0.3388671875],["(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","x","0",0.31005859375],["(/.f64 -1 (-.f64 1 x))","x","-inf",0.236083984375],["(/.f64 -1 (-.f64 1 x))","x","inf",0.3310546875],["(/.f64 -1 (-.f64 1 x))","x","0",0.330810546875]],"time":2.56591796875,"type":"series"},{"count":[[3,173]],"inputs":[["(/.f64 -1 (-.f64 1 x))","(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","(/.f64 x (+.f64 1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 x)) (*.f64 (/.f64 -1 (-.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 1 x)) 0) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 1 x)) 0) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 x)) (*.f64 0 (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (-.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 1 x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (/.f64 1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (-.f64 1 x) (cbrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 (-.f64 1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (+.f64 -1 x)) (+.f64 -1 x)) (neg.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) -1) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 1 x)) (-.f64 1 x)) (pow.f64 (-.f64 1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 -1 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 -1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 -1 x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (-.f64 1 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (*.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 0) (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (*.f64 0 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 1 x)) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (+.f64 1 x)) 0) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (/.f64 x (-.f64 -1 x)) (/.f64 1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (/.f64 x (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (+.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (/.f64 -1 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (+.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (cbrt.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (/.f64 1 (*.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2)) (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 x (-.f64 -1 x)) (/.f64 1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (-.f64 -1 x) (+.f64 -1 x))) (fma.f64 (-.f64 1 x) x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 x (-.f64 -1 x)) (/.f64 1 (-.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 x (-.f64 -1 x)) (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (/.f64 1 (*.f64 (+.f64 -1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (cbrt.f64 (*.f64 (-.f64 -1 x) (+.f64 -1 x)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 -1 x) (+.f64 -1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (-.f64 -1 x) (cbrt.f64 (/.f64 -1 (-.f64 1 x))))) (*.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (-.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) -1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (cbrt.f64 (/.f64 -1 (-.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (+.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) x) (*.f64 (+.f64 1 x) (cbrt.f64 (/.f64 -1 (-.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (-.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (+.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (-.f64 1 x) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (-.f64 1 x) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (*.f64 (+.f64 -1 x) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (+.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (-.f64 -1 x) (cbrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (cbrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (-.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (+.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) -1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) x) (*.f64 (+.f64 1 x) (cbrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (*.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2)) (cbrt.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)))) (cbrt.f64 (*.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) -1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (+.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (+.f64 1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (-.f64 1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (*.f64 (-.f64 1 x) (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) 1) (*.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (+.f64 1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (-.f64 -1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 x (-.f64 -1 x)) (/.f64 1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (/.f64 x (-.f64 -1 x)) (/.f64 1 (-.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (*.f64 (+.f64 -1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (-.f64 -1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) x (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 -1 (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 x)) -1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 x)) 1 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 x)) 1 (/.f64 x (+.f64 1 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (*.f64 (/.f64 x (+.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 1 x)) 0) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (*.f64 0 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 x)) (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (cbrt.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 1 x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (pow.f64 (cbrt.f64 (+.f64 1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) x) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 x)) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) 1) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 3))))))"]],"rules":[["egg-rr",43],["egg-rr",86],["egg-rr",44]],"time":37.7119140625,"type":"rewrite"},{"count":[[209,213]],"inputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","-1","(-.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 (pow.f64 x 4))) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (pow.f64 x 6)))) 1)","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(neg.f64 (+.f64 1 x))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(neg.f64 (+.f64 1 (fma.f64 x x x)))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(-.f64 (neg.f64 (pow.f64 x 3)) (+.f64 1 (fma.f64 x x x)))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (pow.f64 x -2) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (pow.f64 x -4) (+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (pow.f64 x -2) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (pow.f64 x -4) (+.f64 (pow.f64 x -2) (+.f64 (pow.f64 x -3) (/.f64 1 x))))","-1","(-.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(fma.f64 -2 (*.f64 x x) -1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 (pow.f64 x 4))) 1)","(fma.f64 -2 (fma.f64 x x (pow.f64 x 4)) -1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (pow.f64 x 6)))) 1)","(+.f64 (*.f64 -2 (+.f64 (fma.f64 x x (pow.f64 x 4)) (pow.f64 x 6))) -1)","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(fma.f64 2 (pow.f64 x -2) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(fma.f64 2 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 1 (*.f64 2 (+.f64 (+.f64 (pow.f64 x -6) (pow.f64 x -2)) (pow.f64 x -4))))","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(fma.f64 2 (pow.f64 x -2) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(fma.f64 2 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 1 (*.f64 2 (+.f64 (+.f64 (pow.f64 x -6) (pow.f64 x -2)) (pow.f64 x -4))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(+.f64 (*.f64 (*.f64 x x) (+.f64 -1 x)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","(-.f64 (-.f64 (+.f64 x (pow.f64 x 3)) (pow.f64 x 4)) (*.f64 x x))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(+.f64 (/.f64 -1 x) (+.f64 1 (pow.f64 x -2)))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (pow.f64 x -2)) (+.f64 (pow.f64 x -3) (/.f64 1 x)))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(+.f64 (/.f64 -1 x) (+.f64 1 (pow.f64 x -2)))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (pow.f64 x -2)) (+.f64 (pow.f64 x -3) (/.f64 1 x)))"]],"time":116.64306640625,"type":"simplify"},{"compiler":[[3771,2881]],"time":50.2529296875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","next",0.01171875],["(fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))","fresh",0.015625]],"compiler":[[15,12],[21,16],[15,12],[21,16]],"count":[[214,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[213,2],"picked":[1,0]}],"min-error":[0],"time":79.35498046875,"type":"prune"},{"compiler":[[58,43]],"locations":[["(/.f64 x (+.f64 1 x))",0.00390625,false],["(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))",0.0078125,false],["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)",0.01171875,true],["(/.f64 -1 (-.f64 1 x))",0.01953125,false]],"time":13.966064453125,"type":"localize"},{"count":[[1,12]],"series":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","x","-inf",1.08203125],["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","x","inf",0.614990234375],["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","x","0",1.4921875]],"time":3.26611328125,"type":"series"},{"count":[[1,94]],"inputs":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 0) (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (*.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (*.f64 0 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 1 x)) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (+.f64 1 x)) 0) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3)) (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3)) (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (-.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (cbrt.f64 (/.f64 x (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (+.f64 (neg.f64 (pow.f64 (-.f64 1 x) -1/3)) (cbrt.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (-.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (/.f64 x (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (+.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (neg.f64 (pow.f64 (-.f64 1 x) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (/.f64 1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3) (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (fma.f64 (-.f64 1 x) x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3)) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 x (-.f64 -1 x)) (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (/.f64 1 (*.f64 (+.f64 -1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (cbrt.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (cbrt.f64 (-.f64 1 x))) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 1 x) 2/3)) (*.f64 (-.f64 1 x) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (-.f64 1 x) (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 x) 2/3) (*.f64 (+.f64 -1 x) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (+.f64 -1 x) (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 1 x) -1/3)) (-.f64 -1 x)) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (neg.f64 x))) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 1 x) -1/3)) (pow.f64 (+.f64 1 x) 2/3)) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 1 x) -1/3)) (+.f64 1 x)) (*.f64 (pow.f64 (-.f64 1 x) 2/3) x)) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (-.f64 1 x) 2/3) x) (*.f64 (+.f64 1 x) (neg.f64 (pow.f64 (-.f64 1 x) -1/3)))) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (pow.f64 (-.f64 1 x) 2/3)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (neg.f64 (pow.f64 (-.f64 1 x) -1/3)))) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (pow.f64 (-.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (+.f64 -1 x)) (pow.f64 (+.f64 1 x) 2/3)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (-.f64 1 x)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) -1)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (pow.f64 (-.f64 1 x) 2/3)) (*.f64 (-.f64 -1 x) (neg.f64 (pow.f64 (-.f64 1 x) -1/3)))) (*.f64 (-.f64 -1 x) (pow.f64 (-.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (-.f64 1 x) 2/3) x) (*.f64 (+.f64 1 x) (pow.f64 (-.f64 1 x) -1/3))) (*.f64 (pow.f64 (-.f64 1 x) 2/3) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (pow.f64 (-.f64 1 x) 2/3)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (pow.f64 (-.f64 1 x) -1/3))) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (pow.f64 (-.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (+.f64 -1 x)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) -1)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (-.f64 1 x)) (pow.f64 (+.f64 1 x) 2/3)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (pow.f64 (-.f64 1 x) 2/3)) (*.f64 (-.f64 -1 x) (pow.f64 (-.f64 1 x) -1/3))) (*.f64 (-.f64 -1 x) (pow.f64 (-.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (-.f64 -1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (+.f64 1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (+.f64 1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (*.f64 (-.f64 1 x) (cbrt.f64 (+.f64 1 x)))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) 1) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (+.f64 1 x)) (-.f64 1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (+.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) -1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x)) (pow.f64 (+.f64 1 x) 2/3)) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (-.f64 1 x))) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2/3) (cbrt.f64 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (-.f64 1 x) x (-.f64 -1 x)) (*.f64 (+.f64 -1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 -1 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (-.f64 1 x) -1/3)) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (pow.f64 (-.f64 1 x) -1/3)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 1 x) -1/3) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 x)) -1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/3) (/.f64 x (pow.f64 (+.f64 1 x) 2/3)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (-.f64 -1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) x (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 -1 (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 x)) 1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 x)) 1 (/.f64 -1 (-.f64 1 x)))))))"]],"rules":[["egg-rr",94]],"time":28.010009765625,"type":"rewrite"},{"count":[[106,114]],"inputs":[["-1","(-.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 (-.f64 (*.f64 (-.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 4/9 (/.f64 1 (cbrt.f64 -1)))) (cbrt.f64 -1)) 10/9) (pow.f64 x 4))) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (*.f64 (-.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 4/9 (/.f64 1 (cbrt.f64 -1)))) (cbrt.f64 -1)) 10/9) (pow.f64 x 4)) (*.f64 (-.f64 (+.f64 (*.f64 -2/3 (/.f64 (-.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 4/9 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9) (cbrt.f64 -1))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))))) (*.f64 1/3 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9)))) 8/27) (pow.f64 x 6)))) 1)","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(pow.f64 (cbrt.f64 -1) 6)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (pow.f64 (cbrt.f64 -1) 6))","(+.f64 (*.f64 10/9 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -4/9 (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 4)) (+.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9) (cbrt.f64 -1))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 x 6)) (+.f64 (*.f64 10/9 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -4/9 (cbrt.f64 -1))) (*.f64 (cbrt.f64 -1) (pow.f64 x 6)))) (+.f64 (*.f64 8/27 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9) (pow.f64 x 6))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -4/9 (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 4)) (+.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(fma.f64 -2 (*.f64 x x) -1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 (-.f64 (*.f64 (-.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 4/9 (/.f64 1 (cbrt.f64 -1)))) (cbrt.f64 -1)) 10/9) (pow.f64 x 4))) 1)","(fma.f64 -2 (*.f64 x x) (fma.f64 (-.f64 (+.f64 -4/9 -4/9) 10/9) (pow.f64 x 4) -1))","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (*.f64 (-.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 4/9 (/.f64 1 (cbrt.f64 -1)))) (cbrt.f64 -1)) 10/9) (pow.f64 x 4)) (*.f64 (-.f64 (+.f64 (*.f64 -2/3 (/.f64 (-.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 4/9 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9) (cbrt.f64 -1))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))))) (*.f64 1/3 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9)))) 8/27) (pow.f64 x 6)))) 1)","(+.f64 (fma.f64 (pow.f64 x 6) (fma.f64 (+.f64 4/9 4/9) -2/3 (+.f64 (fma.f64 (+.f64 8/27 -10/9) 1/3 (+.f64 -8/27 (*.f64 2/3 (+.f64 8/27 -10/9)))) -8/27)) (*.f64 (-.f64 (+.f64 -4/9 -4/9) 10/9) (pow.f64 x 4))) (fma.f64 -2 (*.f64 x x) -1))","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(fma.f64 2 (pow.f64 x -2) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(fma.f64 2 (+.f64 (pow.f64 x -4) (pow.f64 x -2)) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 1 (*.f64 2 (+.f64 (pow.f64 x -4) (+.f64 (pow.f64 x -6) (pow.f64 x -2)))))","(pow.f64 (cbrt.f64 -1) 6)","1","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (pow.f64 (cbrt.f64 -1) 6))","(fma.f64 2 (pow.f64 x -2) 1)","(+.f64 (*.f64 10/9 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -4/9 (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 4)) (+.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 (*.f64 (pow.f64 x -4) (+.f64 10/9 (+.f64 4/9 4/9))) (fma.f64 2 (pow.f64 x -2) 1))","(+.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9) (cbrt.f64 -1))) (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 x 6)) (+.f64 (*.f64 10/9 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -4/9 (cbrt.f64 -1))) (*.f64 (cbrt.f64 -1) (pow.f64 x 6)))) (+.f64 (*.f64 8/27 (/.f64 1 (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 8/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 6))) 10/9) (pow.f64 x 6))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -4/9 (cbrt.f64 -1))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 4)) (+.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))))))","(fma.f64 (fma.f64 2/3 (+.f64 -8/27 10/9) 8/27) (pow.f64 x -6) (fma.f64 10/9 (pow.f64 x -4) (fma.f64 -2/3 (*.f64 (+.f64 -4/9 -4/9) (pow.f64 x -6)) (+.f64 (/.f64 (+.f64 8/27 (*.f64 -1/3 (+.f64 8/27 -10/9))) (pow.f64 x 6)) (fma.f64 (+.f64 4/9 4/9) (pow.f64 x -4) (fma.f64 2 (pow.f64 x -2) 1))))))"]],"time":54.68994140625,"type":"simplify"},{"compiler":[[6814,5426]],"time":92.455078125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","done",0.01171875],["(fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))","next",0.015625]],"compiler":[[15,12],[21,16],[21,16]],"count":[[329,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[327,0],"picked":[1,1]}],"min-error":[0],"time":157.802978515625,"type":"prune"},{"compiler":[[62,45]],"locations":[["(/.f64 -1 (-.f64 1 x))",0.01953125,false],["(cbrt.f64 (/.f64 x (+.f64 1 x)))",0.03125,true],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)",0.0390625,true],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))",16.69769499062152,true]],"time":15.52685546875,"type":"localize"},{"count":[[3,28]],"series":[["(cbrt.f64 (/.f64 x (+.f64 1 x)))","x","-inf",1.402099609375],["(cbrt.f64 (/.f64 x (+.f64 1 x)))","x","inf",0.23095703125],["(cbrt.f64 (/.f64 x (+.f64 1 x)))","x","0",0.343994140625],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)","x","-inf",0.173828125],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)","x","inf",0.221923828125],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)","x","0",0.205078125],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))","x","-inf",0.264892578125],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))","x","inf",0.280029296875],["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))","x","0",0.55712890625]],"time":3.80810546875,"type":"series"},{"count":[[3,162]],"inputs":[["(cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))","(pow.f64 (/.f64 x (+.f64 1 x)) 2)","(cbrt.f64 (/.f64 x (+.f64 1 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (*.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) 0) (pow.f64 (/.f64 x (+.f64 1 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (*.f64 0 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) (pow.f64 (/.f64 x (+.f64 1 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 -1 x))) (cbrt.f64 (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) (+.f64 2/3 1))) (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 x (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) (+.f64 2/3 1)))) (cbrt.f64 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 (+.f64 1 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (*.f64 x x))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x 2/3) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x))) 1) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (/.f64 x (+.f64 1 x)))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x))) (cbrt.f64 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x))) 1) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 x 2/3)) (neg.f64 (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x)))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 x x) (-.f64 -1 x))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 x)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 -1 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (*.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) 0) (pow.f64 (/.f64 x (+.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (*.f64 0 (pow.f64 (/.f64 x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (pow.f64 (/.f64 x (+.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4)) (pow.f64 (/.f64 x (+.f64 1 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) (/.f64 -1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) (pow.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) 4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (pow.f64 (/.f64 x (+.f64 1 x)) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 x (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (pow.f64 (+.f64 1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 -1 x)) (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 -1 x)) (/.f64 (*.f64 x x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -2) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (-.f64 -1 x) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 1 x)) (+.f64 2/3 1)) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) 4) 2) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 (/.f64 1 (-.f64 -1 x)) (/.f64 1 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (/.f64 (pow.f64 x 2/3) (+.f64 1 x)) (/.f64 (pow.f64 x 2/3) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (*.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3)) (/.f64 x (pow.f64 (+.f64 1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 -1 x)) 1) (*.f64 (/.f64 x (-.f64 -1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x x) (-.f64 -1 x)) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x x)) (/.f64 1 (neg.f64 (pow.f64 (-.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x x) (-.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x x) (pow.f64 (-.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x x)) (neg.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 1 x)) (/.f64 x (pow.f64 (+.f64 1 x) 2/3))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 1 x)) (/.f64 x (cbrt.f64 (+.f64 1 x)))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) (pow.f64 (+.f64 1 x) -1/3)) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) 1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) -1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4)) (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x)))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4)) (pow.f64 x 2/3)) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3)) (/.f64 x (+.f64 1 x))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (/.f64 x (+.f64 1 x))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x x) (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 4))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (+.f64 1 x)) (+.f64 2/3 1))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (+.f64 1 x)) (+.f64 2/3 1))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) 1) (neg.f64 (pow.f64 (-.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x x) (-.f64 -1 x)) 1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (-.f64 -1 x)) (cbrt.f64 (+.f64 1 x))) (neg.f64 (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (-.f64 -1 x)) 1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (-.f64 -1 x)) (cbrt.f64 (-.f64 -1 x))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (-.f64 -1 x)) -1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) -1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) (+.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 x -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) (pow.f64 (+.f64 1 x) 2/3)) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x x) (+.f64 1 x)) 1) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3)) x) (*.f64 (cbrt.f64 (+.f64 1 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3)) (neg.f64 x)) (*.f64 (cbrt.f64 (+.f64 1 x)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3)) (/.f64 x (cbrt.f64 (+.f64 1 x)))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3)) (/.f64 x (pow.f64 (+.f64 1 x) 2/3))) (pow.f64 (+.f64 1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 x (cbrt.f64 (+.f64 1 x)))) (*.f64 (+.f64 1 x) (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 x (pow.f64 (+.f64 1 x) 2/3))) (*.f64 (+.f64 1 x) (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 x (cbrt.f64 (+.f64 1 x)))) (*.f64 (-.f64 -1 x) (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 x (pow.f64 (+.f64 1 x) 2/3))) (*.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) x) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (neg.f64 x)) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (/.f64 x (cbrt.f64 (+.f64 1 x)))) (*.f64 (pow.f64 (+.f64 1 x) 2/3) (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (/.f64 x (pow.f64 (+.f64 1 x) 2/3))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 x x)) 1) (*.f64 (neg.f64 (pow.f64 (-.f64 -1 x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x x) (-.f64 -1 x))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 -1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 -1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (+.f64 1 x)) (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (*.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 0) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (*.f64 0 (cbrt.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 x (+.f64 1 x)))) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (neg.f64 (pow.f64 (+.f64 1 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))))) (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (+.f64 1 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 -1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/3) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (/.f64 (pow.f64 x 2/3) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/3)) (cbrt.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3)) (cbrt.f64 (cbrt.f64 x))) (cbrt.f64 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) 1) (*.f64 (cbrt.f64 (-.f64 -1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (pow.f64 (+.f64 1 x) 2/3))) (cbrt.f64 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) 1) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 x (+.f64 1 x)))))))"]],"rules":[["egg-rr",33],["egg-rr",86],["egg-rr",43]],"time":31.822998046875,"type":"rewrite"},{"count":[[190,195]],"inputs":[["1","(-.f64 1 (*.f64 2/3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (*.f64 2/3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (+.f64 (*.f64 40/81 (/.f64 1 (pow.f64 x 3))) (*.f64 2/3 (/.f64 1 x))))","1","(-.f64 1 (*.f64 2/3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (*.f64 2/3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (+.f64 (*.f64 40/81 (/.f64 1 (pow.f64 x 3))) (*.f64 2/3 (/.f64 1 x))))","(pow.f64 x 2)","(+.f64 (*.f64 -2 (pow.f64 x 3)) (pow.f64 x 2))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (pow.f64 x 2)))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (+.f64 (pow.f64 x 2) (*.f64 -4 (pow.f64 x 5)))))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","1","(-.f64 1 (*.f64 1/3 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 2/9 (/.f64 1 (pow.f64 x 2)))) (*.f64 1/3 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 2/9 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (/.f64 1 x)) (*.f64 14/81 (/.f64 1 (pow.f64 x 3)))))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 x))) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 x))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (+.f64 1 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (cbrt.f64 -1) (pow.f64 x 2))))))","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) 1)) (*.f64 (cbrt.f64 -1) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 x))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (+.f64 1 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (cbrt.f64 -1) (pow.f64 x 2)))))))"]],"method":["egg-herbie"],"outputs":[["1","(-.f64 1 (*.f64 2/3 (/.f64 1 x)))","(/.f64 (-.f64 x 2/3) x)","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (*.f64 2/3 (/.f64 1 x)))","(fma.f64 5/9 (pow.f64 x -2) (/.f64 (-.f64 x 2/3) x))","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (+.f64 (*.f64 40/81 (/.f64 1 (pow.f64 x 3))) (*.f64 2/3 (/.f64 1 x))))","(-.f64 (fma.f64 5/9 (pow.f64 x -2) 1) (fma.f64 40/81 (pow.f64 x -3) (/.f64 2/3 x)))","1","(-.f64 1 (*.f64 2/3 (/.f64 1 x)))","(/.f64 (-.f64 x 2/3) x)","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (*.f64 2/3 (/.f64 1 x)))","(fma.f64 5/9 (pow.f64 x -2) (/.f64 (-.f64 x 2/3) x))","(-.f64 (+.f64 (*.f64 5/9 (/.f64 1 (pow.f64 x 2))) 1) (+.f64 (*.f64 40/81 (/.f64 1 (pow.f64 x 3))) (*.f64 2/3 (/.f64 1 x))))","(-.f64 (fma.f64 5/9 (pow.f64 x -2) 1) (fma.f64 40/81 (pow.f64 x -3) (/.f64 2/3 x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -2 (pow.f64 x 3)) (pow.f64 x 2))","(fma.f64 -2 (pow.f64 x 3) (*.f64 x x))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (pow.f64 x 2)))","(fma.f64 -2 (pow.f64 x 3) (fma.f64 3 (pow.f64 x 4) (*.f64 x x)))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (+.f64 (pow.f64 x 2) (*.f64 -4 (pow.f64 x 5)))))","(fma.f64 -2 (pow.f64 x 3) (fma.f64 (pow.f64 x 4) 3 (fma.f64 (pow.f64 x 5) -4 (*.f64 x x))))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(/.f64 (-.f64 x 2) x)","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(+.f64 (fma.f64 3 (pow.f64 x -2) 1) (/.f64 -2 x))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","(-.f64 (fma.f64 3 (pow.f64 x -2) 1) (fma.f64 4 (pow.f64 x -3) (/.f64 2 x)))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(/.f64 (-.f64 x 2) x)","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(+.f64 (fma.f64 3 (pow.f64 x -2) 1) (/.f64 -2 x))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","(-.f64 (fma.f64 3 (pow.f64 x -2) 1) (fma.f64 4 (pow.f64 x -3) (/.f64 2 x)))","1","(-.f64 1 (*.f64 1/3 (/.f64 1 x)))","(/.f64 (-.f64 x 1/3) x)","(-.f64 (+.f64 1 (*.f64 2/9 (/.f64 1 (pow.f64 x 2)))) (*.f64 1/3 (/.f64 1 x)))","(+.f64 (fma.f64 (pow.f64 x -2) 2/9 1) (/.f64 -1/3 x))","(-.f64 (+.f64 1 (*.f64 2/9 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 1/3 (/.f64 1 x)) (*.f64 14/81 (/.f64 1 (pow.f64 x 3)))))","(-.f64 (fma.f64 (pow.f64 x -2) 2/9 1) (fma.f64 14/81 (pow.f64 x -3) (/.f64 1/3 x)))","(pow.f64 (cbrt.f64 -1) 2)","1","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 x))) (pow.f64 (cbrt.f64 -1) 2))","(/.f64 (-.f64 x 1/3) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 x))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (+.f64 1 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (cbrt.f64 -1) (pow.f64 x 2))))))","(+.f64 (/.f64 -1/3 x) (fma.f64 (/.f64 -2/3 (*.f64 x x)) -1/3 1))","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 1 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) 1)) (*.f64 (cbrt.f64 -1) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 x))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (+.f64 1 (*.f64 1/3 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (cbrt.f64 -1) (pow.f64 x 2)))))))","(fma.f64 -1/3 (*.f64 (+.f64 -1/27 (fma.f64 2/3 -2/3 1)) (pow.f64 x -3)) (+.f64 (/.f64 -1/3 x) (fma.f64 (/.f64 -2/3 (*.f64 x x)) -1/3 1)))"]],"time":96.515869140625,"type":"simplify"},{"compiler":[[6691,5067]],"time":81.68798828125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","done",0.01171875],["(fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))","done",0.015625]],"compiler":[[15,12],[21,16]],"count":[[255,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[253,0],"picked":[1,1]}],"min-error":[0],"time":99.35009765625,"type":"prune"},{"accuracy":[0.01171875],"baseline":[0.01171875],"branch":[["x",0.01171875,1],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))",0.01171875,1]],"compiler":[[2,1],[12,9],[57,43]],"count":[[4,1]],"inputs":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","(fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))","(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))"]],"link":["."],"name":["Asymptote B"],"oracle":[0.02734375],"outputs":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)"]],"time":5.819091796875,"times":[["x",2.837890625],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))",1.7958984375]],"type":"regimes"},{"compiler":[[15,12]],"inputs":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)","(+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))"]],"stop":[["done",1]],"time":21.760009765625,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[15,12]],"remove-preprocessing":[[]],"time":10.055908203125,"type":"end"}]