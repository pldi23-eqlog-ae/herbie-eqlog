[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.1559450476634172,0.7543841680717808,0.08967078426480202],[11,0.10916153336439205,0.8187115002329404,0.07212696640266758],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":135.336181640625,"type":"analyze"},{"outcomes":[["body",256,"invalid",102.17822265625,2278],["body",256,"valid",370.26171875,8256]],"time":482.77587890625,"type":"sample"},{"compiler":[[13,8]],"inputs":[["0","1","2","3"],["(+.f64 (*.f64 (+.f64 (*.f64 x y) z) y) t)","(+.f64 (*.f64 (+.f64 (*.f64 y x) z) x) t)","(+.f64 (*.f64 (+.f64 (*.f64 z y) x) y) t)","(+.f64 (*.f64 (+.f64 (*.f64 t y) z) y) x)","(+.f64 (*.f64 (+.f64 (*.f64 x z) y) z) t)","(+.f64 (*.f64 (+.f64 (*.f64 x t) z) t) y)","(+.f64 (*.f64 (+.f64 (*.f64 x y) t) y) z)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 (*.f64 (+.f64 (*.f64 x y) z) y) t)","(fma.f64 (fma.f64 y x z) y t)","(+.f64 (*.f64 (+.f64 (*.f64 y x) z) x) t)","(fma.f64 (fma.f64 y x z) x t)","(+.f64 (*.f64 (+.f64 (*.f64 z y) x) y) t)","(fma.f64 y (fma.f64 z y x) t)","(+.f64 (*.f64 (+.f64 (*.f64 t y) z) y) x)","(fma.f64 y (fma.f64 t y z) x)","(+.f64 (*.f64 (+.f64 (*.f64 x z) y) z) t)","(fma.f64 z (fma.f64 x z y) t)","(+.f64 (*.f64 (+.f64 (*.f64 x t) z) t) y)","(fma.f64 (fma.f64 x t z) t y)","(+.f64 (*.f64 (+.f64 (*.f64 x y) t) y) z)","(fma.f64 y (fma.f64 x y t) z)"]],"symmetry":[[]],"time":84.22509765625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (*.f64 (+.f64 (*.f64 x y) z) y) t)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (+.f64 (*.f64 x y) z) y) t)","(fma.f64 (fma.f64 x y z) y t)"]],"time":17.510009765625,"type":"simplify"},{"compiler":[[20,10]],"time":0.344970703125,"type":"eval"},{"alts":[["(fma.f64 (fma.f64 x y z) y t)","next",0.0546875]],"compiler":[[11,6],[11,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.0546875],"time":0.85498046875,"type":"prune"},{"compiler":[[19,6]],"locations":[["(fma.f64 (fma.f64 x y z) y t)",0.0546875,true]],"time":4.27685546875,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 (fma.f64 x y z) y t)","t","-inf",0.25],["(fma.f64 (fma.f64 x y z) y t)","t","inf",0.220947265625],["(fma.f64 (fma.f64 x y z) y t)","t","0",1.017822265625],["(fma.f64 (fma.f64 x y z) y t)","z","-inf",0.2919921875],["(fma.f64 (fma.f64 x y z) y t)","z","inf",0.325927734375],["(fma.f64 (fma.f64 x y z) y t)","z","0",0.322021484375],["(fma.f64 (fma.f64 x y z) y t)","y","-inf",0.31005859375],["(fma.f64 (fma.f64 x y z) y t)","y","inf",0.407958984375],["(fma.f64 (fma.f64 x y z) y t)","y","0",0.26806640625],["(fma.f64 (fma.f64 x y z) y t)","x","-inf",0.41796875],["(fma.f64 (fma.f64 x y z) y t)","x","inf",0.449951171875],["(fma.f64 (fma.f64 x y z) y t)","x","0",0.544921875]],"time":4.981201171875,"type":"series"},{"count":[[1,40]],"inputs":[["(fma.f64 (fma.f64 x y z) y t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y z) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 t (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 t (*.f64 y (*.f64 x y))) (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 t (*.f64 y z)) (*.f64 y (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 t (*.f64 (*.f64 x y) y)) (*.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 t (*.f64 z y)) (*.f64 (*.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (fma.f64 x y z) y t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 x y z) y t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (fma.f64 x y z) y) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 t (*.f64 (neg.f64 y) (fma.f64 x y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3) (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t))) (neg.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 t 2/3) (-.f64 (pow.f64 (*.f64 (fma.f64 x y z) y) 2/3) (*.f64 (cbrt.f64 t) (cbrt.f64 (*.f64 (fma.f64 x y z) y))))) (+.f64 (cbrt.f64 t) (cbrt.f64 (*.f64 (fma.f64 x y z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 x y z) y) 2/3) (-.f64 (pow.f64 t 2/3) (*.f64 (cbrt.f64 (*.f64 (fma.f64 x y z) y)) (cbrt.f64 t)))) (+.f64 (cbrt.f64 (*.f64 (fma.f64 x y z) y)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 x y z) y t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 x y z) y t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 x y z) y t) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 x y z) y t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 x y z) y t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x y z) y t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (fma.f64 x y z) y)) (pow.f64 (*.f64 (fma.f64 x y z) y) 2/3) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x y z)) (*.f64 (pow.f64 (fma.f64 x y z) 2/3) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 x y z) (cbrt.f64 y)) (pow.f64 y 2/3) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (fma.f64 x y z) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (pow.f64 t 2/3) (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 t 2/3) (cbrt.f64 t) (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 t) (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (fma.f64 x y z) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 x y z) y) 1 t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t 1 (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 t (*.f64 (fma.f64 x y z) y))))))"]],"rules":[["egg-rr",40]],"time":34.990966796875,"type":"rewrite"},{"count":[[88,54]],"inputs":[["(+.f64 (*.f64 y z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","t","(+.f64 (*.f64 y z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 t (*.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(*.f64 (+.f64 (*.f64 y x) z) y)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","t","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","t","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","t","(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(*.f64 (fma.f64 y x z) y)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(*.f64 (fma.f64 y x z) y)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 t (*.f64 (pow.f64 y 2) x))","(fma.f64 x (*.f64 y y) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 y (fma.f64 y x z) t)","(*.f64 (+.f64 (*.f64 y x) z) y)","(*.f64 (fma.f64 y x z) y)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","t","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","t","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)","(+.f64 t (*.f64 (+.f64 (*.f64 y x) z) y))","(fma.f64 y (fma.f64 y x z) t)"]],"time":153.326904296875,"type":"simplify"},{"compiler":[[564,152]],"time":5.59814453125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","next",0.7469866212007971],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","fresh",3.3373425012201867],["(fma.f64 (fma.f64 x y z) y t)","done",0.0546875]],"compiler":[[14,9],[15,10],[11,6],[14,9],[15,10]],"count":[[55,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[54,2],"picked":[1,1]}],"min-error":[0.0234375],"time":10.406982421875,"type":"prune"},{"compiler":[[38,10]],"locations":[["(fma.f64 (fma.f64 x y z) y t)",0.0546875,false],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))",0.10546875,true],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)",0.7147027832848187,true]],"time":7.1748046875,"type":"localize"},{"count":[[2,32]],"series":[["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","t","-inf",0.265869140625],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","t","inf",0.239990234375],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","t","0",0.462890625],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","z","-inf",0.264892578125],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","z","inf",0.238037109375],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","z","0",0.471923828125],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","y","-inf",0.26708984375],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","y","inf",0.9130859375],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","y","0",0.39697265625],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","x","-inf",0.268798828125],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","x","inf",0.251953125],["(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))","x","0",0.458984375],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","t","-inf",0.463134765625],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","t","inf",0.5390625],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","t","0",2.153076171875],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","z","-inf",0.468994140625],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","z","inf",0.5888671875],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","z","0",3.10205078125],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","y","-inf",0.470947265625],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","y","inf",0.5400390625],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","y","0",2.326904296875],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","x","-inf",0.441162109375],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","x","inf",0.93798828125],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","x","0",2.47705078125]],"time":19.446044921875,"type":"series"},{"count":[[2,58]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","(cbrt.f64 (fma.f64 (fma.f64 x y z) y t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y z) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 t (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 x y z) y t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (fma.f64 x y z) y t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 t (neg.f64 (*.f64 (fma.f64 x y z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (fma.f64 x y z) y) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t))) (pow.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3) 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3) 4/3) (cbrt.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3) (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 7/3) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3)) (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 t 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y z) y) 2)) (*.f64 (cbrt.f64 t) (cbrt.f64 (*.f64 (fma.f64 x y z) y))))) (+.f64 (cbrt.f64 t) (cbrt.f64 (*.f64 (fma.f64 x y z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y z) y) 2)) (-.f64 (pow.f64 t 2/3) (*.f64 (cbrt.f64 (*.f64 (fma.f64 x y z) y)) (cbrt.f64 t)))) (+.f64 (cbrt.f64 (*.f64 (fma.f64 x y z) y)) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 x y z) y t) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 x y z) y t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 x y z) y t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 x y z) y t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 x y z) y t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x y z) y t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (pow.f64 t 2/3) (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 t 2/3) (cbrt.f64 t) (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x y z)) (*.f64 (pow.f64 (fma.f64 x y z) 2/3) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (fma.f64 x y z) y)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 x y z) y) 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (fma.f64 x y z) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 x y z) (cbrt.f64 y)) (pow.f64 y 2/3) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 t) (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 t (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t 1 (*.f64 (fma.f64 x y z) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (fma.f64 x y z) y) t)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 x y z) y) 1 t)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t))) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 (fma.f64 x y z) y t) 2/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 x y z) y t) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 x y z) y t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 (fma.f64 x y z) y t))))))"]],"rules":[["egg-rr",19],["egg-rr",39]],"time":44.817138671875,"type":"rewrite"},{"count":[[90,122]],"inputs":[["(*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2)))) x) (*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2)))) x) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) t) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2)))) x) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6)))) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) t) 1) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (/.f64 (pow.f64 y 6) (+.f64 (*.f64 y z) t)) (pow.f64 1 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (pow.f64 y 6))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6))))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4)))) (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (pow.f64 y 6))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6)))))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) t) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3)))))","(*.f64 (pow.f64 1 1/3) t)","(+.f64 (*.f64 (pow.f64 1 1/3) t) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z))) y))","(+.f64 (*.f64 (pow.f64 1 1/3) t) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))) (*.f64 (pow.f64 (*.f64 1 t) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 4)) 1/9) (pow.f64 z 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))))))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z))) y)))","(+.f64 (*.f64 (pow.f64 1 1/3) t) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (pow.f64 z 3)))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 8)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (pow.f64 z 3)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 4)) 1/9) (pow.f64 z 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) z))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2)))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))) (*.f64 (pow.f64 (*.f64 1 t) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 4)) 1/9) (pow.f64 z 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))))))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z))) y))))","(*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y))) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2)))))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y))) z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2)))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y))) z) (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3) (pow.f64 y 3)))) (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 y 3) (+.f64 t (*.f64 (pow.f64 y 2) x))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3) (pow.f64 y 3)))) (pow.f64 1 1/3)))))) (pow.f64 z 3)))))","(*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3)) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) (*.f64 1 y)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9))))) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9))))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) (*.f64 1 y)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y))))) (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) (*.f64 1 y)) 1/3)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9)))))) (pow.f64 t 3)) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)))))))","(pow.f64 (+.f64 (*.f64 y z) t) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (pow.f64 y 2) x))) (pow.f64 (+.f64 (*.f64 y z) t) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 7)) 1/9) (*.f64 (pow.f64 y 4) (pow.f64 x 2)))) (pow.f64 (+.f64 (*.f64 y z) t) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 7)) 1/9) (*.f64 (pow.f64 y 4) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (pow.f64 y 6))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6))))) (pow.f64 x 3)))) (pow.f64 (+.f64 (*.f64 y z) t) 1/3))))","(pow.f64 t 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 y z))) (pow.f64 t 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 y z))) (pow.f64 t 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 y z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (pow.f64 z 3))))))) (pow.f64 t 1/3))))","(pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3)","(+.f64 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y z))))","(+.f64 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y z))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 7)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2))))))","(+.f64 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3) (pow.f64 y 3)))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y z))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 7)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))))","(pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3)","(+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9) t)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 7) (pow.f64 y 7))) 1/9) (pow.f64 t 2))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9) t))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 7) (pow.f64 y 7))) 1/9) (pow.f64 t 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3))) (pow.f64 t 3)))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9) t)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3))","(fma.f64 y z t)","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2)))) x) (*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3)))","(fma.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) 4) 1/9) (*.f64 y y)) x (fma.f64 y z t))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2)))) x) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) t) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3))))","(fma.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) 4) 1/9) (*.f64 y y)) x (fma.f64 (fma.f64 (cbrt.f64 (fma.f64 y z t)) (*.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -4) 1/9) (pow.f64 y 4)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 y z t)) 1/9) (pow.f64 y 4)) 1/9)) (*.f64 x x) (fma.f64 y z t)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y z) t) 4) 1) 1/9) (pow.f64 y 2)))) x) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6)))) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) t) 1) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (/.f64 (pow.f64 y 6) (+.f64 (*.f64 y z) t)) (pow.f64 1 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (pow.f64 y 6))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6))))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4)))) (pow.f64 y 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (pow.f64 y 6))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6)))))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) t) 1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 4)) 1/9) (pow.f64 y 4))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) t)) 1/9) (pow.f64 y 4))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 y z) t) (pow.f64 1 1/3)))))","(fma.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) 4) 1/9) (*.f64 y y)) x (fma.f64 (fma.f64 -2/27 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 y z t) -2)) (pow.f64 y 6)) (fma.f64 (cbrt.f64 (fma.f64 y z t)) (fma.f64 -2/27 (/.f64 (pow.f64 y 6) (fma.f64 y z t)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 y z t))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 y z t) -2)) (pow.f64 y 6)) (+.f64 1/27 -2/9))))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -2) 1/9) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -4) 1/9) (pow.f64 y 4)) -1/9) (*.f64 y y))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 y z t) -2)) (pow.f64 y 6)) (+.f64 1/27 -2/9)))))) (pow.f64 x 3) (fma.f64 (fma.f64 (cbrt.f64 (fma.f64 y z t)) (*.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -4) 1/9) (pow.f64 y 4)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 y z t)) 1/9) (pow.f64 y 4)) 1/9)) (*.f64 x x) (fma.f64 y z t))))","(*.f64 (pow.f64 1 1/3) t)","t","(+.f64 (*.f64 (pow.f64 1 1/3) t) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z))) y))","(+.f64 t (*.f64 (*.f64 (pow.f64 (pow.f64 t 4) 1/9) z) y))","(+.f64 (*.f64 (pow.f64 1 1/3) t) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))) (*.f64 (pow.f64 (*.f64 1 t) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 4)) 1/9) (pow.f64 z 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))))))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z))) y)))","(+.f64 t (fma.f64 (*.f64 y y) (fma.f64 1/3 (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z)))) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z)) (*.f64 (cbrt.f64 t) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -4) 1/9) (*.f64 z z)) (*.f64 (*.f64 2/3 (cbrt.f64 (/.f64 1 t))) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))))))) (*.f64 (*.f64 (pow.f64 (pow.f64 t 4) 1/9) z) y)))","(+.f64 (*.f64 (pow.f64 1 1/3) t) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (pow.f64 z 3)))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 8)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (pow.f64 z 3)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 4)) 1/9) (pow.f64 z 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) z))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2)))))))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2)))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))) (*.f64 (pow.f64 (*.f64 1 t) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 4)) 1/9) (pow.f64 z 2))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))))))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 4)) 1/9) z))) y))))","(+.f64 t (fma.f64 (fma.f64 -1/3 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 t -5) 1/9) z) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))) (*.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 t -2)) (pow.f64 z 3)))) (fma.f64 (cbrt.f64 t) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 t -8) 1/9) z) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 t))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 t -5) 1/9) z) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))) (*.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 t -2)) (pow.f64 z 3)))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 t -2) 1/9) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -4) 1/9) (*.f64 z z)) (*.f64 (*.f64 2/3 (cbrt.f64 (/.f64 1 t))) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))))) z) (*.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 t -5) 1/9) z) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))))))) (pow.f64 y 3) (fma.f64 (*.f64 y y) (fma.f64 1/3 (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z)))) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z)) (*.f64 (cbrt.f64 t) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -4) 1/9) (*.f64 z z)) (*.f64 (*.f64 2/3 (cbrt.f64 (/.f64 1 t))) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))))))) (*.f64 (*.f64 (pow.f64 (pow.f64 t 4) 1/9) z) y))))","(*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(+.f64 t (*.f64 (*.f64 y y) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y))) z))","(+.f64 (+.f64 t (*.f64 (*.f64 y y) x)) (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) 4) 1/9) y) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2)))))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y))) z)))","(+.f64 (+.f64 t (*.f64 (*.f64 y y) x)) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (*.f64 y y) x))) 1/9) (*.f64 y y)) 1/9) (*.f64 (cbrt.f64 (+.f64 t (*.f64 (*.f64 y y) x))) (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -4) 1/9) (*.f64 y y)) -1/9))) (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) 4) 1/9) y) z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (+.f64 t (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/9) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2)))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) y))) z) (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3) (pow.f64 y 3)))) (pow.f64 (/.f64 1 (+.f64 t (*.f64 (pow.f64 y 2) x))) 1/3))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 y 3) (+.f64 t (*.f64 (pow.f64 y 2) x))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 4)) 1/9) (pow.f64 y 2))))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3) (pow.f64 y 3)))) (pow.f64 1 1/3)))))) (pow.f64 z 3)))))","(+.f64 (+.f64 t (*.f64 (*.f64 y y) x)) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 t (*.f64 (*.f64 y y) x))) 1/9) (*.f64 y y)) 1/9) (*.f64 (cbrt.f64 (+.f64 t (*.f64 (*.f64 y y) x))) (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -4) 1/9) (*.f64 y y)) -1/9))) (fma.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) 4) 1/9) y) z (*.f64 (fma.f64 (cbrt.f64 (+.f64 t (*.f64 (*.f64 y y) x))) (fma.f64 -2/3 (*.f64 (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2))) (+.f64 -2/9 1/27)) (cbrt.f64 (/.f64 1 (+.f64 t (*.f64 (*.f64 y y) x))))) (/.f64 (*.f64 -2/27 (pow.f64 y 3)) (+.f64 t (*.f64 (*.f64 y y) x)))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2) 1/9) (*.f64 y (*.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -4) 1/9) (*.f64 y y)) -1/9))) (fma.f64 -2/27 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2))) (+.f64 -2/9 1/27)))))) (pow.f64 z 3)))))","(*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3))","(*.f64 (fma.f64 y x z) y)","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3)) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)))))","(+.f64 (*.f64 (fma.f64 y x z) y) (*.f64 t (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) 4) 1/9)))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) (*.f64 1 y)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9))))) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9))))))","(+.f64 (*.f64 (fma.f64 y x z) y) (fma.f64 (*.f64 t t) (fma.f64 (cbrt.f64 (*.f64 (fma.f64 y x z) y)) (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -4) 1/9) -1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (fma.f64 y x z) y)) 1/9) 1/9)) (*.f64 t (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) 4) 1/9))))","(+.f64 (*.f64 (*.f64 (+.f64 (*.f64 y x) z) y) (pow.f64 1 1/3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) (*.f64 1 y)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (+.f64 (*.f64 y x) z) y))))) (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) (*.f64 1 y)) 1/3)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (pow.f64 y 4))) 1/9))) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9)))))) (pow.f64 t 3)) (*.f64 t (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 4) (*.f64 1 (pow.f64 y 4))) 1/9)))))))","(+.f64 (*.f64 (fma.f64 y x z) y) (fma.f64 (*.f64 t t) (fma.f64 (cbrt.f64 (*.f64 (fma.f64 y x z) y)) (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -4) 1/9) -1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (fma.f64 y x z) y)) 1/9) 1/9)) (fma.f64 (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2)) (+.f64 1/27 -2/9)) (fma.f64 -2/27 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2)) (fma.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (fma.f64 y x z) y))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2)) (+.f64 1/27 -2/9))) (/.f64 -2/27 (*.f64 (fma.f64 y x z) y))) (cbrt.f64 (*.f64 (fma.f64 y x z) y)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -4) 1/9) -1/9)) (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2) 1/9))))) (pow.f64 t 3) (*.f64 t (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) 4) 1/9)))))","(pow.f64 (+.f64 (*.f64 y z) t) 1/3)","(cbrt.f64 (fma.f64 y z t))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (pow.f64 y 2) x))) (pow.f64 (+.f64 (*.f64 y z) t) 1/3))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -2) 1/9) (*.f64 (*.f64 y y) x)) (cbrt.f64 (fma.f64 y z t)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 7)) 1/9) (*.f64 (pow.f64 y 4) (pow.f64 x 2)))) (pow.f64 (+.f64 (*.f64 y z) t) 1/3)))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -2) 1/9) (*.f64 (*.f64 y y) x)) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -7) 1/9) (pow.f64 y 4)) (*.f64 x x)) (cbrt.f64 (fma.f64 y z t))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/9) (*.f64 (pow.f64 y 2) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 7)) 1/9) (*.f64 (pow.f64 y 4) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (pow.f64 y 6))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) t) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 y 6))))) (pow.f64 x 3)))) (pow.f64 (+.f64 (*.f64 y z) t) 1/3))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -2) 1/9) (*.f64 (*.f64 y y) x)) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 y z t) -7) 1/9) (pow.f64 y 4)) (*.f64 x x)) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 y z t) -2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 y z t) -2)) (pow.f64 y 6)) (+.f64 1/27 -2/9))) (pow.f64 x 3)) (cbrt.f64 (fma.f64 y z t)))))","(pow.f64 t 1/3)","(cbrt.f64 t)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 y z))) (pow.f64 t 1/3))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 t -2) 1/9) (*.f64 y z)) (cbrt.f64 t))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 y z))) (pow.f64 t 1/3)))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 t -2)) (*.f64 y y)) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))) (*.f64 (pow.f64 (pow.f64 t -2) 1/9) (*.f64 y z)))) (cbrt.f64 t))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 y 2) (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/9) (*.f64 y z))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 5)) 1/9) (*.f64 z (-.f64 x (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (pow.f64 z 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 2)) 1/3) (pow.f64 z 3))))))) (pow.f64 t 1/3))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 t -2)) (*.f64 y y)) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))) (*.f64 (pow.f64 (pow.f64 t -2) 1/9) (*.f64 y z)))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (pow.f64 t -2)) (pow.f64 y 3)) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 t -5) 1/9) z) (+.f64 x (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 t) 1/9) (*.f64 z z))))) (*.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 t -2)) (pow.f64 z 3))))) (cbrt.f64 t)))","(pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3)","(cbrt.f64 (+.f64 t (*.f64 (*.f64 y y) x)))","(+.f64 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y z))))","(+.f64 (cbrt.f64 (+.f64 t (*.f64 (*.f64 y y) x))) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2) 1/9) (*.f64 y z))))","(+.f64 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y z))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 7)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2))))))","(+.f64 (cbrt.f64 (+.f64 t (*.f64 (*.f64 y y) x))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2) 1/9) (*.f64 y z)) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -7) 1/9) (pow.f64 (*.f64 y z) 2)))))","(+.f64 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3) (pow.f64 y 3)))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 2)) 1/9) (*.f64 y z))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 t (*.f64 (pow.f64 y 2) x)) 7)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))))","(+.f64 (cbrt.f64 (+.f64 t (*.f64 (*.f64 y y) x))) (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 (pow.f64 y 3) (cbrt.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2))) (+.f64 -2/9 1/27)) (*.f64 (pow.f64 z 3) (cbrt.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2)))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -2) 1/9) (*.f64 y z)) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 t (*.f64 (*.f64 y y) x)) -7) 1/9) (pow.f64 (*.f64 y z) 2))))))","(pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3)","(cbrt.f64 (*.f64 (fma.f64 y x z) y))","(+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9) t)))","(+.f64 (cbrt.f64 (*.f64 (fma.f64 y x z) y)) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2) 1/9) t)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 7) (pow.f64 y 7))) 1/9) (pow.f64 t 2))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9) t))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -7) 1/9) (*.f64 t t)) (+.f64 (cbrt.f64 (*.f64 (fma.f64 y x z) y)) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2) 1/9) t))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 7) (pow.f64 y 7))) 1/9) (pow.f64 t 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (*.f64 1/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/3))) (pow.f64 t 3)))) (+.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y x) z) y) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 y x) z) 2) (pow.f64 y 2))) 1/9) t)))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -7) 1/9) (*.f64 t t)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2)) (+.f64 1/27 -2/9)) (pow.f64 t 3))) (+.f64 (cbrt.f64 (*.f64 (fma.f64 y x z) y)) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (*.f64 (fma.f64 y x z) y) -2) 1/9) t)))))"]],"time":168.3330078125,"type":"simplify"},{"compiler":[[6079,3412]],"time":61.2919921875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","done",0.7469866212007971],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","next",3.3373425012201867],["(fma.f64 (fma.f64 x y z) y t)","done",0.0546875]],"compiler":[[14,9],[15,10],[11,6],[15,10]],"count":[[179,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[176,0],"picked":[1,1]}],"min-error":[0.0234375],"time":34.64697265625,"type":"prune"},{"compiler":[[38,20]],"locations":[["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))",0.01171875,true],["(*.f64 (pow.f64 y 2) x)",7.930166614867417,true]],"time":9.433837890625,"type":"localize"},{"count":[[2,15]],"series":[["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","x","-inf",0.201904296875],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","x","inf",1.5361328125],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","x","0",0.205078125],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","t","-inf",0.18896484375],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","t","inf",0.17822265625],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","t","0",0.3291015625],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","z","-inf",0.237060546875],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","z","inf",0.26611328125],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","z","0",0.346923828125],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","y","-inf",0.196044921875],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","y","inf",0.243896484375],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","y","0",0.2060546875],["(*.f64 (pow.f64 y 2) x)","x","-inf",0.324951171875],["(*.f64 (pow.f64 y 2) x)","x","inf",0.31591796875],["(*.f64 (pow.f64 y 2) x)","x","0",0.43603515625],["(*.f64 (pow.f64 y 2) x)","y","-inf",0.158935546875],["(*.f64 (pow.f64 y 2) x)","y","inf",0.3369140625],["(*.f64 (pow.f64 y 2) x)","y","0",0.485107421875]],"time":6.39501953125,"type":"series"},{"count":[[2,95]],"inputs":[["(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) y) (*.f64 (*.f64 (*.f64 x y) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x y) y) 0) (*.f64 (*.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) y) (*.f64 0 (*.f64 (*.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 x y) y)) (*.f64 (*.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x y) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x y) y) 2)) (cbrt.f64 (*.f64 (*.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 x y) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y 4)) (*.f64 x (cbrt.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 y y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 x y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 x y) y) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y z) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 y y) t) (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 t (*.f64 y (+.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) (*.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 0) (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) (*.f64 0 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)) (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z y t) (*.f64 (*.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 t (*.f64 (*.f64 y (+.f64 (*.f64 x y) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) y) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (+.f64 (*.f64 x y) z)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)) (cbrt.f64 (pow.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 x (*.f64 y y) t) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 y z) 2)) (cbrt.f64 (*.f64 (*.f64 y z) (fma.f64 x (*.f64 y y) t))))) (+.f64 (cbrt.f64 (fma.f64 x (*.f64 y y) t)) (cbrt.f64 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 y z) 2)) (-.f64 (cbrt.f64 (pow.f64 (fma.f64 x (*.f64 y y) t) 2)) (cbrt.f64 (*.f64 (*.f64 y z) (fma.f64 x (*.f64 y y) t))))) (+.f64 (cbrt.f64 (*.f64 y z)) (cbrt.f64 (fma.f64 x (*.f64 y y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 2)) (cbrt.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (*.f64 y (+.f64 (*.f64 x y) z)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y z (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z y (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y z)) (cbrt.f64 (pow.f64 (*.f64 y z) 2)) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x (*.f64 y y) t)) (cbrt.f64 (pow.f64 (fma.f64 x (*.f64 y y) t) 2)) (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 x (*.f64 y y) t)) (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 x (*.f64 y y) t) 2)) (cbrt.f64 (fma.f64 x (*.f64 y y) t)) (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 z y t)) (cbrt.f64 (pow.f64 (fma.f64 z y t) 2)) (*.f64 (*.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 t) (*.f64 y (+.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 t) (*.f64 y (+.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (cbrt.f64 (*.f64 t t)) (*.f64 y (+.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) z) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 y z) 2)) (cbrt.f64 (*.f64 y z)) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 y z)) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) y) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 x y) y) 2)) (cbrt.f64 (*.f64 (*.f64 x y) y)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 x y) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 y 4)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) x (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 y y) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (*.f64 x y) y)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 x y) y)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 x y) y) 2)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) y (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y y) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 y z) (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 x (*.f64 y y) t) (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x (*.f64 y y) t) 1 (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 z y t) (*.f64 (*.f64 x y) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 t (*.f64 y (+.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t 1 (*.f64 y (+.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y z) 1 (fma.f64 x (*.f64 y y) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x y) y) 1 (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 x y) y) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 z y t) 1 (*.f64 (*.f64 x y) y))))))"]],"rules":[["egg-rr",65],["egg-rr",30]],"time":25.8740234375,"type":"rewrite"},{"count":[[110,104]],"inputs":[["t","(+.f64 (*.f64 y z) t)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(+.f64 t (*.f64 (pow.f64 y 2) x))","(*.f64 y z)","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","t","t","(+.f64 (*.f64 y z) t)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)"]],"method":["egg-herbie"],"outputs":[["t","(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 x y) y)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(*.f64 y (+.f64 z (*.f64 x y)))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 x y) y)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(*.f64 y (+.f64 z (*.f64 x y)))","(+.f64 t (*.f64 (pow.f64 y 2) x))","(fma.f64 (*.f64 y y) x t)","(*.f64 y z)","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 y 2) x))","(*.f64 y (+.f64 z (*.f64 x y)))","t","t","(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 x y) y)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 x y) y)"]],"time":55.62109375,"type":"simplify"},{"compiler":[[1434,352]],"time":12.1220703125,"type":"eval"},{"alts":[["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (cbrt.f64 x))))","fresh",17.50120538509795],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","done",3.3373425012201867],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","next",11.076346554710799],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","done",0.7469866212007971],["(fma.f64 (fma.f64 x y z) y t)","done",0.0546875]],"compiler":[[21,13],[15,10],[19,12],[14,9],[11,6],[21,13],[19,12]],"count":[[107,5]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[104,2],"picked":[1,1]}],"min-error":[0.015625],"time":28.989013671875,"type":"prune"},{"compiler":[[48,22]],"locations":[["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))",0.0546875,true],["(*.f64 (cbrt.f64 (pow.f64 y 4)) x)",5.950613013512055,true],["(cbrt.f64 (*.f64 y y))",24.91588310862255,true],["(cbrt.f64 (pow.f64 y 4))",28.102300025321792,true]],"time":12.0869140625,"type":"localize"},{"count":[[4,54]],"series":[["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","t","-inf",0.201904296875],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","t","inf",0.195068359375],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","t","0",0.93798828125],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","z","-inf",0.241943359375],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","z","inf",0.22607421875],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","z","0",1.033935546875],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","x","-inf",0.281005859375],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","x","inf",0.265869140625],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","x","0",0.742919921875],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","y","-inf",0.23095703125],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","y","inf",0.27197265625],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","y","0",0.2880859375],["(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","x","-inf",0.339111328125],["(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","x","inf",0.347900390625],["(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","x","0",1.77197265625],["(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","y","-inf",0.238037109375],["(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","y","inf",0.26611328125],["(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","y","0",0.322021484375],["(cbrt.f64 (*.f64 y y))","y","-inf",0.180908203125],["(cbrt.f64 (*.f64 y y))","y","inf",0.205810546875],["(cbrt.f64 (*.f64 y y))","y","0",0.23095703125],["(cbrt.f64 (pow.f64 y 4))","y","-inf",0.2080078125],["(cbrt.f64 (pow.f64 y 4))","y","inf",0.265869140625],["(cbrt.f64 (pow.f64 y 4))","y","0",0.458984375]],"time":10.0810546875,"type":"series"},{"count":[[4,120]],"inputs":[["(cbrt.f64 (pow.f64 y 4))","(cbrt.f64 (*.f64 y y))","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 y 4/3) 0) (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 y 4/3) (*.f64 (pow.f64 y 4/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 y 4/3)) (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 y 4/3) (*.f64 0 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 y 2/3)) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 y)) (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (neg.f64 y))) (*.f64 (cbrt.f64 y) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 4/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 y 8)) (pow.f64 y 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y 4/3)) (cbrt.f64 (cbrt.f64 (pow.f64 y 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 8))) (cbrt.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y 2/3)) (cbrt.f64 (pow.f64 (*.f64 y y) 5/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 y y) 5/3)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 y 4/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 y 4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 y 4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y y) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 y 2/3)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 y 2/3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 y 4/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 y 4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 y) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 y 4/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 y 4))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 y 2/3) 0) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 y 2/3) (*.f64 (pow.f64 y 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 y 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 y 2/3) (*.f64 0 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 y)) -1) (*.f64 (cbrt.f64 (neg.f64 y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 y)) 1) (*.f64 (cbrt.f64 (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y 2/3)) (cbrt.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (pow.f64 (pow.f64 y 4/3) 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y 4/3)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (*.f64 (cbrt.f64 y) (pow.f64 y 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 y 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 y 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 y 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 y 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 y 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 y y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 y 4/3) x) 0) (*.f64 (pow.f64 y 4/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 y 4/3) x) (*.f64 (*.f64 (pow.f64 y 4/3) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 y 4/3) x)) (*.f64 (pow.f64 y 4/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 y 4/3) x) (*.f64 0 (*.f64 (pow.f64 y 4/3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 4/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 4/3) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 y 4/3))) (cbrt.f64 (cbrt.f64 (pow.f64 y 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 8))) (*.f64 x (cbrt.f64 (pow.f64 y 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (pow.f64 y 4/3) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (pow.f64 y 4/3)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 y 4/3) x)) (pow.f64 (*.f64 (pow.f64 y 4/3) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 y 4/3) x) 2/3) (cbrt.f64 (*.f64 (pow.f64 y 4/3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y 4/3)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 8))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 y 8))) x) (cbrt.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 y 4/3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 y 4/3) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 y 4/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y 4/3) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 4/3) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 y 4/3) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 4/3) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 y 4/3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y y) x (*.f64 z y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 0) (fma.f64 (*.f64 y y) x (fma.f64 z y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) (*.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 y y) x (fma.f64 z y t))) (fma.f64 (*.f64 y y) x (fma.f64 z y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) (*.f64 0 (fma.f64 (*.f64 y y) x (fma.f64 z y t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 y y) x (*.f64 z y)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) x) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z y t) (*.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 t (fma.f64 (*.f64 y y) x (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 y y) x) t) (*.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z y) (+.f64 t (*.f64 (*.f64 y y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t))) (pow.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 2/3) (cbrt.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 y y) x (fma.f64 z y t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 y y) x (fma.f64 z y t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y 2/3) (*.f64 (pow.f64 y 4/3) x) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 y 2/3)) (*.f64 (cbrt.f64 (pow.f64 y 4/3)) (*.f64 (pow.f64 y 4/3) x)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 y y) x)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 y y) x) 2)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 y) (*.f64 (pow.f64 y 4/3) x)) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 4/3) x))) (pow.f64 (*.f64 (pow.f64 y 4/3) x) 2/3) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) x (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 y 4/3) x) (pow.f64 y 2/3) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 y 2/3) x) (pow.f64 y 4/3) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 z y t)) (pow.f64 (fma.f64 z y t) 2/3) (*.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 z y t) 2/3) (cbrt.f64 (fma.f64 z y t)) (*.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 z y t)) (*.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 y y) x) (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y y) x) 1 (fma.f64 z y t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 z y t) 1 (*.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 z y t) (*.f64 (*.f64 y y) x))))))"]],"rules":[["egg-rr",38],["egg-rr",26],["egg-rr",26],["egg-rr",30]],"time":31.490966796875,"type":"rewrite"},{"count":[[174,134]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","t","(+.f64 (*.f64 y z) t)","(*.f64 y z)","(+.f64 (*.f64 y z) t)","(*.f64 y z)","(+.f64 (*.f64 y z) t)","(+.f64 (*.f64 y z) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","t","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","t","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 4)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 y 4)) x)","t","(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(*.f64 y z)","(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(*.f64 y z)","(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(+.f64 (*.f64 y z) t)","(fma.f64 y z t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))","(*.f64 (*.f64 y y) x)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))","(*.f64 (*.f64 y y) x)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x)))","(fma.f64 (*.f64 y y) x t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x)))","(*.f64 y (+.f64 z (*.f64 y x)))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","t","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","t","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 1 1/3) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 y (+.f64 z (*.f64 y x))) t)"]],"time":174.77001953125,"type":"simplify"},{"compiler":[[2163,846]],"time":20.5400390625,"type":"eval"},{"alts":[["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (cbrt.f64 x))))","fresh",17.50120538509795],["(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","done",3.3373425012201867],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","done",11.076346554710799],["(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","done",0.7469866212007971],["(fma.f64 (fma.f64 x y z) y t)","done",0.0546875],["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 y (cbrt.f64 y)) x) (fma.f64 z y t))","fresh",3.343535772599396]],"compiler":[[21,13],[15,10],[19,12],[14,9],[11,6],[19,11]],"count":[[139,6]],"kept":[{"done":[3,3],"fresh":[1,1],"new":[134,1],"picked":[1,1]}],"min-error":[0.0078125],"time":32.9208984375,"type":"prune"},{"accuracy":[0.0546875],"baseline":[0.0546875],"branch":[["x",0.0546875,1],["y",0.0546875,1],["z",0.0546875,1],["t",0.0546875,1],["(+.f64 (*.f64 (+.f64 (*.f64 x y) z) y) t)",0.0546875,1],["(*.f64 (+.f64 (*.f64 x y) z) y)",0.0546875,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[11,7],[88,38]],"count":[[7,1]],"inputs":[["(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 y (cbrt.f64 y)) x) (fma.f64 z y t))","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (cbrt.f64 x))))","(fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 (pow.f64 y 4)) x) (fma.f64 z y t))","(pow.f64 (cbrt.f64 (fma.f64 (fma.f64 x y z) y t)) 3)","(+.f64 (*.f64 y z) (+.f64 t (*.f64 (pow.f64 y 2) x)))","(fma.f64 (fma.f64 x y z) y t)","(+.f64 (*.f64 (+.f64 (*.f64 x y) z) y) t)"]],"link":["."],"name":["Language.Haskell.HsColour.ColourHighlight:unbase from hscolour-1.23"],"oracle":[24.672402435902743],"outputs":[["(fma.f64 (fma.f64 x y z) y t)"]],"time":23.23193359375,"times":[["x",3.585205078125],["y",3.510986328125],["z",3.696044921875],["t",3.5419921875],["(+.f64 (*.f64 (+.f64 (*.f64 x y) z) y) t)",3.742919921875],["(*.f64 (+.f64 (*.f64 x y) z) y)",3.39404296875]],"type":"regimes"},{"compiler":[[11,6]],"inputs":[["(fma.f64 (fma.f64 x y z) y t)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (fma.f64 x y z) y t)"]],"stop":[["fuel",1]],"time":33.715087890625,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[11,6]],"remove-preprocessing":[[]],"time":8.26318359375,"type":"end"}]