[{"compiler":[[51,37]],"method":["search"],"sampling":[[12,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[11,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[10,1.3338401913477714e-5,1.9054859876396735e-6,0.9999847561120988],[9,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[8,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[7,1.1432915925838041e-5,3.810971975279347e-6,0.9999847561120988],[6,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[5,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[4,7.621943950558694e-6,7.621943950558694e-6,0.9999847561120989],[3,0.0,1.5243887901117388e-5,0.9999847561120989],[2,0.0,1.5243887901117388e-5,0.9999847561120989],[1,0.0,1.5243887901117388e-5,0.9999847561120989],[0,0.0,1.5243887901117388e-5,0.9999847561120989]],"time":61.3310546875,"type":"analyze"},{"outcomes":[["body",256,"valid",819.174072265625,8256]],"time":827.489990234375,"type":"sample"},{"compiler":[[28,20]],"inputs":[["0","1","2"],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux)) (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))))))","(*.f64 (sin.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux uy)) (+.f64 (-.f64 1 ux) (*.f64 ux uy))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) uy) 2)) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","(*.f64 (sin.f64 (*.f64 (*.f64 ux 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 uy) (*.f64 uy maxCos)) (+.f64 (-.f64 1 uy) (*.f64 uy maxCos))))))","(*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) ux) 2)) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 uy maxCos (-.f64 1 uy)) 2))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux)) (+.f64 (-.f64 1 maxCos) (*.f64 maxCos ux))))))","(*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) uy) 2)) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 maxCos)) 2))))","(*.f64 (sin.f64 (*.f64 (*.f64 maxCos 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux uy)) (+.f64 (-.f64 1 ux) (*.f64 ux uy))))))","(*.f64 (sin.f64 (*.f64 (*.f64 (PI.f64) maxCos) 2)) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 uy ux (-.f64 1 ux)) 2))))"]],"symmetry":[[]],"time":63.81689453125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))"]],"time":23.255126953125,"type":"simplify"},{"compiler":[[46,32]],"time":0.618896484375,"type":"eval"},{"alts":[["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","next",12.152283556089811]],"compiler":[[21,16],[21,16]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[12.152283556089811],"time":1.114990234375,"type":"prune"},{"compiler":[[79,43]],"locations":[["(*.f64 uy (+.f64 (PI.f64) (PI.f64)))",0.27734375,true],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))",0.3203125,true],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)",0.5130462890737681,true],["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))",12.030483766494624,true]],"time":19.216064453125,"type":"localize"},{"count":[[4,76]],"series":[["(*.f64 uy (+.f64 (PI.f64) (PI.f64)))","uy","-inf",0.243896484375],["(*.f64 uy (+.f64 (PI.f64) (PI.f64)))","uy","inf",0.40087890625],["(*.f64 uy (+.f64 (PI.f64) (PI.f64)))","uy","0",0.403076171875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","maxCos","-inf",0.700927734375],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","maxCos","inf",0.781005859375],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","maxCos","0",1.014892578125],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","ux","-inf",1.106201171875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","ux","inf",1.287841796875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","ux","0",1.130126953125],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","uy","-inf",0.405029296875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","uy","inf",0.739990234375],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","uy","0",1.022216796875],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)","maxCos","-inf",0.18310546875],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)","maxCos","inf",0.4150390625],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)","maxCos","0",0.199951171875],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)","ux","-inf",0.23193359375],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)","ux","inf",0.18701171875],["(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)","ux","0",0.206787109375],["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))","maxCos","-inf",0.4228515625],["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))","maxCos","inf",0.343994140625],["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))","maxCos","0",0.4111328125],["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))","ux","-inf",0.71484375],["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))","ux","inf",0.541015625],["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))","ux","0",0.609130859375]],"time":14.1611328125,"type":"series"},{"count":[[4,235]],"inputs":[["(-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))","(pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","(*.f64 uy (+.f64 (PI.f64) (PI.f64)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0) (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1/2) (*.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (*.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (*.f64 1/2 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (*.f64 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1/2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (+.f64 1/2 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (-.f64 1/2 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (PI.f64) (-.f64 (neg.f64 (PI.f64)) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (PI.f64)) (-.f64 (neg.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (neg.f64 (/.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 (*.f64 (*.f64 ux maxCos) (fma.f64 ux maxCos (-.f64 1 ux)))) (*.f64 (-.f64 1 ux) (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 ux maxCos))) (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (-.f64 0 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (+.f64 (PI.f64) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (/.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 -1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))) (-.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 ux maxCos 1) (-.f64 1 ux)) (-.f64 1 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1))) (cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1) (*.f64 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) -1) (*.f64 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) -1) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (neg.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (*.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (neg.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (*.f64 1 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (fma.f64 ux maxCos (-.f64 1 ux))) (+.f64 (fma.f64 ux maxCos 1) (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))) (-.f64 -1 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (/.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (/.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6))) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6))) 2) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4)) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (-.f64 1 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0) (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2)) (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 3/2)) (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (sqrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))) (+.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (/.f64 1 (neg.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (/.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6) 3)) (/.f64 1 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (+.f64 1 (+.f64 (pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 6) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6) 3)) 1) (*.f64 (+.f64 1 (+.f64 (pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 6) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6))) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) 1) (*.f64 (neg.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) 1) (*.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) 1) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (*.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6))) (*.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2)) (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) 1) (neg.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6))) (cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/2 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (fma.f64 ux maxCos (-.f64 1 ux)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (PI.f64) (PI.f64)) 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 ux maxCos)) (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 ux maxCos) (fma.f64 ux maxCos (-.f64 1 ux))) (*.f64 (-.f64 1 ux) (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 ux) (fma.f64 ux maxCos (-.f64 1 ux))) (*.f64 (*.f64 ux maxCos) (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (-.f64 1 ux)) (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 ux maxCos)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 0) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 1/2) (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) (*.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos 1)) (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (neg.f64 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 ux maxCos) (fma.f64 ux maxCos (-.f64 1 ux)))) (*.f64 1 (*.f64 (-.f64 1 ux) (fma.f64 ux maxCos (-.f64 1 ux)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 ux maxCos))) (*.f64 1 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (*.f64 1/2 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) (*.f64 0 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 ux maxCos 1) (fma.f64 ux maxCos (-.f64 1 ux))) (*.f64 (neg.f64 ux) (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 ux maxCos) (fma.f64 ux maxCos (-.f64 1 ux))) 1) (*.f64 (*.f64 (-.f64 1 ux) (fma.f64 ux maxCos (-.f64 1 ux))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 ux maxCos)) 1) (*.f64 (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (-.f64 1 ux)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))) -1) (*.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (fma.f64 ux maxCos (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4)) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (fma.f64 ux maxCos (-.f64 1 ux))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 ux maxCos) (*.f64 (fma.f64 ux maxCos (-.f64 1 ux)) (-.f64 1 ux)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 ux maxCos) (fma.f64 ux maxCos (-.f64 1 ux)) (*.f64 (-.f64 1 ux) (fma.f64 ux maxCos (-.f64 1 ux))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 0) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1/2) (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (*.f64 1/2 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (*.f64 0 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (*.f64 (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (*.f64 (sqrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (cbrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)))) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1/2) (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 1/2 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) (*.f64 0 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (PI.f64)) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (cbrt.f64 uy)) (+.f64 (cbrt.f64 (*.f64 uy uy)) (cbrt.f64 (*.f64 uy uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (*.f64 2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (+.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 uy (PI.f64))) (+.f64 (cbrt.f64 (pow.f64 (*.f64 uy (PI.f64)) 2)) (cbrt.f64 (pow.f64 (*.f64 uy (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 uy uy)) (PI.f64)) (+.f64 (cbrt.f64 uy) (cbrt.f64 uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 uy (PI.f64)) 2)) (+.f64 (cbrt.f64 (*.f64 uy (PI.f64))) (cbrt.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)) (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (cbrt.f64 (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (PI.f64) (PI.f64)) (cbrt.f64 uy)) (cbrt.f64 (*.f64 uy uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 uy uy) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (+.f64 uy uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (PI.f64)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (*.f64 (PI.f64) (cbrt.f64 uy)) (*.f64 (PI.f64) (cbrt.f64 uy))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (+.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (*.f64 uy (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) uy (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 uy (PI.f64) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) (cbrt.f64 uy)) (cbrt.f64 (*.f64 uy uy)) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (PI.f64)) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 uy (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 uy (PI.f64)) 2)) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 uy (PI.f64)) (*.f64 uy (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 uy (PI.f64)) 1 (*.f64 uy (PI.f64)))))))"]],"rules":[["egg-rr",50],["egg-rr",32],["egg-rr",40],["egg-rr",113]],"time":49.096923828125,"type":"rewrite"},{"count":[[311,290]],"inputs":[["(*.f64 (-.f64 2 (*.f64 2 maxCos)) ux)","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))","(+.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(+.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(+.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(-.f64 1 (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","1","(+.f64 1 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))","(+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux)) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux)) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux)) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(pow.f64 (-.f64 1 ux) 2)","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (pow.f64 (-.f64 1 ux) 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2)))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2)))))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) ux))) 2))))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) ux))) 2)))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)) 3))) (*.f64 (-.f64 1 ux) (*.f64 (pow.f64 maxCos 3) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) ux))) 2)))))))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 2 (*.f64 2 maxCos)) ux)","(*.f64 (fma.f64 -2 maxCos 2) ux)","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))","(neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 (*.f64 (-.f64 2 (*.f64 2 maxCos)) ux) (*.f64 -1 (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))","(neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))","(+.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 -1 (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(-.f64 1 (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux)))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) 1) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (-.f64 (fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) 1) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (-.f64 (fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) 1) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (pow.f64 (*.f64 maxCos ux) 2))","(+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) (neg.f64 (pow.f64 (*.f64 maxCos ux) 2)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (-.f64 (fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) 1) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (-.f64 (fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) 1) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(neg.f64 (pow.f64 (*.f64 maxCos ux) 2))","(+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) (neg.f64 (pow.f64 (*.f64 maxCos ux) 2)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (-.f64 (fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) 1) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))) (pow.f64 (-.f64 1 ux) 2))","(-.f64 (-.f64 (fma.f64 (*.f64 -2 (-.f64 1 ux)) (*.f64 maxCos ux) 1) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","1","(+.f64 1 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux))","(fma.f64 (fma.f64 2 maxCos -2) ux 1)","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))","(pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)","(+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2)))","(fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 maxCos 1) 2) (pow.f64 ux 2))))","(+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))","(pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux)) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2)))","(fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux)) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux)) (*.f64 (pow.f64 ux 2) (pow.f64 (+.f64 1 (*.f64 -1 maxCos)) 2))))","(+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))","(pow.f64 (-.f64 1 ux) 2)","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (pow.f64 (-.f64 1 ux) 2))","(fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (-.f64 1 ux) 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))","(pow.f64 (*.f64 maxCos ux) 2)","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))","(pow.f64 (*.f64 maxCos ux) 2)","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2)))","(fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(+.f64 (*.f64 2 (*.f64 (-.f64 1 ux) (*.f64 maxCos ux))) (+.f64 (pow.f64 (-.f64 1 ux) 2) (*.f64 (pow.f64 maxCos 2) (pow.f64 ux 2))))","(+.f64 (fma.f64 (*.f64 2 (-.f64 1 ux)) (*.f64 maxCos ux) (pow.f64 (*.f64 maxCos ux) 2)) (pow.f64 (-.f64 1 ux) 2))","(*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2)))))","(*.f64 (*.f64 2 (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2)))))))","(fma.f64 -4/3 (*.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2)))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (+.f64 (*.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5)) (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 -4/3 (*.f64 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (+.f64 (*.f64 4/15 (*.f64 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (+.f64 (*.f64 2 (*.f64 (*.f64 uy (PI.f64)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))) (*.f64 -8/315 (*.f64 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (+.f64 (*.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5)))) (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (+.f64 (*.f64 -8/315 (pow.f64 (*.f64 uy (PI.f64)) 7)) (*.f64 2 (*.f64 uy (PI.f64))))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (+.f64 1 (*.f64 maxCos ux)) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))))","(fma.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) ux))) 2))))))))","(fma.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 maxCos maxCos)) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 ux ux (pow.f64 (*.f64 (neg.f64 (*.f64 (-.f64 1 ux) ux)) (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2))))) 2)))) -1/2 (*.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2)))))))","(+.f64 (*.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (pow.f64 maxCos 2) (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) ux))) 2)))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)) 3))) (*.f64 (-.f64 1 ux) (*.f64 (pow.f64 maxCos 3) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (-.f64 1 ux) ux))) 2)))))))))))","(fma.f64 (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 -1/2 (fma.f64 (*.f64 (*.f64 (*.f64 maxCos maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (fma.f64 ux ux (pow.f64 (*.f64 (neg.f64 (*.f64 (-.f64 1 ux) ux)) (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2))))) 2))) (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2)))) (*.f64 (sqrt.f64 (pow.f64 (-.f64 1 (pow.f64 (-.f64 1 ux) 2)) -3)) (*.f64 (*.f64 (-.f64 1 ux) (pow.f64 maxCos 3)) (*.f64 ux (*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (fma.f64 ux ux (pow.f64 (*.f64 (neg.f64 (*.f64 (-.f64 1 ux) ux)) (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2))))) 2))))))) (*.f64 (neg.f64 (*.f64 (*.f64 (-.f64 1 ux) maxCos) (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 -1 (+.f64 -1 (pow.f64 (-.f64 1 ux) 2)))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))"]],"time":266.069091796875,"type":"simplify"},{"compiler":[[8443,5034]],"time":91.741943359375,"type":"eval"},{"alts":[["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 2))))","fresh",12.014902741824818],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4)) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (-.f64 1 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))","fresh",12.779294161803696],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (*.f64 (cbrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (+.f64 1/3 1/2)))))","fresh",12.118473346600425],["(*.f64 (sin.f64 (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) uy))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","fresh",12.164956822584656],["(pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 3) 1/3)","fresh",14.436311728010656],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))","fresh",11.195114228767157],["(*.f64 (sin.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)) (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","fresh",12.15732749509224],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))","fresh",14.837483536247257],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))","fresh",12.144293399787687],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))) (-.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))))))","fresh",12.062063527691002],["(*.f64 (*.f64 2 (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))))","fresh",28.382892151028322],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","next",0.5523200997009194],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","fresh",12.119584285880315],["(pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) 3)","fresh",12.170526016667644]],"compiler":[[65,48],[44,33],[38,30],[29,22],[25,20],[28,22],[31,21],[29,19],[43,29],[28,20],[20,16],[25,19],[27,21],[24,19],[65,48],[44,33],[38,30],[29,22],[25,20],[28,22],[31,21],[29,19],[43,29],[28,20],[20,16],[25,19],[27,21],[24,19]],"count":[[291,14]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[290,14],"picked":[1,0]}],"min-error":[0.44582387155313125],"time":62.509033203125,"type":"prune"},{"compiler":[[102,62]],"locations":[["(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))",0.0859375,true],["(sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))",0.27145255115753775,true],["(*.f64 uy (+.f64 (PI.f64) (PI.f64)))",0.27734375,false],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))",0.3203125,true]],"time":25.18994140625,"type":"localize"},{"count":[[3,32]],"series":[["(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","ux","-inf",0.385986328125],["(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","ux","inf",0.3837890625],["(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","ux","0",0.47412109375],["(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","maxCos","-inf",0.43701171875],["(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","maxCos","inf",0.408935546875],["(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","maxCos","0",0.531982421875],["(sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))","uy","-inf",0.14794921875],["(sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))","uy","inf",0.151123046875],["(sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))","uy","0",0.274169921875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","ux","-inf",0.76904296875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","ux","inf",0.942138671875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","ux","0",2.8759765625],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","maxCos","-inf",0.947021484375],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","maxCos","inf",0.953857421875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","maxCos","0",1.123046875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","uy","-inf",0.406005859375],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","uy","inf",0.865966796875],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","uy","0",1.024169921875]],"time":13.52294921875,"type":"series"},{"count":[[3,103]],"inputs":[["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","(sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))","(sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 0) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1/2) (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 0 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (*.f64 1/2 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 0) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1/2) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (*.f64 1 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 0 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 1/2 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) 1) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))) (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 0) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 0 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 1/2 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (*.f64 1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (fabs.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (pow.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 0) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))))"]],"rules":[["egg-rr",44],["egg-rr",28],["egg-rr",31]],"time":38.618896484375,"type":"rewrite"},{"count":[[135,137]],"inputs":[["(*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -8/315 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) maxCos))) (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) maxCos))) (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) maxCos))) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (pow.f64 maxCos 3))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))) (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))","(*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))","(fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))))","(fma.f64 (*.f64 4/15 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))))) (pow.f64 (*.f64 uy (PI.f64)) 5) (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -8/315 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))))","(fma.f64 (*.f64 4/15 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))))) (pow.f64 (*.f64 uy (PI.f64)) 5) (fma.f64 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 7)) -8/315 (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 -1/2 (*.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2))))) (*.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","(fma.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 1/2 (fma.f64 (*.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2))))) -1/2 (fma.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 1/4 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (sqrt.f64 (pow.f64 (*.f64 ux (-.f64 2 ux)) -3))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) -4/3 (*.f64 2 (*.f64 uy (PI.f64))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 (*.f64 uy (PI.f64)) 2 (fma.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) -4/3 (fma.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5) (*.f64 -8/315 (pow.f64 (*.f64 uy (PI.f64)) 7)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))","(sqrt.f64 (*.f64 ux (-.f64 2 ux)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) maxCos))) (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) maxCos)) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) maxCos))) (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))","(fma.f64 -1/2 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) maxCos)) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (pow.f64 maxCos 2)) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) maxCos))) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (pow.f64 maxCos 3))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))) (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))))))","(fma.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))))) -1/2 (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) maxCos)) (fma.f64 1/4 (*.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) (pow.f64 maxCos 3))) (sqrt.f64 (pow.f64 (*.f64 ux (-.f64 2 ux)) -3))) (sqrt.f64 (*.f64 ux (-.f64 2 ux))))))"]],"time":116.84423828125,"type":"simplify"},{"compiler":[[6646,4164]],"time":74.933837890625,"type":"eval"},{"alts":[["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))","fresh",11.195114228767157],["(*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))","fresh",0.585402650559629],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))","fresh",14.837483536247257],["(*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))","fresh",0.7672278338446997],["(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","fresh",0.5865188790062456],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.5582176583115717],["(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","fresh",0.7813612530664423],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 2))))","fresh",12.014902741824818],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) maxCos)) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))))","fresh",1.1858350522703829],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","next",0.5557651943824753],["(fma.f64 (*.f64 4/15 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))))) (pow.f64 (*.f64 uy (PI.f64)) 5) (fma.f64 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 7)) -8/315 (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))))","fresh",7.514041388844854],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))","fresh",0.9492445255316161],["(*.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))","fresh",0.6412063790062457],["(*.f64 (sin.f64 (*.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","fresh",0.6370666428968413]],"compiler":[[28,22],[42,32],[29,19],[43,33],[30,22],[51,35],[168,133],[65,48],[36,27],[31,24],[93,67],[79,61],[36,24],[31,23],[28,22],[42,32],[29,19],[43,33],[30,22],[51,35],[168,133],[65,48],[36,27],[31,24],[93,67],[79,61],[36,24],[31,23]],"count":[[201,14]],"kept":[{"done":[0,0],"fresh":[13,3],"new":[187,11],"picked":[1,0]}],"min-error":[0.052543793405595035],"time":69.626953125,"type":"prune"},{"compiler":[[138,82]],"locations":[["(sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))",0.27145255115753775,true],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))",0.3203125,true],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)",0.41796875,true],["(*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))",0.456073779305326,true]],"time":33.405029296875,"type":"localize"},{"count":[[4,52]],"series":[["(sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))","uy","-inf",0.157958984375],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))","uy","inf",0.169921875],["(sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))","uy","0",0.204833984375],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","ux","-inf",0.343994140625],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","ux","inf",0.383056640625],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","ux","0",0.428955078125],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","maxCos","-inf",0.464111328125],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","maxCos","inf",0.379150390625],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","maxCos","0",0.449951171875],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","uy","-inf",0.464111328125],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","uy","inf",0.491943359375],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","uy","0",0.39599609375],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","uy","-inf",0.297119140625],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","uy","inf",0.386962890625],["(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","uy","0",1.513916015625],["(*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))","uy","-inf",0.238037109375],["(*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))","uy","inf",0.35400390625],["(*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))","uy","0",1.65087890625]],"time":9.166015625,"type":"series"},{"count":[[4,116]],"inputs":[["(*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","(sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 1/2) (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 0) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) (*.f64 0 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (*.f64 1/2 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 (PI.f64)))) (*.f64 uy (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 8 (PI.f64))) (*.f64 (pow.f64 (PI.f64) 2/3) uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) (*.f64 uy (cbrt.f64 (*.f64 8 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (cbrt.f64 (*.f64 8 (PI.f64)))) (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 2/3) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (cbrt.f64 (*.f64 8 (PI.f64))))) (cbrt.f64 (pow.f64 (*.f64 8 (PI.f64)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) (pow.f64 (PI.f64) 2/3)) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 8 (PI.f64))) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy))) (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (*.f64 (pow.f64 (PI.f64) 2/3) (cbrt.f64 (*.f64 8 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)) (*.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 2/3) (cbrt.f64 (*.f64 8 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 8 (PI.f64)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 8 (PI.f64)) 2/3)) (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 2) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 uy (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 (PI.f64) (PI.f64))) (*.f64 8 (PI.f64))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (pow.f64 uy 3) (*.f64 (PI.f64) (PI.f64))) (*.f64 8 (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 1/2) (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 0) (*.f64 (pow.f64 (PI.f64) 2/3) uy))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (*.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (pow.f64 (PI.f64) 2/3) uy)) (*.f64 1/2 (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (PI.f64) 2/3) uy)) (*.f64 (pow.f64 (PI.f64) 2/3) uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (PI.f64) 2/3)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 (PI.f64)))) uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2/3) uy)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 uy (pow.f64 (PI.f64) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)) (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 2/3) (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) (cbrt.f64 uy)) (pow.f64 uy 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (cbrt.f64 (pow.f64 (PI.f64) 2/3))) (cbrt.f64 (*.f64 (PI.f64) (cbrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 uy) (*.f64 (pow.f64 uy 2/3) (pow.f64 (PI.f64) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (*.f64 (cbrt.f64 (PI.f64)) uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (PI.f64) 2/3) uy))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 uy 3) (*.f64 (PI.f64) (PI.f64))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 uy 3) (*.f64 (PI.f64) (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1/2) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 0) (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 0 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (*.f64 1/2 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 2/3)) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))) (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))) (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 2/3) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 1/2) (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 0) (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (*.f64 0 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))) (*.f64 1/2 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))) (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))) (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 2/3) (cbrt.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (sin.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) uy))) (cos.f64 (*.f64 (cbrt.f64 (PI.f64)) (*.f64 (pow.f64 (PI.f64) 2/3) uy)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64)))))))))"]],"rules":[["egg-rr",23],["egg-rr",29],["egg-rr",29],["egg-rr",35]],"time":41.80908203125,"type":"rewrite"},{"count":[[168,145]],"inputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -8/315 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 2 (*.f64 uy (PI.f64)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (PI.f64) 2)) 1/3) uy)","(*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy)","(*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))","(*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64))))","(+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))","(fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64))))))","(fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 5)) (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 4/15 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -8/315 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -4/3 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3)))) (*.f64 2 (*.f64 (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))) (*.f64 uy (PI.f64)))))))","(fma.f64 4/15 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 5)) (fma.f64 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 7)) -8/315 (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64))))) (sqrt.f64 (-.f64 (*.f64 (+.f64 (*.f64 -2 maxCos) 2) ux) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2)))))","(*.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(*.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (*.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 -1/2 (*.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2))))) (*.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (fma.f64 (*.f64 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 maxCos maxCos) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2))))) -1/2 (fma.f64 (sqrt.f64 (*.f64 ux (-.f64 2 ux))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) (*.f64 (*.f64 1/4 (*.f64 (fma.f64 ux ux (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 -2 (*.f64 ux (-.f64 1 ux))))) 2)) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (sqrt.f64 (pow.f64 (*.f64 ux (-.f64 2 ux)) -3))))))","(*.f64 2 (*.f64 uy (PI.f64)))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))))","(fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 2 (*.f64 uy (PI.f64))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 2 (*.f64 uy (PI.f64)) (fma.f64 -4/3 (pow.f64 (*.f64 uy (PI.f64)) 3) (*.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5))))","(+.f64 (*.f64 2 (*.f64 uy (PI.f64))) (+.f64 (*.f64 -4/3 (*.f64 (pow.f64 uy 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 4/15 (*.f64 (pow.f64 uy 5) (pow.f64 (PI.f64) 5))) (*.f64 -8/315 (*.f64 (pow.f64 uy 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 (*.f64 uy (PI.f64)) 2 (fma.f64 (pow.f64 (*.f64 uy (PI.f64)) 3) -4/3 (fma.f64 4/15 (pow.f64 (*.f64 uy (PI.f64)) 5) (*.f64 -8/315 (pow.f64 (*.f64 uy (PI.f64)) 7)))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))","(sin.f64 (*.f64 2 (*.f64 (pow.f64 1 1/3) (*.f64 uy (PI.f64)))))","(sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))"]],"time":169.742919921875,"type":"simplify"},{"compiler":[[5521,4104]],"time":69.465087890625,"type":"eval"},{"alts":[["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))","fresh",11.195114228767157],["(*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))","fresh",0.585402650559629],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))","fresh",14.837483536247257],["(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","fresh",0.6693277624627411],["(*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))","fresh",0.7672278338446997],["(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","fresh",0.5865188790062456],["(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","fresh",0.7813612530664423],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","next",0.5582176583115717],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) maxCos)) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))))","fresh",1.1858350522703829],["(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","done",0.5557651943824753],["(fma.f64 (*.f64 4/15 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))))) (pow.f64 (*.f64 uy (PI.f64)) 5) (fma.f64 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 7)) -8/315 (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))))","fresh",7.514041388844854],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))","fresh",0.9492445255316161],["(*.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))","fresh",0.6412063790062457],["(*.f64 (sin.f64 (*.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","fresh",0.6370666428968413]],"compiler":[[28,22],[42,32],[29,19],[47,37],[43,33],[30,22],[168,133],[51,35],[36,27],[31,24],[93,67],[79,61],[36,24],[31,23],[28,22],[42,32],[29,19],[47,37],[43,33],[30,22],[168,133],[51,35],[36,27],[93,67],[79,61],[36,24],[31,23]],"count":[[159,14]],"kept":[{"done":[0,0],"fresh":[13,11],"new":[145,2],"picked":[1,1]}],"min-error":[0.052543793405595035],"time":53.39501953125,"type":"prune"},{"compiler":[[228,132]],"locations":[["(*.f64 uy (+.f64 (PI.f64) (PI.f64)))",0.27734375,false],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))",0.3203125,false],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))",0.3359375,true],["(pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)",0.5442962890737681,true]],"time":49.85888671875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","ux","-inf",0.551025390625],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","ux","inf",0.533935546875],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","ux","0",0.9658203125],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","maxCos","-inf",0.47509765625],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","maxCos","inf",0.4609375],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","maxCos","0",0.648193359375],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","uy","-inf",0.39794921875],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","uy","inf",0.410888671875],["(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))","uy","0",0.65380859375],["(pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)","uy","-inf",0.340087890625],["(pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)","uy","inf",0.35595703125],["(pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)","uy","0",0.654052734375]],"time":6.740966796875,"type":"series"},{"count":[[2,103]],"inputs":[["(pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)","(*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) 0) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 0 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (neg.f64 1/2) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (neg.f64 (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 0 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 0) 2) (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1/2 (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (+.f64 0 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 -1 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) -1) (*.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) -1) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) 1) (*.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (*.f64 1 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (-.f64 -1 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (-.f64 1 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 4)) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) (neg.f64 (sqrt.f64 2))) (neg.f64 (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) (cbrt.f64 4)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 1/2 3) (pow.f64 (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) 3)) (+.f64 (*.f64 1/2 1/2) (+.f64 (*.f64 (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4)))) (*.f64 1/2 (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) 3)) (+.f64 1 (+.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 1 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) (sqrt.f64 2)) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) (cbrt.f64 2)) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) -1) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 3) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 1/2 (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1 (neg.f64 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1 (neg.f64 (pow.f64 (cos.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 (fma.f64 -2 maxCos 2) ux)) (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 0) (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 (fma.f64 -2 maxCos 2) ux))) (*.f64 1 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (fma.f64 -2 maxCos 2) ux) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))) (*.f64 1 (*.f64 (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (*.f64 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 -2 maxCos 2) ux) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 0 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 (fma.f64 -2 maxCos 2) ux)) 1) (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (fma.f64 -2 maxCos 2) ux) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) 1) (*.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 (fma.f64 -2 maxCos 2) ux)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (*.f64 (fma.f64 -2 maxCos 2) ux) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)) (*.f64 (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 4)) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) 2)) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 2)) (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (cos.f64 0) (cos.f64 (*.f64 (*.f64 uy (PI.f64)) 4))) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 (fma.f64 -2 maxCos 2) ux) (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 -2 maxCos 2) ux) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (*.f64 (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)) (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))))))"]],"rules":[["egg-rr",41],["egg-rr",62]],"time":34.362060546875,"type":"rewrite"},{"count":[[151,141]],"inputs":[["(*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))","(+.f64 (*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 -16/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))","(+.f64 (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 -16/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))","(+.f64 (*.f64 (+.f64 (*.f64 -32/315 (pow.f64 (PI.f64) 8)) (*.f64 -32/45 (pow.f64 (PI.f64) 8))) (pow.f64 uy 8)) (+.f64 (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 -16/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 -16/3 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))) (*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -16/3 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6))))) (*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))))))","(+.f64 (*.f64 -16/3 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (+.f64 (*.f64 -32/315 (pow.f64 (PI.f64) 8)) (*.f64 -32/45 (pow.f64 (PI.f64) 8))) (pow.f64 uy 8))) (+.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6))))) (*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))))))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) (*.f64 2 (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) (*.f64 2 (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) (*.f64 2 (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (+.f64 (*.f64 -2 maxCos) 2) (*.f64 ux (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (+.f64 (*.f64 -2 maxCos) 2) (*.f64 ux (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (+.f64 (*.f64 -2 maxCos) 2) (*.f64 ux (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(+.f64 (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(+.f64 (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))","(*.f64 4 (pow.f64 (*.f64 uy (PI.f64)) 2))","(+.f64 (*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 -16/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))","(fma.f64 4 (pow.f64 (*.f64 uy (PI.f64)) 2) (*.f64 -16/3 (pow.f64 (*.f64 uy (PI.f64)) 4)))","(+.f64 (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 -16/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))))","(fma.f64 (*.f64 (pow.f64 (PI.f64) 6) 128/45) (pow.f64 uy 6) (fma.f64 4 (pow.f64 (*.f64 uy (PI.f64)) 2) (*.f64 -16/3 (pow.f64 (*.f64 uy (PI.f64)) 4))))","(+.f64 (*.f64 (+.f64 (*.f64 -32/315 (pow.f64 (PI.f64) 8)) (*.f64 -32/45 (pow.f64 (PI.f64) 8))) (pow.f64 uy 8)) (+.f64 (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 4 (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))) (*.f64 -16/3 (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4))))))","(fma.f64 (*.f64 (pow.f64 (PI.f64) 8) -256/315) (pow.f64 uy 8) (fma.f64 (*.f64 (pow.f64 (PI.f64) 6) 128/45) (pow.f64 uy 6) (fma.f64 4 (pow.f64 (*.f64 uy (PI.f64)) 2) (*.f64 -16/3 (pow.f64 (*.f64 uy (PI.f64)) 4)))))","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)","(*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))))","(*.f64 4 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (*.f64 uy (PI.f64)) 2)))","(+.f64 (*.f64 -16/3 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))) (*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))))","(fma.f64 -16/3 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (*.f64 uy (PI.f64)) 4)) (*.f64 4 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (*.f64 uy (PI.f64)) 2))))","(+.f64 (*.f64 -16/3 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6))))) (*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 (*.f64 -16/3 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 4) (fma.f64 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 uy 6)) (*.f64 (pow.f64 (PI.f64) 6) 128/45) (*.f64 4 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (*.f64 uy (PI.f64)) 2)))))","(+.f64 (*.f64 -16/3 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 4) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (+.f64 (*.f64 -32/315 (pow.f64 (PI.f64) 8)) (*.f64 -32/45 (pow.f64 (PI.f64) 8))) (pow.f64 uy 8))) (+.f64 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 6) (+.f64 (*.f64 16/9 (pow.f64 (PI.f64) 6)) (*.f64 16/15 (pow.f64 (PI.f64) 6))))) (*.f64 4 (*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (*.f64 (pow.f64 uy 2) (pow.f64 (PI.f64) 2)))))))","(+.f64 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (fma.f64 (*.f64 (pow.f64 (PI.f64) 8) -256/315) (pow.f64 uy 8) (*.f64 (pow.f64 uy 6) (*.f64 (pow.f64 (PI.f64) 6) 128/45)))) (fma.f64 -16/3 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (*.f64 uy (PI.f64)) 4)) (*.f64 4 (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (*.f64 uy (PI.f64)) 2)))))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 ux (+.f64 2 (*.f64 -2 maxCos))) (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 (*.f64 ux (-.f64 2 ux)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))","(*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 (*.f64 2 (*.f64 ux (-.f64 1 ux))) maxCos) (pow.f64 (*.f64 maxCos ux) 2))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))","(+.f64 (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))","(*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) (*.f64 2 (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(neg.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 (*.f64 2 (*.f64 ux (-.f64 1 ux))) maxCos) (pow.f64 (*.f64 maxCos ux) 2))))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) (*.f64 2 (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))","(+.f64 (*.f64 -1 (*.f64 maxCos (*.f64 (-.f64 (*.f64 2 ux) (*.f64 2 (pow.f64 ux 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 maxCos 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))","(*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))","(*.f64 (*.f64 (fma.f64 -2 maxCos 2) ux) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(neg.f64 (pow.f64 (*.f64 (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (-.f64 1 maxCos)) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (+.f64 (*.f64 -2 maxCos) 2) (*.f64 ux (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (+.f64 (*.f64 -2 maxCos) 2) (*.f64 ux (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))) (*.f64 (+.f64 (*.f64 -2 maxCos) 2) (*.f64 ux (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))))","(neg.f64 (pow.f64 (*.f64 (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (-.f64 1 maxCos)) 2))","(+.f64 (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))","(+.f64 (*.f64 ux (*.f64 (+.f64 2 (*.f64 -2 maxCos)) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))) (*.f64 -1 (*.f64 (pow.f64 (-.f64 1 maxCos) 2) (*.f64 (pow.f64 ux 2) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2)))))","(*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))) (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2))"]],"time":157.422119140625,"type":"simplify"},{"compiler":[[17045,10445]],"time":171.35498046875,"type":"eval"},{"alts":[["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))","fresh",11.195114228767157],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)) (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.6142326973853398],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) uy))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.6041351876168978],["(*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))","fresh",0.7672278338446997],["(*.f64 (sin.f64 (*.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","fresh",0.6370666428968413],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.5506101091705331],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.5231501586104002],["(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","fresh",0.5865188790062456],["(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","fresh",0.7813612530664423],["(*.f64 (cbrt.f64 (+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.5506101091705332],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (fma.f64 (*.f64 4/15 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))))) (pow.f64 (*.f64 uy (PI.f64)) 5) (fma.f64 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 7)) -8/315 (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))))))","fresh",7.127579106565409],["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (*.f64 2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.5206130384818225],["(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))","fresh",0.9492445255316161],["(*.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))","fresh",0.6412063790062457],["(*.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","fresh",0.5116363594693615]],"compiler":[[28,22],[61,41],[59,43],[43,33],[31,23],[57,41],[57,43],[30,22],[168,133],[66,48],[119,86],[57,43],[79,61],[36,24],[91,52]],"count":[[304,15]],"kept":[{"done":[1,0],"fresh":[12,7],"new":[290,8],"picked":[1,0]}],"min-error":[0.03479254138909578],"time":115.161865234375,"type":"prune"},{"accuracy":[0.5116363594693615],"baseline":[0.5116363594693615],"branch":[["ux",0.5116363594693615,1],["uy",0.5116363594693615,1],["maxCos",0.5116363594693616,1],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))",0.5116363594693615,1],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",0.5116363594693615,1],["(*.f64 (*.f64 uy 2) (PI.f64))",0.5116363594693615,1],["(*.f64 uy 2)",0.5116363594693615,1],["(sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))))",0.5116363594693615,1],["(-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))",0.5116363594693615,1],["(*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))",0.5116363594693616,1],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",0.5116363594693616,1]],"compiler":[[4,3],[4,3],[4,3],[28,20],[9,8],[8,7],[6,5],[21,14],[20,13],[18,11],[10,7],[1819,1174]],"count":[[37,1]],"inputs":[["(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)) (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) uy))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (cbrt.f64 (+.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))) 2) (+.f64 (*.f64 maxCos (*.f64 -2 (*.f64 ux (-.f64 1 ux)))) (*.f64 ux (-.f64 2 ux)))) (neg.f64 (pow.f64 (*.f64 maxCos (*.f64 ux (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) 2)))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (fma.f64 (*.f64 4/15 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))))) (pow.f64 (*.f64 uy (PI.f64)) 5) (fma.f64 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 7)) -8/315 (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))))))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 uy (cbrt.f64 (PI.f64))) (*.f64 2 (cbrt.f64 (*.f64 (PI.f64) (PI.f64)))))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2/3) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))) (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","(*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))","(*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 maxCos (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (pow.f64 maxCos 2) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64)))))) (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))))) (+.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2))) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))) (*.f64 1/4 (*.f64 (*.f64 (+.f64 (pow.f64 ux 2) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)))) (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))))) 2)) (*.f64 (-.f64 (*.f64 -2 ux) (*.f64 -2 (pow.f64 ux 2))) (*.f64 (pow.f64 maxCos 3) (sin.f64 (*.f64 2 (*.f64 uy (PI.f64))))))) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 2 ux) (pow.f64 ux 2)) 3))))))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 -1 (*.f64 ux (-.f64 ux 2)))) (*.f64 (*.f64 -2 (*.f64 ux (-.f64 1 ux))) maxCos)) (sqrt.f64 (*.f64 ux (-.f64 2 ux)))))","(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","(fma.f64 (*.f64 4/15 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2))))) (pow.f64 (*.f64 uy (PI.f64)) 5) (fma.f64 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 7)) -8/315 (fma.f64 -4/3 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (pow.f64 (*.f64 uy (PI.f64)) 3)) (*.f64 2 (*.f64 (sqrt.f64 (fma.f64 ux (fma.f64 -2 maxCos 2) (neg.f64 (pow.f64 (*.f64 (-.f64 1 maxCos) ux) 2)))) (*.f64 uy (PI.f64)))))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))))","(*.f64 (*.f64 (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))) (cbrt.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (cbrt.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2)))","(*.f64 (sin.f64 (*.f64 (cbrt.f64 uy) (*.f64 (cbrt.f64 (*.f64 uy uy)) (+.f64 (PI.f64) (PI.f64))))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (/.f64 (/.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 6)) (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4) (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 2))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 1 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 4)) (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (-.f64 1 (cbrt.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (*.f64 (cbrt.f64 (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (pow.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)) (+.f64 1/3 1/2)))))","(*.f64 (sin.f64 (*.f64 (cbrt.f64 (+.f64 (PI.f64) (PI.f64))) (*.f64 (cbrt.f64 (*.f64 4 (*.f64 (PI.f64) (PI.f64)))) uy))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","(pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) 3) 1/3)","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (+.f64 1 (fma.f64 ux (fma.f64 2 maxCos -2) (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))))))","(*.f64 (sin.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64))) 2)) (cbrt.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (*.f64 (PI.f64) (PI.f64)) (+.f64 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2) -1)))))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) 2) (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2)))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (*.f64 (+.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))) (-.f64 -1 (fma.f64 ux maxCos (-.f64 1 ux))))))","(*.f64 (*.f64 2 (*.f64 uy (PI.f64))) (sqrt.f64 (-.f64 1 (pow.f64 (-.f64 (fma.f64 maxCos ux 1) ux) 2))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))","(*.f64 (sin.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 (PI.f64) (PI.f64))) uy) (cbrt.f64 (*.f64 8 (PI.f64))))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","(pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))) 3)","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (-.f64 1 (pow.f64 (fma.f64 ux maxCos (-.f64 1 ux)) 2))))","(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))"]],"link":["."],"name":["UniformSampleCone, y"],"oracle":[29.73949935690507],"outputs":[["(*.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))"]],"time":154.261962890625,"times":[["ux",10.47802734375],["uy",10.52880859375],["maxCos",10.27197265625],["(*.f64 (sin.f64 (*.f64 (*.f64 uy 2) (PI.f64))) (sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))))",10.906982421875],["(sin.f64 (*.f64 (*.f64 uy 2) (PI.f64)))",10.550048828125],["(*.f64 (*.f64 uy 2) (PI.f64))",10.784912109375],["(*.f64 uy 2)",10.543212890625],["(sqrt.f64 (-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))))",10.689208984375],["(-.f64 1 (*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos))))",10.923828125],["(*.f64 (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)) (+.f64 (-.f64 1 ux) (*.f64 ux maxCos)))",10.615966796875],["(+.f64 (-.f64 1 ux) (*.f64 ux maxCos))",10.81396484375]],"type":"regimes"},{"compiler":[[91,52]],"inputs":[["(*.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 (sin.f64 (*.f64 uy (PI.f64))) (cos.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))) (*.f64 (*.f64 (cos.f64 (*.f64 uy (PI.f64))) (sin.f64 (*.f64 uy (PI.f64)))) (*.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2))) (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))))))) (cbrt.f64 (*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))))","(*.f64 (sin.f64 (*.f64 uy (+.f64 (PI.f64) (PI.f64)))) (sqrt.f64 (fma.f64 (fma.f64 -2 maxCos 2) ux (neg.f64 (pow.f64 (*.f64 ux (-.f64 1 maxCos)) 2)))))"]],"stop":[["fuel",1]],"time":27.93408203125,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[91,52]],"remove-preprocessing":[[]],"time":26.570068359375,"type":"end"}]