[{"compiler":[[23,16]],"method":["search"],"sampling":[[12,0.3900530747614539,0.4407599744804429,0.1691869507581032],[11,0.3120424598091631,0.5460743046660355,0.14188323552480142],[10,0.2496339678473305,0.6396870426087844,0.11067898954388511],[9,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[8,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":168.955078125,"type":"analyze"},{"outcomes":[["body",512,"invalid",121.2216796875,804],["body",256,"invalid",127.585693359375,1645],["body",512,"valid",139.955078125,927],["body",1024,"valid",458.7021484375,1892],["body",1024,"invalid",389.7490234375,1600],["body",2048,"valid",3.103271484375,7],["body",256,"valid",406.6201171875,5430]],"time":1660.0791015625,"type":"sample"},{"compiler":[[22,15]],"inputs":[["0","1","2"],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)))","(+.f64 (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 th th)) (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 a2 a2)))","(+.f64 (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 th th)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 th th)) (*.f64 (/.f64 (cos.f64 a1) (sqrt.f64 2)) (*.f64 a2 a2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 a1) (fma.f64 th th (*.f64 a2 a2))))","(+.f64 (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 a2) (sqrt.f64 2)) (*.f64 th th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 a2) (fma.f64 a1 a1 (*.f64 th th))))"]],"symmetry":[[]],"time":76.308837890625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))"]],"time":20.553955078125,"type":"simplify"},{"compiler":[[34,20]],"time":0.47802734375,"type":"eval"},{"alts":[["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","next",0.45445253907376815],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","fresh",0.5228500976844203]],"compiler":[[15,10],[22,15],[15,10],[22,15]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.1640625],"time":1.576171875,"type":"prune"},{"compiler":[[41,16]],"locations":[["(cos.f64 th)",0.00390625,true],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))",0.1640625,true],["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))",0.4264450195368841,true]],"time":9.101806640625,"type":"localize"},{"count":[[3,64]],"series":[["(cos.f64 th)","th","-inf",0.14013671875],["(cos.f64 th)","th","inf",0.170166015625],["(cos.f64 th)","th","0",0.777099609375],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","a2","-inf",0.217041015625],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","a2","inf",0.39501953125],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","a2","0",0.4619140625],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","a1","-inf",0.291015625],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","a1","inf",0.4169921875],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","a1","0",0.669921875],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","th","-inf",0.535888671875],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","th","inf",0.97607421875],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","th","0",0.597900390625],["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))","a2","-inf",0.198974609375],["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))","a2","inf",0.39013671875],["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))","a2","0",0.435791015625],["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))","a1","-inf",1.01611328125],["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))","a1","inf",0.494873046875],["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))","a1","0",0.85302734375]],"time":9.3310546875,"type":"series"},{"count":[[3,103]],"inputs":[["(*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))","(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","(cos.f64 th)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 1/2) (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 0) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) 1) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 0 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)) (sqrt.f64 1/2)) (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2) 1/2)) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 (sqrt.f64 1/2))) (sqrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/8) (fma.f64 a1 a1 (*.f64 a2 a2)))) (cbrt.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (cbrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)) (cbrt.f64 (*.f64 (sqrt.f64 1/8) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 1) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/2) (*.f64 a1 a1) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a1 a1) (sqrt.f64 1/2) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))) (*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 1/2) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 0) (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (*.f64 a1 a1)) (*.f64 (*.f64 a2 a2) (*.f64 (cos.f64 th) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (*.f64 a1 a1)) 1) (*.f64 (*.f64 (*.f64 a2 a2) (*.f64 (cos.f64 th) (sqrt.f64 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))) (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))) (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a2 a2) (*.f64 (cos.f64 th) (sqrt.f64 1/2))) (*.f64 (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2) 1/2)) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 th)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (fma.f64 a1 a1 (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (*.f64 (cos.f64 th) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) (cbrt.f64 (cos.f64 th))) (cbrt.f64 (pow.f64 (cos.f64 th) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) (cbrt.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (*.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) (cbrt.f64 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2) 1/2)) (cos.f64 th)) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))) (cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 2)) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2)))) (cbrt.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)) (*.f64 (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2) 1/2)) (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a1 a1) (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (*.f64 (*.f64 a2 a2) (*.f64 (cos.f64 th) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 th) (sqrt.f64 1/2)) (*.f64 a1 a1) (*.f64 (*.f64 a2 a2) (*.f64 (cos.f64 th) (sqrt.f64 1/2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 th) (*.f64 (cos.f64 th) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 th) 1/2) (*.f64 (cos.f64 th) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 th) 0) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 th) (*.f64 0 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 th)) (*.f64 1/2 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cos.f64 th)) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 th)) (cbrt.f64 (pow.f64 (cos.f64 th) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (cbrt.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 th)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 th) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 th) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 th)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 th)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 th)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 th) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 th) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 th)))))"]],"rules":[["egg-rr",21],["egg-rr",43],["egg-rr",39]],"time":29.2529296875,"type":"rewrite"},{"count":[[167,130]],"inputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 th 2)))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (*.f64 -1/2 (pow.f64 th 2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (+.f64 (*.f64 -1/720 (pow.f64 th 6)) (*.f64 -1/2 (pow.f64 th 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))","(*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)))))","(fma.f64 (*.f64 1/24 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (pow.f64 th 4)) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1)))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 4)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 6)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (+.f64 (pow.f64 a2 2) (pow.f64 a1 2))))))","(fma.f64 (*.f64 1/24 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (pow.f64 th 4)) (fma.f64 (*.f64 -1/720 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (pow.f64 th 6)) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (*.f64 th th))) (*.f64 (sqrt.f64 1/2) (fma.f64 a2 a2 (*.f64 a1 a1))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cos.f64 th)))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 th 2)))","(fma.f64 -1/2 (*.f64 th th) 1)","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (*.f64 -1/2 (pow.f64 th 2))))","(+.f64 1 (fma.f64 1/24 (pow.f64 th 4) (*.f64 (*.f64 -1/2 th) th)))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 th 4)) (+.f64 (*.f64 -1/720 (pow.f64 th 6)) (*.f64 -1/2 (pow.f64 th 2)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 th 4) (fma.f64 -1/720 (pow.f64 th 6) (*.f64 (*.f64 -1/2 th) th))))"]],"time":183.712158203125,"type":"simplify"},{"compiler":[[2428,1144]],"time":24.824951171875,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","fresh",0.5228500976844203],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","next",0.36527255861065216],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","fresh",0.4131050293053261],["(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 (sqrt.f64 1/2)))))","fresh",0.8616717774958697],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 th)) 3) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","fresh",0.5942728028217029],["(*.f64 (cos.f64 th) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) 3))","fresh",0.7453653809692392],["(*.f64 (cos.f64 th) (/.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2)))","fresh",0.4571076172213043]],"compiler":[[22,15],[19,14],[22,17],[20,15],[18,13],[18,13],[19,14],[22,15],[19,14],[22,17],[20,15],[18,13],[18,13],[19,14]],"count":[[132,7]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[130,6],"picked":[1,0]}],"min-error":[0],"time":31.591064453125,"type":"prune"},{"compiler":[[64,33]],"locations":[["(cos.f64 th)",0.00390625,false],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))",0.1640625,true],["(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))",0.24609375,true],["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))",0.3701362793053261,true]],"time":15.0869140625,"type":"localize"},{"count":[[3,84]],"series":[["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","a2","-inf",0.22509765625],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","a2","inf",0.4658203125],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","a2","0",0.4580078125],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","a1","-inf",0.383056640625],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","a1","inf",0.451904296875],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","a1","0",0.60009765625],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","th","-inf",0.691162109375],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","th","inf",2.087890625],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","th","0",0.863037109375],["(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))","a2","-inf",0.211181640625],["(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))","a2","inf",0.2509765625],["(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))","a2","0",0.274169921875],["(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))","a1","-inf",0.232177734375],["(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))","a1","inf",0.27587890625],["(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))","a1","0",0.301025390625],["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))","a2","-inf",0.212158203125],["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))","a2","inf",0.428955078125],["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))","a2","0",1.0849609375],["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))","a1","-inf",0.326171875],["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))","a1","inf",0.430908203125],["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))","a1","0",1.74609375]],"time":12.43798828125,"type":"series"},{"count":[[3,121]],"inputs":[["(*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))","(*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))","(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 0) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 1/2) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1))) (*.f64 (cbrt.f64 1/2) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a2 a2) (sqrt.f64 1/2)) (*.f64 (*.f64 a1 a1) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a1 a1) (sqrt.f64 1/2)) (*.f64 (*.f64 a2 a2) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (*.f64 1/2 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) (*.f64 0 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1)) (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2)) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 2/3) (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))) (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2/3) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (cbrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2)) 1/2)) (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 2/3) (cbrt.f64 (*.f64 1/2 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2/3) (sqrt.f64 1/2)) (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 0) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 1/2) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (*.f64 1/2 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (*.f64 0 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1)) 1) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2))) (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2/3) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (fma.f64 a1 a1 (*.f64 a2 a2))) (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2/3) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a1 a1 (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 2/3) (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 2/3) (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 3) (sqrt.f64 1/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) 3) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a1 a1) (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 0) (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 1/2) (*.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) (*.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 th) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1))) (*.f64 (*.f64 (cos.f64 th) (cbrt.f64 1/2)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))) (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))) (*.f64 1/2 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) (*.f64 0 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1)) (*.f64 (cos.f64 th) (cbrt.f64 1/2))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2)) (*.f64 (cos.f64 th) (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (cbrt.f64 1/2)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 th)) (*.f64 (pow.f64 (cos.f64 th) 2/3) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (*.f64 (sqrt.f64 1/2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (cos.f64 th) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (*.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 2/3) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (fma.f64 a1 a1 (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 2/3) (cos.f64 th)) (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 th) 2/3) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) (cbrt.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))) (pow.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 2/3) (cbrt.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 th) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) (cbrt.f64 (cos.f64 th))) (pow.f64 (cos.f64 th) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)))) (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (*.f64 (cos.f64 th) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) 2/3) (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 th) 2/3) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2)) (cbrt.f64 (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 th) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2)) 3))))))"]],"rules":[["egg-rr",43],["egg-rr",35],["egg-rr",43]],"time":34.18212890625,"type":"rewrite"},{"count":[[205,149]],"inputs":[["(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2))) (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 2))))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2))) (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 2)))))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 2))))) (*.f64 -1/720 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 6))))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2)))","(cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 6) 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2)))","(cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 6) 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2)))","(cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 6) 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (cbrt.f64 1/2))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a1 a1))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 a2 a2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a1 2)) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2)))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2))) (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 2))))))","(fma.f64 (*.f64 -1/2 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)) (*.f64 th th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2))) (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 2)))))))","(fma.f64 (*.f64 1/24 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)) (pow.f64 th 4)) (fma.f64 (*.f64 -1/2 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)) (*.f64 th th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)))))","(+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 4))))) (+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (cbrt.f64 1/2))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 2))))) (*.f64 -1/720 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (pow.f64 th 6))))))))","(fma.f64 (*.f64 1/24 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)) (pow.f64 th 4)) (fma.f64 (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))) (cbrt.f64 1/2) (fma.f64 (*.f64 -1/2 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)) (*.f64 th th)) (*.f64 (*.f64 -1/720 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (*.f64 (fma.f64 a2 a2 (*.f64 a1 a1)) (cbrt.f64 1/2)) (pow.f64 th 6))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (+.f64 (pow.f64 a2 2) (pow.f64 a1 2)) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (*.f64 a1 a1) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (*.f64 a1 a1) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(*.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (*.f64 a1 a1) (*.f64 (cbrt.f64 1/2) (cos.f64 th))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))","(+.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (pow.f64 a1 2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))))","(*.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 (cbrt.f64 (sqrt.f64 1/2)) (fma.f64 a2 a2 (*.f64 a1 a1))))"]],"time":321.058837890625,"type":"simplify"},{"compiler":[[3782,2091]],"time":39.900146484375,"type":"eval"},{"alts":[["(*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (fma.f64 a1 a1 (*.f64 a2 a2)))","fresh",0.44501879884221013],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2))))","fresh",0.5443726562950724],["(*.f64 (cos.f64 th) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) 3))","fresh",0.7453653809692392],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","next",0.4131050293053261],["(*.f64 (cos.f64 th) (/.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2)))","fresh",0.4571076172213043],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 th)) 3) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","fresh",0.5118714844426087],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","fresh",0.5228500976844203]],"compiler":[[15,10],[24,19],[18,13],[22,17],[19,14],[22,17],[22,15],[15,10],[24,19],[18,13],[22,17],[19,14],[22,17],[22,15]],"count":[[184,7]],"kept":[{"done":[0,0],"fresh":[6,3],"new":[177,4],"picked":[1,0]}],"min-error":[0],"time":50.057861328125,"type":"prune"},{"compiler":[[67,43]],"locations":[["(*.f64 (pow.f64 a2 2) (cos.f64 th))",0.1015625,true],["(*.f64 (pow.f64 a1 2) (cos.f64 th))",0.12109375,true],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))",0.27734375,true],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))",0.32650375976844204,true]],"time":17.51806640625,"type":"localize"},{"count":[[4,32]],"series":[["(*.f64 (pow.f64 a2 2) (cos.f64 th))","th","-inf",0.241943359375],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","th","inf",0.27587890625],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","th","0",0.27001953125],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","a2","-inf",0.18115234375],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","a2","inf",0.255859375],["(*.f64 (pow.f64 a2 2) (cos.f64 th))","a2","0",0.248046875],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","th","-inf",0.27001953125],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","th","inf",0.156982421875],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","th","0",0.23095703125],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","a1","-inf",0.183837890625],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","a1","inf",0.333984375],["(*.f64 (pow.f64 a1 2) (cos.f64 th))","a1","0",0.156982421875],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","th","-inf",0.4541015625],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","th","inf",0.429931640625],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","th","0",0.406005859375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","a2","-inf",0.182861328125],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","a2","inf",0.386962890625],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","a2","0",0.43505859375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","th","-inf",0.466064453125],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","th","inf",0.501953125],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","th","0",0.4560546875],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","a1","-inf",0.19287109375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","a1","inf",0.482177734375],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","a1","0",2.344970703125]],"time":9.97607421875,"type":"series"},{"count":[[4,144]],"inputs":[["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))","(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (pow.f64 a1 2) (cos.f64 th))","(*.f64 (pow.f64 a2 2) (cos.f64 th))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 0) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 1/2) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (*.f64 a1 a1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a1 a1) (*.f64 (sqrt.f64 1/2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2)) (sqrt.f64 1/2)) (cbrt.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2) 1/2)) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (sqrt.f64 (sqrt.f64 1/2))) (sqrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 1/8) (pow.f64 a1 6)) (cos.f64 th))) (cbrt.f64 (pow.f64 (cos.f64 th) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/8) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/2)) (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (sqrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 1/8) (pow.f64 a1 6)) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2)) (cbrt.f64 (*.f64 (sqrt.f64 1/8) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) 1) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (cos.f64 th))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 0) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1/2) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/8) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (*.f64 a2 a2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2)) (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a2 a2) (*.f64 (sqrt.f64 1/2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2)) (cbrt.f64 (*.f64 (sqrt.f64 1/8) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2)) (sqrt.f64 1/2)) (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (cbrt.f64 (*.f64 1/2 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2))) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (sqrt.f64 (sqrt.f64 1/2))) (sqrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 1/8) (pow.f64 a2 6)) (cos.f64 th))) (cbrt.f64 (pow.f64 (cos.f64 th) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/2)) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (sqrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (cbrt.f64 (*.f64 (*.f64 (sqrt.f64 1/8) (pow.f64 a2 6)) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) 1) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 0) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 1/2) (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 a1 a1) (cos.f64 th))) (*.f64 (*.f64 a1 a1) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (*.f64 0 (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 a1 a1) (cos.f64 th))) (*.f64 1/2 (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a1 a1) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (*.f64 a1 a1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) a1) a1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 th)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a1 a1)) (*.f64 (cbrt.f64 (pow.f64 a1 4)) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a1 (*.f64 (cos.f64 th) a1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (*.f64 a1 a1)) (cbrt.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 a1 4)) (cos.f64 th)) (cbrt.f64 (*.f64 a1 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 2)) (cbrt.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 a1 6) (cos.f64 th))) (cbrt.f64 (pow.f64 (cos.f64 th) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 a1 a1))) (cbrt.f64 (pow.f64 a1 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 a1 a1) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (cbrt.f64 (*.f64 (pow.f64 a1 6) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a1 4)) (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 a1 a1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 0) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 1/2) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (*.f64 0 (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 1/2 (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a2 a2) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (*.f64 a2 a2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2)) (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a2 a2)) (*.f64 (cbrt.f64 (pow.f64 a2 4)) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) a2) a2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 th)) (*.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a2 (*.f64 (cos.f64 th) a2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 a2 4)) (cos.f64 th)) (cbrt.f64 (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (*.f64 a2 a2)) (cbrt.f64 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 a2 6) (cos.f64 th))) (cbrt.f64 (pow.f64 (cos.f64 th) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 a2 a2))) (cbrt.f64 (pow.f64 a2 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 a2 a2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 th) 2)) (cbrt.f64 (*.f64 (pow.f64 a2 6) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a2 4)) (*.f64 (cos.f64 th) (cbrt.f64 (*.f64 a2 a2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 3))))))"]],"rules":[["egg-rr",32],["egg-rr",32],["egg-rr",40],["egg-rr",40]],"time":34.264892578125,"type":"rewrite"},{"count":[[176,179]],"inputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 6)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4)))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(pow.f64 a1 2)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (pow.f64 a1 2))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a1 2) (pow.f64 th 6))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4))))))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(pow.f64 a2 2)","(+.f64 (pow.f64 a2 2) (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2)))))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2))) (*.f64 -1/720 (*.f64 (pow.f64 th 6) (pow.f64 a2 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))","(fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a1 th) 2)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2))))","(fma.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (pow.f64 th 4))) 1/24 (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a1 th) 2)) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1))))","(+.f64 (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (pow.f64 th 6)))) (*.f64 (sqrt.f64 1/2) (pow.f64 a1 2)))))","(fma.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (pow.f64 th 4))) 1/24 (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a1 th) 2)) (fma.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a1 a1) (pow.f64 th 6))) (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)))))","(*.f64 (sqrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a2 th) 2)) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a2 th) 2)) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (pow.f64 th 4))))))","(+.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 a2 2)) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 6)))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4)))))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (fma.f64 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a2 th) 2)) -1/2 (fma.f64 -1/720 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (pow.f64 th 6))) (*.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (pow.f64 th 4)))))))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 (cos.f64 th) (*.f64 a2 a2)))","(pow.f64 a1 2)","(*.f64 a1 a1)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (pow.f64 a1 2))","(fma.f64 -1/2 (pow.f64 (*.f64 a1 th) 2) (*.f64 a1 a1))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4)))))","(fma.f64 (pow.f64 (*.f64 a1 th) 2) -1/2 (fma.f64 1/24 (*.f64 (*.f64 a1 a1) (pow.f64 th 4)) (*.f64 a1 a1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a1 2) (pow.f64 th 2))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a1 2) (pow.f64 th 6))) (+.f64 (pow.f64 a1 2) (*.f64 1/24 (*.f64 (pow.f64 a1 2) (pow.f64 th 4))))))","(fma.f64 (pow.f64 (*.f64 a1 th) 2) -1/2 (fma.f64 (*.f64 (*.f64 a1 a1) (pow.f64 th 6)) -1/720 (fma.f64 1/24 (*.f64 (*.f64 a1 a1) (pow.f64 th 4)) (*.f64 a1 a1))))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(*.f64 (cos.f64 th) (pow.f64 a2 2))","(*.f64 (cos.f64 th) (*.f64 a2 a2))","(pow.f64 a2 2)","(*.f64 a2 a2)","(+.f64 (pow.f64 a2 2) (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))","(fma.f64 (pow.f64 (*.f64 a2 th) 2) -1/2 (*.f64 a2 a2))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2)))))","(fma.f64 a2 a2 (*.f64 (*.f64 a2 a2) (+.f64 (*.f64 -1/2 (*.f64 th th)) (*.f64 1/24 (pow.f64 th 4)))))","(+.f64 (pow.f64 a2 2) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 th 2) (pow.f64 a2 2))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 th 4) (pow.f64 a2 2))) (*.f64 -1/720 (*.f64 (pow.f64 th 6) (pow.f64 a2 2))))))","(fma.f64 a2 a2 (fma.f64 -1/2 (pow.f64 (*.f64 a2 th) 2) (*.f64 (*.f64 a2 a2) (+.f64 (*.f64 -1/720 (pow.f64 th 6)) (*.f64 1/24 (pow.f64 th 4))))))"]],"time":104.303955078125,"type":"simplify"},{"compiler":[[4608,2765]],"time":49.129150390625,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","fresh",0.5228500976844203],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (cos.f64 th) a2) a2)))","fresh",0.4036712890737681],["(*.f64 (cos.f64 th) (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2))))","fresh",0.5443726562950724],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2))))","next",0.3951950195368841],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (*.f64 a2 a2)))","fresh",0.4153900390737681],["(+.f64 (/.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","fresh",0.39585878907376815],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (pow.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3)))","fresh",0.5544065183785901],["(+.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (*.f64 a1 a1)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","fresh",0.43882753907376815],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 th)) 3) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","fresh",0.5118714844426087]],"compiler":[[22,15],[22,16],[24,19],[26,20],[22,16],[26,20],[25,19],[22,16],[22,17],[22,15],[22,16],[24,19],[26,20],[22,16],[26,20],[25,19],[22,16],[22,17]],"count":[[186,9]],"kept":[{"done":[0,0],"fresh":[6,3],"new":[179,6],"picked":[1,0]}],"min-error":[0],"time":54.73388671875,"type":"prune"},{"compiler":[[89,50]],"locations":[["(*.f64 (pow.f64 a1 2) (cos.f64 th))",0.12109375,false],["(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))",0.1875,true],["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))",0.274101269536884,true],["(*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th)))",0.32650375976844204,false]],"time":21.43896484375,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))","th","-inf",0.3798828125],["(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))","th","inf",0.525146484375],["(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))","th","0",0.4931640625],["(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))","a2","-inf",0.181884765625],["(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))","a2","inf",0.291015625],["(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))","a2","0",0.75],["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","th","-inf",0.44189453125],["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","th","inf",0.326904296875],["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","th","0",0.52197265625],["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","a2","-inf",0.179931640625],["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","a2","inf",0.43017578125],["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","a2","0",0.708984375]],"time":5.43115234375,"type":"series"},{"count":[[2,82]],"inputs":[["(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1/2) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 0) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (*.f64 1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 0 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (*.f64 a2 a2)) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (*.f64 (cbrt.f64 1/2) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (cos.f64 th)) (*.f64 a2 a2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) a2) (*.f64 a2 (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a2 a2) (*.f64 (cbrt.f64 1/2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a2 (*.f64 (*.f64 a2 (cos.f64 th)) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a2 (cos.f64 th)) (cbrt.f64 1/2)) a2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a2 (cos.f64 th)) (*.f64 (cbrt.f64 1/2) a2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (pow.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3) (cbrt.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (cbrt.f64 1/2))) (cbrt.f64 (cbrt.f64 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (pow.f64 a2 6)) (cos.f64 th))) (pow.f64 (cos.f64 th) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) 2/3) (cbrt.f64 (*.f64 1/2 (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 th) 2/3) (cbrt.f64 (*.f64 (*.f64 1/2 (pow.f64 a2 6)) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (cbrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3) (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/2 (pow.f64 a2 6)) (pow.f64 (cos.f64 th) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 1/2 (pow.f64 a2 6)) (pow.f64 (cos.f64 th) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1/2) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 0) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (*.f64 1/2 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 1/2 (pow.f64 a2 6)))) (cos.f64 th))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (*.f64 (pow.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (*.f64 a2 a2)) (*.f64 (cos.f64 th) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 th) (cbrt.f64 (sqrt.f64 1/2))) (*.f64 (cbrt.f64 1/2) (*.f64 a2 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 th) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 1/2 (pow.f64 a2 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (cbrt.f64 (sqrt.f64 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/2)) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))) (pow.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 2/3) (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (sqrt.f64 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3))))))"]],"rules":[["egg-rr",41],["egg-rr",41]],"time":26.376953125,"type":"rewrite"},{"count":[[130,101]],"inputs":[["(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))","(+.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(+.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)) (*.f64 1/24 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4))))))","(+.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 6)))) (+.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)) (*.f64 1/24 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4)))))))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 4) (pow.f64 a2 2))))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 6) (pow.f64 a2 2))))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 4) (pow.f64 a2 2))))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))","(*.f64 (cbrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(fma.f64 (cbrt.f64 -1/16) (pow.f64 (*.f64 a2 th) 2) (*.f64 (cbrt.f64 1/2) (*.f64 a2 a2)))","(+.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)) (*.f64 1/24 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4))))))","(fma.f64 (cbrt.f64 -1/16) (pow.f64 (*.f64 a2 th) 2) (fma.f64 (cbrt.f64 1/2) (*.f64 a2 a2) (*.f64 (cbrt.f64 1/27648) (*.f64 (*.f64 a2 a2) (pow.f64 th 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 2)))) (+.f64 (*.f64 -1/720 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 6)))) (+.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)) (*.f64 1/24 (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (pow.f64 th 4)))))))","(fma.f64 (cbrt.f64 -1/16) (pow.f64 (*.f64 a2 th) 2) (fma.f64 (cbrt.f64 -1/746496000) (*.f64 (*.f64 a2 a2) (pow.f64 th 6)) (fma.f64 (cbrt.f64 1/2) (*.f64 a2 a2) (*.f64 (cbrt.f64 1/27648) (*.f64 (*.f64 a2 a2) (pow.f64 th 4))))))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2)))","(*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))","(*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))))","(fma.f64 (sqrt.f64 1/2) (*.f64 a2 a2) (*.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a2 th) 2))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 4) (pow.f64 a2 2))))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a2 th) 2)) (fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (pow.f64 th 4))) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 2) (pow.f64 a2 2))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 6) (pow.f64 a2 2))))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (pow.f64 th 4) (pow.f64 a2 2))))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (pow.f64 a2 2))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 1/2) (pow.f64 (*.f64 a2 th) 2)) (fma.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (pow.f64 th 6))) -1/720 (fma.f64 1/24 (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (pow.f64 th 4))) (*.f64 (sqrt.f64 1/2) (*.f64 a2 a2)))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 1/2) 1) 1/3) (*.f64 (cbrt.f64 1/2) (*.f64 (cos.f64 th) (pow.f64 a2 2))))","(*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th)))"]],"time":142.85498046875,"type":"simplify"},{"compiler":[[5555,3359]],"time":58.5,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))","fresh",0.5228500976844203],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (cos.f64 th) a2) a2)))","fresh",0.4036712890737681],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 a2 a2)) (*.f64 (cos.f64 th) (cbrt.f64 (sqrt.f64 1/2)))))","fresh",0.3991012695368841],["(+.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2))))","fresh",0.4186325195368841],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 a2 (*.f64 (*.f64 a2 (cos.f64 th)) (cbrt.f64 1/2))) (cbrt.f64 (sqrt.f64 1/2))))","fresh",0.3896675293053261],["(+.f64 (/.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2))))","fresh",0.3779487793053261],["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (pow.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3)))","fresh",0.5544065183785901],["(*.f64 (pow.f64 (cbrt.f64 (cos.f64 th)) 3) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","fresh",0.5118714844426087]],"compiler":[[22,15],[22,16],[26,20],[26,19],[26,20],[30,23],[25,19],[22,17]],"count":[[198,8]],"kept":[{"done":[0,0],"fresh":[8,4],"new":[189,4],"picked":[1,0]}],"min-error":[0],"time":55.4189453125,"type":"prune"},{"accuracy":[0.3652725586106521],"baseline":[0.36527255861065216],"branch":[["a1",0.3652725586106521,1],["a2",0.3652725586106521,1],["th",0.36527255861065216,1],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))",0.3652725586106521,1],["(/.f64 (cos.f64 th) (sqrt.f64 2))",0.3652725586106521,1],["(cos.f64 th)",0.3652725586106521,1],["(*.f64 a1 a1)",0.3652725586106521,1],["(*.f64 a1 a1)",0.3652725586106521,1],["(*.f64 a2 a2)",0.3652725586106521,1]],"compiler":[[4,3],[4,3],[4,3],[22,15],[8,7],[5,4],[6,4],[6,4],[6,4],[420,241]],"count":[[22,1]],"inputs":[["(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 a2 a2)) (*.f64 (cos.f64 th) (cbrt.f64 (sqrt.f64 1/2)))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (*.f64 a1 a1)) (cos.f64 th)) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 a2 (*.f64 (*.f64 a2 (cos.f64 th)) (cbrt.f64 1/2))) (cbrt.f64 (sqrt.f64 1/2))))","(+.f64 (/.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2)) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (*.f64 (cos.f64 th) a2) a2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 (cbrt.f64 1/2) (*.f64 (*.f64 a2 a2) (cos.f64 th))) (cbrt.f64 (sqrt.f64 1/2))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (*.f64 a2 a2)))","(+.f64 (/.f64 (*.f64 (*.f64 (*.f64 a1 a1) (cos.f64 th)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (pow.f64 (cbrt.f64 (*.f64 (*.f64 a2 a2) (cos.f64 th))) 3)))","(+.f64 (*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (*.f64 a1 a1)) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (*.f64 (sqrt.f64 1/2) (cos.f64 th)) (fma.f64 a1 a1 (*.f64 a2 a2)))","(*.f64 (cos.f64 th) (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 1/4)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2)))) (cbrt.f64 (cbrt.f64 1/2))))","(*.f64 (cos.f64 th) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 1/2))) 3))","(*.f64 (pow.f64 (cbrt.f64 (cos.f64 th)) 3) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","(+.f64 (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a1 2) (cos.f64 th))) (*.f64 (sqrt.f64 1/2) (*.f64 (pow.f64 a2 2) (cos.f64 th))))","(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 (sqrt.f64 1/2)) (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (sqrt.f64 (sqrt.f64 1/2)))))","(*.f64 (pow.f64 (cbrt.f64 (cos.f64 th)) 3) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","(*.f64 (cos.f64 th) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2)))) 3))","(*.f64 (cos.f64 th) (/.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 2)))","(*.f64 (cos.f64 th) (*.f64 (sqrt.f64 1/2) (fma.f64 a1 a1 (*.f64 a2 a2))))","(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))"]],"link":["."],"name":["Migdal et al, Equation (64)"],"oracle":[1.2326372803170662],"outputs":[["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))"]],"time":64.449951171875,"times":[["a1",7.47216796875],["a2",7.455078125],["th",7.510986328125],["(+.f64 (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a1 a1)) (*.f64 (/.f64 (cos.f64 th) (sqrt.f64 2)) (*.f64 a2 a2)))",7.12890625],["(/.f64 (cos.f64 th) (sqrt.f64 2))",6.304931640625],["(cos.f64 th)",6.234130859375],["(*.f64 a1 a1)",4.781982421875],["(*.f64 a1 a1)",5.121826171875],["(*.f64 a2 a2)",4.596923828125]],"type":"regimes"},{"compiler":[[19,14]],"inputs":[["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 th) (*.f64 (*.f64 (fma.f64 a1 a1 (*.f64 a2 a2)) (cbrt.f64 (sqrt.f64 1/2))) (cbrt.f64 1/2)))","(*.f64 (*.f64 (cos.f64 th) (fma.f64 a1 a1 (*.f64 a2 a2))) (sqrt.f64 1/2))"]],"stop":[["fuel",1]],"time":19.55615234375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[19,14]],"remove-preprocessing":[[]],"time":11.119140625,"type":"end"}]