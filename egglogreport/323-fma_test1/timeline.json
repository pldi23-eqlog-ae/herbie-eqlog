[{"compiler":[[27,22]],"method":["search"],"sampling":[[1,7.324218750000007e-5,0.0,0.9999267578125],[0,0.0,7.324218750000007e-5,0.9999267578125]],"time":0.2080078125,"type":"analyze"},{"outcomes":[["body",256,"valid",392.885986328125,8256]],"time":401.06103515625,"type":"sample"},{"compiler":[[20,17]],"inputs":[["0"],["(+.f64 (*.f64 (+.f64 1 (*.f64 t 1/5000000000000000)) (+.f64 1 (*.f64 t 1/5000000000000000))) (-.f64 -1 (*.f64 2 (*.f64 t 1/5000000000000000))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (*.f64 (+.f64 1 (*.f64 t 1/5000000000000000)) (+.f64 1 (*.f64 t 1/5000000000000000))) (-.f64 -1 (*.f64 2 (*.f64 t 1/5000000000000000))))","(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))"]],"symmetry":[[]],"time":54.68212890625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (*.f64 (+.f64 1 (*.f64 t 1/5000000000000000)) (+.f64 1 (*.f64 t 1/5000000000000000))) (-.f64 -1 (*.f64 2 (*.f64 t 1/5000000000000000))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (+.f64 1 (*.f64 t 1/5000000000000000)) (+.f64 1 (*.f64 t 1/5000000000000000))) (-.f64 -1 (*.f64 2 (*.f64 t 1/5000000000000000))))","(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))"]],"time":21.10888671875,"type":"simplify"},{"compiler":[[31,26]],"time":0.56201171875,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))","next",61.84322916352899]],"compiler":[[12,10],[12,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[61.84322916352899],"time":1.0009765625,"type":"prune"},{"compiler":[[31,25]],"locations":[["(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))",61.843229163529415,true]],"time":10.39111328125,"type":"localize"},{"count":[[1,12]],"series":[["(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))","t","-inf",0.77001953125],["(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))","t","inf",0.841064453125],["(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))","t","0",0.989990234375]],"time":2.653076171875,"type":"series"},{"count":[[1,64]],"inputs":[["(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (*.f64 -1/2500000000000000 t) -1) (*.f64 (fma.f64 t 1/5000000000000000 1) (*.f64 t 1/5000000000000000))) (fma.f64 t 1/5000000000000000 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t)) 0) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 0) (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) (*.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))) (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) (*.f64 0 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -1/2500000000000000 t) -1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2500000000000000 t) (+.f64 -1 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2500000000000000 t) (*.f64 -1 (-.f64 1 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 t 1/2500000000000000) -1) (*.f64 (-.f64 1 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2500000000000000 t) (neg.f64 (-.f64 1 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t 1/5000000000000000 1) (*.f64 t 1/5000000000000000)) (+.f64 (fma.f64 t 1/5000000000000000 1) (+.f64 (*.f64 -1/2500000000000000 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 t 1/5000000000000000 1) (*.f64 t 1/5000000000000000)) (-.f64 (fma.f64 t 1/5000000000000000 1) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 -1/2500000000000000 t) -1) (neg.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2500000000000000 t) (-.f64 1 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) 1) (*.f64 t 1/2500000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) 0) (fma.f64 t 1/2500000000000000 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) (+.f64 (*.f64 -1/2500000000000000 t) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 4)) (+.f64 (cbrt.f64 (pow.f64 (fma.f64 t 1/2500000000000000 1) 2)) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))))) (-.f64 (cbrt.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) (cbrt.f64 (fma.f64 t 1/2500000000000000 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 2)) (cbrt.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t)) 3) 1) (+.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t)) (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t))) (+.f64 1 (*.f64 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 1 (+.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (*.f64 -1/2500000000000000 t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t 1/5000000000000000 1) (fma.f64 t 1/5000000000000000 1) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) (cbrt.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 4)) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 4)) (cbrt.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2)) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 t 1/5000000000000000 1)) (pow.f64 (cbrt.f64 (fma.f64 t 1/5000000000000000 1)) (+.f64 2 3)) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (fma.f64 t 1/5000000000000000 1)) (neg.f64 (fma.f64 t 1/5000000000000000 1)) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (*.f64 -1/2500000000000000 t) -1)) (cbrt.f64 (pow.f64 (fma.f64 t 1/2500000000000000 1) 2)) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 t 1/2500000000000000 1)) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 t 1/2500000000000000 1) 2))) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) 1 (+.f64 (*.f64 -1/2500000000000000 t) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (fma.f64 t 1/2500000000000000 1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (*.f64 -1/2500000000000000 t) -1) (pow.f64 (fma.f64 t 1/5000000000000000 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1)))))))"]],"rules":[["egg-rr",64]],"time":22.36279296875,"type":"rewrite"},{"count":[[76,66]],"inputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)"]],"time":61.320068359375,"type":"simplify"},{"compiler":[[1086,916]],"time":18.738037109375,"type":"eval"},{"alts":[["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","next",0.390625],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","fresh",0.4186325195368841]],"compiler":[[6,4],[6,5],[6,4],[6,5]],"count":[[67,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[66,2],"picked":[1,0]}],"min-error":[0.21484375],"time":5.552001953125,"type":"prune"},{"compiler":[[11,7]],"locations":[["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)",0.20703125,true],["(*.f64 1/25000000000000000000000000000000 t)",0.33203125,true]],"time":3.241943359375,"type":"localize"},{"count":[[2,12]],"series":[["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","t","-inf",0.14599609375],["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","t","inf",0.277099609375],["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","t","0",0.385009765625],["(*.f64 1/25000000000000000000000000000000 t)","t","-inf",0.30078125],["(*.f64 1/25000000000000000000000000000000 t)","t","inf",0.68310546875],["(*.f64 1/25000000000000000000000000000000 t)","t","0",0.31591796875]],"time":2.176025390625,"type":"series"},{"count":[[2,60]],"inputs":[["(*.f64 1/25000000000000000000000000000000 t)","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/25000000000000000000000000000000 t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/25000000000000000000000000000000 t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 1/25000000000000000000000000000000 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/25000000000000000000000000000000 t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t 1/25000000000000000000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t)) (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 2/3) (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/25000000000000000000000000000000) (*.f64 (pow.f64 1/25000000000000000000000000000000 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 1/25000000000000000000000000000000 2/3) t) (cbrt.f64 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 2/3) 1/25000000000000000000000000000000) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 1/25000000000000000000000000000000)) (pow.f64 1/25000000000000000000000000000000 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1/25000000000000000000000000000000 2/3) (*.f64 t (cbrt.f64 1/25000000000000000000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 2/3) (*.f64 1/25000000000000000000000000000000 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 1/25000000000000000000000000000000 t))) (neg.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 1/25000000000000000000000000000000 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 1/25000000000000000000000000000000 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/25000000000000000000000000000000 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/25000000000000000000000000000000 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/25000000000000000000000000000000 t) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/25000000000000000000000000000000 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 1/25000000000000000000000000000000 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/25000000000000000000000000000000 t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 1/25000000000000000000000000000000 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/25000000000000000000000000000000 t) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 1/25000000000000000000000000000000 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t)) (*.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/25000000000000000000000000000000) (pow.f64 (*.f64 t (cbrt.f64 1/25000000000000000000000000000000)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (*.f64 1/25000000000000000000000000000000 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/25000000000000000000000000000000 (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t t) 1/25000000000000000000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t))) (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 2/3) t) (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (cbrt.f64 1/25000000000000000000000000000000)) 2) (cbrt.f64 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 2/3) (*.f64 1/25000000000000000000000000000000 t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 t) 2/3) (*.f64 t (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2/3) (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 2/3) (*.f64 (*.f64 1/25000000000000000000000000000000 t) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t))) (neg.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 3))))))"]],"rules":[["egg-rr",32],["egg-rr",28]],"time":35.781005859375,"type":"rewrite"},{"count":[[72,61]],"inputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)"]],"time":61.56494140625,"type":"simplify"},{"compiler":[[534,386]],"time":9.333984375,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (*.f64 1/25000000000000000000000000000000 t)))","fresh",0.6293526856003986],["(*.f64 (cbrt.f64 1/25000000000000000000000000000000) (pow.f64 (*.f64 t (cbrt.f64 1/25000000000000000000000000000000)) 2))","fresh",0.7218515137479348],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","next",0.4186325195368841],["(*.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 t)) (pow.f64 t 2/3)) t)","fresh",0.6323014649057247],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t)) 3) t)","fresh",0.9462944579584815],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) 3)","fresh",0.9218994872638075],["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","done",0.390625]],"compiler":[[11,8],[10,9],[6,5],[11,8],[9,7],[9,7],[6,4],[11,8],[10,9],[6,5],[11,8],[9,7],[9,7]],"count":[[63,7]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[61,6],"picked":[1,1]}],"min-error":[0.0546875],"time":10.358154296875,"type":"prune"},{"compiler":[[12,9]],"locations":[["(pow.f64 t 2)",0.00390625,true],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))",0.4186325195368841,true]],"time":3.551025390625,"type":"localize"},{"count":[[2,0]],"series":[["(pow.f64 t 2)","t","-inf",0.2900390625],["(pow.f64 t 2)","t","inf",0.260986328125],["(pow.f64 t 2)","t","0",0.14013671875],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","t","-inf",0.197021484375],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","t","inf",0.184814453125],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","t","0",0.166015625]],"time":1.301025390625,"type":"series"},{"count":[[2,58]],"inputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(pow.f64 t 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/25000000000000000000000000000000 (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t t) 1/25000000000000000000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2/3) (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/25000000000000000000000000000000) (pow.f64 (*.f64 (cbrt.f64 1/25000000000000000000000000000000) t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t t) (cbrt.f64 1/25000000000000000000000000000000)) (pow.f64 1/25000000000000000000000000000000 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1/25000000000000000000000000000000 2/3) (*.f64 (*.f64 t t) (cbrt.f64 1/25000000000000000000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 1/25000000000000000000000000000000) t) 2) (cbrt.f64 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 2/3) (*.f64 (pow.f64 t 4/3) 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/25000000000000000000000000000000 (pow.f64 t 2/3)) (pow.f64 t 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 4/3) 1/25000000000000000000000000000000) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 4/3) (*.f64 1/25000000000000000000000000000000 (pow.f64 t 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/25000000000000000000000000000000 t) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 1/25000000000000000000000000000000 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t))) (neg.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (pow.f64 (cbrt.f64 t) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 t) 5) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 2/3) (pow.f64 t 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 4/3) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 t t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t t) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 t 2/3)) (neg.f64 (pow.f64 t 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 t t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 t) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 t)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 t 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 t 3)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 t 6))))))"]],"rules":[["egg-rr",28],["egg-rr",30]],"time":35.23193359375,"type":"rewrite"},{"count":[[58,58]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"time":26.0419921875,"type":"simplify"},{"compiler":[[462,324]],"time":7.85888671875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) 3)","fresh",0.9218994872638075],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","done",0.4186325195368841],["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","done",0.390625],["(*.f64 1/25000000000000000000000000000000 (*.f64 (pow.f64 (cbrt.f64 t) 5) (cbrt.f64 t)))","fresh",1.2823834857041327],["(*.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (*.f64 1/25000000000000000000000000000000 t)))","fresh",0.6293526856003986],["(*.f64 (*.f64 (pow.f64 t 4/3) 1/25000000000000000000000000000000) (pow.f64 t 2/3))","fresh",0.5437088867581884],["(*.f64 (cbrt.f64 1/25000000000000000000000000000000) (pow.f64 (*.f64 (cbrt.f64 1/25000000000000000000000000000000) t) 2))","fresh",0.7218515137479348],["(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))","next",0.4537887695368841]],"compiler":[[9,7],[6,5],[6,4],[10,7],[11,8],[10,8],[10,9],[8,7],[9,7],[10,7],[11,8],[10,8],[10,9],[8,7]],"count":[[65,8]],"kept":[{"done":[1,1],"fresh":[5,1],"new":[58,5],"picked":[1,1]}],"min-error":[0.03125],"time":12.069091796875,"type":"prune"},{"compiler":[[20,16]],"locations":[["(pow.f64 (pow.f64 t 6) 1/3)",0.10546875,true],["(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))",0.4186325195368841,true]],"time":8.965087890625,"type":"localize"},{"count":[[2,24]],"series":[["(pow.f64 (pow.f64 t 6) 1/3)","t","-inf",1.0419921875],["(pow.f64 (pow.f64 t 6) 1/3)","t","inf",1.002197265625],["(pow.f64 (pow.f64 t 6) 1/3)","t","0",1.02099609375],["(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))","t","-inf",0.191162109375],["(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))","t","inf",0.44189453125],["(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))","t","0",1.28515625]],"time":5.059814453125,"type":"series"},{"count":[[2,47]],"inputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))","(pow.f64 (pow.f64 t 6) 1/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t 6)) 1/25000000000000000000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6)))) (pow.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 2/3) (cbrt.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 6))) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 12))) 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/25000000000000000000000000000000) (*.f64 (pow.f64 1/25000000000000000000000000000000 2/3) (cbrt.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 1/25000000000000000000000000000000 2/3) (cbrt.f64 (pow.f64 t 6))) (cbrt.f64 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 12))) 1/25000000000000000000000000000000) (cbrt.f64 (cbrt.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (cbrt.f64 (pow.f64 t 6)))) (cbrt.f64 (cbrt.f64 (pow.f64 t 12))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 t 6) 1/25000000000000000000000000000000)) (pow.f64 1/25000000000000000000000000000000 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 12))) (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (cbrt.f64 (pow.f64 t 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1/25000000000000000000000000000000 2/3) (cbrt.f64 (*.f64 (pow.f64 t 6) 1/25000000000000000000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) 1/25000000000000000000000000000000)) (neg.f64 (pow.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) 1/25000000000000000000000000000000) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) 1/25000000000000000000000000000000) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 t 6) (pow.f64 1/25000000000000000000000000000000 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 (pow.f64 t 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) 1/25000000000000000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 t 6) (pow.f64 1/25000000000000000000000000000000 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (pow.f64 t 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 t 6)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 6))) (cbrt.f64 (cbrt.f64 (pow.f64 t 12))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 12))) (cbrt.f64 (cbrt.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 6)))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 t 12) 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6)))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 12)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 t 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 t 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 t 6)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 t 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 t 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 t 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (pow.f64 t 6))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 t 6))))))"]],"rules":[["egg-rr",19],["egg-rr",28]],"time":39.8310546875,"type":"rewrite"},{"count":[[71,51]],"inputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)","(pow.f64 t 2)"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)","(pow.f64 t 2)","(*.f64 t t)"]],"time":94.922119140625,"type":"simplify"},{"compiler":[[486,422]],"time":9.544921875,"type":"eval"},{"alts":[["(*.f64 1/25000000000000000000000000000000 (*.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 6)))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 t 12) 4/3)))))","fresh",0.6746064453688406],["(*.f64 (*.f64 (pow.f64 t 4/3) 1/25000000000000000000000000000000) (pow.f64 t 2/3))","fresh",0.5437088867581884],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) 3)","fresh",0.9218994872638075],["(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","done",0.4186325195368841],["(cbrt.f64 (*.f64 (pow.f64 t 6) (pow.f64 1/25000000000000000000000000000000 3)))","fresh",0.37109375],["(*.f64 (cbrt.f64 1/25000000000000000000000000000000) (pow.f64 (*.f64 (cbrt.f64 1/25000000000000000000000000000000) t) 2))","fresh",0.7218515137479348],["(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","done",0.390625],["(*.f64 1/25000000000000000000000000000000 (*.f64 (pow.f64 (cbrt.f64 t) 5) (cbrt.f64 t)))","fresh",1.2823834857041327],["(*.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (*.f64 1/25000000000000000000000000000000 t)))","fresh",0.6293526856003986],["(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))","done",0.4537887695368841]],"compiler":[[17,15],[10,8],[9,7],[6,5],[9,8],[10,9],[6,4],[10,7],[11,8],[8,7]],"count":[[59,10]],"kept":[{"done":[2,2],"fresh":[5,5],"new":[51,2],"picked":[1,1]}],"min-error":[0.01953125],"time":8.883056640625,"type":"prune"},{"accuracy":[0.37109375],"baseline":[0.37109375],"branch":[["t",0.37109375,1],["(+.f64 (*.f64 (+.f64 1 (*.f64 t 1/5000000000000000)) (+.f64 1 (*.f64 t 1/5000000000000000))) (-.f64 -1 (*.f64 2 (*.f64 t 1/5000000000000000))))",0.37109375,1],["(*.f64 t 1/5000000000000000)",0.37109375,1]],"compiler":[[2,1],[20,17],[4,3],[157,123]],"count":[[17,1]],"inputs":[["(*.f64 1/25000000000000000000000000000000 (*.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 t 6)))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 t 12) 4/3)))))","(cbrt.f64 (*.f64 (pow.f64 t 6) (pow.f64 1/25000000000000000000000000000000 3)))","(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) 3)","(*.f64 1/25000000000000000000000000000000 (*.f64 (pow.f64 (cbrt.f64 t) 5) (cbrt.f64 t)))","(*.f64 (*.f64 (pow.f64 t 4/3) 1/25000000000000000000000000000000) (pow.f64 t 2/3))","(*.f64 (cbrt.f64 1/25000000000000000000000000000000) (pow.f64 (*.f64 (cbrt.f64 1/25000000000000000000000000000000) t) 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 (pow.f64 t 6) 1/3))","(*.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (*.f64 1/25000000000000000000000000000000 t)))","(*.f64 (cbrt.f64 1/25000000000000000000000000000000) (pow.f64 (*.f64 t (cbrt.f64 1/25000000000000000000000000000000)) 2))","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(*.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 (cbrt.f64 t)) (pow.f64 t 2/3)) t)","(*.f64 (pow.f64 (cbrt.f64 (*.f64 1/25000000000000000000000000000000 t)) 3) t)","(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/25000000000000000000000000000000 t) t)) 3)","(*.f64 (*.f64 1/25000000000000000000000000000000 t) t)","(*.f64 1/25000000000000000000000000000000 (pow.f64 t 2))","(-.f64 (pow.f64 (fma.f64 t 1/5000000000000000 1) 2) (fma.f64 t 1/2500000000000000 1))","(+.f64 (*.f64 (+.f64 1 (*.f64 t 1/5000000000000000)) (+.f64 1 (*.f64 t 1/5000000000000000))) (-.f64 -1 (*.f64 2 (*.f64 t 1/5000000000000000))))"]],"link":["."],"name":["fma_test1"],"oracle":[61.84322916352899],"outputs":[["(cbrt.f64 (*.f64 (pow.f64 t 6) (pow.f64 1/25000000000000000000000000000000 3)))"]],"time":18.181884765625,"times":[["t",5.955078125],["(+.f64 (*.f64 (+.f64 1 (*.f64 t 1/5000000000000000)) (+.f64 1 (*.f64 t 1/5000000000000000))) (-.f64 -1 (*.f64 2 (*.f64 t 1/5000000000000000))))",2.177978515625],["(*.f64 t 1/5000000000000000)",6.44287109375]],"type":"regimes"},{"compiler":[[9,8]],"inputs":[["(cbrt.f64 (*.f64 (pow.f64 t 6) (pow.f64 1/25000000000000000000000000000000 3)))"]],"method":["egg-herbie"],"outputs":[["(cbrt.f64 (*.f64 (pow.f64 t 6) (pow.f64 1/25000000000000000000000000000000 3)))","(*.f64 (cbrt.f64 (pow.f64 t 6)) 1/25000000000000000000000000000000)"]],"stop":[["fuel",1]],"time":38.74609375,"type":"simplify"},{"time":0.017822265625,"type":"soundness"},{"compiler":[[9,8]],"remove-preprocessing":[[]],"time":9.526123046875,"type":"end"}]