[{"compiler":[[22,16]],"method":["search"],"sampling":[[12,0.0,0.9980483050458702,0.0019516949541298345],[11,0.0,0.9980483050458702,0.0019516949541298345],[10,0.0,0.9980483050458702,0.0019516949541298345],[9,0.0,0.9980483050458702,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":204.5849609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",150.528076171875,2559],["body",256,"valid",487.550048828125,8256]],"time":648.344970703125,"type":"sample"},{"compiler":[[21,15]],"inputs":[["0","1","2","3"],["(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))","(+.f64 (/.f64 y x) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))","(+.f64 (/.f64 z y) (/.f64 (+.f64 2 (*.f64 (*.f64 x 2) (-.f64 1 t))) (*.f64 t x)))","(+.f64 (/.f64 t y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 x))) (*.f64 x z)))","(+.f64 (/.f64 x z) (/.f64 (+.f64 2 (*.f64 (*.f64 y 2) (-.f64 1 t))) (*.f64 t y)))","(+.f64 (/.f64 x t) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 y))) (*.f64 y z)))","(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 t 2) (-.f64 1 z))) (*.f64 z t)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))","(+.f64 (/.f64 x y) (/.f64 (fma.f64 (-.f64 1 t) (*.f64 z 2) 2) (*.f64 t z)))","(+.f64 (/.f64 y x) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))","(+.f64 (/.f64 y x) (/.f64 (fma.f64 (-.f64 1 t) (*.f64 z 2) 2) (*.f64 t z)))","(+.f64 (/.f64 z y) (/.f64 (+.f64 2 (*.f64 (*.f64 x 2) (-.f64 1 t))) (*.f64 t x)))","(+.f64 (/.f64 z y) (/.f64 (fma.f64 (-.f64 1 t) (*.f64 x 2) 2) (*.f64 t x)))","(+.f64 (/.f64 t y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 x))) (*.f64 x z)))","(+.f64 (/.f64 t y) (/.f64 (fma.f64 z (*.f64 2 (-.f64 1 x)) 2) (*.f64 x z)))","(+.f64 (/.f64 x z) (/.f64 (+.f64 2 (*.f64 (*.f64 y 2) (-.f64 1 t))) (*.f64 t y)))","(+.f64 (/.f64 x z) (/.f64 (fma.f64 y (*.f64 2 (-.f64 1 t)) 2) (*.f64 t y)))","(+.f64 (/.f64 x t) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 y))) (*.f64 y z)))","(+.f64 (/.f64 x t) (/.f64 (fma.f64 (*.f64 z 2) (-.f64 1 y) 2) (*.f64 y z)))","(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 t 2) (-.f64 1 z))) (*.f64 z t)))","(+.f64 (/.f64 x y) (/.f64 (fma.f64 t (*.f64 2 (-.f64 1 z)) 2) (*.f64 t z)))"]],"symmetry":[[]],"time":75.6240234375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))","(+.f64 (/.f64 x y) (/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z)))"]],"time":23.135009765625,"type":"simplify"},{"compiler":[[37,23]],"time":0.48095703125,"type":"eval"},{"alts":[["(+.f64 (/.f64 x y) (/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z)))","next",8.34375]],"compiler":[[20,14],[20,14]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[8.34375],"time":1.01611328125,"type":"prune"},{"compiler":[[61,36]],"locations":[["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))",8.301937550948477,true]],"time":13.387939453125,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))","t","-inf",0.614990234375],["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))","t","inf",0.6298828125],["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))","t","0",0.85595703125],["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))","z","-inf",0.6650390625],["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))","z","inf",0.726806640625],["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))","z","0",0.73681640625]],"time":4.35693359375,"type":"series"},{"count":[[1,106]],"inputs":[["(/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (*.f64 t z)) (*.f64 z (fma.f64 -2 t 2))) (*.f64 (/.f64 1 (*.f64 t z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (*.f64 t z)) 2) (*.f64 (/.f64 1 (*.f64 t z)) (*.f64 z (fma.f64 -2 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 0) (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (fma.f64 -2 t 2)) (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 (*.f64 z (fma.f64 -2 t 2)) (/.f64 1 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) (*.f64 0 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))) (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 t z))) (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 z)) (/.f64 1 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (*.f64 t z))) (pow.f64 (cbrt.f64 (*.f64 t z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2)) (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2)) (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) (/.f64 -1 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) z) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) t) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (/.f64 1 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 t z)) (fma.f64 (fma.f64 -2 t 2) z 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (pow.f64 (*.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2)) (*.f64 t z)) (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (pow.f64 (*.f64 t z) 2))) (cbrt.f64 (/.f64 1 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 (*.f64 t z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 t z)) (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2)) z) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2)) t) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 t)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2)) (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) t) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 t)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) (/.f64 1 z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 z)) (cbrt.f64 z)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (*.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 t)) (*.f64 (cbrt.f64 (*.f64 t t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) z) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8) -1) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2)) (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8) (/.f64 1 z)) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8) (cbrt.f64 (/.f64 1 (*.f64 t z)))) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2)) (cbrt.f64 (pow.f64 (*.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8) 1) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2)) (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8) (/.f64 1 t)) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2))) (*.f64 (cbrt.f64 z) (cbrt.f64 (pow.f64 (*.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8)) (*.f64 t (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8)) (*.f64 (neg.f64 (*.f64 t z)) (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 t) (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8)) (*.f64 z (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 t z) 2)) (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 t)) 1) (*.f64 (cbrt.f64 (*.f64 t t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) (neg.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 t)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (*.f64 t z))) (cbrt.f64 (pow.f64 (*.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2)) (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2))) (cbrt.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2)) (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2)))) (cbrt.f64 (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2))) (cbrt.f64 (pow.f64 (*.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (fma.f64 (fma.f64 -2 t 2) z 2)) (cbrt.f64 (pow.f64 (*.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (fma.f64 (fma.f64 -2 t 2) z 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) z) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2))) (cbrt.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 2))) (cbrt.f64 (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (*.f64 t z))) 1) (cbrt.f64 (pow.f64 (*.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 t)) (/.f64 1 z)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 -2 t 2) z 2) 2)) z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (pow.f64 (*.f64 t z) 2))) (cbrt.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (*.f64 t z))) 1) (cbrt.f64 (pow.f64 (*.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) -1) (neg.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 z (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 (fma.f64 -2 t 2) z 2)) (cbrt.f64 (*.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8) (*.f64 (*.f64 t z) (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (cbrt.f64 (*.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (*.f64 t z)) (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8)) (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 3) 8) (/.f64 1 (*.f64 t z))) (-.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 -2 t 2)) 2) 4) (*.f64 (*.f64 z (fma.f64 -2 t 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (neg.f64 (*.f64 t z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) (*.f64 t z)) 3))))))"]],"rules":[["egg-rr",106]],"time":27.3759765625,"type":"rewrite"},{"count":[[130,116]],"inputs":[["(/.f64 2 (*.f64 t z))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(*.f64 -2 (/.f64 (-.f64 t 1) t))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(*.f64 -2 (/.f64 (-.f64 t 1) t))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(/.f64 (+.f64 (*.f64 2 z) 2) (*.f64 t z))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 2 (*.f64 t z))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(*.f64 -2 (/.f64 (-.f64 t 1) t))","(+.f64 (/.f64 2 t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(*.f64 -2 (/.f64 (-.f64 t 1) t))","(+.f64 (/.f64 2 t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 -2 (/.f64 (-.f64 t 1) t)))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(/.f64 (+.f64 (*.f64 2 z) 2) (*.f64 t z))","(/.f64 (+.f64 (/.f64 2 z) 2) t)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)"]],"time":98.541015625,"type":"simplify"},{"compiler":[[2755,1588]],"time":30.51904296875,"type":"eval"},{"alts":[["(+.f64 (/.f64 x y) (/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z)))","done",8.34375],["(+.f64 (/.f64 x y) (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z))","fresh",18.1015625],["(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))","next",0.078125]],"compiler":[[20,14],[19,13],[17,13],[19,13],[17,13]],"count":[[117,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[116,2],"picked":[1,1]}],"min-error":[0],"time":27.68408203125,"type":"prune"},{"compiler":[[50,33]],"locations":[["(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)",0.00390625,true],["(/.f64 (+.f64 (/.f64 2 z) 2) t)",0.171875,true]],"time":11.403076171875,"type":"localize"},{"count":[[2,48]],"series":[["(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","t","-inf",0.193115234375],["(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","t","inf",0.1650390625],["(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","t","0",0.326904296875],["(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","z","-inf",0.255126953125],["(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","z","inf",0.31689453125],["(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","z","0",0.4599609375],["(/.f64 (+.f64 (/.f64 2 z) 2) t)","t","-inf",0.317138671875],["(/.f64 (+.f64 (/.f64 2 z) 2) t)","t","inf",1.06982421875],["(/.f64 (+.f64 (/.f64 2 z) 2) t)","t","0",0.611083984375],["(/.f64 (+.f64 (/.f64 2 z) 2) t)","z","-inf",0.35400390625],["(/.f64 (+.f64 (/.f64 2 z) 2) t)","z","inf",0.280029296875],["(/.f64 (+.f64 (/.f64 2 z) 2) t)","z","0",0.4169921875]],"time":4.923828125,"type":"series"},{"count":[[2,127]],"inputs":[["(/.f64 (+.f64 (/.f64 2 z) 2) t)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 t) (/.f64 2 z)) (*.f64 (/.f64 1 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 t) 2) (*.f64 (/.f64 1 t) (/.f64 2 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 0) (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 2 z) (/.f64 1 t)) (*.f64 2 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (/.f64 1 t)) (*.f64 (/.f64 2 z) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (*.f64 0 (/.f64 (+.f64 (/.f64 2 z) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 (/.f64 -2 z) -2) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (/.f64 (+.f64 (/.f64 -2 z) -2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 -2 z) -2) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 2 z) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 2 z) 2) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 2 z) 2) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (+.f64 (/.f64 2 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 (/.f64 -2 z) -2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (/.f64 -2 z) -2) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 (*.f64 t t))) (cbrt.f64 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 2 z) 2) 2)) t) (cbrt.f64 (+.f64 (/.f64 2 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (+.f64 (/.f64 -2 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 8 (pow.f64 z -3) 8) t) (/.f64 1 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 8 (pow.f64 z -3) 8) (/.f64 1 (*.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 8 (pow.f64 z -3) 8) t) (cbrt.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)))) (pow.f64 (cbrt.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 8 (pow.f64 z -3) 8)) (neg.f64 (*.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 2 z) 2) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -2 z) -2) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 8 (pow.f64 z -3) 8) t) (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 8 (pow.f64 z -3) 8) (*.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) (cbrt.f64 (+.f64 (/.f64 2 z) 2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) (cbrt.f64 (+.f64 (/.f64 -2 z) -2))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 t) (neg.f64 (fma.f64 8 (pow.f64 z -3) 8))) (neg.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) (+.f64 (/.f64 2 z) 2)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 2 z) 2) 2))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (/.f64 2 z) 2)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (/.f64 -2 z) -2)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 8 (pow.f64 z -3) 8)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 2 z) 2) 2)) t)) (cbrt.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 8 (pow.f64 z -3) 8)) (/.f64 -1 t)) (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 8 (pow.f64 z -3) 8)) (/.f64 1 t)) (neg.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 8 (pow.f64 z -3) 8) t) 1) (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (/.f64 -2 z) -2) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 8 (pow.f64 z -3) 8) t) 1) (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (/.f64 2 z) 2) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 8 (pow.f64 z -3) 8) (/.f64 (*.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 8 (pow.f64 z -3) 8) t)) (neg.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (/.f64 -2 z) -2) t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -2 (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 0) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) (*.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) (*.f64 0 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 0) 2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 2 (/.f64 (+.f64 (/.f64 2 z) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 -2 (/.f64 (+.f64 (/.f64 -2 z) -2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 2 (/.f64 (+.f64 (/.f64 -2 z) -2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 2 (/.f64 (+.f64 (/.f64 -2 z) -2) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 (+.f64 (/.f64 -2 z) -2) t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3)) 8) (/.f64 1 (neg.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) (-.f64 (cbrt.f64 4) (cbrt.f64 (*.f64 (+.f64 (/.f64 2 z) 2) (/.f64 -2 t))))) (+.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (cbrt.f64 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 4) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) (cbrt.f64 (*.f64 (+.f64 (/.f64 2 z) 2) (/.f64 -2 t))))) (+.f64 (cbrt.f64 -2) (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) (+.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (cbrt.f64 2)))) (-.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (cbrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) -8) (/.f64 1 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 2)) (cbrt.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))) (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) -8))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) 3) -512) (/.f64 1 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2))))) (-.f64 (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 6) 64) (pow.f64 (*.f64 (+.f64 (/.f64 2 z) 2) (/.f64 -2 t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) -8) (cbrt.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2))))) (pow.f64 (cbrt.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 8 (pow.f64 z -3) 8) (*.f64 (*.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)) t) 2)) (*.f64 (*.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)) t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3)) 8) (neg.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) -8) (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 2)) (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) -8))) (cbrt.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) -8)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 2))) (cbrt.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3)) 8) 1) (neg.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (fma.f64 8 (pow.f64 z -3) 8) t) 1) (*.f64 (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)) 2)) (+.f64 4 (/.f64 (+.f64 (/.f64 4 z) -4) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 t)) 1) (*.f64 (cbrt.f64 (*.f64 t t)) 2)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (/.f64 2 z) 2) (*.f64 t 2)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (/.f64 -2 z) -2) (*.f64 (neg.f64 t) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 2 (/.f64 (+.f64 (/.f64 -2 z) -2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 3) -8) (neg.f64 (+.f64 4 (*.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 2 (/.f64 (+.f64 (/.f64 2 z) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -2) (cbrt.f64 4) (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 2 z) 2) (/.f64 1 t) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (+.f64 (/.f64 -2 z) -2) t) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 t) (+.f64 (/.f64 2 z) 2) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 t)) (/.f64 (+.f64 (/.f64 2 z) 2) (cbrt.f64 (*.f64 t t))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 2)) (cbrt.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 2 z) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 2 z) 2) 2)) t) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 -2 z) -2) (/.f64 -1 t) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 2)) (sqrt.f64 2) (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (cbrt.f64 -2) (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (neg.f64 (sqrt.f64 2)) (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (neg.f64 (cbrt.f64 4)) (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 2 (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -2 (/.f64 (+.f64 (/.f64 2 z) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) 1 -2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 1 (/.f64 (+.f64 (/.f64 2 z) 2) t))))))"]],"rules":[["egg-rr",64],["egg-rr",63]],"time":31.447998046875,"type":"rewrite"},{"count":[[175,138]],"inputs":[["(/.f64 2 (*.f64 t z))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 2 t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 2 t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 2 (*.f64 t z))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (*.f64 2 (/.f64 1 t)) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (*.f64 2 (/.f64 1 t)) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 2 (*.f64 t z))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 2 t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 2 t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t)))","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(/.f64 2 (*.f64 t z))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (*.f64 2 (/.f64 1 t)) 2)","(+.f64 (/.f64 2 t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (*.f64 2 (/.f64 1 t)) 2)","(+.f64 (/.f64 2 t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(/.f64 (+.f64 2 (*.f64 2 (/.f64 1 z))) t)","(/.f64 (+.f64 2 (/.f64 2 z)) t)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 2 (/.f64 2 z)) t) -2)"]],"time":168.98095703125,"type":"simplify"},{"compiler":[[2989,2069]],"time":35.024169921875,"type":"eval"},{"alts":[["(+.f64 (/.f64 x y) (/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z)))","done",8.34375],["(+.f64 (/.f64 x y) (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z))","next",18.1015625],["(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))","done",0.078125]],"compiler":[[20,14],[19,13],[17,13],[19,13]],"count":[[141,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[138,0],"picked":[1,1]}],"min-error":[0],"time":40.27099609375,"type":"prune"},{"compiler":[[59,36]],"locations":[["(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)",7.752368356272037,true],["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)",9.199307549559679,true]],"time":16.81103515625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)","z","-inf",0.2509765625],["(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)","z","inf",0.23291015625],["(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)","z","0",0.242919921875],["(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)","t","-inf",0.2490234375],["(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)","t","inf",0.18896484375],["(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)","t","0",0.277099609375],["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)","z","-inf",0.5390625],["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)","z","inf",0.4599609375],["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)","z","0",0.445068359375],["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)","t","-inf",0.597900390625],["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)","t","inf",0.510009765625],["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)","t","0",0.419921875]],"time":4.599853515625,"type":"series"},{"count":[[2,158]],"inputs":[["(/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z)","(/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) (*.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 0) (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) (*.f64 0 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)) (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 z)) (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 2)) (cbrt.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (/.f64 (/.f64 1 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 z)) (/.f64 (/.f64 1 t) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) t) (fma.f64 z (fma.f64 -2 t 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 (*.f64 z z))) (cbrt.f64 (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (neg.f64 z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)) z) (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 z) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 t) (cbrt.f64 (*.f64 z z))) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) z) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (/.f64 1 (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 z)) (*.f64 t (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) -1) (*.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) (cbrt.f64 (/.f64 1 z))) (*.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) 1) (*.f64 (cbrt.f64 (*.f64 t t)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (cbrt.f64 (/.f64 1 z))) (*.f64 (neg.f64 t) (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t))) (*.f64 (neg.f64 z) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (fma.f64 z (fma.f64 -2 t 2) 2)) (*.f64 (cbrt.f64 (*.f64 z z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2))) (*.f64 (cbrt.f64 (*.f64 z z)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t))) (*.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 (neg.f64 (*.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) z) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (*.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (neg.f64 (*.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 2)) (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 2)) (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 z)) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 z)) (/.f64 1 t)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) (/.f64 1 z)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z)) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) z) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 2))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (/.f64 (/.f64 1 t) (cbrt.f64 (*.f64 z z)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (/.f64 -1 z)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (/.f64 -1 z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)) z)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2))) (/.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)) z)) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) z) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) z) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) z) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) z) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 z)) (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)) (cbrt.f64 z)) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z)) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z)) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z)) 1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z)) -1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (/.f64 (neg.f64 (*.f64 t z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (/.f64 (*.f64 t z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (*.f64 (neg.f64 t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) (*.f64 z (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (*.f64 (neg.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (*.f64 (neg.f64 z) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (*.f64 (neg.f64 (*.f64 t z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (*.f64 (*.f64 t z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 z))) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8) (/.f64 (/.f64 1 z) t)) (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)) (/.f64 1 z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (neg.f64 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 z) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) z) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 0) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 t) 2) (*.f64 (/.f64 1 t) (*.f64 (fma.f64 -2 t 2) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 t) (*.f64 (fma.f64 -2 t 2) z)) (*.f64 (/.f64 1 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) (*.f64 0 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (/.f64 1 t)) (*.f64 (*.f64 (fma.f64 -2 t 2) z) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 -2 t 2) z) (/.f64 1 t)) (*.f64 2 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 t)) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (/.f64 -1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 -2 t 2) 2) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)) (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 t) (fma.f64 z (fma.f64 -2 t 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 t)) (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 (*.f64 t t))) (cbrt.f64 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 -2 t 2) 2) 2)) t) (cbrt.f64 (fma.f64 z (fma.f64 -2 t 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 t) (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) (fma.f64 z (fma.f64 -2 t 2) 2)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 -2 t 2) 2) 2))) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)) (cbrt.f64 (fma.f64 z (fma.f64 -2 t 2) 2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2)) (cbrt.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 2))) (cbrt.f64 (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) -1) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 z (fma.f64 -2 t 2) 2)) (cbrt.f64 t)) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) 1) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 t)) (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8)) (*.f64 (cbrt.f64 (*.f64 t t)) (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8)) (*.f64 (neg.f64 t) (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8) (*.f64 t (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8) 1) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8) (cbrt.f64 (/.f64 1 t))) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2)) (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8) -1) (*.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (cbrt.f64 t))) (neg.f64 (cbrt.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 t) (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8)) (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 3) 8) (/.f64 1 t)) (-.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 -2 t 2) z) 2) 4) (*.f64 (*.f64 (fma.f64 -2 t 2) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 z (fma.f64 -2 t 2) 2) t) 3))))))"]],"rules":[["egg-rr",60],["egg-rr",98]],"time":31.244140625,"type":"rewrite"},{"count":[[206,180]],"inputs":[["(/.f64 (+.f64 (*.f64 2 z) 2) (*.f64 t z))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(/.f64 2 (*.f64 t z))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(/.f64 (+.f64 2 (*.f64 -2 t)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(/.f64 (+.f64 2 (*.f64 -2 t)) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(/.f64 (+.f64 (*.f64 2 z) 2) t)","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(*.f64 -2 z)","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(*.f64 -2 z)","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(/.f64 2 t)","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 t)) 2) z) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 t)) 2) z) (*.f64 2 (/.f64 1 t)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 t)) 2) z) (*.f64 2 (/.f64 1 t)))","(/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t)","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t)","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (*.f64 2 z) 2) (*.f64 t z))","(/.f64 (fma.f64 2 z 2) (*.f64 t z))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (/.f64 2 t)) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","-2","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (/.f64 2 (*.f64 t z)) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(/.f64 2 (*.f64 t z))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (*.f64 2 (/.f64 1 t))) 2)","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(/.f64 (+.f64 2 (*.f64 -2 t)) t)","(/.f64 (fma.f64 -2 t 2) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(/.f64 (+.f64 2 (*.f64 -2 t)) t)","(/.f64 (fma.f64 -2 t 2) t)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(+.f64 (*.f64 2 (/.f64 1 (*.f64 t z))) (+.f64 -2 (*.f64 2 (/.f64 1 t))))","(+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2)","(/.f64 (+.f64 (*.f64 2 z) 2) t)","(/.f64 (fma.f64 2 z 2) t)","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(*.f64 -2 z)","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(*.f64 -2 z)","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 2 (/.f64 z t)) (+.f64 (*.f64 -2 z) (*.f64 2 (/.f64 1 t))))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(/.f64 2 t)","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 t)) 2) z) (*.f64 2 (/.f64 1 t)))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 t)) 2) z) (*.f64 2 (/.f64 1 t)))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(+.f64 (*.f64 (-.f64 (*.f64 2 (/.f64 1 t)) 2) z) (*.f64 2 (/.f64 1 t)))","(fma.f64 (+.f64 (/.f64 2 t) -2) z (/.f64 2 t))","(/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t)","(*.f64 (fma.f64 -2 t 2) (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(/.f64 (+.f64 2 (*.f64 (fma.f64 -2 t 2) z)) t)","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(/.f64 (+.f64 2 (*.f64 (fma.f64 -2 t 2) z)) t)","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(/.f64 (+.f64 2 (*.f64 (fma.f64 -2 t 2) z)) t)","(/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t)","(*.f64 (fma.f64 -2 t 2) (/.f64 z t))","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(/.f64 (+.f64 2 (*.f64 (fma.f64 -2 t 2) z)) t)","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(/.f64 (+.f64 2 (*.f64 (fma.f64 -2 t 2) z)) t)","(+.f64 (*.f64 2 (/.f64 1 t)) (/.f64 (*.f64 (+.f64 2 (*.f64 -2 t)) z) t))","(/.f64 (+.f64 2 (*.f64 (fma.f64 -2 t 2) z)) t)"]],"time":199.48193359375,"type":"simplify"},{"compiler":[[3939,2263]],"time":43.216064453125,"type":"eval"},{"alts":[["(+.f64 (/.f64 x y) (/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z)))","done",8.34375],["(+.f64 (/.f64 x y) (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z))","done",18.1015625],["(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))","done",0.078125]],"compiler":[[20,14],[19,13],[17,13]],"count":[[183,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[180,0],"picked":[1,1]}],"min-error":[0],"time":52.2119140625,"type":"prune"},{"accuracy":[0.078125],"baseline":[0.078125],"branch":[["x",0.078125,1],["y",0.078125,1],["z",0.078125,1],["t",0.078125,1],["(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))",0.078125,1],["(/.f64 x y)",0.078125,1],["(/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z))",0.078125,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[21,15],[7,5],[17,13],[65,39]],"count":[[4,1]],"inputs":[["(+.f64 (/.f64 x y) (/.f64 (/.f64 (fma.f64 (fma.f64 -2 t 2) z 2) t) z))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))","(+.f64 (/.f64 x y) (/.f64 (fma.f64 z (*.f64 -2 (+.f64 t -1)) 2) (*.f64 t z)))","(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))"]],"link":["."],"name":["Data.HashTable.ST.Basic:computeOverhead from hashtables-1.2.0.2"],"oracle":[18.1953125],"outputs":[["(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))"]],"time":22.506103515625,"times":[["x",2.97705078125],["y",3.0068359375],["z",3.253173828125],["t",2.989990234375],["(+.f64 (/.f64 x y) (/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z)))",2.989013671875],["(/.f64 x y)",2.998046875],["(/.f64 (+.f64 2 (*.f64 (*.f64 z 2) (-.f64 1 t))) (*.f64 t z))",2.85595703125]],"type":"regimes"},{"compiler":[[17,13]],"inputs":[["(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 (/.f64 2 z) 2) t) -2))","(+.f64 (+.f64 (/.f64 x y) -2) (/.f64 (+.f64 (/.f64 2 z) 2) t))"]],"stop":[["done",1]],"time":22.81982421875,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[17,13]],"remove-preprocessing":[[]],"time":9.716064453125,"type":"end"}]