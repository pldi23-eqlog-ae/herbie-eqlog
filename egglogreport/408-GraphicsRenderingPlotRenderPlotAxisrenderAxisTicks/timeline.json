[{"compiler":[[17,11]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":171.89599609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",39.965576171875,754],["body",1024,"valid",0.126953125,1],["body",256,"valid",440.70166015625,8255]],"time":489.5439453125,"type":"sample"},{"compiler":[[16,10]],"inputs":[["0","1","2","3","4"],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))","(+.f64 y (/.f64 (*.f64 x (-.f64 z t)) (-.f64 a t)))","(+.f64 z (/.f64 (*.f64 y (-.f64 x t)) (-.f64 a t)))","(+.f64 t (/.f64 (*.f64 y (-.f64 z x)) (-.f64 a x)))","(+.f64 a (/.f64 (*.f64 y (-.f64 z t)) (-.f64 x t)))","(+.f64 x (/.f64 (*.f64 z (-.f64 y t)) (-.f64 a t)))","(+.f64 x (/.f64 (*.f64 t (-.f64 z y)) (-.f64 a y)))","(+.f64 x (/.f64 (*.f64 a (-.f64 z t)) (-.f64 y t)))","(+.f64 x (/.f64 (*.f64 y (-.f64 t z)) (-.f64 a z)))","(+.f64 x (/.f64 (*.f64 y (-.f64 a t)) (-.f64 z t)))","(+.f64 x (/.f64 (*.f64 y (-.f64 z a)) (-.f64 t a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))","(+.f64 y (/.f64 (*.f64 x (-.f64 z t)) (-.f64 a t)))","(+.f64 y (/.f64 (*.f64 (-.f64 t z) x) (-.f64 t a)))","(+.f64 z (/.f64 (*.f64 y (-.f64 x t)) (-.f64 a t)))","(+.f64 z (/.f64 (*.f64 (-.f64 t x) y) (-.f64 t a)))","(+.f64 t (/.f64 (*.f64 y (-.f64 z x)) (-.f64 a x)))","(+.f64 t (/.f64 (*.f64 (-.f64 x z) y) (-.f64 x a)))","(+.f64 a (/.f64 (*.f64 y (-.f64 z t)) (-.f64 x t)))","(+.f64 x (/.f64 (*.f64 z (-.f64 y t)) (-.f64 a t)))","(+.f64 x (/.f64 (*.f64 (-.f64 t y) z) (-.f64 t a)))","(+.f64 x (/.f64 (*.f64 t (-.f64 z y)) (-.f64 a y)))","(+.f64 x (/.f64 (*.f64 (-.f64 y z) t) (-.f64 y a)))","(+.f64 x (/.f64 (*.f64 a (-.f64 z t)) (-.f64 y t)))","(+.f64 x (/.f64 (*.f64 (-.f64 t z) a) (-.f64 t y)))","(+.f64 x (/.f64 (*.f64 y (-.f64 t z)) (-.f64 a z)))","(+.f64 x (/.f64 (*.f64 y (-.f64 a t)) (-.f64 z t)))","(+.f64 x (/.f64 (*.f64 (-.f64 t a) y) (-.f64 t z)))","(+.f64 x (/.f64 (*.f64 y (-.f64 z a)) (-.f64 t a)))","(+.f64 x (/.f64 (*.f64 (-.f64 a z) y) (-.f64 a t)))"]],"symmetry":[[]],"time":85.6650390625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))","(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)"]],"time":19.60107421875,"type":"simplify"},{"compiler":[[26,12]],"time":0.343994140625,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","next",2.8154222432019007],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))","fresh",7.59375]],"compiler":[[15,9],[16,10],[15,9],[16,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.03515625],"time":1.31494140625,"type":"prune"},{"compiler":[[31,9]],"locations":[["(/.f64 y (-.f64 a t))",0.015625,true],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)",2.7302167902489205,true]],"time":6.39794921875,"type":"localize"},{"count":[[2,84]],"series":[["(/.f64 y (-.f64 a t))","t","-inf",0.719970703125],["(/.f64 y (-.f64 a t))","t","inf",0.4150390625],["(/.f64 y (-.f64 a t))","t","0",0.19580078125],["(/.f64 y (-.f64 a t))","a","-inf",0.259033203125],["(/.f64 y (-.f64 a t))","a","inf",0.283935546875],["(/.f64 y (-.f64 a t))","a","0",0.275146484375],["(/.f64 y (-.f64 a t))","y","-inf",0.2578125],["(/.f64 y (-.f64 a t))","y","inf",0.2919921875],["(/.f64 y (-.f64 a t))","y","0",0.285888671875],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","x","-inf",0.280029296875],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","x","inf",0.27294921875],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","x","0",0.338134765625],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","a","-inf",0.367919921875],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","a","inf",0.389892578125],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","a","0",0.5869140625],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","y","-inf",0.429931640625],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","y","inf",0.72216796875],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","y","0",0.4111328125],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","t","-inf",0.48486328125],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","t","inf",0.593994140625],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","t","0",0.716064453125],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","z","-inf",0.31298828125],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","z","inf",0.450927734375],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","z","0",0.584228515625]],"time":10.277099609375,"type":"series"},{"count":[[2,94]],"inputs":[["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","(/.f64 y (-.f64 a t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 0) (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) (*.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)) (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) (*.f64 0 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (/.f64 (*.f64 (-.f64 t z) y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 2)) (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 y (-.f64 a t)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2)) (/.f64 y (-.f64 a t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 a t)) (-.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) y) (/.f64 -1 (-.f64 t a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) 1 x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 a t)) 0) (/.f64 y (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 a t)) (*.f64 (/.f64 y (-.f64 a t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 a t))) (/.f64 y (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 a t)) (*.f64 0 (/.f64 y (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 t a)) (/.f64 y (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) -1) (/.f64 (cbrt.f64 y) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t a))) (/.f64 (neg.f64 (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) -1) (/.f64 (neg.f64 (cbrt.f64 (*.f64 y y))) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (-.f64 a t))) (/.f64 (cbrt.f64 (*.f64 y y)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) (/.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)) (cbrt.f64 (/.f64 y (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 a t)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 t a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (cbrt.f64 (/.f64 -1 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 a t))) (pow.f64 (cbrt.f64 (-.f64 a t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) -1) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (-.f64 a t)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y -1) (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (-.f64 a t))) (/.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (/.f64 (cbrt.f64 y) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 a t)) -2) (/.f64 y (cbrt.f64 (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 a t)) -2)) (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 y)) 1) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) (/.f64 y (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 a t))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 a t))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 a t))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 a t))) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 a t))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) y) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 a t))) 1) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 a t))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 a t))) 1) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 a t)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 a t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 a t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 a t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 a t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 y (-.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 3))))))"]],"rules":[["egg-rr",60],["egg-rr",34]],"time":25.81103515625,"type":"rewrite"},{"count":[[178,159]],"inputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 t (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 2)) (*.f64 -1 (/.f64 y a)))) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 t (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 2)) (*.f64 -1 (/.f64 y a)))) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 3)) (*.f64 -1 (/.f64 y (pow.f64 a 2))))) x)))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 t (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 2)) (*.f64 -1 (/.f64 y a)))) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 4)) (*.f64 -1 (/.f64 y (pow.f64 a 3)))) (pow.f64 t 3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 3)) (*.f64 -1 (/.f64 y (pow.f64 a 2))))) x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (/.f64 (*.f64 a y) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) x)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (pow.f64 a 2) z)) (pow.f64 t 3))) (+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 a y) t) (+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) (+.f64 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 3)) x)))))))","(+.f64 y x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 a y))) t)) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 a y))) t)) (+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) x))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 a y))) t)) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y (*.f64 (pow.f64 a 2) z)) (*.f64 -1 (*.f64 y (pow.f64 a 3)))) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) x)))))","x","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) a)) (pow.f64 t 2))) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 a 2))) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) a)) (pow.f64 t 2))) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 a 2))) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) a)) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 a 3))) (pow.f64 t 4))) x))))","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x))","(+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x))","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(*.f64 -1 (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y a) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y a) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y a) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 4))) (*.f64 -1 (/.f64 y t)))))","(/.f64 y a)","(+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a)))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))))","(/.f64 y a)","(+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a)))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))))","(/.f64 y a)","(+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a)))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))))","(*.f64 -1 (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (*.f64 -1 (/.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 y t)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 3) y) (pow.f64 t 4))))))","(*.f64 -1 (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (*.f64 -1 (/.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 4))) (*.f64 -1 (/.f64 y t)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x)","(-.f64 x (/.f64 (*.f64 y t) (-.f64 a t)))","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 t (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 2)) (*.f64 -1 (/.f64 y a)))) x))","(+.f64 (/.f64 (*.f64 y z) a) (fma.f64 t (-.f64 (/.f64 (/.f64 (*.f64 y z) a) a) (/.f64 y a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 t (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 2)) (*.f64 -1 (/.f64 y a)))) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 3)) (*.f64 -1 (/.f64 y (pow.f64 a 2))))) x)))","(+.f64 (/.f64 (*.f64 y z) a) (fma.f64 t (-.f64 (/.f64 (/.f64 (*.f64 y z) a) a) (/.f64 y a)) (fma.f64 (*.f64 t t) (-.f64 (/.f64 (*.f64 y z) (pow.f64 a 3)) (/.f64 (/.f64 y a) a)) x)))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 t (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 2)) (*.f64 -1 (/.f64 y a)))) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 4)) (*.f64 -1 (/.f64 y (pow.f64 a 3)))) (pow.f64 t 3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 (*.f64 y z) (pow.f64 a 3)) (*.f64 -1 (/.f64 y (pow.f64 a 2))))) x))))","(+.f64 (/.f64 (*.f64 y z) a) (fma.f64 t (-.f64 (/.f64 (/.f64 (*.f64 y z) a) a) (/.f64 y a)) (fma.f64 (-.f64 (/.f64 (*.f64 y z) (pow.f64 a 4)) (/.f64 y (pow.f64 a 3))) (pow.f64 t 3) (fma.f64 (*.f64 t t) (-.f64 (/.f64 (*.f64 y z) (pow.f64 a 3)) (/.f64 (/.f64 y a) a)) x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 y x)))","(+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 y a)) t) (+.f64 y x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (/.f64 (*.f64 a y) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) x)))))","(+.f64 (+.f64 (/.f64 (+.f64 (neg.f64 (*.f64 y z)) (*.f64 y a)) t) y) (+.f64 (/.f64 (+.f64 (*.f64 (*.f64 a a) y) (neg.f64 (*.f64 y (*.f64 a z)))) (*.f64 t t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (pow.f64 a 2) z)) (pow.f64 t 3))) (+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 a y) t) (+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) (+.f64 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 3)) x)))))))","(-.f64 (-.f64 (+.f64 (/.f64 (*.f64 (*.f64 a a) y) (*.f64 t t)) (+.f64 (/.f64 (*.f64 y a) t) (+.f64 (-.f64 y (/.f64 (*.f64 y (*.f64 a z)) (*.f64 t t))) (+.f64 (pow.f64 (/.f64 (*.f64 (cbrt.f64 y) a) t) 3) x)))) (/.f64 (*.f64 y (*.f64 (*.f64 a a) z)) (pow.f64 t 3))) (/.f64 (*.f64 y z) t))","(+.f64 y x)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 a y))) t)) (+.f64 y x))","(-.f64 (+.f64 y x) (/.f64 (*.f64 y (+.f64 z (neg.f64 a))) t))","(+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 a y))) t)) (+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) x))))","(+.f64 (neg.f64 (/.f64 (*.f64 y (+.f64 z (neg.f64 a))) t)) (+.f64 (+.f64 y (/.f64 (+.f64 (*.f64 (*.f64 a a) y) (neg.f64 (*.f64 y (*.f64 a z)))) (*.f64 t t))) x))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y z) (*.f64 -1 (*.f64 a y))) t)) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 y (*.f64 (pow.f64 a 2) z)) (*.f64 -1 (*.f64 y (pow.f64 a 3)))) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a z)) (pow.f64 t 2))) x)))))","(-.f64 (+.f64 (+.f64 (+.f64 y (/.f64 (+.f64 (*.f64 (*.f64 a a) y) (neg.f64 (*.f64 y (*.f64 a z)))) (*.f64 t t))) x) (neg.f64 (/.f64 (fma.f64 y (*.f64 (*.f64 a a) z) (*.f64 (neg.f64 y) (pow.f64 a 3))) (pow.f64 t 3)))) (/.f64 (*.f64 y (+.f64 z (neg.f64 a))) t))","x","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 t z) y) t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) a)) (pow.f64 t 2))) x))","(+.f64 (/.f64 (*.f64 (-.f64 t z) y) t) (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 t z) y) a) (*.f64 t t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 a 2))) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) a)) (pow.f64 t 2))) x)))","(+.f64 (/.f64 (*.f64 (*.f64 (-.f64 t z) y) (*.f64 a a)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 t z) y) t) (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 t z) y) a) (*.f64 t t)) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 a 2))) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) a)) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 a 3))) (pow.f64 t 4))) x))))","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 t z) y) (*.f64 a a)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 t z) y) t) (/.f64 (*.f64 (*.f64 (-.f64 t z) y) a) (*.f64 t t)))) (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 t z) y) (pow.f64 a 3)) (pow.f64 t 4)) x))","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) a) a) x))","(+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (*.f64 t t))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) a) a) x)))","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) a) a) x))","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (*.f64 t t))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) a) a) x)))","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(*.f64 -1 (/.f64 y t))","(neg.f64 (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y a) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t)))","(-.f64 (neg.f64 (/.f64 y t)) (/.f64 (*.f64 y a) (*.f64 t t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y a) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t))))","(-.f64 (-.f64 (neg.f64 (/.f64 y t)) (/.f64 (*.f64 y a) (*.f64 t t))) (/.f64 (*.f64 (*.f64 a a) y) (pow.f64 t 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y a) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 4))) (*.f64 -1 (/.f64 y t)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 y a) (*.f64 t t))) (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 4))) (/.f64 y t)) (/.f64 (*.f64 (*.f64 a a) y) (pow.f64 t 3)))","(/.f64 y a)","(+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))","(+.f64 (/.f64 (/.f64 (*.f64 y t) a) a) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a)))","(/.f64 (+.f64 (*.f64 y (*.f64 t t)) (+.f64 (*.f64 (*.f64 y t) a) (*.f64 (*.f64 a a) y))) (pow.f64 a 3))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (/.f64 (+.f64 (*.f64 y (*.f64 t t)) (+.f64 (*.f64 (*.f64 y t) a) (*.f64 (*.f64 a a) y))) (pow.f64 a 3)))","(/.f64 y a)","(+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))","(+.f64 (/.f64 (/.f64 (*.f64 y t) a) a) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a)))","(/.f64 (+.f64 (*.f64 y (*.f64 t t)) (+.f64 (*.f64 (*.f64 y t) a) (*.f64 (*.f64 a a) y))) (pow.f64 a 3))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (/.f64 (+.f64 (*.f64 y (*.f64 t t)) (+.f64 (*.f64 (*.f64 y t) a) (*.f64 (*.f64 a a) y))) (pow.f64 a 3)))","(/.f64 y a)","(+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))","(+.f64 (/.f64 (/.f64 (*.f64 y t) a) a) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a)))","(/.f64 (+.f64 (*.f64 y (*.f64 t t)) (+.f64 (*.f64 (*.f64 y t) a) (*.f64 (*.f64 a a) y))) (pow.f64 a 3))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y t) (pow.f64 a 2)) (/.f64 y a))))","(+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 4)) (/.f64 (+.f64 (*.f64 y (*.f64 t t)) (+.f64 (*.f64 (*.f64 y t) a) (*.f64 (*.f64 a a) y))) (pow.f64 a 3)))","(*.f64 -1 (/.f64 y t))","(neg.f64 (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t)))","(-.f64 (neg.f64 (/.f64 y t)) (/.f64 (*.f64 y a) (*.f64 t t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (*.f64 -1 (/.f64 y t))))","(-.f64 (-.f64 (neg.f64 (/.f64 y t)) (/.f64 (*.f64 y a) (*.f64 t t))) (/.f64 (*.f64 (*.f64 a a) y) (pow.f64 t 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 y t)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 3) y) (pow.f64 t 4))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 y a) (*.f64 t t))) (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 4))) (/.f64 y t)) (/.f64 (*.f64 (*.f64 a a) y) (pow.f64 t 3)))","(*.f64 -1 (/.f64 y t))","(neg.f64 (/.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (*.f64 -1 (/.f64 y t)))","(-.f64 (neg.f64 (/.f64 y t)) (/.f64 (*.f64 y a) (*.f64 t t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (*.f64 -1 (/.f64 y t))))","(-.f64 (-.f64 (neg.f64 (/.f64 y t)) (/.f64 (*.f64 y a) (*.f64 t t))) (/.f64 (*.f64 (*.f64 a a) y) (pow.f64 t 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a y) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 4))) (*.f64 -1 (/.f64 y t)))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 (*.f64 y a) (*.f64 t t))) (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 4))) (/.f64 y t)) (/.f64 (*.f64 (*.f64 a a) y) (pow.f64 t 3)))"]],"time":334.97998046875,"type":"simplify"},{"compiler":[[3278,1077]],"time":25.428955078125,"type":"eval"},{"alts":[["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","next",1.7994672514806582],["(fma.f64 (-.f64 z t) (*.f64 y (/.f64 -1 (-.f64 t a))) x)","fresh",2.888019752970343],["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","done",2.8154222432019007],["(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","fresh",7.57421875],["(fma.f64 (-.f64 z t) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 a t))) x)","fresh",12.099237848056726]],"compiler":[[15,9],[17,11],[15,9],[24,14],[26,16],[15,9],[17,11],[24,14],[26,16]],"count":[[161,5]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[159,4],"picked":[1,1]}],"min-error":[0.0078125],"time":47.571044921875,"type":"prune"},{"compiler":[[33,9]],"locations":[["(/.f64 (-.f64 z t) (-.f64 a t))",0.02734375,true],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)",1.744023976973912,true]],"time":6.43701171875,"type":"localize"},{"count":[[2,96]],"series":[["(/.f64 (-.f64 z t) (-.f64 a t))","a","-inf",0.26708984375],["(/.f64 (-.f64 z t) (-.f64 a t))","a","inf",0.2958984375],["(/.f64 (-.f64 z t) (-.f64 a t))","a","0",0.308837890625],["(/.f64 (-.f64 z t) (-.f64 a t))","t","-inf",0.239990234375],["(/.f64 (-.f64 z t) (-.f64 a t))","t","inf",0.279052734375],["(/.f64 (-.f64 z t) (-.f64 a t))","t","0",0.30517578125],["(/.f64 (-.f64 z t) (-.f64 a t))","z","-inf",0.1650390625],["(/.f64 (-.f64 z t) (-.f64 a t))","z","inf",0.184814453125],["(/.f64 (-.f64 z t) (-.f64 a t))","z","0",0.175048828125],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","x","-inf",0.1650390625],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","x","inf",0.18505859375],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","x","0",0.28515625],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","y","-inf",0.31494140625],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","y","inf",0.31201171875],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","y","0",0.380126953125],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","a","-inf",0.26611328125],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","a","inf",0.279052734375],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","a","0",0.51123046875],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","t","-inf",0.406005859375],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","t","inf",0.450927734375],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","t","0",0.568115234375],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","z","-inf",0.47900390625],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","z","inf",0.98193359375],["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","z","0",0.501953125]],"time":8.6640625,"type":"series"},{"count":[[2,106]],"inputs":[["(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(/.f64 (-.f64 z t) (-.f64 a t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) (*.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 0) (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) (*.f64 0 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)) (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 2)) (cbrt.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (-.f64 t z) (-.f64 t a)) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 t a))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 2)) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (*.f64 (-.f64 t z) y) (-.f64 t a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 t z) (-.f64 t a)) (*.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 0) (/.f64 (-.f64 t z) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 t a)) (neg.f64 t)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 a t)) (*.f64 (/.f64 -1 (-.f64 t a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 t z) (-.f64 t a)) (*.f64 0 (/.f64 (-.f64 t z) (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 t z) (-.f64 t a))) (/.f64 (-.f64 t z) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 a t)) (*.f64 (/.f64 t (-.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 t z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 z (-.f64 a t)) (pow.f64 (-.f64 a t) 2)) (/.f64 (*.f64 (-.f64 a t) t) (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 a t)) (/.f64 (-.f64 t z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 t a)) (/.f64 (-.f64 t z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 z t)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2)) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 (-.f64 z t) (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 t z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 2)) (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 t z) (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 t z) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (cbrt.f64 (/.f64 -1 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 z t) 2)) (-.f64 a t)) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 t z) (-.f64 a t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 (-.f64 a t))) (pow.f64 (cbrt.f64 (-.f64 a t)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (-.f64 a t) (neg.f64 (*.f64 (-.f64 a t) t))) (/.f64 1 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (-.f64 z t)) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 t a))) (cbrt.f64 (pow.f64 (-.f64 z t) 2))) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 (-.f64 a t))) 1) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) (cbrt.f64 (-.f64 a t))) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z t) (cbrt.f64 (-.f64 a t))) 1) (cbrt.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 z t) (cbrt.f64 (-.f64 a t))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 a t))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 a t))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 a t))) (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)) (/.f64 t (cbrt.f64 (-.f64 a t))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)) (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 a t))) (-.f64 t a)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)) (neg.f64 t))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 a t))) (-.f64 a t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)) t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2)) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (*.f64 (-.f64 a t) (/.f64 t (cbrt.f64 (-.f64 a t))))) (*.f64 (-.f64 a t) (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z (-.f64 t a)) (*.f64 (-.f64 a t) (neg.f64 t))) (*.f64 (-.f64 a t) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 z) (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (*.f64 (-.f64 t a) (/.f64 t (cbrt.f64 (-.f64 a t))))) (*.f64 (-.f64 t a) (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 z) (-.f64 a t)) (*.f64 (-.f64 t a) t)) (*.f64 (-.f64 t a) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (-.f64 a t) (neg.f64 (*.f64 (-.f64 a t) t)))) (neg.f64 (pow.f64 (-.f64 a t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 t z) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (-.f64 a t) (neg.f64 (*.f64 (-.f64 a t) t))) (pow.f64 (-.f64 a t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 z t) (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 2)) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 2)) (cbrt.f64 (-.f64 z t))) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z (-.f64 a t) (neg.f64 (*.f64 (-.f64 a t) t))) 1) (pow.f64 (-.f64 a t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 t z)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 2))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 z t)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 2))) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 t z) (cbrt.f64 (-.f64 a t))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) -1) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z (-.f64 a t) (neg.f64 (*.f64 (-.f64 a t) t))) (-.f64 a t)) (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 z) (-.f64 t a)) (*.f64 (-.f64 t a) (neg.f64 t))) (pow.f64 (-.f64 a t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 z t) (cbrt.f64 (-.f64 a t)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 t a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 t a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 t a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 t z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 t z) (-.f64 a t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 t a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 a t)) 2)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 z (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 a t)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 t a)))))))"]],"rules":[["egg-rr",73],["egg-rr",33]],"time":28.7138671875,"type":"rewrite"},{"count":[[202,187]],"inputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) (*.f64 y t))) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) (*.f64 y t))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (*.f64 y (pow.f64 t 2)))) x)))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) (*.f64 y t))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (pow.f64 t 3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 -1 (/.f64 z (pow.f64 a 4))))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (*.f64 y (pow.f64 t 2)))) x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y (+.f64 (/.f64 (*.f64 y (*.f64 a (-.f64 (*.f64 -1 z) (*.f64 -1 a)))) (pow.f64 t 2)) x)))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a)))) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 a (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a)))) (pow.f64 t 2)) x))))","(+.f64 y x)","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a (-.f64 z a))) (pow.f64 t 2))) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 y (-.f64 z a))) (pow.f64 t 3))) (+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a (-.f64 z a))) (pow.f64 t 2))) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x)","(+.f64 (*.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x))","(+.f64 (*.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 y (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) t) x)))","(+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) t) (+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 a 3) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (pow.f64 t 2)) (+.f64 (*.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x))))","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x))","(+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x))","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","x","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(*.f64 -1 (/.f64 t (-.f64 a t)))","(+.f64 (/.f64 z (-.f64 a t)) (*.f64 -1 (/.f64 t (-.f64 a t))))","(+.f64 (/.f64 z (-.f64 a t)) (*.f64 -1 (/.f64 t (-.f64 a t))))","(+.f64 (/.f64 z (-.f64 a t)) (*.f64 -1 (/.f64 t (-.f64 a t))))","(/.f64 z (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 z (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 z a)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) t)) (/.f64 z a))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (pow.f64 t 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) t)) (/.f64 z a)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (pow.f64 t 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) t)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 t 3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 -1 (/.f64 z (pow.f64 a 4)))))) (/.f64 z a))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) (*.f64 -1 (/.f64 a t)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z t)) (/.f64 (*.f64 a (-.f64 (*.f64 -1 z) (*.f64 -1 a))) (pow.f64 t 2)))) (*.f64 -1 (/.f64 a t)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (*.f64 -1 z) (*.f64 -1 a))) (pow.f64 t 3)) (+.f64 (*.f64 -1 (/.f64 z t)) (/.f64 (*.f64 a (-.f64 (*.f64 -1 z) (*.f64 -1 a))) (pow.f64 t 2))))) (*.f64 -1 (/.f64 a t)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z a) t)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (*.f64 -1 (/.f64 (*.f64 a (-.f64 z a)) (pow.f64 t 2)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (-.f64 z a)) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (*.f64 -1 (/.f64 (*.f64 a (-.f64 z a)) (pow.f64 t 2))))))","(*.f64 -1 (/.f64 (-.f64 z t) t))","(+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (*.f64 -1 (/.f64 (-.f64 z t) t)))","(+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z t) t)) (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) t)))","(+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z t) t)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) t) (/.f64 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (pow.f64 t 2)))))","(/.f64 (-.f64 z t) a)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (/.f64 z a)) (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a))) (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a)))) (/.f64 t a))","(/.f64 (-.f64 z t) a)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (/.f64 z a)) (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a))) (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a)))) (/.f64 t a))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) (+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) x))","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) (*.f64 y t))) x))","(+.f64 (/.f64 (*.f64 y z) a) (-.f64 x (*.f64 (-.f64 (/.f64 1 a) (/.f64 z (*.f64 a a))) (*.f64 y t))))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) (*.f64 y t))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (*.f64 y (pow.f64 t 2)))) x)))","(+.f64 (-.f64 (/.f64 (*.f64 y z) a) (*.f64 (-.f64 (/.f64 1 a) (/.f64 z (*.f64 a a))) (*.f64 y t))) (-.f64 x (*.f64 (-.f64 (pow.f64 a -2) (*.f64 z (pow.f64 a -3))) (*.f64 y (*.f64 t t)))))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) (*.f64 y t))) (+.f64 (*.f64 -1 (*.f64 y (*.f64 (pow.f64 t 3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 -1 (/.f64 z (pow.f64 a 4))))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (*.f64 y (pow.f64 t 2)))) x))))","(+.f64 (-.f64 (/.f64 (*.f64 y z) a) (*.f64 (-.f64 (/.f64 1 a) (/.f64 z (*.f64 a a))) (*.f64 y t))) (-.f64 (-.f64 x (*.f64 (-.f64 (pow.f64 a -2) (*.f64 z (pow.f64 a -3))) (*.f64 y (*.f64 t t)))) (*.f64 (*.f64 y (pow.f64 t 3)) (-.f64 (pow.f64 a -3) (/.f64 z (pow.f64 a 4))))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 (-.f64 a z) y) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y (+.f64 (/.f64 (*.f64 y (*.f64 a (-.f64 (*.f64 -1 z) (*.f64 -1 a)))) (pow.f64 t 2)) x)))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 a z) y) t) (+.f64 y x)) (/.f64 (*.f64 (*.f64 y a) (-.f64 a z)) (*.f64 t t)))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a)))) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 a (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a)))) (pow.f64 t 2)) x))))","(+.f64 (+.f64 (+.f64 y (/.f64 (*.f64 (-.f64 a z) y) t)) (+.f64 (/.f64 (*.f64 a (*.f64 (-.f64 a z) y)) (*.f64 t t)) x)) (*.f64 (*.f64 (*.f64 a a) (*.f64 (-.f64 a z) y)) (pow.f64 t -3)))","(+.f64 y x)","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x))","(+.f64 (/.f64 (*.f64 (-.f64 a z) y) t) (+.f64 y x))","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a (-.f64 z a))) (pow.f64 t 2))) x)))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 a z) y) t) (+.f64 y x)) (/.f64 (*.f64 (*.f64 y a) (-.f64 a z)) (*.f64 t t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 y (-.f64 z a))) (pow.f64 t 3))) (+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 a (-.f64 z a))) (pow.f64 t 2))) x))))","(+.f64 (+.f64 y (*.f64 (*.f64 (*.f64 a a) (*.f64 (-.f64 a z) y)) (pow.f64 t -3))) (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 y a) (-.f64 a z)) (*.f64 t t)) x) (/.f64 (*.f64 (-.f64 a z) y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x)","(+.f64 (/.f64 (*.f64 (-.f64 t z) y) t) x)","(+.f64 (*.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x))","(fma.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (+.f64 (/.f64 (*.f64 (-.f64 t z) y) t) x))","(+.f64 (*.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (*.f64 y (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) t) x)))","(fma.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (+.f64 (/.f64 (+.f64 (*.f64 (-.f64 t z) y) (*.f64 (*.f64 (*.f64 a a) y) (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t))))) t) x))","(+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) t) (+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 a 3) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (pow.f64 t 2)) (+.f64 (*.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) t)) x))))","(+.f64 (/.f64 (*.f64 (*.f64 y (*.f64 a a)) (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) t) (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 y (pow.f64 a 3)) (*.f64 t (-.f64 t z))) (pow.f64 t 3)) (pow.f64 t -2)) (fma.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (+.f64 (/.f64 (*.f64 (-.f64 t z) y) t) x))))","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) t) (*.f64 a a)) x))","(+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","(+.f64 (*.f64 (*.f64 (-.f64 z t) (*.f64 y (*.f64 t t))) (pow.f64 a -3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) t) (*.f64 a a)) x)))","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) t)) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) t) (*.f64 a a)) x))","(+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 z t) (pow.f64 t 2))) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) (+.f64 (/.f64 (*.f64 (-.f64 z t) (*.f64 y t)) (pow.f64 a 2)) x)))","(+.f64 (*.f64 (*.f64 (-.f64 z t) (*.f64 y (*.f64 t t))) (pow.f64 a -3)) (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (+.f64 (/.f64 (*.f64 (*.f64 y (-.f64 z t)) t) (*.f64 a a)) x)))","x","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (*.f64 (-.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t))) y) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) (-.f64 a t)) x)","(fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)","(*.f64 -1 (/.f64 t (-.f64 a t)))","(/.f64 t (-.f64 t a))","(+.f64 (/.f64 z (-.f64 a t)) (*.f64 -1 (/.f64 t (-.f64 a t))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 z (-.f64 a t)) (*.f64 -1 (/.f64 t (-.f64 a t))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 z (-.f64 a t)) (*.f64 -1 (/.f64 t (-.f64 a t))))","(/.f64 (-.f64 t z) (-.f64 t a))","(/.f64 z (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 (-.f64 t z) (-.f64 t a))","(/.f64 z (-.f64 a t))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t (-.f64 a t))) (/.f64 z (-.f64 a t)))","(/.f64 (-.f64 t z) (-.f64 t a))","(/.f64 z a)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) t)) (/.f64 z a))","(-.f64 (/.f64 z a) (*.f64 (-.f64 (/.f64 1 a) (/.f64 z (*.f64 a a))) t))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (pow.f64 t 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) t)) (/.f64 z a)))","(-.f64 (-.f64 (/.f64 z a) (*.f64 (-.f64 (/.f64 1 a) (/.f64 z (*.f64 a a))) t)) (*.f64 (-.f64 (pow.f64 a -2) (*.f64 z (pow.f64 a -3))) (*.f64 t t)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 a 2)) (*.f64 -1 (/.f64 z (pow.f64 a 3)))) (pow.f64 t 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 z (pow.f64 a 2))) (/.f64 1 a)) t)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 t 3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 -1 (/.f64 z (pow.f64 a 4)))))) (/.f64 z a))))","(-.f64 (-.f64 (-.f64 (/.f64 z a) (*.f64 (pow.f64 t 3) (-.f64 (pow.f64 a -3) (/.f64 z (pow.f64 a 4))))) (*.f64 (-.f64 (/.f64 1 a) (/.f64 z (*.f64 a a))) t)) (*.f64 (-.f64 (pow.f64 a -2) (*.f64 z (pow.f64 a -3))) (*.f64 t t)))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) (*.f64 -1 (/.f64 a t)))","(+.f64 1 (/.f64 (-.f64 a z) t))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z t)) (/.f64 (*.f64 a (-.f64 (*.f64 -1 z) (*.f64 -1 a))) (pow.f64 t 2)))) (*.f64 -1 (/.f64 a t)))","(+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 a z) a) (*.f64 t t)) (/.f64 (-.f64 a z) t)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (*.f64 -1 z) (*.f64 -1 a))) (pow.f64 t 3)) (+.f64 (*.f64 -1 (/.f64 z t)) (/.f64 (*.f64 a (-.f64 (*.f64 -1 z) (*.f64 -1 a))) (pow.f64 t 2))))) (*.f64 -1 (/.f64 a t)))","(+.f64 (+.f64 1 (*.f64 (*.f64 (*.f64 a a) (-.f64 a z)) (pow.f64 t -3))) (+.f64 (/.f64 (*.f64 (-.f64 a z) a) (*.f64 t t)) (/.f64 (-.f64 a z) t)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z a) t)))","(+.f64 1 (/.f64 (-.f64 a z) t))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (*.f64 -1 (/.f64 (*.f64 a (-.f64 z a)) (pow.f64 t 2)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 a z) a) (*.f64 t t)) (/.f64 (-.f64 a z) t)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) (-.f64 z a)) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (*.f64 -1 (/.f64 (*.f64 a (-.f64 z a)) (pow.f64 t 2))))))","(+.f64 (+.f64 1 (*.f64 (*.f64 (*.f64 a a) (-.f64 a z)) (pow.f64 t -3))) (+.f64 (/.f64 (*.f64 (-.f64 a z) a) (*.f64 t t)) (/.f64 (-.f64 a z) t)))","(*.f64 -1 (/.f64 (-.f64 z t) t))","(/.f64 (-.f64 t z) t)","(+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (*.f64 -1 (/.f64 (-.f64 z t) t)))","(fma.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t))) (/.f64 (-.f64 t z) t))","(+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z t) t)) (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) t)))","(fma.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t))) (/.f64 (+.f64 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (-.f64 t z)) t))","(+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z t) t)) (+.f64 (/.f64 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) t) (/.f64 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 1 t) (/.f64 z (pow.f64 t 2)))) (pow.f64 t 2)))))","(+.f64 (fma.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t))) (/.f64 (+.f64 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (-.f64 t z)) t)) (/.f64 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (*.f64 t t)))","(/.f64 (-.f64 z t) a)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (/.f64 z a)) (/.f64 t a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) t) (*.f64 a a)) (/.f64 (-.f64 z t) a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a))) (/.f64 t a))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (*.f64 a a)) (*.f64 (*.f64 (-.f64 z t) (*.f64 t t)) (pow.f64 a -3))) (/.f64 (-.f64 z t) a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a)))) (/.f64 t a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) t) (*.f64 a a)) (+.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 3)) (pow.f64 a 4)) (*.f64 (*.f64 (-.f64 z t) (*.f64 t t)) (pow.f64 a -3))) (/.f64 (-.f64 z t) a)))","(/.f64 (-.f64 z t) a)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (/.f64 z a)) (/.f64 t a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) t) (*.f64 a a)) (/.f64 (-.f64 z t) a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a))) (/.f64 t a))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (*.f64 a a)) (*.f64 (*.f64 (-.f64 z t) (*.f64 t t)) (pow.f64 a -3))) (/.f64 (-.f64 z t) a))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) t) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 3)) (pow.f64 a 4)) (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 2)) (pow.f64 a 3)) (/.f64 z a)))) (/.f64 t a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) t) (*.f64 a a)) (+.f64 (+.f64 (/.f64 (*.f64 (-.f64 z t) (pow.f64 t 3)) (pow.f64 a 4)) (*.f64 (*.f64 (-.f64 z t) (*.f64 t t)) (pow.f64 a -3))) (/.f64 (-.f64 z t) a)))"]],"time":376.551025390625,"type":"simplify"},{"compiler":[[3948,1416]],"time":32.243896484375,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","done",2.8154222432019007],["(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","fresh",7.57421875],["(fma.f64 (-.f64 z t) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 a t))) x)","fresh",12.099237848056726],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","next",1.8072797514806582],["(fma.f64 (fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 z (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (/.f64 t (-.f64 t a))) y x)","fresh",5.800689374670789],["(fma.f64 (fma.f64 (cbrt.f64 (/.f64 z (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 a t)) 2)) (/.f64 t (-.f64 t a))) y x)","fresh",6.468847752532612]],"compiler":[[15,9],[24,14],[26,16],[20,11],[28,17],[28,15],[24,14],[26,16],[20,11],[28,17],[28,15]],"count":[[192,6]],"kept":[{"done":[1,1],"fresh":[3,1],"new":[187,4],"picked":[1,0]}],"min-error":[0],"time":62.68505859375,"type":"prune"},{"compiler":[[51,17]],"locations":[["(/.f64 -1 (-.f64 t a))",0.01171875,true],["(/.f64 t (-.f64 t a))",0.01171875,true],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))",0.10546875,true],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)",1.744023976973912,true]],"time":9.676025390625,"type":"localize"},{"count":[[4,144]],"series":[["(/.f64 -1 (-.f64 t a))","a","-inf",0.205810546875],["(/.f64 -1 (-.f64 t a))","a","inf",0.178955078125],["(/.f64 -1 (-.f64 t a))","a","0",0.212890625],["(/.f64 -1 (-.f64 t a))","t","-inf",0.18505859375],["(/.f64 -1 (-.f64 t a))","t","inf",0.26904296875],["(/.f64 -1 (-.f64 t a))","t","0",0.2158203125],["(/.f64 t (-.f64 t a))","a","-inf",0.218994140625],["(/.f64 t (-.f64 t a))","a","inf",0.194091796875],["(/.f64 t (-.f64 t a))","a","0",0.22802734375],["(/.f64 t (-.f64 t a))","t","-inf",0.1689453125],["(/.f64 t (-.f64 t a))","t","inf",0.205810546875],["(/.f64 t (-.f64 t a))","t","0",0.2890625],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","a","-inf",0.35595703125],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","a","inf",0.39697265625],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","a","0",0.27587890625],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","t","-inf",0.26708984375],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","t","inf",0.272216796875],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","t","0",0.273193359375],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","z","-inf",0.1669921875],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","z","inf",0.194091796875],["(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","z","0",0.172119140625],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","x","-inf",0.206787109375],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","x","inf",0.18212890625],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","x","0",0.43798828125],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","y","-inf",0.297119140625],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","y","inf",0.2548828125],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","y","0",0.48095703125],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","a","-inf",0.449951171875],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","a","inf",0.453125],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","a","0",1.701904296875],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","t","-inf",0.444091796875],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","t","inf",0.802978515625],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","t","0",0.56396484375],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","z","-inf",0.4169921875],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","z","inf",0.330810546875],["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","z","0",0.81298828125]],"time":13.294921875,"type":"series"},{"count":[[4,206]],"inputs":[["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","(fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))","(/.f64 t (-.f64 t a))","(/.f64 -1 (-.f64 t a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) (*.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 0) (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) (*.f64 0 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 2)) (cbrt.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 2)) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 0) (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) (*.f64 0 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) (+.f64 (neg.f64 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) (+.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 2)) (cbrt.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) (+.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) (+.f64 (neg.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 z (neg.f64 t)) (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 z) t) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 z) (-.f64 a t)) (*.f64 (-.f64 t a) (neg.f64 t))) (*.f64 (-.f64 t a) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 z) (cbrt.f64 (pow.f64 (-.f64 t a) 2))) (*.f64 (-.f64 t a) (/.f64 t (cbrt.f64 (-.f64 t a))))) (*.f64 (-.f64 t a) (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 t a) 2))) (*.f64 (-.f64 a t) (/.f64 t (cbrt.f64 (-.f64 t a))))) (*.f64 (-.f64 a t) (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (-.f64 t a)) (*.f64 (-.f64 a t) t)) (*.f64 (-.f64 a t) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (-.f64 t a)) (*.f64 (-.f64 a t) (neg.f64 z))) (*.f64 (-.f64 a t) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) (-.f64 a t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2)) z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2)) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) (-.f64 t a)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2)) (neg.f64 z))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (-.f64 a t)) (*.f64 (-.f64 t a) z)) (*.f64 (-.f64 t a) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 z) (-.f64 t a)) (*.f64 (-.f64 t a) t)) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (-.f64 a t)) (*.f64 (-.f64 a t) (neg.f64 t))) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (-.f64 a t)) (*.f64 (-.f64 a t) z)) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (-.f64 t a)) (*.f64 (-.f64 t a) (neg.f64 z))) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 t (-.f64 a t)) (/.f64 z (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 z (-.f64 t a)) (/.f64 t (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 1 (-.f64 t a)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 t a)) z (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (/.f64 (cbrt.f64 (*.f64 z z)) (-.f64 a t)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (cbrt.f64 (-.f64 a t))) (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 a t)) 2)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (/.f64 (cbrt.f64 (*.f64 t t)) (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 t (-.f64 a t)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) (*.f64 t (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2)) (cbrt.f64 (/.f64 t (-.f64 t a))) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 1 (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 t (-.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 t a)) t (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) (/.f64 -1 (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (-.f64 t a)) 1 (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (-.f64 a t)) 1 (/.f64 t (-.f64 t a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 t a)) (*.f64 (/.f64 t (-.f64 t a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 t (-.f64 t a)) 0) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 t a)) (*.f64 0 (/.f64 t (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 t (-.f64 t a))) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 t (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) (*.f64 t (cbrt.f64 (pow.f64 (-.f64 a t) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 t) -1) (/.f64 (neg.f64 (cbrt.f64 (*.f64 t t))) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 a t))) (/.f64 (neg.f64 (cbrt.f64 (*.f64 t t))) (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 t)) 1) (/.f64 (cbrt.f64 (*.f64 t t)) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (-.f64 t a))) (/.f64 (cbrt.f64 (*.f64 t t)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 t) -1) (/.f64 (cbrt.f64 (*.f64 t t)) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 t a) 2))) (/.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t t)) -1) (/.f64 (cbrt.f64 t) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (-.f64 t a))) (/.f64 (cbrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (/.f64 (cbrt.f64 (*.f64 t t)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 t (-.f64 t a))) (cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2)) (cbrt.f64 (/.f64 t (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 t (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t t)) (-.f64 t a)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (-.f64 a t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (/.f64 1 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) (cbrt.f64 (pow.f64 (-.f64 a t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 t (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 (neg.f64 t) (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (/.f64 (neg.f64 t) (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (/.f64 t (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 t) (-.f64 t a)) (cbrt.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t t)) (/.f64 (cbrt.f64 t) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 t) (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 t (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) t) (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 t) (cbrt.f64 (/.f64 -1 (-.f64 t a)))) (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 t a))) (cbrt.f64 (*.f64 t t))) (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2)) (cbrt.f64 t)) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2)) (cbrt.f64 (neg.f64 t))) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 t (-.f64 a t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) 1) (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 t)) (cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2))) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 t) (cbrt.f64 (-.f64 t a))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) 1) (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 t (cbrt.f64 (-.f64 t a)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 t (-.f64 t a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (-.f64 t a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (-.f64 t a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (-.f64 t a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 t (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 t (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 (-.f64 t a)) t))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 t (-.f64 a t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 t a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 t (-.f64 t a)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 t a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 t a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a)))) (cbrt.f64 (-.f64 t a))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a)))) 1) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (cbrt.f64 (pow.f64 (-.f64 a t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (cbrt.f64 (/.f64 -1 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (/.f64 1 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2)) (/.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2)) (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t a))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 a t)) (-.f64 a t)) (*.f64 (-.f64 t a) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (pow.f64 (-.f64 t a) 2))) (*.f64 (-.f64 t a) (cbrt.f64 (/.f64 1 (-.f64 t a))))) (*.f64 (-.f64 t a) (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (cbrt.f64 (pow.f64 (-.f64 t a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 t a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) -1) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 (-.f64 t a))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 t a)) (-.f64 t a)) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 a t) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 a t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 a t) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (-.f64 t a)))))))"]],"rules":[["egg-rr",44],["egg-rr",61],["egg-rr",65],["egg-rr",36]],"time":38.733154296875,"type":"rewrite"},{"count":[[350,323]],"inputs":[["(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a)))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a)))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) (*.f64 y t)) x))","(+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2))))) (+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) (*.f64 y t)) x)))","(+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2))))) (+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 y (*.f64 (pow.f64 t 3) (-.f64 (/.f64 z (pow.f64 a 4)) (/.f64 1 (pow.f64 a 3))))) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) (*.f64 y t)) x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) x)))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) z)) (*.f64 -1 (pow.f64 a 3))) y) (pow.f64 t 3)) (+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) x))))","(+.f64 y x)","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x))","(+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 a 2) z) (pow.f64 a 3)) y) (pow.f64 t 3))) (+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x))))","(+.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y) x)","(+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t)))) (+.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y)))","(+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t)))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (*.f64 (pow.f64 a 2) y)) (+.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y))))","(+.f64 (*.f64 (pow.f64 a 3) (*.f64 y (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 4))) (/.f64 1 (pow.f64 t 3))))) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t)))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (*.f64 (pow.f64 a 2) y)) (+.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y)))))","x","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 t) z)) a) x)","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 t) z)) a) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x))","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 t 2) z) (pow.f64 t 3)) y) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 t) z)) a) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 (*.f64 -1 z) t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 (*.f64 -1 z) t)) a)) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) z)) (*.f64 -1 (pow.f64 t 3)))) (pow.f64 a 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 (*.f64 -1 z) t)) a)) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x)))","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(/.f64 t (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(*.f64 -1 (/.f64 z (-.f64 t a)))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(*.f64 -1 (/.f64 z (-.f64 t a)))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 z a)","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) t) (/.f64 z a))","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) t) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2)))) (/.f64 z a)))","(+.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 z (pow.f64 a 4)) (/.f64 1 (pow.f64 a 3)))) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) t) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2)))) (/.f64 z a))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) (*.f64 -1 (/.f64 a t)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 a t)) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) z) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2)))))) (+.f64 (*.f64 -1 (/.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 3))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z a) t)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2))))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (pow.f64 a 2) z) (pow.f64 a 3)) (pow.f64 t 3))) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2)))))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 1 (*.f64 -1 (/.f64 z t)))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))) (*.f64 -1 (/.f64 z t))))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))) (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (pow.f64 a 2)))))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 4))) (/.f64 1 (pow.f64 t 3)))) (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (pow.f64 a 2))))))","(/.f64 (+.f64 (*.f64 -1 t) z) a)","(-.f64 (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (/.f64 z a))) (/.f64 (pow.f64 t 2) (pow.f64 a 2)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 2) z) (pow.f64 a 3)) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (/.f64 z a)))) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 2)) (/.f64 (pow.f64 t 3) (pow.f64 a 3))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 2) z) (pow.f64 a 3)) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) z) (pow.f64 a 4)) (/.f64 z a))))) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 4) (pow.f64 a 4)) (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a))","(-.f64 (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a))) (/.f64 (pow.f64 t 2) (pow.f64 a 2)))","(-.f64 (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) z)) (*.f64 -1 (pow.f64 t 3))) (pow.f64 a 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a)))) (/.f64 (pow.f64 t 2) (pow.f64 a 2)))","(-.f64 (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) z)) (*.f64 -1 (pow.f64 t 3))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) z) (pow.f64 a 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a))))) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 2)) (/.f64 (pow.f64 t 4) (pow.f64 a 4))))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(/.f64 1 a)","(+.f64 (/.f64 t (pow.f64 a 2)) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a)))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 a 4)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a))))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3)))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3))))) (/.f64 1 t))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3)))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3))))) (/.f64 1 t))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3)))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3))))) (/.f64 1 t))","(/.f64 1 a)","(+.f64 (/.f64 t (pow.f64 a 2)) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a)))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 a 4)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a))))","(/.f64 1 a)","(+.f64 (/.f64 t (pow.f64 a 2)) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a)))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 a 4)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) x)","(+.f64 x (/.f64 (*.f64 y t) (-.f64 t a)))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a)))","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a)))","(/.f64 (*.f64 y z) (-.f64 a t))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) (*.f64 y t)) x))","(+.f64 (/.f64 (*.f64 y z) a) (fma.f64 (+.f64 (/.f64 (/.f64 z a) a) (/.f64 -1 a)) (*.f64 y t) x))","(+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2))))) (+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) (*.f64 y t)) x)))","(fma.f64 y (*.f64 (*.f64 t t) (-.f64 (*.f64 z (pow.f64 a -3)) (pow.f64 a -2))) (+.f64 (/.f64 (*.f64 y z) a) (fma.f64 (+.f64 (/.f64 (/.f64 z a) a) (/.f64 -1 a)) (*.f64 y t) x)))","(+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2))))) (+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 y (*.f64 (pow.f64 t 3) (-.f64 (/.f64 z (pow.f64 a 4)) (/.f64 1 (pow.f64 a 3))))) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) (*.f64 y t)) x))))","(fma.f64 y (*.f64 (*.f64 t t) (-.f64 (*.f64 z (pow.f64 a -3)) (pow.f64 a -2))) (+.f64 (/.f64 (*.f64 y z) a) (fma.f64 y (*.f64 (pow.f64 t 3) (-.f64 (/.f64 z (pow.f64 a 4)) (pow.f64 a -3))) (fma.f64 (+.f64 (/.f64 (/.f64 z a) a) (/.f64 -1 a)) (*.f64 y t) x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (-.f64 a z)) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) x)))","(+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 a z)) t) (+.f64 y x)) (/.f64 (*.f64 (neg.f64 (*.f64 a (-.f64 z a))) y) (*.f64 t t)))","(+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 z) (*.f64 -1 a))) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) z)) (*.f64 -1 (pow.f64 a 3))) y) (pow.f64 t 3)) (+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) x))))","(+.f64 (/.f64 (*.f64 y (-.f64 a z)) t) (+.f64 (*.f64 (*.f64 (*.f64 (*.f64 a a) (-.f64 a z)) y) (pow.f64 t -3)) (+.f64 y (+.f64 (/.f64 (*.f64 (neg.f64 (*.f64 a (-.f64 z a))) y) (*.f64 t t)) x))))","(+.f64 y x)","(+.f64 y (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 a z)) t) (+.f64 y x))","(+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x)))","(+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 a z)) t) (+.f64 y x)) (/.f64 (*.f64 (neg.f64 (*.f64 a (-.f64 z a))) y) (*.f64 t t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 a 2) z) (pow.f64 a 3)) y) (pow.f64 t 3))) (+.f64 y (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 a z)) (*.f64 -1 (pow.f64 a 2))) y) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z a)) t)) x))))","(+.f64 (/.f64 (*.f64 y (-.f64 a z)) t) (+.f64 (*.f64 (*.f64 (*.f64 (*.f64 a a) (-.f64 a z)) y) (pow.f64 t -3)) (+.f64 y (+.f64 (/.f64 (*.f64 (neg.f64 (*.f64 a (-.f64 z a))) y) (*.f64 t t)) x))))","(+.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y) x)","(fma.f64 (-.f64 1 (/.f64 z t)) y x)","(+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t)))) (+.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y)))","(fma.f64 y (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (fma.f64 (-.f64 1 (/.f64 z t)) y x))","(+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t)))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (*.f64 (pow.f64 a 2) y)) (+.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y))))","(+.f64 (*.f64 y (+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (*.f64 (-.f64 (pow.f64 t -2) (*.f64 z (pow.f64 t -3))) (*.f64 a a)))) (fma.f64 (-.f64 1 (/.f64 z t)) y x))","(+.f64 (*.f64 (pow.f64 a 3) (*.f64 y (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 4))) (/.f64 1 (pow.f64 t 3))))) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t)))) (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (*.f64 (pow.f64 a 2) y)) (+.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) y)))))","(fma.f64 (pow.f64 a 3) (*.f64 y (-.f64 (pow.f64 t -3) (/.f64 z (pow.f64 t 4)))) (+.f64 (*.f64 y (+.f64 (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))) (*.f64 (-.f64 (pow.f64 t -2) (*.f64 z (pow.f64 t -3))) (*.f64 a a)))) (fma.f64 (-.f64 1 (/.f64 z t)) y x)))","x","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 t) z)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 t) z)) a) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x))","(+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x) (*.f64 (*.f64 y (*.f64 t (-.f64 z t))) (pow.f64 a -2)))","(+.f64 (/.f64 (*.f64 (-.f64 (*.f64 (pow.f64 t 2) z) (pow.f64 t 3)) y) (pow.f64 a 3)) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1 t) z)) a) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x)))","(+.f64 (*.f64 (*.f64 (*.f64 (*.f64 t t) (-.f64 z t)) y) (pow.f64 a -3)) (+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x) (*.f64 (*.f64 y (*.f64 t (-.f64 z t))) (pow.f64 a -2))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 (*.f64 -1 z) t)) a)) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 (*.f64 -1 z) t)) a)) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x))","(+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x) (*.f64 (*.f64 y (*.f64 t (-.f64 z t))) (pow.f64 a -2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) z)) (*.f64 -1 (pow.f64 t 3)))) (pow.f64 a 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (+.f64 (*.f64 -1 z) t)) a)) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 t z) (pow.f64 t 2))) (pow.f64 a 2)) x)))","(+.f64 (*.f64 (*.f64 (*.f64 (*.f64 t t) (-.f64 z t)) y) (pow.f64 a -3)) (+.f64 (+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x) (*.f64 (*.f64 y (*.f64 t (-.f64 z t))) (pow.f64 a -2))))","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a)))))","(/.f64 (*.f64 y (-.f64 t z)) (-.f64 t a))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a)))))","(/.f64 (*.f64 y (-.f64 t z)) (-.f64 t a))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a)))))","(/.f64 (*.f64 y (-.f64 t z)) (-.f64 t a))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))) x)","(fma.f64 y (/.f64 (-.f64 t z) (-.f64 t a)) x)","(/.f64 t (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(*.f64 -1 (/.f64 z (-.f64 t a)))","(/.f64 z (-.f64 a t))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(*.f64 -1 (/.f64 z (-.f64 t a)))","(/.f64 z (-.f64 a t))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (/.f64 z (-.f64 t a))))","(/.f64 (-.f64 t z) (-.f64 t a))","(/.f64 z a)","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) t) (/.f64 z a))","(fma.f64 (+.f64 (/.f64 (/.f64 z a) a) (/.f64 -1 a)) t (/.f64 z a))","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) t) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2)))) (/.f64 z a)))","(fma.f64 (+.f64 (/.f64 (/.f64 z a) a) (/.f64 -1 a)) t (fma.f64 (*.f64 t t) (-.f64 (*.f64 z (pow.f64 a -3)) (pow.f64 a -2)) (/.f64 z a)))","(+.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 z (pow.f64 a 4)) (/.f64 1 (pow.f64 a 3)))) (+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 a 2)) (/.f64 1 a)) t) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 z (pow.f64 a 3)) (/.f64 1 (pow.f64 a 2)))) (/.f64 z a))))","(fma.f64 (pow.f64 t 3) (-.f64 (/.f64 z (pow.f64 a 4)) (pow.f64 a -3)) (fma.f64 (+.f64 (/.f64 (/.f64 z a) a) (/.f64 -1 a)) t (fma.f64 (*.f64 t t) (-.f64 (*.f64 z (pow.f64 a -3)) (pow.f64 a -2)) (/.f64 z a))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 z t))) (*.f64 -1 (/.f64 a t)))","(+.f64 1 (/.f64 (-.f64 a z) t))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2))))) (+.f64 (*.f64 -1 (/.f64 a t)) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(+.f64 (+.f64 (-.f64 (-.f64 1 (/.f64 z t)) (/.f64 (*.f64 a z) (*.f64 t t))) (/.f64 a t)) (pow.f64 (/.f64 a t) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 a 2) z) (pow.f64 t 3))) (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2)))))) (+.f64 (*.f64 -1 (/.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 3))))))","(+.f64 (-.f64 (-.f64 (-.f64 (*.f64 (neg.f64 (*.f64 (*.f64 a a) z)) (pow.f64 t -3)) (/.f64 z t)) (/.f64 (*.f64 a z) (*.f64 t t))) -1) (+.f64 (+.f64 (pow.f64 (/.f64 a t) 2) (/.f64 a t)) (pow.f64 (/.f64 a t) 3)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z a) t)))","(+.f64 1 (/.f64 (-.f64 a z) t))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2))))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 (-.f64 (+.f64 1 (/.f64 (-.f64 a z) t)) (/.f64 (*.f64 a z) (*.f64 t t))) (pow.f64 (/.f64 a t) 2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z a) t)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 (pow.f64 a 2) z) (pow.f64 a 3)) (pow.f64 t 3))) (*.f64 -1 (/.f64 (*.f64 a z) (pow.f64 t 2)))))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 (+.f64 (-.f64 (/.f64 (-.f64 a z) t) (/.f64 (*.f64 a z) (*.f64 t t))) (*.f64 (*.f64 (*.f64 a a) (-.f64 a z)) (pow.f64 t -3))) (+.f64 1 (pow.f64 (/.f64 a t) 2)))","(+.f64 1 (*.f64 -1 (/.f64 z t)))","(-.f64 1 (/.f64 z t))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))) (*.f64 -1 (/.f64 z t))))","(+.f64 (-.f64 1 (/.f64 z t)) (*.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t)))))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))) (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (pow.f64 a 2)))))","(+.f64 1 (fma.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t))) (-.f64 (*.f64 (-.f64 (pow.f64 t -2) (*.f64 z (pow.f64 t -3))) (*.f64 a a)) (/.f64 z t))))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 t 4))) (/.f64 1 (pow.f64 t 3)))) (+.f64 (*.f64 -1 (/.f64 z t)) (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 z (pow.f64 t 3)))) (pow.f64 a 2))))))","(+.f64 1 (fma.f64 a (-.f64 (/.f64 1 t) (/.f64 z (*.f64 t t))) (fma.f64 (pow.f64 a 3) (-.f64 (pow.f64 t -3) (/.f64 z (pow.f64 t 4))) (-.f64 (*.f64 (-.f64 (pow.f64 t -2) (*.f64 z (pow.f64 t -3))) (*.f64 a a)) (/.f64 z t)))))","(/.f64 (+.f64 (*.f64 -1 t) z) a)","(/.f64 (-.f64 z t) a)","(-.f64 (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (/.f64 z a))) (/.f64 (pow.f64 t 2) (pow.f64 a 2)))","(-.f64 (-.f64 (+.f64 (/.f64 (*.f64 t z) (*.f64 a a)) (/.f64 z a)) (/.f64 t a)) (pow.f64 (/.f64 t a) 2))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 2) z) (pow.f64 a 3)) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (/.f64 z a)))) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 2)) (/.f64 (pow.f64 t 3) (pow.f64 a 3))))","(-.f64 (+.f64 (*.f64 (*.f64 (*.f64 t t) z) (pow.f64 a -3)) (-.f64 (+.f64 (/.f64 (*.f64 t z) (*.f64 a a)) (/.f64 z a)) (/.f64 t a))) (+.f64 (pow.f64 (/.f64 t a) 2) (pow.f64 (/.f64 t a) 3)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 2) z) (pow.f64 a 3)) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) z) (pow.f64 a 4)) (/.f64 z a))))) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 4) (pow.f64 a 4)) (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (*.f64 (*.f64 (*.f64 t t) z) (pow.f64 a -3)) (-.f64 (+.f64 (-.f64 (+.f64 (/.f64 (*.f64 t z) (*.f64 a a)) (/.f64 z a)) (/.f64 t a)) (/.f64 (*.f64 (pow.f64 t 3) z) (pow.f64 a 4))) (+.f64 (+.f64 (pow.f64 (/.f64 t a) 2) (pow.f64 (/.f64 t a) 3)) (pow.f64 (pow.f64 (/.f64 t a) 2) 2))))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a))","(/.f64 (-.f64 z t) a)","(-.f64 (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a))) (/.f64 (pow.f64 t 2) (pow.f64 a 2)))","(-.f64 (+.f64 (/.f64 (*.f64 t z) (*.f64 a a)) (/.f64 (-.f64 z t) a)) (pow.f64 (/.f64 t a) 2))","(-.f64 (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) z)) (*.f64 -1 (pow.f64 t 3))) (pow.f64 a 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a)))) (/.f64 (pow.f64 t 2) (pow.f64 a 2)))","(-.f64 (+.f64 (+.f64 (/.f64 (*.f64 t z) (*.f64 a a)) (*.f64 (*.f64 (*.f64 t t) (-.f64 z t)) (pow.f64 a -3))) (/.f64 (-.f64 z t) a)) (pow.f64 (/.f64 t a) 2))","(-.f64 (+.f64 (/.f64 (*.f64 t z) (pow.f64 a 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) z)) (*.f64 -1 (pow.f64 t 3))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) z) (pow.f64 a 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 z) t) a))))) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 2)) (/.f64 (pow.f64 t 4) (pow.f64 a 4))))","(+.f64 (/.f64 (*.f64 t z) (*.f64 a a)) (-.f64 (+.f64 (*.f64 (*.f64 (*.f64 t t) (-.f64 z t)) (pow.f64 a -3)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) z) (pow.f64 a 4)) (/.f64 (-.f64 z t) a))) (+.f64 (pow.f64 (/.f64 t a) 2) (pow.f64 (pow.f64 (/.f64 t a) 2) 2))))","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(-.f64 (neg.f64 (/.f64 t a)) (pow.f64 (/.f64 t a) 2))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 t a) 2)) (pow.f64 (/.f64 t a) 3)) (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 t a) 2)) (pow.f64 (/.f64 t a) 3)) (/.f64 t a)) (pow.f64 (pow.f64 (/.f64 t a) 2) 2))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 a t) 2) (/.f64 a t)))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(+.f64 1 (+.f64 (+.f64 (pow.f64 (/.f64 a t) 2) (/.f64 a t)) (pow.f64 (/.f64 a t) 3)))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 a t) 2) (/.f64 a t)))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(+.f64 1 (+.f64 (+.f64 (pow.f64 (/.f64 a t) 2) (/.f64 a t)) (pow.f64 (/.f64 a t) 3)))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 1 (+.f64 (pow.f64 (/.f64 a t) 2) (/.f64 a t)))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(+.f64 1 (+.f64 (+.f64 (pow.f64 (/.f64 a t) 2) (/.f64 a t)) (pow.f64 (/.f64 a t) 3)))","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(-.f64 (neg.f64 (/.f64 t a)) (pow.f64 (/.f64 t a) 2))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 t a) 2)) (pow.f64 (/.f64 t a) 3)) (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 t a) 2)) (pow.f64 (/.f64 t a) 3)) (/.f64 t a)) (pow.f64 (pow.f64 (/.f64 t a) 2) 2))","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(-.f64 (neg.f64 (/.f64 t a)) (pow.f64 (/.f64 t a) 2))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 t a) 2)) (pow.f64 (/.f64 t a) 3)) (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (pow.f64 (/.f64 t a) 2)) (pow.f64 (/.f64 t a) 3)) (/.f64 t a)) (pow.f64 (pow.f64 (/.f64 t a) 2) 2))","(/.f64 1 a)","(+.f64 (/.f64 t (pow.f64 a 2)) (/.f64 1 a))","(+.f64 (/.f64 (/.f64 t a) a) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a)))","(+.f64 (+.f64 (/.f64 (/.f64 t a) a) (*.f64 (*.f64 t t) (pow.f64 a -3))) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 a 4)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a))))","(+.f64 (+.f64 (+.f64 (/.f64 (/.f64 t a) a) (*.f64 (*.f64 t t) (pow.f64 a -3))) (/.f64 1 a)) (/.f64 (pow.f64 t 3) (pow.f64 a 4)))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (/.f64 1 t))","(+.f64 (neg.f64 (/.f64 a (*.f64 t t))) (/.f64 -1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3)))) (/.f64 1 t))","(neg.f64 (+.f64 (/.f64 1 t) (+.f64 (/.f64 a (*.f64 t t)) (*.f64 (*.f64 a a) (pow.f64 t -3)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3))))) (/.f64 1 t))","(+.f64 (-.f64 (-.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 t -3)) (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (/.f64 a (*.f64 t t))) (/.f64 -1 t))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (/.f64 1 t))","(+.f64 (neg.f64 (/.f64 a (*.f64 t t))) (/.f64 -1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3)))) (/.f64 1 t))","(neg.f64 (+.f64 (/.f64 1 t) (+.f64 (/.f64 a (*.f64 t t)) (*.f64 (*.f64 a a) (pow.f64 t -3)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3))))) (/.f64 1 t))","(+.f64 (-.f64 (-.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 t -3)) (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (/.f64 a (*.f64 t t))) (/.f64 -1 t))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (/.f64 1 t))","(+.f64 (neg.f64 (/.f64 a (*.f64 t t))) (/.f64 -1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3)))) (/.f64 1 t))","(neg.f64 (+.f64 (/.f64 1 t) (+.f64 (/.f64 a (*.f64 t t)) (*.f64 (*.f64 a a) (pow.f64 t -3)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 a (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 t 3))))) (/.f64 1 t))","(+.f64 (-.f64 (-.f64 (*.f64 (neg.f64 (*.f64 a a)) (pow.f64 t -3)) (/.f64 (pow.f64 a 3) (pow.f64 t 4))) (/.f64 a (*.f64 t t))) (/.f64 -1 t))","(/.f64 1 a)","(+.f64 (/.f64 t (pow.f64 a 2)) (/.f64 1 a))","(+.f64 (/.f64 (/.f64 t a) a) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a)))","(+.f64 (+.f64 (/.f64 (/.f64 t a) a) (*.f64 (*.f64 t t) (pow.f64 a -3))) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 a 4)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a))))","(+.f64 (+.f64 (+.f64 (/.f64 (/.f64 t a) a) (*.f64 (*.f64 t t) (pow.f64 a -3))) (/.f64 1 a)) (/.f64 (pow.f64 t 3) (pow.f64 a 4)))","(/.f64 1 a)","(+.f64 (/.f64 t (pow.f64 a 2)) (/.f64 1 a))","(+.f64 (/.f64 (/.f64 t a) a) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a)))","(+.f64 (+.f64 (/.f64 (/.f64 t a) a) (*.f64 (*.f64 t t) (pow.f64 a -3))) (/.f64 1 a))","(+.f64 (/.f64 t (pow.f64 a 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 a 4)) (+.f64 (/.f64 (pow.f64 t 2) (pow.f64 a 3)) (/.f64 1 a))))","(+.f64 (+.f64 (+.f64 (/.f64 (/.f64 t a) a) (*.f64 (*.f64 t t) (pow.f64 a -3))) (/.f64 1 a)) (/.f64 (pow.f64 t 3) (pow.f64 a 4)))"]],"time":580.35205078125,"type":"simplify"},{"compiler":[[7233,2858]],"time":66.267822265625,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","done",2.8154222432019007],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","next",1.8981573393966362],["(fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) 2)) x)","fresh",13.61956904421518],["(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","fresh",7.57421875]],"compiler":[[15,9],[23,14],[31,15],[24,14],[23,14],[31,15],[24,14]],"count":[[329,4]],"kept":[{"done":[1,1],"fresh":[4,0],"new":[323,3],"picked":[1,0]}],"min-error":[0],"time":168.047119140625,"type":"prune"},{"compiler":[[72,32]],"locations":[["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))",0.10546875,true],["(cbrt.f64 (/.f64 -1 (-.f64 t a)))",0.11328125,true],["(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)",0.6759339844426088,true],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)",1.744023976973912,true]],"time":15.10302734375,"type":"localize"},{"count":[[4,112]],"series":[["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","a","-inf",0.2119140625],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","a","inf",0.19091796875],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","a","0",0.802001953125],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","t","-inf",0.1611328125],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","t","inf",0.1640625],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","t","0",0.965087890625],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","z","-inf",0.20703125],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","z","inf",0.178955078125],["(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))","z","0",0.22509765625],["(cbrt.f64 (/.f64 -1 (-.f64 t a)))","a","-inf",0.355224609375],["(cbrt.f64 (/.f64 -1 (-.f64 t a)))","a","inf",0.423095703125],["(cbrt.f64 (/.f64 -1 (-.f64 t a)))","a","0",0.4658203125],["(cbrt.f64 (/.f64 -1 (-.f64 t a)))","t","-inf",0.3740234375],["(cbrt.f64 (/.f64 -1 (-.f64 t a)))","t","inf",0.427978515625],["(cbrt.f64 (/.f64 -1 (-.f64 t a)))","t","0",0.614013671875],["(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)","a","-inf",1.653076171875],["(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)","a","inf",2.600830078125],["(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)","a","0",0.833984375],["(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)","t","-inf",4.772216796875],["(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)","t","inf",3.0419921875],["(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)","t","0",1.6328125],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","x","-inf",0.192138671875],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","x","inf",0.221923828125],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","x","0",1.054931640625],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","y","-inf",0.320068359375],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","y","inf",0.296875],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","y","0",1.1640625],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","a","-inf",0.291015625],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","a","inf",0.3681640625],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","a","0",4.14599609375],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","t","-inf",0.345947265625],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","t","inf",0.3701171875],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","t","0",4.50390625],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","z","-inf",0.412841796875],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","z","inf",0.400146484375],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","z","0",2.111083984375]],"time":37.33984375,"type":"series"},{"count":[[4,190]],"inputs":[["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","(pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3)","(cbrt.f64 (/.f64 -1 (-.f64 t a)))","(fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 0) (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) (*.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) (*.f64 0 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) (pow.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 2/3) (cbrt.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) (cbrt.f64 y)) (pow.f64 y 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) (*.f64 (pow.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 2/3) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) y) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 t a)) 0) (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (-.f64 t a)) 0) (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 t a)) (*.f64 (/.f64 -1 (-.f64 t a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (-.f64 t a))) (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 t a)) (*.f64 0 (/.f64 -1 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (-.f64 t a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (pow.f64 (-.f64 a t) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (cbrt.f64 (pow.f64 (-.f64 a t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (neg.f64 (pow.f64 (-.f64 t a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (+.f64 2 1/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 t a) -1/3) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (pow.f64 (-.f64 t a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (cbrt.f64 (pow.f64 (-.f64 t a) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 t a) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (pow.f64 (-.f64 t a) 2/3)) (*.f64 (-.f64 t a) (pow.f64 (-.f64 t a) -1/3))) (*.f64 (-.f64 t a) (pow.f64 (-.f64 t a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 a t)) (-.f64 a t)) (*.f64 (-.f64 t a) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 t a) -1/3) 1) (*.f64 (pow.f64 (-.f64 t a) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (pow.f64 (-.f64 t a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 t a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (pow.f64 (-.f64 t a) -1/3)) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) 1) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 t a) -1/3) (neg.f64 (pow.f64 (-.f64 t a) -1/3))) (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (pow.f64 (-.f64 a t) -2)))) (cbrt.f64 (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 t a) -1/3) (neg.f64 (pow.f64 (-.f64 t a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (-.f64 t a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 t a)) (-.f64 t a)) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 t a) -1/3) 1) (neg.f64 (pow.f64 (-.f64 t a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 a t) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 t a)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 t a)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 a t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 a t) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (-.f64 t a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) 0) (neg.f64 (pow.f64 (-.f64 t a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (*.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (pow.f64 (-.f64 t a) -1/3))) (neg.f64 (pow.f64 (-.f64 t a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (*.f64 0 (neg.f64 (pow.f64 (-.f64 t a) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (pow.f64 (-.f64 t a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (pow.f64 (-.f64 t a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (pow.f64 (-.f64 a t) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (pow.f64 (-.f64 t a) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (-.f64 t a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 t a) -1/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 t a) -1/3)) (cbrt.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (cbrt.f64 (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2))) -1) (cbrt.f64 (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 t a) -1/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)))) (cbrt.f64 (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))) (cbrt.f64 (pow.f64 (-.f64 t a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (cbrt.f64 (-.f64 t a))) (cbrt.f64 (-.f64 t a))) (pow.f64 (-.f64 t a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 a t) -2)))) (cbrt.f64 (cbrt.f64 (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 t a)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (-.f64 t a) -1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 a t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (-.f64 t a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (-.f64 t a) -1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 -1 (-.f64 t a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 0) (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) (*.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) (*.f64 0 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) (pow.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 2/3) (cbrt.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) (+.f64 (neg.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) (+.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t a)) (+.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 t a)) (+.f64 (neg.f64 t) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (pow.f64 (-.f64 t a) 2/3)) (*.f64 (-.f64 a t) (/.f64 t (cbrt.f64 (-.f64 t a))))) (*.f64 (-.f64 a t) (pow.f64 (-.f64 t a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (-.f64 t a)) (*.f64 (-.f64 a t) t)) (*.f64 (-.f64 a t) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 z) (pow.f64 (-.f64 t a) 2/3)) (*.f64 (-.f64 t a) (/.f64 t (cbrt.f64 (-.f64 t a))))) (*.f64 (-.f64 t a) (pow.f64 (-.f64 t a) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 z) (-.f64 a t)) (*.f64 (-.f64 t a) (neg.f64 t))) (*.f64 (-.f64 t a) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (-.f64 a t)) (*.f64 (-.f64 t a) z)) (*.f64 (-.f64 t a) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) (-.f64 t a)) (*.f64 (pow.f64 (-.f64 t a) 2/3) (neg.f64 z))) (*.f64 (pow.f64 (-.f64 t a) 2/3) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 t (cbrt.f64 (-.f64 t a))) (-.f64 a t)) (*.f64 (pow.f64 (-.f64 t a) 2/3) z)) (*.f64 (pow.f64 (-.f64 t a) 2/3) (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (-.f64 t a)) (*.f64 (-.f64 a t) (neg.f64 z))) (*.f64 (-.f64 a t) (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 t) z) (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 z) t) (-.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 z (neg.f64 t)) (-.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z (-.f64 a t)) (*.f64 (-.f64 a t) (neg.f64 t))) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 z) (-.f64 t a)) (*.f64 (-.f64 t a) t)) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 t (-.f64 t a)) (*.f64 (-.f64 t a) (neg.f64 z))) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 t) (-.f64 a t)) (*.f64 (-.f64 a t) z)) (pow.f64 (-.f64 t a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 t (-.f64 a t)) (/.f64 z (-.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 z (-.f64 t a)) (/.f64 t (-.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 t (neg.f64 z)) (-.f64 t a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 t (-.f64 a t)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 1 (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (/.f64 (pow.f64 t 2/3) (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 t (-.f64 t a))) (pow.f64 (/.f64 t (-.f64 t a)) 2/3) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 t a) -1/3) (/.f64 t (pow.f64 (-.f64 t a) 2/3)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 t (-.f64 t a)) 2/3) (cbrt.f64 (/.f64 t (-.f64 t a))) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) (/.f64 -1 (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 t a)) t (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (pow.f64 (-.f64 t a) 2/3)) (neg.f64 (pow.f64 (-.f64 t a) -1/3)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 1 (-.f64 t a)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 t a)) z (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (/.f64 (pow.f64 z 2/3) (-.f64 a t)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 z (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 a t)) 2)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (cbrt.f64 (-.f64 a t))) (cbrt.f64 (pow.f64 (-.f64 a t) -2)) (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (-.f64 a t)) 1 (/.f64 t (-.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (-.f64 t a)) 1 (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 t (-.f64 t a)) (/.f64 z (-.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (-.f64 a t)) (/.f64 t (-.f64 t a)))))))"]],"rules":[["egg-rr",66],["egg-rr",34],["egg-rr",54],["egg-rr",36]],"time":39.30615234375,"type":"rewrite"},{"count":[[302,303]],"inputs":[["(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3)))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a))))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a)))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a)))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a)))) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a)) x)","(+.f64 (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) (*.f64 y t)) (+.f64 x (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a))))","(+.f64 (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) (*.f64 y t)) (+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2))))) (+.f64 x (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a)))))","(+.f64 (*.f64 y (*.f64 (pow.f64 t 3) (-.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 1 (pow.f64 a 4)))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (pow.f64 (cbrt.f64 -1) 1/3)))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))))))) z) (/.f64 1 (pow.f64 a 3))))) (+.f64 (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) (*.f64 y t)) (+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2))))) (+.f64 x (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a))))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 a y) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 3) y) (pow.f64 t 3)) x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 a y) t) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 a y) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 3)) x))))","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) x)","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t)))) x))","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (*.f64 (pow.f64 a 2) y)) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t)))) x)))","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) (+.f64 (*.f64 y (*.f64 (pow.f64 a 3) (+.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))))))))) z)))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (*.f64 (pow.f64 a 2) y)) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t)))) x))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x)))","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a)) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))))))","(+.f64 (*.f64 (pow.f64 t 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 1 (pow.f64 a 4)))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (pow.f64 (cbrt.f64 -1) 1/3)))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))))))))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t))) (*.f64 a (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t))) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)))))))) (*.f64 a (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t))) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)))))))) (+.f64 (*.f64 a (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)))) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))))))))) (pow.f64 a 3)))))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) t))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (cbrt.f64 -1)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) t)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (cbrt.f64 -1)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (pow.f64 t 3)) (cbrt.f64 -1)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) t))))))","(*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 a (cbrt.f64 -1)))) (*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 a (cbrt.f64 -1)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (*.f64 (pow.f64 a 2) (cbrt.f64 -1))))) (*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 a (cbrt.f64 -1)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (*.f64 (pow.f64 a 2) (cbrt.f64 -1))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 a 3) (*.f64 (cbrt.f64 -1) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))))))","(/.f64 t (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a)) (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) t))","(+.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a)) (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) t)))","(+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 1 (pow.f64 a 4)))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (pow.f64 (cbrt.f64 -1) 1/3)))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))))))) z) (/.f64 1 (pow.f64 a 3)))) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a)) (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) t))))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t)))))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (pow.f64 a 2)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))))","(+.f64 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))))))))) z))) (+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (pow.f64 a 2)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t)))))))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(*.f64 -1 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3)))","(neg.f64 (/.f64 (*.f64 y z) (-.f64 t a)))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (/.f64 (*.f64 y z) (-.f64 t a)) (pow.f64 1 1/3))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a))))","(neg.f64 (/.f64 (*.f64 y z) (-.f64 t a)))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a)))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a)))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) (-.f64 t a)))) x))","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a)) x)","(+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 -1 6) z)) a) x)","(+.f64 (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) (*.f64 y t)) (+.f64 x (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a))))","(fma.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1) (neg.f64 (/.f64 1 a))) (*.f64 y t) (+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 -1 6) z)) a) x))","(+.f64 (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) (*.f64 y t)) (+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2))))) (+.f64 x (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a)))))","(fma.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1) (neg.f64 (/.f64 1 a))) (*.f64 y t) (fma.f64 y (*.f64 (*.f64 t t) (fma.f64 z (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (pow.f64 -1 8))) (fma.f64 1/3 (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))) (*.f64 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 -1 -1)) (cbrt.f64 (/.f64 1 a))))) (neg.f64 (pow.f64 a -2)))) (+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 -1 6) z)) a) x)))","(+.f64 (*.f64 y (*.f64 (pow.f64 t 3) (-.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 1 (pow.f64 a 4)))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (pow.f64 (cbrt.f64 -1) 1/3)))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))))))) z) (/.f64 1 (pow.f64 a 3))))) (+.f64 (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) (*.f64 y t)) (+.f64 (*.f64 y (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2))))) (+.f64 x (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 -1) 6) z)) a))))))","(fma.f64 y (*.f64 (pow.f64 t 3) (fma.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 4)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (fma.f64 1/3 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 a -16)) (pow.f64 -1 -2)) (pow.f64 a -4))) (fma.f64 -1/3 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 (pow.f64 (pow.f64 a -16) 1/9) -1)) (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 -1 -1) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 a -16)) (pow.f64 -1 -2)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (pow.f64 a -4)))) -1) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -10) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -2)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))))))))) z (neg.f64 (pow.f64 a -3)))) (fma.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1) (neg.f64 (/.f64 1 a))) (*.f64 y t) (fma.f64 y (*.f64 (*.f64 t t) (fma.f64 z (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (pow.f64 -1 8))) (fma.f64 1/3 (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))) (*.f64 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 -1 -1)) (cbrt.f64 (/.f64 1 a))))) (neg.f64 (pow.f64 a -2)))) (+.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 -1 6) z)) a) x))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 a y) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 a y) t) (+.f64 (/.f64 (*.f64 y (*.f64 a a)) (*.f64 t t)) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 a 3) y) (pow.f64 t 3)) x))))","(+.f64 (+.f64 (/.f64 (*.f64 a y) t) y) (+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 a 3) y) (pow.f64 t 3)) x) (/.f64 (*.f64 y (*.f64 a a)) (*.f64 t t))))","(+.f64 y x)","(+.f64 (/.f64 (*.f64 y a) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 a y) t) (+.f64 y x))","(+.f64 (/.f64 (*.f64 y (pow.f64 a 2)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 a y) t) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 y (*.f64 a a)) (*.f64 t t)) (+.f64 (/.f64 (*.f64 a y) t) (+.f64 y x)))","(+.f64 (/.f64 (*.f64 a y) t) (+.f64 y (+.f64 (/.f64 (*.f64 (pow.f64 a 2) y) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 a 3)) (pow.f64 t 3)) x))))","(+.f64 (+.f64 (/.f64 (*.f64 a y) t) y) (+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 a 3) y) (pow.f64 t 3)) x) (/.f64 (*.f64 y (*.f64 a a)) (*.f64 t t))))","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) x)","(fma.f64 y (+.f64 1 (neg.f64 (/.f64 z t))) x)","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t)))) x))","(fma.f64 y (+.f64 1 (neg.f64 (/.f64 z t))) (fma.f64 y (*.f64 a (fma.f64 (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1) z (/.f64 1 t))) x))","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (*.f64 (pow.f64 a 2) y)) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t)))) x)))","(fma.f64 y (+.f64 1 (neg.f64 (/.f64 z t))) (fma.f64 (fma.f64 (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1)))) -1) (fma.f64 -2/9 (pow.f64 (pow.f64 t -35) 1/9) (*.f64 -1/3 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))) z (pow.f64 t -2)) (*.f64 y (*.f64 a a)) (fma.f64 y (*.f64 a (fma.f64 (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1) z (/.f64 1 t))) x)))","(+.f64 (*.f64 y (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))) (+.f64 (*.f64 y (*.f64 (pow.f64 a 3) (+.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))))))))) z)))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (*.f64 (pow.f64 a 2) y)) (+.f64 (*.f64 y (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t)))) x))))","(fma.f64 y (+.f64 1 (neg.f64 (/.f64 z t))) (fma.f64 y (*.f64 (pow.f64 a 3) (+.f64 (pow.f64 t -3) (*.f64 (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 t -10) 1/9) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1))) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (*.f64 -1 -1) (-.f64 (pow.f64 t -4) (fma.f64 1/27 (cbrt.f64 (pow.f64 t -16)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))))))) -1) (fma.f64 -1/3 (-.f64 (pow.f64 t -4) (fma.f64 1/27 (cbrt.f64 (pow.f64 t -16)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))))))) (fma.f64 -2/9 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 t -16) 1/9) -1) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1))))))))) z))) (fma.f64 (fma.f64 (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1)))) -1) (fma.f64 -2/9 (pow.f64 (pow.f64 t -35) 1/9) (*.f64 -1/3 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))) z (pow.f64 t -2)) (*.f64 y (*.f64 a a)) (fma.f64 y (*.f64 a (fma.f64 (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1) z (/.f64 1 t))) x))))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 t t)) (*.f64 a a))) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 t t)) (*.f64 a a))) x)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 t t)) (*.f64 a a))) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 a 2))) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (+.f64 (neg.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 a 3))) (+.f64 (neg.f64 (/.f64 (*.f64 y (*.f64 t t)) (*.f64 a a))) x)))","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))))","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))))","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))))","(*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))))","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","x","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(+.f64 (*.f64 y (+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))) x)","(fma.f64 y (+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a)))) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a))","(/.f64 (pow.f64 -1 6) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a)) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))))","(+.f64 (/.f64 (pow.f64 -1 6) a) (*.f64 t (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))))))","(+.f64 (/.f64 (pow.f64 -1 6) a) (fma.f64 (*.f64 t t) (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (pow.f64 -1 8))) (fma.f64 1/3 (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))) (*.f64 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 -1 -1)) (cbrt.f64 (/.f64 1 a))))) (*.f64 t (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1))))","(+.f64 (*.f64 (pow.f64 t 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 1 (pow.f64 a 4)))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (pow.f64 (cbrt.f64 -1) 1/3)))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))))))))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 (cbrt.f64 -1) 6) a)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))))))","(fma.f64 (pow.f64 t 3) (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 4)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (fma.f64 1/3 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 a -16)) (pow.f64 -1 -2)) (pow.f64 a -4))) (fma.f64 -1/3 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 (pow.f64 (pow.f64 a -16) 1/9) -1)) (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 -1 -1) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 a -16)) (pow.f64 -1 -2)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (pow.f64 a -4)))) -1) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -10) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -2)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))))))))) (+.f64 (/.f64 (pow.f64 -1 6) a) (fma.f64 (*.f64 t t) (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (pow.f64 -1 8))) (fma.f64 1/3 (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))) (*.f64 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 -1 -1)) (cbrt.f64 (/.f64 1 a))))) (*.f64 t (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1)))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t)))","(neg.f64 (/.f64 1 t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t))) (*.f64 a (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)))))","(+.f64 (neg.f64 (/.f64 1 t)) (*.f64 a (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t))) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)))))))) (*.f64 a (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))))))","(+.f64 (neg.f64 (/.f64 1 t)) (fma.f64 (*.f64 a a) (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1)))) -1) (fma.f64 -2/9 (pow.f64 (pow.f64 t -35) 1/9) (*.f64 -1/3 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))) (*.f64 a (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 1 t))) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)))))))) (+.f64 (*.f64 a (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)))) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))))))))) (pow.f64 a 3)))))","(+.f64 (neg.f64 (/.f64 1 t)) (fma.f64 (*.f64 a a) (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1)))) -1) (fma.f64 -2/9 (pow.f64 (pow.f64 t -35) 1/9) (*.f64 -1/3 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))) (fma.f64 a (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1) (*.f64 (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 t -10) 1/9) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1))) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (*.f64 -1 -1) (-.f64 (pow.f64 t -4) (fma.f64 1/27 (cbrt.f64 (pow.f64 t -16)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))))))) -1) (fma.f64 -1/3 (-.f64 (pow.f64 t -4) (fma.f64 1/27 (cbrt.f64 (pow.f64 t -16)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))))))) (fma.f64 -2/9 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 t -16) 1/9) -1) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1))))))))) (pow.f64 a 3)))))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 -1 -1))","(+.f64 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) t))))","(fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 -1 -1) (*.f64 (*.f64 -1/3 (pow.f64 (pow.f64 a -16) 1/9)) (*.f64 -1 t)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (cbrt.f64 -1)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) t)))))","(fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 t t) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) -1) (fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 -1 -1) (*.f64 (*.f64 -1/3 (pow.f64 (pow.f64 a -16) 1/9)) (*.f64 -1 t))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (cbrt.f64 -1)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 a) 1/3) (pow.f64 (cbrt.f64 -1) 2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 a 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (pow.f64 t 3)) (cbrt.f64 -1)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) t))))))","(fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 t t) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) -1) (fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 -1 -1) (*.f64 -1/3 (+.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 a -16)) (pow.f64 -1 -2)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (pow.f64 a -4))) (pow.f64 t 3))) -1) (*.f64 (pow.f64 (pow.f64 a -16) 1/9) (*.f64 -1 t))))))","(*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (/.f64 1 t)) -1)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 a (cbrt.f64 -1)))) (*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1)))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 t -16) 1/9) (*.f64 a -1)) (*.f64 (cbrt.f64 (/.f64 1 t)) -1))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 a (cbrt.f64 -1)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (*.f64 (pow.f64 a 2) (cbrt.f64 -1))))) (*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 t -16) 1/9) (*.f64 a -1)) (fma.f64 1/3 (*.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 (*.f64 a a) -1))) (*.f64 (cbrt.f64 (/.f64 1 t)) -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 a (cbrt.f64 -1)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (*.f64 (pow.f64 a 2) (cbrt.f64 -1))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 t 2)) 1/3) (*.f64 (pow.f64 a 3) (*.f64 (cbrt.f64 -1) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 t -16) 1/9) (*.f64 a -1)) (fma.f64 1/3 (*.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 (*.f64 a a) -1))) (fma.f64 (cbrt.f64 (/.f64 1 t)) -1 (*.f64 (*.f64 1/3 (cbrt.f64 (*.f64 t t))) (*.f64 (*.f64 (pow.f64 a 3) -1) (-.f64 (pow.f64 t -4) (fma.f64 1/27 (cbrt.f64 (pow.f64 t -16)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))))))))))))","(/.f64 t (-.f64 t a))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a))))","(neg.f64 (/.f64 z (-.f64 t a)))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 t a)))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3)))","(neg.f64 (/.f64 z (-.f64 t a)))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(+.f64 (/.f64 t (-.f64 t a)) (*.f64 -1 (*.f64 (/.f64 z (-.f64 t a)) (pow.f64 1 1/3))))","(+.f64 (/.f64 t (-.f64 t a)) (neg.f64 (/.f64 z (-.f64 t a))))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a))","(/.f64 (*.f64 (pow.f64 -1 6) z) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a)) (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) t))","(+.f64 (/.f64 (*.f64 (pow.f64 -1 6) z) a) (*.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1) (neg.f64 (/.f64 1 a))) t))","(+.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a)) (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) t)))","(fma.f64 (*.f64 t t) (fma.f64 z (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (pow.f64 -1 8))) (fma.f64 1/3 (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))) (*.f64 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 -1 -1)) (cbrt.f64 (/.f64 1 a))))) (neg.f64 (pow.f64 a -2))) (+.f64 (/.f64 (*.f64 (pow.f64 -1 6) z) a) (*.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1) (neg.f64 (/.f64 1 a))) t)))","(+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 1 (pow.f64 a 4)))))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 16)) 1/9) (pow.f64 (cbrt.f64 -1) 1/3)))) (*.f64 (pow.f64 (/.f64 1 a) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 a 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 13)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (/.f64 1 (pow.f64 a 4)))) (cbrt.f64 -1)))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 10)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))))))))) z) (/.f64 1 (pow.f64 a 3)))) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 z (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))) (*.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 a) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 a 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))))))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 1 a) 1/3))))) (/.f64 1 (pow.f64 a 2)))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 6) z) a)) (*.f64 (-.f64 (*.f64 z (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 a 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))))) (/.f64 1 a)) t))))","(fma.f64 (pow.f64 t 3) (fma.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 4)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (fma.f64 1/3 (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 a -16)) (pow.f64 -1 -2)) (pow.f64 a -4))) (fma.f64 -1/3 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 (pow.f64 (pow.f64 a -16) 1/9) -1)) (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 -1 -1) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 a -16)) (pow.f64 -1 -2)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 a -13) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (pow.f64 a -4)))) -1) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -10) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -2)) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))))))))) z (neg.f64 (pow.f64 a -3))) (fma.f64 (*.f64 t t) (fma.f64 z (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (pow.f64 -1 8))) (fma.f64 1/3 (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1))))) (*.f64 (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 a -32) 1/9) (cbrt.f64 (*.f64 -1 -1))) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 a) -1) (+.f64 (pow.f64 a -3) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 a -35) 1/9) (cbrt.f64 (/.f64 1 -1)))))))) (*.f64 -1 -1)) (cbrt.f64 (/.f64 1 a))))) (neg.f64 (pow.f64 a -2))) (+.f64 (/.f64 (*.f64 (pow.f64 -1 6) z) a) (*.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (pow.f64 a -22) 1/9) (cbrt.f64 (pow.f64 -1 13))) -1) (neg.f64 (/.f64 1 a))) t))))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (*.f64 a a) (*.f64 t t))))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(+.f64 (*.f64 (pow.f64 a 3) (pow.f64 t -3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (*.f64 a a) (*.f64 t t)))))","1","(+.f64 1 (/.f64 a t))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2))))","(+.f64 1 (+.f64 (/.f64 a t) (/.f64 (*.f64 a a) (*.f64 t t))))","(+.f64 (/.f64 (pow.f64 a 3) (pow.f64 t 3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (pow.f64 a 2) (pow.f64 t 2)))))","(+.f64 (*.f64 (pow.f64 a 3) (pow.f64 t -3)) (+.f64 1 (+.f64 (/.f64 a t) (/.f64 (*.f64 a a) (*.f64 t t)))))","(+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))","(+.f64 1 (neg.f64 (/.f64 z t)))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t)))))","(+.f64 1 (fma.f64 a (fma.f64 (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1) z (/.f64 1 t)) (neg.f64 (/.f64 z t))))","(+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (pow.f64 a 2)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t))))))","(+.f64 1 (fma.f64 a (fma.f64 (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1) z (/.f64 1 t)) (fma.f64 (fma.f64 (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1)))) -1) (fma.f64 -2/9 (pow.f64 (pow.f64 t -35) 1/9) (*.f64 -1/3 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))) z (pow.f64 t -2)) (*.f64 a a) (neg.f64 (/.f64 z t)))))","(+.f64 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 4)) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 16)) 1/9) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))))))))) z))) (+.f64 1 (+.f64 (*.f64 a (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9)) (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 t 22)) 1/9))) z) (/.f64 1 t))) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 t) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 t 32)) 1/9) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 t) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))) (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1))) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9)) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 t 35)) 1/9))))))) z) (/.f64 1 (pow.f64 t 2))) (pow.f64 a 2)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z t)))))))","(fma.f64 (pow.f64 a 3) (+.f64 (pow.f64 t -3) (*.f64 (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 t -10) 1/9) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1))) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (*.f64 -1 -1) (-.f64 (pow.f64 t -4) (fma.f64 1/27 (cbrt.f64 (pow.f64 t -16)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))))))) -1) (fma.f64 -1/3 (-.f64 (pow.f64 t -4) (fma.f64 1/27 (cbrt.f64 (pow.f64 t -16)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))))))) (fma.f64 -2/9 (*.f64 (pow.f64 (pow.f64 t -13) 1/9) (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 t -16) 1/9) -1) (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1))))))))) z)) (+.f64 1 (fma.f64 a (fma.f64 (*.f64 (pow.f64 (pow.f64 t -22) 1/9) -1) z (/.f64 1 t)) (fma.f64 (fma.f64 (fma.f64 (cbrt.f64 (/.f64 1 t)) (*.f64 (fma.f64 1/9 (*.f64 (pow.f64 (pow.f64 t -32) 1/9) (*.f64 -1 -1)) (*.f64 (*.f64 2/3 (cbrt.f64 t)) (*.f64 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9))) (*.f64 -1 -1)))) -1) (fma.f64 -2/9 (pow.f64 (pow.f64 t -35) 1/9) (*.f64 -1/3 (+.f64 (pow.f64 t -3) (*.f64 -1/3 (pow.f64 (pow.f64 t -35) 1/9)))))) z (pow.f64 t -2)) (*.f64 a a) (neg.f64 (/.f64 z t))))))","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(+.f64 (neg.f64 (/.f64 t a)) (neg.f64 (/.f64 (*.f64 t t) (*.f64 a a))))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (neg.f64 (/.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 t t) (*.f64 a a))) (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 a -3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(+.f64 (neg.f64 (*.f64 (pow.f64 t 4) (pow.f64 a -4))) (+.f64 (neg.f64 (/.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 t t) (*.f64 a a))) (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 a -3))))))","(*.f64 -1 (/.f64 t a))","(neg.f64 (/.f64 t a))","(+.f64 (*.f64 -1 (/.f64 t a)) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))))","(+.f64 (neg.f64 (/.f64 t a)) (neg.f64 (/.f64 (*.f64 t t) (*.f64 a a))))","(+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3)))))","(+.f64 (neg.f64 (/.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 t t) (*.f64 a a))) (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 a -3)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 t 4) (pow.f64 a 4))) (+.f64 (*.f64 -1 (/.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 a 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 a 3))))))","(+.f64 (neg.f64 (*.f64 (pow.f64 t 4) (pow.f64 a -4))) (+.f64 (neg.f64 (/.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 t t) (*.f64 a a))) (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 a -3))))))"]],"time":363.14794921875,"type":"simplify"},{"compiler":[[12224,7912]],"time":138.429931640625,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","done",2.8154222432019007],["(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","done",1.8981573393966362],["(fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) 2)) x)","fresh",13.61956904421518],["(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","fresh",7.57421875]],"compiler":[[15,9],[23,14],[31,15],[23,13]],"count":[[307,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[303,1],"picked":[1,1]}],"min-error":[0],"time":124.816162109375,"type":"prune"},{"accuracy":[0.2994672514806582],"baseline":[1.7994672514806582],"branch":[["x",1.7994672514806582,1],["y",0.2994672514806582,3],["z",1.7994672514806582,1],["t",0.55078125,3],["a",1.7994672514806582,1],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))",0.7955610014806582,2],["(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))",0.5455610014806582,2]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[16,10],[14,9],[249,85]],"count":[[14,3]],"inputs":[["(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 (fma.f64 z (pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) 3) (/.f64 t (-.f64 t a))) y x)","(fma.f64 (cbrt.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (+.f64 (neg.f64 t) z) (-.f64 a t)) y) 2)) x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","(fma.f64 (fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 t a))) (/.f64 z (cbrt.f64 (pow.f64 (-.f64 a t) 2))) (/.f64 t (-.f64 t a))) y x)","(fma.f64 (fma.f64 (cbrt.f64 (/.f64 z (-.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 z (-.f64 a t)) 2)) (/.f64 t (-.f64 t a))) y x)","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)","(fma.f64 (-.f64 z t) (*.f64 y (/.f64 -1 (-.f64 t a))) x)","(+.f64 (/.f64 (*.f64 y z) (-.f64 a t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 a t))) x))","(fma.f64 (-.f64 z t) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 a t)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 a t))) x)","(fma.f64 (-.f64 z t) (/.f64 y (-.f64 a t)) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))"]],"link":["."],"name":["Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTicks from plot-0.2.3.4, B"],"oracle":[24.983918196600612],"outputs":[["(fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x)","(+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x))","(fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)"]],"time":67.796875,"times":[["x",5.412109375],["y",14.6611328125],["z",5.19287109375],["t",14.699951171875],["a",5.2890625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t)))",9.544921875],["(/.f64 (*.f64 y (-.f64 z t)) (-.f64 a t))",8.905029296875]],"type":"regimes"},{"bstep":[[5.496840460686529e-136,7.367279389902865e-131,10.802978515625],[-1.6245718036745385e-60,-2.3765707609200195e-62,10.836181640625]],"compiler":[[18,12],[6,5]],"method":["binary-search","binary-search"],"time":21.825927734375,"type":"bsearch"},{"compiler":[[56,28]],"inputs":[["(if (<=.f64 y -1469629400496171/904625697166532776746648320380374280103671755200316906558262375061821325312) (fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x) (if (<=.f64 y 3598661187422957/6546781215792283740026379393655198304433284092086129578966582736192267592809349109766540184651808314301773368255120142018434513091770786106657055178752) (+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x)) (fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 y -1469629400496171/904625697166532776746648320380374280103671755200316906558262375061821325312) (fma.f64 (fma.f64 z (/.f64 -1 (-.f64 t a)) (/.f64 t (-.f64 t a))) y x) (if (<=.f64 y 3598661187422957/6546781215792283740026379393655198304433284092086129578966582736192267592809349109766540184651808314301773368255120142018434513091770786106657055178752) (+.f64 (/.f64 (*.f64 y t) (-.f64 t a)) (+.f64 (neg.f64 (/.f64 (*.f64 y z) (-.f64 t a))) x)) (fma.f64 (/.f64 (-.f64 z t) (-.f64 a t)) y x)))","(if (<=.f64 y -1469629400496171/904625697166532776746648320380374280103671755200316906558262375061821325312) (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) (if (<=.f64 y 3598661187422957/6546781215792283740026379393655198304433284092086129578966582736192267592809349109766540184651808314301773368255120142018434513091770786106657055178752) (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x) (fma.f64 (/.f64 (-.f64 t z) (-.f64 t a)) y x)))"]],"stop":[["fuel",1]],"time":25.68896484375,"type":"simplify"},{"time":0.037109375,"type":"soundness"},{"compiler":[[56,28]],"remove-preprocessing":[[]],"time":16.9541015625,"type":"end"}]