[{"compiler":[[15,11]],"method":["search"],"sampling":[[12,0.9975595474243164,0.0019521713256835938,0.00048828125],[11,0.9956073760986328,0.0039043426513671875,0.00048828125],[10,0.9917030334472656,0.007808685302734375,0.00048828125],[9,0.9838943481445313,0.01561737060546875,0.00048828125],[8,0.9682769775390625,0.0312347412109375,0.00048828125],[7,0.937042236328125,0.062469482421875,0.00048828125],[6,0.87457275390625,0.12493896484375,0.00048828125],[5,0.7496337890625,0.2498779296875,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.0,0.99951171875,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":3.06103515625,"type":"analyze"},{"outcomes":[["body",512,"valid",77.358642578125,1085],["body",1024,"valid",210.284912109375,2017],["body",256,"valid",197.0673828125,4968],["body",2048,"valid",25.737060546875,186]],"time":518.510986328125,"type":"sample"},{"compiler":[[14,10]],"inputs":[["0"],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))"]],"symmetry":[[]],"time":54.44287109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))"]],"time":21.05419921875,"type":"simplify"},{"compiler":[[27,19]],"time":0.44384765625,"type":"eval"},{"alts":[["(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))","next",27.185551827362957]],"compiler":[[14,10],[14,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[27.185551827362957],"time":1.816162109375,"type":"prune"},{"compiler":[[34,23]],"locations":[["(/.f64 x (+.f64 1 x))",0.00390625,true],["(/.f64 (+.f64 1 x) (-.f64 1 x))",0.01171875,true],["(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))",2.658870357189796,true]],"time":8.118896484375,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 x (+.f64 1 x))","x","-inf",0.1748046875],["(/.f64 x (+.f64 1 x))","x","inf",0.216064453125],["(/.f64 x (+.f64 1 x))","x","0",0.18603515625],["(/.f64 (+.f64 1 x) (-.f64 1 x))","x","-inf",0.18798828125],["(/.f64 (+.f64 1 x) (-.f64 1 x))","x","inf",0.240966796875],["(/.f64 (+.f64 1 x) (-.f64 1 x))","x","0",0.2060546875],["(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))","x","-inf",0.317138671875],["(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))","x","inf",0.48193359375],["(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))","x","0",0.35107421875]],"time":2.490966796875,"type":"series"},{"count":[[3,193]],"inputs":[["(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))","(/.f64 (+.f64 1 x) (-.f64 1 x))","(/.f64 x (+.f64 1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 0) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (*.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (*.f64 0 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (/.f64 x (-.f64 -1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (fma.f64 x x x) (*.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (+.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 (fma.f64 x x x) (*.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (+.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (/.f64 -1 (*.f64 (+.f64 1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 2)) (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (*.f64 (+.f64 1 x) (+.f64 -1 x))) (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 1 x) 2))) (/.f64 1 (*.f64 (+.f64 1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 1 x) 2))) 1) (*.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (cbrt.f64 (+.f64 1 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (cbrt.f64 (*.f64 (-.f64 -1 x) (+.f64 -1 x)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 -1 x) (+.f64 -1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (+.f64 1 x) (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))))) (*.f64 (+.f64 1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))) (*.f64 (+.f64 1 x) (+.f64 1 (pow.f64 x 3)))) (*.f64 (+.f64 1 x) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (fma.f64 x (+.f64 -1 x) 1)) (*.f64 (-.f64 -1 x) (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)))) (*.f64 (-.f64 -1 x) (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (-.f64 -1 x) (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))))) (*.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))) (*.f64 (-.f64 -1 x) (+.f64 1 (pow.f64 x 3)))) (*.f64 (-.f64 -1 x) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (-.f64 1 x)) (pow.f64 (cbrt.f64 (+.f64 1 x)) (+.f64 2 3))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (+.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 -1 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (fma.f64 x (+.f64 -1 x) 1)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (+.f64 1 (pow.f64 x 3)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (+.f64 -1 x) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (+.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) (-.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) (+.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 -1 x)) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)) (neg.f64 x))) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)) (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 x) (+.f64 1 (pow.f64 x 3))) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)) x)) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) (+.f64 2 3)) (*.f64 (-.f64 1 x) (/.f64 x (cbrt.f64 (+.f64 1 x))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (*.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x)) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x)) 1) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 2))) (cbrt.f64 (*.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (-.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x)) -1) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x)) (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 1 x) 2))) (+.f64 -1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (*.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x)))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 1 x) 2))) (-.f64 1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 1 x) 2))) (+.f64 1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (fma.f64 x (+.f64 -1 x) 1)) (*.f64 (+.f64 1 x) (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)))) (+.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) (-.f64 -1 x)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (neg.f64 x))) (+.f64 -1 (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) (+.f64 1 x)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) x)) (+.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x))) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (+.f64 1 x)) (-.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (/.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x (-.f64 1 x) (pow.f64 (+.f64 1 x) 2)) (*.f64 (+.f64 1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 x) (/.f64 -1 (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (-.f64 -1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) x (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (-.f64 -1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (+.f64 1 x) (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (+.f64 -1 x)) (+.f64 1 x) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (/.f64 (+.f64 1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 x)) 1 (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1 (/.f64 x (+.f64 1 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 -1 x)) x) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 (/.f64 -1 (+.f64 -1 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 0) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (/.f64 -1 (+.f64 -1 x))) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 x (/.f64 -1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 -1 x)) (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 -1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (/.f64 (+.f64 1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (/.f64 -1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) (pow.f64 (cbrt.f64 (-.f64 1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1))) (cbrt.f64 (pow.f64 (fma.f64 x (+.f64 -1 x) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (neg.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 x 3))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x))) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) 1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (/.f64 1 (+.f64 -1 x))) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (+.f64 1 x)) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (neg.f64 (pow.f64 x 3))) (/.f64 -1 (+.f64 -1 x))) (+.f64 -1 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (pow.f64 (-.f64 1 x) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x))) 1) (cbrt.f64 (pow.f64 (-.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (-.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x)) 1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (-.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 1 (pow.f64 x 3)) (-.f64 1 x))) (+.f64 -1 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (-.f64 1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (-.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 1 x)) 0) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (*.f64 (/.f64 x (+.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (*.f64 0 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 x)) (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (cbrt.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (pow.f64 (cbrt.f64 (+.f64 1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) x) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (+.f64 1 x) 2))) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) 1) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (+.f64 1 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 1 x))) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) 1) (cbrt.f64 (pow.f64 (+.f64 1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (+.f64 1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 3))))))"]],"rules":[["egg-rr",43],["egg-rr",59],["egg-rr",91]],"time":39.553955078125,"type":"rewrite"},{"count":[[229,233]],"inputs":[["1","(+.f64 (*.f64 3 x) 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 3 x) 1)","(fma.f64 3 x 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(fma.f64 3 x (fma.f64 x x 1))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3 (+.f64 (pow.f64 x 3) x)) (fma.f64 x x 1))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(-.f64 (neg.f64 (pow.f64 x -4)) (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(-.f64 (neg.f64 (pow.f64 x -4)) (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (+.f64 (*.f64 x x) x)) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(+.f64 (*.f64 2 (+.f64 (pow.f64 x 3) (*.f64 x x))) (fma.f64 2 x 1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 (pow.f64 x -2) 2 (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 (pow.f64 x -2) 2 (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(+.f64 (*.f64 (*.f64 x x) (+.f64 -1 x)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","(-.f64 (-.f64 (+.f64 (pow.f64 x 3) x) (pow.f64 x 4)) (*.f64 x x))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(+.f64 (+.f64 1 (pow.f64 x -2)) (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (pow.f64 x -2)) (+.f64 (/.f64 1 x) (pow.f64 x -3)))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(+.f64 (+.f64 1 (pow.f64 x -2)) (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (pow.f64 x -2)) (+.f64 (/.f64 1 x) (pow.f64 x -3)))"]],"time":116.77099609375,"type":"simplify"},{"compiler":[[4844,3616]],"time":60.776123046875,"type":"eval"},{"alts":[["(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","fresh",34.38317483761557],["(fma.f64 (cbrt.f64 (+.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","fresh",28.246704287879073],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))","next",27.581988234853174],["(-.f64 (/.f64 -3 x) (pow.f64 x -2))","fresh",34.47656380954808],["(fma.f64 3 x 1)","fresh",29.705768857556144]],"compiler":[[21,18],[21,16],[15,11],[8,6],[5,4],[21,18],[21,16],[15,11],[8,6],[5,4]],"count":[[234,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[233,5],"picked":[1,0]}],"min-error":[0.0078125],"time":63.30908203125,"type":"prune"},{"compiler":[[39,28]],"locations":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))",0.01171875,true],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))",27.671993566738323,true]],"time":9.98388671875,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","x","-inf",0.171875],["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","x","inf",0.155029296875],["(/.f64 (-.f64 -1 x) (+.f64 -1 x))","x","0",0.155029296875],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))","x","-inf",0.24609375],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))","x","inf",0.2578125],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))","x","0",0.324951171875]],"time":1.419921875,"type":"series"},{"count":[[2,162]],"inputs":[["(fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))","(/.f64 (-.f64 -1 x) (+.f64 -1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 0) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (*.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (*.f64 0 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x))) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (+.f64 (/.f64 x (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x))) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (+.f64 -1 x)) (-.f64 (/.f64 x (+.f64 -1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 2)) (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (pow.f64 (+.f64 -1 x) 2)) (*.f64 (+.f64 1 x) (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)))) (*.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))) (*.f64 (+.f64 1 x) (-.f64 -1 (pow.f64 x 3)))) (*.f64 (+.f64 1 x) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (+.f64 1 x) (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))))) (*.f64 (+.f64 1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (-.f64 1 x)) (pow.f64 (-.f64 -1 x) 2)) (*.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) x) (*.f64 (+.f64 1 x) (-.f64 -1 x))) (*.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (-.f64 -1 x) (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)))) (*.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))) (*.f64 (-.f64 -1 x) (-.f64 -1 (pow.f64 x 3)))) (*.f64 (-.f64 -1 x) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (-.f64 -1 x) (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))))) (*.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) x) (*.f64 (-.f64 -1 x) (+.f64 1 x))) (*.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (+.f64 -1 x)) (pow.f64 (-.f64 -1 x) 2)) (*.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (+.f64 1 x)) (*.f64 (pow.f64 (+.f64 -1 x) 2) x)) (*.f64 (pow.f64 (+.f64 -1 x) 2) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (-.f64 -1 x)) (*.f64 (pow.f64 (+.f64 -1 x) 2) (neg.f64 x))) (*.f64 (pow.f64 (+.f64 -1 x) 2) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (+.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (-.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 1 x)) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)) x)) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) (-.f64 -1 x)) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)) (neg.f64 x))) (*.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 -1 x) 2) (*.f64 (-.f64 1 x) x)) (*.f64 (-.f64 1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 x) (-.f64 -1 x)) (*.f64 (-.f64 1 x) (neg.f64 x))) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 -1 x) (+.f64 1 x)) (*.f64 (+.f64 -1 x) x)) (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 -1 x) 2) (*.f64 (+.f64 -1 x) (neg.f64 x))) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (fma.f64 x (+.f64 -1 x) 1)) (*.f64 (+.f64 1 x) (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)))) (+.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (fma.f64 x (+.f64 -1 x) 1)) (*.f64 (-.f64 -1 x) (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)))) (-.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (+.f64 1 x)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) x)) (+.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (-.f64 -1 x)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (neg.f64 x))) (-.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 x (+.f64 -1 x)) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 -1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 -1 x)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (-.f64 -1 x) (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 x) (/.f64 -1 (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 2) (pow.f64 (+.f64 -1 x) 2))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 -1 x)) x (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 x)) 1 (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 x)) (-.f64 -1 x) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 1 x)) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 0) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (*.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (neg.f64 x)) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 (/.f64 1 (+.f64 -1 x)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) (*.f64 0 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 (/.f64 x (-.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 x (+.f64 -1 x) 1)) (+.f64 -1 x)) (/.f64 (/.f64 (pow.f64 x 3) (fma.f64 x (+.f64 -1 x) 1)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (pow.f64 (cbrt.f64 (+.f64 -1 x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 2) (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 x)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (+.f64 -1 x)) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 -1 x)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 2) (pow.f64 (+.f64 -1 x) 2))) (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (cbrt.f64 (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (/.f64 1 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (/.f64 1 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 1 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1))) (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 x))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 x))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) (neg.f64 x))) (*.f64 (-.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 (-.f64 1 x) (/.f64 x (cbrt.f64 (+.f64 -1 x))))) (*.f64 (-.f64 1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 -1 x) (*.f64 (-.f64 1 x) x)) (*.f64 (-.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 -1 x) (*.f64 (+.f64 -1 x) (neg.f64 x))) (*.f64 (+.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (+.f64 -1 x) (/.f64 x (cbrt.f64 (+.f64 -1 x))))) (*.f64 (+.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (-.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (/.f64 x (cbrt.f64 (+.f64 -1 x))))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (+.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x))) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (neg.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2)) (cbrt.f64 (-.f64 -1 x))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (cbrt.f64 (pow.f64 (-.f64 -1 x) 2))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 x) (cbrt.f64 (/.f64 -1 (+.f64 -1 x)))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (-.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (+.f64 1 (pow.f64 x 3))) (+.f64 -1 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 2) (pow.f64 (+.f64 -1 x) 2)))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 1 x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2))) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 2) (pow.f64 (+.f64 -1 x) 2)))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 2))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) 1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) 1) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 1 (+.f64 -1 x))) (+.f64 -1 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 x 3)) (/.f64 -1 (+.f64 -1 x))) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 -1 (+.f64 -1 x))) (+.f64 -1 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 -1 (pow.f64 x 3))) (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (+.f64 -1 x))) (cbrt.f64 (fma.f64 x (+.f64 -1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (-.f64 1 x) (*.f64 (-.f64 1 x) x)) (+.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 (pow.f64 x 3))) (/.f64 1 (fma.f64 x (+.f64 1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x)) 1) (fma.f64 x (+.f64 -1 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) 1) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 (*.f64 (fma.f64 x (+.f64 -1 x) 1) (+.f64 -1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (+.f64 -1 x))) (+.f64 -1 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (+.f64 -1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (neg.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) -2)) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 -1 (+.f64 -1 x)) 2)) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (pow.f64 (cbrt.f64 (+.f64 -1 x)) -2) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (+.f64 -1 x)) (/.f64 x (-.f64 1 x)))))))"]],"rules":[["egg-rr",94],["egg-rr",68]],"time":33.748046875,"type":"rewrite"},{"count":[[186,189]],"inputs":[["1","(+.f64 (*.f64 3 x) 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 3 x) 1)","(fma.f64 3 x 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(fma.f64 3 x (fma.f64 x x 1))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3 (+.f64 x (pow.f64 x 3))) (fma.f64 x x 1))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(-.f64 (neg.f64 (pow.f64 x -4)) (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(-.f64 (neg.f64 (pow.f64 x -4)) (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (+.f64 (*.f64 x x) x)) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(+.f64 (*.f64 2 (+.f64 (pow.f64 x 3) (*.f64 x x))) (fma.f64 2 x 1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 (pow.f64 x -2) 2 (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 (pow.f64 x -2) 2 (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))"]],"time":78.80810546875,"type":"simplify"},{"compiler":[[4085,3071]],"time":51.139892578125,"type":"eval"},{"alts":[["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","next",27.66262098859226],["(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","fresh",34.38317483761557],["(-.f64 (/.f64 -3 x) (pow.f64 x -2))","fresh",34.47656380954808],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","fresh",28.146816424459402]],"compiler":[[25,20],[21,18],[8,6],[29,22],[25,20],[21,18],[8,6],[29,22]],"count":[[194,4]],"kept":[{"done":[0,0],"fresh":[4,2],"new":[189,2],"picked":[1,0]}],"min-error":[0.0078125],"time":45.72705078125,"type":"prune"},{"compiler":[[92,73]],"locations":[["(/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))",0.125,true],["(*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))",0.13671875,true],["(cbrt.f64 (pow.f64 (+.f64 -1 x) 2))",15.25900923709805,true],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))",27.625029747804774,true]],"time":23.741943359375,"type":"localize"},{"count":[[4,32]],"series":[["(/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))","x","-inf",0.465087890625],["(/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))","x","inf",0.510986328125],["(/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))","x","0",0.261962890625],["(*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))","x","-inf",0.31591796875],["(*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))","x","inf",0.177001953125],["(*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))","x","0",0.155029296875],["(cbrt.f64 (pow.f64 (+.f64 -1 x) 2))","x","-inf",0.281982421875],["(cbrt.f64 (pow.f64 (+.f64 -1 x) 2))","x","inf",0.490966796875],["(cbrt.f64 (pow.f64 (+.f64 -1 x) 2))","x","0",0.220947265625],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","x","-inf",0.551025390625],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","x","inf",0.304931640625],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","x","0",0.363037109375]],"time":4.281005859375,"type":"series"},{"count":[[4,229]],"inputs":[["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","(cbrt.f64 (pow.f64 (+.f64 -1 x) 2))","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))","(/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) (*.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 0) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) (*.f64 0 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))) (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 2/3) (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) x) (*.f64 (-.f64 -1 x) (+.f64 1 x))) (*.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (+.f64 -1 x))) (*.f64 (-.f64 -1 x) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))) (*.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) (*.f64 (-.f64 -1 x) (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))))) (*.f64 (-.f64 -1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 (-.f64 -1 x) (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))))) (*.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (*.f64 (-.f64 -1 x) (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))))) (*.f64 (-.f64 -1 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (+.f64 -1 x)) (pow.f64 (-.f64 -1 x) 2)) (*.f64 (-.f64 -1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (+.f64 -1 x))) (*.f64 (+.f64 1 x) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))) (*.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) (*.f64 (+.f64 1 x) (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))))) (*.f64 (+.f64 1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (+.f64 -1 x) 2/3) x) (*.f64 (+.f64 1 x) (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))))) (*.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (*.f64 (+.f64 1 x) (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))))) (*.f64 (+.f64 1 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (-.f64 1 x)) (pow.f64 (-.f64 -1 x) 2)) (*.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) x) (*.f64 (+.f64 1 x) (-.f64 -1 x))) (*.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (-.f64 -1 x)) (*.f64 (cbrt.f64 (+.f64 -1 x)) (neg.f64 x))) (*.f64 (cbrt.f64 (+.f64 -1 x)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (+.f64 1 x)) (*.f64 (cbrt.f64 (+.f64 -1 x)) x)) (*.f64 (cbrt.f64 (+.f64 -1 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (-.f64 -1 x)) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) (neg.f64 x))) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (+.f64 1 x)) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) x)) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 -1 x) 2) (*.f64 (+.f64 -1 x) (neg.f64 x))) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 -1 x) (+.f64 1 x)) (*.f64 (+.f64 -1 x) x)) (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))) (-.f64 -1 x)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (neg.f64 x))) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))) (+.f64 1 x)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) x)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (-.f64 -1 x)) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (neg.f64 x))) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (+.f64 1 x)) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) x)) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 x) (-.f64 -1 x)) (*.f64 (-.f64 1 x) (neg.f64 x))) (*.f64 (-.f64 1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 -1 x) 2) (*.f64 (-.f64 1 x) x)) (*.f64 (-.f64 1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) x (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2/3) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2/3) (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -1/3)) (+.f64 2 3)) (/.f64 (-.f64 -1 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (/.f64 (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3) (cbrt.f64 (+.f64 -1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 -1 x) -1/3) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -1/3)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (pow.f64 (+.f64 -1 x) -1/3) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 -1 x)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (+.f64 -1 x) -1/3) (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))) (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 x)) 1 (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 1 x) (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 1 (/.f64 x (+.f64 1 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) 2/3) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 -1 x) 2/3) 0) (pow.f64 (+.f64 -1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) 2/3) (*.f64 0 (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 -1 x) 2/3)) (pow.f64 (+.f64 -1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 -1 x)) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 x)) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 -1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) (+.f64 2 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 -1 x) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) (+.f64 -1 (pow.f64 x 3)))) (cbrt.f64 (fma.f64 x (+.f64 1 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (+.f64 -1 (pow.f64 x 3)) 2)) (cbrt.f64 (pow.f64 (fma.f64 x (+.f64 1 x) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 -1 x) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 -1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 -1 x) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 -1 x) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 -1 x) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 -1 x) -1/3) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)))) (*.f64 (pow.f64 (+.f64 -1 x) -1/3) (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 0) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (pow.f64 (+.f64 -1 x) -1/3)) (*.f64 (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) (pow.f64 (+.f64 -1 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) (*.f64 0 (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (+.f64 1 x) (-.f64 1 x))) (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 x x (-.f64 1 x))) (+.f64 -1 x)) (/.f64 (/.f64 (pow.f64 x 3) (fma.f64 x x (-.f64 1 x))) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (+.f64 -1 x))) (/.f64 (/.f64 x (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (/.f64 (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3) (cbrt.f64 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -1/3)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2/3) (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 -1 x)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 -1 x) -1/3) (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))) (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -1/3)) (+.f64 2 3)) (/.f64 (-.f64 -1 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) -1/3) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (pow.f64 (+.f64 -1 x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -1/3)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (cbrt.f64 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3) (*.f64 (pow.f64 (+.f64 -1 x) -1/3) (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (pow.f64 (+.f64 -1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)) (pow.f64 (+.f64 -1 x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (+.f64 -1 x) -1/3) (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 -1 x) (/.f64 1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 1 x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (+.f64 1 x) (cbrt.f64 (+.f64 -1 x))) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (+.f64 -1 x))) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 0) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (*.f64 (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 0 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (neg.f64 x)) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 x (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (fma.f64 x x (-.f64 1 x))) (pow.f64 (+.f64 -1 x) 2/3)) (/.f64 (/.f64 (pow.f64 x 3) (fma.f64 x x (-.f64 1 x))) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (/.f64 (*.f64 (pow.f64 (+.f64 -1 x) 2/3) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 2/3) (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (/.f64 (pow.f64 (+.f64 1 x) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (+.f64 1 x) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 x)) (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 x) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 (-.f64 -1 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (+.f64 1 x) (-.f64 1 x)) 2/3) (cbrt.f64 (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) 2/3)) (/.f64 1 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 1 (*.f64 (fma.f64 x x (-.f64 1 x)) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) x)) (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 -1 x) 2/3) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) (neg.f64 x))) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)))) (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) x)) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)))) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (neg.f64 x))) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 -1 x) 2/3) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) x)) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (/.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))))) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 x 3)) (neg.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) x))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) 2/3)) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 (pow.f64 (+.f64 -1 x) 2/3) x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (*.f64 (fma.f64 x x (-.f64 1 x)) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (/.f64 (*.f64 (fma.f64 x x (-.f64 1 x)) (pow.f64 (+.f64 -1 x) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2/3)) (neg.f64 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) 2/3))) (+.f64 -1 (*.f64 x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 -1 x) 3) (pow.f64 (+.f64 -1 x) -2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 -1 x) 3) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 -1 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))) (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2/3)) -2) (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -1/3)) 4) (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (/.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2/3))))))))"]],"rules":[["egg-rr",69],["egg-rr",64],["egg-rr",30],["egg-rr",66]],"time":45.718017578125,"type":"rewrite"},{"count":[[261,281]],"inputs":[["1","(+.f64 (*.f64 3 x) 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(+.f64 1 (cbrt.f64 -1))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) x)) (cbrt.f64 -1)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) x)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 (cbrt.f64 -1) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) x)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) (pow.f64 x 3)))))))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","1","(+.f64 1 (*.f64 -2/3 x))","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1 (*.f64 -2/3 x)))","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1 (+.f64 (*.f64 -2/3 x) (*.f64 -4/81 (pow.f64 x 3)))))","1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) x)))","(-.f64 (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) x)))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","(-.f64 (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) (pow.f64 x 3))) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) x))))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","-1","(-.f64 (*.f64 -5/3 x) 1)","(-.f64 (+.f64 (*.f64 -5/3 x) (*.f64 -11/9 (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 -5/3 x) (+.f64 (*.f64 -11/9 (pow.f64 x 2)) (*.f64 -85/81 (pow.f64 x 3)))) 1)"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 3 x) 1)","(fma.f64 3 x 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (fma.f64 3 x 1) (*.f64 x x))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3 (+.f64 x (pow.f64 x 3))) (+.f64 1 (*.f64 x x)))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(-.f64 (neg.f64 (pow.f64 x -4)) (+.f64 (pow.f64 x -2) (fma.f64 3 (pow.f64 x -3) (/.f64 3 x))))","(+.f64 1 (cbrt.f64 -1))","0","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) x)) (cbrt.f64 -1)))","(+.f64 0 (/.f64 -3 x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) x)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 (cbrt.f64 -1) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","(-.f64 (+.f64 0 (/.f64 -3 x)) (pow.f64 x -2))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) x)) (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) 1) (cbrt.f64 -1)) (pow.f64 x 3)))))))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","(-.f64 (+.f64 (+.f64 0 (/.f64 -3 x)) (*.f64 -3 (pow.f64 x -3))) (pow.f64 x -2))","1","(+.f64 1 (*.f64 -2/3 x))","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1 (*.f64 -2/3 x)))","(fma.f64 -1/9 (*.f64 x x) (+.f64 1 (*.f64 -2/3 x)))","(+.f64 (*.f64 -1/9 (pow.f64 x 2)) (+.f64 1 (+.f64 (*.f64 -2/3 x) (*.f64 -4/81 (pow.f64 x 3)))))","(fma.f64 -1/9 (*.f64 x x) (+.f64 1 (fma.f64 -2/3 x (*.f64 -4/81 (pow.f64 x 3)))))","1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (+.f64 (*.f64 x x) x)) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(+.f64 (*.f64 2 (+.f64 (pow.f64 x 3) (*.f64 x x))) (fma.f64 2 x 1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 (+.f64 -1 (/.f64 -2 x)) (/.f64 2 (*.f64 x x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 (+.f64 -1 (/.f64 -2 x)) (*.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3))))","(cbrt.f64 -1)","-1","(+.f64 (cbrt.f64 -1) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) x)))","(+.f64 -1 (/.f64 -2 x))","(-.f64 (+.f64 (cbrt.f64 -1) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) x)))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","(-.f64 (+.f64 -1 (+.f64 (neg.f64 (pow.f64 x -2)) (/.f64 -2 x))) (pow.f64 x -2))","(-.f64 (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) (pow.f64 x 3))) (+.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (cbrt.f64 -1)) (cbrt.f64 -1)) x))))) (*.f64 -1 (/.f64 (cbrt.f64 -1) (pow.f64 x 2))))","(+.f64 (+.f64 (*.f64 -2 (pow.f64 x -3)) (+.f64 (neg.f64 (pow.f64 x -2)) (/.f64 -2 x))) (-.f64 -1 (pow.f64 x -2)))","-1","(-.f64 (*.f64 -5/3 x) 1)","(fma.f64 -5/3 x -1)","(-.f64 (+.f64 (*.f64 -5/3 x) (*.f64 -11/9 (pow.f64 x 2))) 1)","(+.f64 (*.f64 -5/3 x) (fma.f64 -11/9 (*.f64 x x) -1))","(-.f64 (+.f64 (*.f64 -5/3 x) (+.f64 (*.f64 -11/9 (pow.f64 x 2)) (*.f64 -85/81 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 -11/9 (*.f64 x x) (*.f64 -85/81 (pow.f64 x 3))) (fma.f64 -5/3 x -1))"]],"time":117.510009765625,"type":"simplify"},{"compiler":[[7108,5574]],"time":86.131103515625,"type":"eval"},{"alts":[["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","done",27.66262098859226],["(-.f64 (/.f64 -3 x) (pow.f64 x -2))","fresh",34.47656380954808],["(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","fresh",34.38317483761557],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","next",28.146816424459402]],"compiler":[[25,20],[8,6],[21,18],[29,22],[8,6],[21,18],[29,22]],"count":[[285,4]],"kept":[{"done":[0,0],"fresh":[3,2],"new":[281,1],"picked":[1,1]}],"min-error":[0.0078125],"time":39.6728515625,"type":"prune"},{"compiler":[[98,73]],"locations":[["(-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))",0.03125,true],["(/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2))",14.92238884310664,true],["(/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))",15.515801067252822,true],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))",27.67199356637154,true]],"time":23.5810546875,"type":"localize"},{"count":[[4,48]],"series":[["(-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))","x","-inf",0.176025390625],["(-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))","x","inf",0.160888671875],["(-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))","x","0",0.16796875],["(/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2))","x","-inf",0.159912109375],["(/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2))","x","inf",0.198974609375],["(/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2))","x","0",0.18701171875],["(/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))","x","-inf",0.160888671875],["(/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))","x","inf",0.199951171875],["(/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))","x","0",0.196044921875],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","x","-inf",0.239013671875],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","x","inf",0.287109375],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","x","0",0.30810546875]],"time":2.619873046875,"type":"series"},{"count":[[4,308]],"inputs":[["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","(/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))","(/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2))","(-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 0) (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) (*.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) (*.f64 0 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 1 x)) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x))) 1) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x))) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 x (+.f64 1 x)) (neg.f64 (/.f64 x (+.f64 -1 x)))) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (+.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 x (+.f64 1 x)) (/.f64 x (+.f64 -1 x))) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (+.f64 1 x)) (pow.f64 (+.f64 -1 x) -2)) (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (+.f64 1 x)) 0) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 -1 x) -2) (-.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x))) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x))) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x))) 0) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (/.f64 x (+.f64 1 x)) (-.f64 (/.f64 x (+.f64 -1 x)) (pow.f64 (+.f64 -1 x) -2))) (*.f64 x (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (/.f64 x (+.f64 1 x)) (/.f64 x (+.f64 -1 x))) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (+.f64 -1 x)) (-.f64 (/.f64 x (+.f64 -1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 2)) (cbrt.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) 4)) (*.f64 (-.f64 -1 x) (fma.f64 (pow.f64 (+.f64 -1 x) 3) x (pow.f64 (+.f64 -1 x) 3)))) (*.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (-.f64 -1 x) (*.f64 (+.f64 -1 x) (+.f64 1 x)))) (*.f64 (-.f64 -1 x) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (neg.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (-.f64 -1 x) (*.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (+.f64 -1 x) (-.f64 -1 x))))) (*.f64 (-.f64 -1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (-.f64 -1 x) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (*.f64 (-.f64 -1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (pow.f64 (+.f64 -1 x) 4)) (*.f64 (+.f64 1 x) (fma.f64 (pow.f64 (+.f64 -1 x) 3) x (pow.f64 (+.f64 -1 x) 3)))) (*.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (pow.f64 (+.f64 -1 x) 2)) (*.f64 (+.f64 1 x) (*.f64 (+.f64 -1 x) (+.f64 1 x)))) (*.f64 (+.f64 1 x) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (+.f64 1 x) (*.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (+.f64 -1 x) (-.f64 -1 x))))) (*.f64 (+.f64 1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (+.f64 1 x) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))) (*.f64 (+.f64 1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 x (+.f64 -1 x)) (+.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 1 x)) (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 -1 (-.f64 -1 x)) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (+.f64 1 x)) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 2) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 -1 x)) x (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 1 x)) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) (pow.f64 (/.f64 x (+.f64 -1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 x x)) (*.f64 (pow.f64 (+.f64 -1 x) -2) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 -1 x) -2) (neg.f64 x)) (*.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 -1 x)) 0) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 -1 x)) (*.f64 (/.f64 x (+.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (+.f64 -1 x))) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 -1 x)) (*.f64 0 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2) (*.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) 1) (pow.f64 (/.f64 x (+.f64 -1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2) (*.f64 x (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (pow.f64 (+.f64 -1 x) 2)) (*.f64 x (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 -1 x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 x) x) (neg.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) (-.f64 3 2)) (*.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 x) (*.f64 x (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) x)) (+.f64 -1 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 -1 x) x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) x)) (*.f64 (cbrt.f64 (pow.f64 (*.f64 (+.f64 -1 x) x) 2)) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 (+.f64 -1 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) -2) (+.f64 (*.f64 (-.f64 1 x) (/.f64 x (+.f64 -1 x))) (*.f64 (/.f64 x (+.f64 -1 x)) (*.f64 (+.f64 -1 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2)) (+.f64 (*.f64 (/.f64 -1 (+.f64 -1 x)) (cbrt.f64 (/.f64 x (+.f64 -1 x)))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 -1 x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x))) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) -2) (+.f64 (*.f64 (/.f64 x (+.f64 -1 x)) (*.f64 (+.f64 -1 x) x)) (*.f64 (-.f64 1 x) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2)) (+.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 -1 x))) 4) (*.f64 (/.f64 -1 (+.f64 -1 x)) (cbrt.f64 (/.f64 x (+.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (-.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (/.f64 -1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 -1 x) 3) x) (pow.f64 (+.f64 -1 x) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 -1 x) 3) x) (pow.f64 (+.f64 -1 x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 x) x) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 1 x) (/.f64 x (+.f64 -1 x))) (*.f64 (/.f64 x (+.f64 -1 x)) (*.f64 (+.f64 -1 x) x))) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) (/.f64 x (+.f64 -1 x))) (*.f64 (/.f64 x (+.f64 -1 x)) (*.f64 (-.f64 1 x) x))) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (+.f64 -1 x)) (*.f64 (+.f64 -1 x) x)) (*.f64 (-.f64 1 x) (/.f64 x (+.f64 -1 x)))) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 x (+.f64 -1 x)) (*.f64 (-.f64 1 x) x)) (*.f64 (+.f64 -1 x) (/.f64 x (+.f64 -1 x)))) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 1 x) 3) x) (neg.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 x (pow.f64 (+.f64 -1 x) -2)) (pow.f64 (/.f64 x (+.f64 -1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 -1 x) 3) x) 3) (pow.f64 (pow.f64 (+.f64 -1 x) 6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 -1 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 -1 x)) (/.f64 x (+.f64 -1 x)) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (neg.f64 (/.f64 x (+.f64 -1 x))) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) (pow.f64 (+.f64 -1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1 (+.f64 -1 x)) 0) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 (/.f64 -1 (+.f64 -1 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 (pow.f64 (+.f64 -1 x) -2) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 -1 x) -2) (neg.f64 x)) (pow.f64 (+.f64 -1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1 (+.f64 -1 x))) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (*.f64 0 (/.f64 -1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 x (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 -1 x) -2) (/.f64 (*.f64 (pow.f64 (+.f64 -1 x) 2) x) (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (+.f64 -1 x)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (pow.f64 (+.f64 -1 x) 2)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 (+.f64 1 (fma.f64 x x x))) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (/.f64 (pow.f64 x 3) (+.f64 1 (fma.f64 x x x))) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (/.f64 -1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 1 x)) (+.f64 -1 x)) (pow.f64 (cbrt.f64 (+.f64 -1 x)) (-.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 x)) (pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) -2) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 x) (+.f64 (pow.f64 (/.f64 -1 (+.f64 -1 x)) 3) (*.f64 (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (+.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (+.f64 2 3)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) -2) (+.f64 1 (*.f64 (-.f64 1 x) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 -1 x) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) (-.f64 3 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) -2)) (/.f64 1 (+.f64 1 (fma.f64 x x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) -2)) (+.f64 1 (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) (-.f64 3 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 -1 x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 x 3)) (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 x 3)) (/.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 -1 x) 3) (neg.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (*.f64 (-.f64 1 x) (/.f64 x (+.f64 -1 x)))) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (*.f64 (+.f64 -1 x) (/.f64 x (+.f64 -1 x)))) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (+.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (/.f64 x (+.f64 -1 x)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (*.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) x)) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 -1 x) (*.f64 (pow.f64 (+.f64 -1 x) 2) (/.f64 x (+.f64 -1 x)))) (pow.f64 (+.f64 -1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (*.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (pow.f64 (+.f64 -1 x) 2) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 (pow.f64 (+.f64 -1 x) 2) (neg.f64 x))) (neg.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 1 x) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (/.f64 x (+.f64 -1 x)))) (pow.f64 (-.f64 1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) x)) (neg.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (neg.f64 x))) (pow.f64 (+.f64 -1 x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (+.f64 -1 x)) (*.f64 (+.f64 -1 x) (/.f64 x (+.f64 -1 x)))) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (+.f64 -1 x) (*.f64 x (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (+.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (+.f64 -1 x) x)) (pow.f64 (+.f64 -1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 1 (+.f64 -1 x)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (-.f64 1 x) x)) (pow.f64 (-.f64 1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) (-.f64 3 2)) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) -2))) (+.f64 -1 (*.f64 x (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 x 3)) (neg.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -1 (+.f64 -1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (+.f64 -1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -1 (+.f64 -1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) -4)) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -4))) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (+.f64 -1 x) -2)) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (+.f64 -1 x) -2) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 1 (+.f64 -1 x)) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 -1 (+.f64 -1 x)) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) 4) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 0) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) (*.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (/.f64 x (+.f64 -1 x)) (pow.f64 (+.f64 -1 x) -2)) -1) (*.f64 (*.f64 x (pow.f64 (+.f64 -1 x) -2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) (*.f64 0 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (pow.f64 (+.f64 -1 x) -2)) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (+.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (-.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)) (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (-.f64 (/.f64 x (+.f64 -1 x)) (pow.f64 (+.f64 -1 x) -2))) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 x (-.f64 -1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 (*.f64 x (-.f64 -1 (+.f64 -1 x))) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x))) (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 -1 x) -2) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 -1 x)) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (/.f64 -1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 -1 x) -2) (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (pow.f64 (+.f64 -1 x) -2)) (*.f64 x (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 -1 (+.f64 -1 x)) 0) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (-.f64 (/.f64 x (+.f64 -1 x)) (pow.f64 (+.f64 -1 x) -2))) (*.f64 x (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (/.f64 x (+.f64 -1 x))) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 x (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) 2) (cbrt.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 x) (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)) (*.f64 x (pow.f64 (+.f64 -1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (+.f64 -1 x) 3) x (pow.f64 (+.f64 -1 x) 3)) (/.f64 1 (neg.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 -1 x)) 2)) (cbrt.f64 (*.f64 (neg.f64 x) (pow.f64 (+.f64 -1 x) -2))))) (-.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (cbrt.f64 (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (pow.f64 (+.f64 -1 x) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 -1 x) -2) (*.f64 (+.f64 -1 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (pow.f64 (+.f64 -1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (-.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 1 (+.f64 -1 x)) (neg.f64 (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2)) (*.f64 (+.f64 -1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -1 x) (+.f64 1 x)) (neg.f64 (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (+.f64 -1 x)) (/.f64 1 (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (+.f64 -1 x)) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 x) (+.f64 1 x)) (neg.f64 (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (+.f64 -1 x) (-.f64 -1 x))) (pow.f64 (+.f64 -1 x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 1 x) (*.f64 (+.f64 -1 x) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))) (pow.f64 (+.f64 -1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (+.f64 -1 x) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (+.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 (+.f64 -1 x) (*.f64 (+.f64 -1 x) x))) (pow.f64 (+.f64 -1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (-.f64 1 x) (*.f64 (+.f64 -1 x) x))) (pow.f64 (-.f64 1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (+.f64 -1 x)) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (+.f64 -1 x) x))) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (-.f64 1 x) x))) (*.f64 (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 (pow.f64 (+.f64 -1 x) 2) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))) (pow.f64 (+.f64 -1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (pow.f64 (+.f64 -1 x) 2) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 4)) (*.f64 (pow.f64 (+.f64 -1 x) 4) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))) (*.f64 (pow.f64 (+.f64 -1 x) 4) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (-.f64 1 x) 3) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (pow.f64 (+.f64 -1 x) 4) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (pow.f64 (+.f64 -1 x) 4) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (pow.f64 (+.f64 -1 x) 4) (*.f64 (+.f64 -1 x) x))) (pow.f64 (+.f64 -1 x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (-.f64 1 x) 3) (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (pow.f64 (+.f64 -1 x) 4) (*.f64 (-.f64 1 x) x))) (neg.f64 (pow.f64 (+.f64 -1 x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 -1 x) 2) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))) (pow.f64 (-.f64 1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (neg.f64 (pow.f64 (+.f64 -1 x) 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) -2)) (+.f64 -1 x)) (*.f64 (+.f64 1 (fma.f64 x x x)) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))) (+.f64 -1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (+.f64 1 (fma.f64 x x x)) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (*.f64 (+.f64 1 (fma.f64 x x x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) -2)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (+.f64 1 (fma.f64 x x x)) (*.f64 (+.f64 -1 x) x))) (*.f64 (+.f64 1 (fma.f64 x x x)) (pow.f64 (+.f64 -1 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (-.f64 1 (pow.f64 x 3)) (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (+.f64 1 (fma.f64 x x x)) (*.f64 (-.f64 1 x) x))) (*.f64 (+.f64 1 (fma.f64 x x x)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) (-.f64 3 2)) (+.f64 -1 x)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (/.f64 (*.f64 (+.f64 -1 x) x) (+.f64 -1 x)))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (+.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) (-.f64 3 2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (*.f64 (*.f64 (+.f64 -1 x) x) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) (-.f64 3 2)) (pow.f64 (+.f64 -1 x) 2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (*.f64 (+.f64 -1 x) x))) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 1 x)) (-.f64 3 2)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (*.f64 (-.f64 1 x) x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)) (neg.f64 (pow.f64 (+.f64 -1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 -1 x) 4)) (*.f64 (pow.f64 (+.f64 -1 x) 4) (*.f64 (pow.f64 (+.f64 -1 x) 3) x))) (*.f64 (pow.f64 (+.f64 -1 x) 4) (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (+.f64 -1 x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 -1 x) (-.f64 -1 x)) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2))) (cbrt.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (+.f64 -1 x) 3) x (pow.f64 (+.f64 -1 x) 3)) (neg.f64 (pow.f64 (+.f64 -1 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x))) (pow.f64 (+.f64 -1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 x)) (pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) 4) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (-.f64 1 x)) (+.f64 -1 x)) (pow.f64 (cbrt.f64 (+.f64 -1 x)) (-.f64 2 3)) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) -2) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (+.f64 -1 x)) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 -1 x) -2) (-.f64 1 x) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 x)) -1 (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 -1 x) (neg.f64 (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (neg.f64 (*.f64 (+.f64 1 x) (/.f64 1 (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (cbrt.f64 (pow.f64 (+.f64 -1 x) -4)) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 -1 x) -2))) (neg.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -4))) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (+.f64 -1 x) -2)) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (+.f64 -1 x) -2) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 x)) (/.f64 1 (+.f64 -1 x)) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (+.f64 -1 x)) (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (+.f64 -1 x)) 1 (neg.f64 (/.f64 x (+.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (+.f64 -1 x)) (/.f64 -1 (+.f64 -1 x)) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 -1 x) -2)) (pow.f64 (cbrt.f64 (/.f64 -1 (+.f64 -1 x))) 4) (neg.f64 (fma.f64 x (pow.f64 (+.f64 -1 x) -2) (/.f64 x (+.f64 -1 x)))))))))"]],"rules":[["egg-rr",109],["egg-rr",80],["egg-rr",66],["egg-rr",53]],"time":55.6171875,"type":"rewrite"},{"count":[[356,360]],"inputs":[["1","(+.f64 (*.f64 3 x) 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(*.f64 -1 x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -1 (pow.f64 x 4)))))","1","(+.f64 1 (/.f64 1 x))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","1","(+.f64 1 (/.f64 1 x))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","1","(+.f64 1 x)","(+.f64 1 (+.f64 (pow.f64 x 2) x))","(+.f64 1 (+.f64 (pow.f64 x 2) (+.f64 (pow.f64 x 3) x)))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))))","1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 3 x) 1)","(fma.f64 3 x 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(fma.f64 x 3 (fma.f64 x x 1))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3 (+.f64 (pow.f64 x 3) x)) (fma.f64 x x 1))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(-.f64 (neg.f64 (pow.f64 x -4)) (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x)))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(-.f64 (neg.f64 (pow.f64 x -4)) (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x)))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))","(neg.f64 (fma.f64 x x x))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)))","(-.f64 (neg.f64 (fma.f64 x x (pow.f64 x 3))) x)","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -1 (pow.f64 x 4)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 x x x)) (pow.f64 x 4)) (pow.f64 x 3))","1","(+.f64 1 (/.f64 1 x))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(+.f64 1 (+.f64 (pow.f64 x -2) (/.f64 1 x)))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(+.f64 1 (/.f64 (+.f64 (fma.f64 x x x) 1) (pow.f64 x 3)))","1","(+.f64 1 (/.f64 1 x))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(+.f64 1 (+.f64 (pow.f64 x -2) (/.f64 1 x)))","(+.f64 1 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(+.f64 1 (/.f64 (+.f64 (fma.f64 x x x) 1) (pow.f64 x 3)))","1","(+.f64 1 x)","(+.f64 1 (+.f64 (pow.f64 x 2) x))","(+.f64 (fma.f64 x x x) 1)","(+.f64 1 (+.f64 (pow.f64 x 2) (+.f64 (pow.f64 x 3) x)))","(+.f64 1 (+.f64 (fma.f64 x x (pow.f64 x 3)) x))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 -1 x) (pow.f64 x -2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(neg.f64 (/.f64 (+.f64 (fma.f64 x x x) 1) (pow.f64 x 3)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))))","(-.f64 (neg.f64 (pow.f64 x -4)) (/.f64 (+.f64 (fma.f64 x x x) 1) (pow.f64 x 3)))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 -1 x) (pow.f64 x -2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(neg.f64 (/.f64 (+.f64 (fma.f64 x x x) 1) (pow.f64 x 3)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))))","(-.f64 (neg.f64 (pow.f64 x -4)) (/.f64 (+.f64 (fma.f64 x x x) 1) (pow.f64 x 3)))","1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (fma.f64 x x x)) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(+.f64 (*.f64 2 (fma.f64 x x (pow.f64 x 3))) (fma.f64 2 x 1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 2 (pow.f64 x -2) (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(-.f64 -1 (fma.f64 2 (pow.f64 x -2) (/.f64 2 x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 -1 (fma.f64 2 (+.f64 (pow.f64 x -2) (pow.f64 x -3)) (/.f64 2 x)))"]],"time":152.721923828125,"type":"simplify"},{"compiler":[[10473,7926]],"time":121.06201171875,"type":"eval"},{"alts":[["(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","done",27.66262098859226],["(neg.f64 (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x)))","fresh",34.28942483761557],["(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","done",28.146816424459402]],"compiler":[[25,20],[14,11],[29,22]],"count":[[364,3]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[360,1],"picked":[1,1]}],"min-error":[0.0078125],"time":132.924072265625,"type":"prune"},{"accuracy":[0.01171875],"baseline":[27.185551827362957],"branch":[["x",0.01171875,3],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))",0.01171875,2]],"compiler":[[2,1],[14,10],[164,124]],"count":[[11,2]],"inputs":[["(neg.f64 (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x)))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(fma.f64 x (/.f64 1 (+.f64 1 x)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 -1 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (pow.f64 (+.f64 -1 x) 2)))))","(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(fma.f64 (cbrt.f64 (+.f64 1 x)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","(fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 (-.f64 -1 x) (+.f64 -1 x)))","(-.f64 (/.f64 -3 x) (pow.f64 x -2))","(fma.f64 3 x 1)","(+.f64 (/.f64 x (+.f64 1 x)) (/.f64 (+.f64 1 x) (-.f64 1 x)))","(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))"]],"link":["."],"name":["Asymptote C"],"oracle":[63.67470235131072],"outputs":[["(neg.f64 (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x)))","(fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2))))"]],"time":19.928955078125,"times":[["x",12.4541015625],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))",4.369140625]],"type":"regimes"},{"bstep":[[2.3565260853786185e-10,0.09382216377213859,0.081787109375]],"compiler":[[4,3],[14,10]],"method":["left-value"],"time":0.199951171875,"type":"bsearch"},{"compiler":[[58,44]],"inputs":[["(if (<=.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1))) 7737125245533627/19342813113834066795298816) (neg.f64 (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x))) (fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1))) 7737125245533627/19342813113834066795298816) (neg.f64 (+.f64 (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2)) (/.f64 3 x))) (fma.f64 x (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 (-.f64 1 x) (pow.f64 (+.f64 -1 x) 2)) (/.f64 (*.f64 (+.f64 -1 x) x) (pow.f64 (+.f64 -1 x) 2)))))","(if (<=.f64 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))) 7737125245533627/19342813113834066795298816) (-.f64 (/.f64 -3 x) (fma.f64 3 (pow.f64 x -3) (pow.f64 x -2))) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (-.f64 -1 x) (+.f64 -1 x))))"]],"stop":[["fuel",1]],"time":30.486083984375,"type":"simplify"},{"time":0.02490234375,"type":"soundness"},{"compiler":[[58,44]],"remove-preprocessing":[[]],"time":21.81103515625,"type":"end"}]