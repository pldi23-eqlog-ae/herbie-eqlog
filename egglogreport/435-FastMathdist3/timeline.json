[{"compiler":[[17,12]],"method":["search"],"sampling":[[12,0.4680636897137447,0.4514864340363829,0.08044987624987243],[11,0.41345625924714113,0.5246213855541555,0.06192235519870337],[10,0.34324670579007943,0.6201843888707117,0.03656890533920887],[9,0.2496339678473305,0.7254987190563043,0.02486731309636525],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":102.231201171875,"type":"analyze"},{"outcomes":[["body",256,"invalid",65.20166015625,1405],["body",512,"valid",0.9677734375,12],["body",1024,"valid",1.533447265625,13],["body",256,"valid",379.444091796875,8231]],"time":455.988037109375,"type":"sample"},{"compiler":[[16,11]],"inputs":[["0","1","2"],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","(+.f64 (+.f64 (*.f64 d2 d1) (*.f64 (+.f64 d3 5) d2)) (*.f64 d2 32))","(+.f64 (+.f64 (*.f64 d3 d2) (*.f64 (+.f64 d1 5) d3)) (*.f64 d3 32))","(+.f64 (+.f64 (*.f64 d1 d3) (*.f64 (+.f64 d2 5) d1)) (*.f64 d1 32))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","(*.f64 d1 (+.f64 (+.f64 (+.f64 d3 d2) 5) 32))","(+.f64 (+.f64 (*.f64 d2 d1) (*.f64 (+.f64 d3 5) d2)) (*.f64 d2 32))","(*.f64 d2 (+.f64 d1 (+.f64 (+.f64 d3 5) 32)))","(+.f64 (+.f64 (*.f64 d3 d2) (*.f64 (+.f64 d1 5) d3)) (*.f64 d3 32))","(*.f64 d3 (+.f64 (+.f64 (+.f64 d2 d1) 5) 32))","(+.f64 (+.f64 (*.f64 d1 d3) (*.f64 (+.f64 d2 5) d1)) (*.f64 d1 32))","(*.f64 d1 (+.f64 (+.f64 (+.f64 d3 d2) 5) 32))"]],"symmetry":[[]],"time":77.182861328125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))"]],"time":20.26904296875,"type":"simplify"},{"compiler":[[25,17]],"time":0.403076171875,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","next",0.0234375],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","fresh",0.02734375]],"compiler":[[12,9],[16,11],[12,9],[16,11]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.00390625],"time":1.326904296875,"type":"prune"},{"compiler":[[32,17]],"locations":[["(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)",0.0078125,true],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))",0.0234375,true]],"time":6.31201171875,"type":"localize"},{"count":[[2,60]],"series":[["(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)","d3","-inf",0.152099609375],["(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)","d3","inf",1.079833984375],["(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)","d3","0",0.1669921875],["(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)","d2","-inf",0.14404296875],["(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)","d2","inf",0.14501953125],["(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)","d2","0",0.175048828125],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d3","-inf",0.26611328125],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d3","inf",0.322021484375],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d3","0",0.278076171875],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d2","-inf",0.26904296875],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d2","inf",0.496826171875],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d2","0",0.280029296875],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d1","-inf",0.402099609375],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d1","inf",0.35302734375],["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","d1","0",0.56005859375]],"time":5.291015625,"type":"series"},{"count":[[2,197]],"inputs":[["(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","(+.f64 (+.f64 (+.f64 d2 d3) 5) 32)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d2 d3) d1) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 32) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 37) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 37 d1) (*.f64 (+.f64 d2 d3) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 32) (*.f64 d1 (+.f64 d2 d3))) (*.f64 d1 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 32) (*.f64 (+.f64 d2 d3) d1)) (*.f64 5 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 37) (*.f64 (+.f64 d2 d3) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 5) (+.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 32)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (+.f64 (*.f64 d1 (+.f64 d3 5)) (*.f64 d1 32)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5 d1) (+.f64 (*.f64 (+.f64 d2 d3) d1) (*.f64 d1 32)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d2 d1) (+.f64 (*.f64 (+.f64 d3 5) d1) (*.f64 d1 32)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d2 d3) d1) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 d1 (+.f64 d2 d3))) (*.f64 1 (*.f64 d1 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (+.f64 d2 d3) d1)) (*.f64 1 (*.f64 37 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) (*.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 0) (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 32 (+.f64 d2 d3))) (*.f64 d1 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 d2 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 d2 d3)) 1) (*.f64 (*.f64 d1 37) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 d2 d3) d1) 1) (*.f64 (*.f64 37 d1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) (*.f64 0 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d2 d1) (*.f64 (+.f64 d3 37) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 32 (+.f64 d2 d3)) d1) (*.f64 5 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d3 d1) (*.f64 (+.f64 d2 37) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 32) (*.f64 d2 d1)) (*.f64 (+.f64 d3 5) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 32) (*.f64 d1 d2)) (*.f64 d1 (+.f64 d3 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 5) (*.f64 d1 (+.f64 32 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 32 d2)) (*.f64 d1 (+.f64 d3 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5 d1) (*.f64 (+.f64 32 (+.f64 d2 d3)) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 32 d2) d1) (*.f64 (+.f64 d3 5) d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (*.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 (+.f64 d2 d3) 37))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 d2 d3) 37) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 37)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 2)) d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 d1 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))) (/.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) (pow.f64 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) 1) (/.f64 d1 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))) (/.f64 d1 (pow.f64 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) (cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 2)) (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (cbrt.f64 (+.f64 (+.f64 d2 d3) 37))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (+.f64 d2 d3) 37) (cbrt.f64 d1)) (cbrt.f64 (*.f64 d1 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 (*.f64 (+.f64 (+.f64 d2 d3) 5) (cbrt.f64 d1)) (*.f64 32 (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 (*.f64 32 (cbrt.f64 d1)) (*.f64 (+.f64 (+.f64 d2 d3) 5) (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) (/.f64 1 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 50653)) (+.f64 (pow.f64 (+.f64 d2 d3) 2) (*.f64 37 (-.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 50653) d1) (+.f64 (pow.f64 (+.f64 d2 d3) 2) (*.f64 37 (-.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 d1 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))) (pow.f64 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 d1 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768))) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (neg.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768))) (neg.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 d1 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) 1) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) d1) (neg.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 2)) d1)) (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 d1 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) 1) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 d1 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768))) (neg.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 (+.f64 d2 d3) 5) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 d2 d3) 5) d1 (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (sqrt.f64 32)) (sqrt.f64 32) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (cbrt.f64 (*.f64 d1 d1)) 32) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 32 (cbrt.f64 d1)) (cbrt.f64 (*.f64 d1 d1)) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 32 (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 32) (*.f64 (cbrt.f64 1024) d1) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 32) (*.f64 (sqrt.f64 32) d1) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 32)) (pow.f64 (cbrt.f64 (*.f64 d1 32)) 2) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 32) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 32 d1 (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 32)) (cbrt.f64 1024) (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)) 1 (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 5)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 2)) d1) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 (+.f64 d2 d3) 5) (cbrt.f64 d1)) (cbrt.f64 (*.f64 d1 d1)) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 (+.f64 d2 d3) 5)) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (cbrt.f64 (*.f64 d1 d1)) (+.f64 (+.f64 d2 d3) 5)) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 5))) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 5))) 2) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 (+.f64 (+.f64 d2 d3) 5))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 2)) (*.f64 d1 32))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d2 d3) d1 (*.f64 37 d1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d2 d3) 37)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 37 (+.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d3 (+.f64 d2 37))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d2 37) d3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 32 (+.f64 5 d2)) d3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 32 d3) (+.f64 5 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d2 (+.f64 d3 37))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 5 d2) (+.f64 d3 32))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d2 d3) 37) (*.f64 (+.f64 (+.f64 d2 d3) 37) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 d2 d3) 37) 0) (+.f64 (+.f64 d2 d3) 37))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d2 d3) 37) (*.f64 0 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 d2 d3) 37)) (+.f64 (+.f64 d2 d3) 37))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d2 (*.f64 (+.f64 d3 37) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 d3 (*.f64 (+.f64 d2 37) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 d2 d3) 5) 32)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 32 (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 32 d2) (+.f64 d3 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 32 (+.f64 d2 d3)) 5)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 5 (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d3 5) (+.f64 32 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 d3 37) d2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 5 (*.f64 (+.f64 32 (+.f64 d2 d3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 32 d2) 1) (+.f64 d3 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 32 (+.f64 d2 d3)) 1) 5)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 d2 d3) 37))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 d2 d3) 37) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) (/.f64 1 (neg.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 50653) (/.f64 1 (+.f64 (pow.f64 (+.f64 d2 d3) 2) (*.f64 37 (-.f64 37 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))) 1) (/.f64 (+.f64 (+.f64 d2 d3) 37) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))) (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))) (/.f64 (+.f64 (+.f64 d2 d3) 37) (pow.f64 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))) (/.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) (pow.f64 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) 1) (/.f64 (pow.f64 (cbrt.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) 2) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 37)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 2)) (-.f64 (cbrt.f64 1024) (cbrt.f64 (*.f64 (+.f64 (+.f64 d2 d3) 5) 32)))) (+.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 5)) (cbrt.f64 32)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 1024) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 2)) (cbrt.f64 (*.f64 (+.f64 (+.f64 d2 d3) 5) 32)))) (+.f64 (cbrt.f64 32) (cbrt.f64 (+.f64 (+.f64 d2 d3) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 2)) (cbrt.f64 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) (/.f64 1 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 50653) (+.f64 (pow.f64 (+.f64 d2 d3) 2) (*.f64 37 (-.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 3) 35184372088832) (/.f64 1 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))) (-.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 6) 1073741824) (pow.f64 (*.f64 (+.f64 (+.f64 d2 d3) 5) 32) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 d2 d3) 37) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 50653) 1) (+.f64 (pow.f64 (+.f64 d2 d3) 2) (*.f64 37 (-.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))) (pow.f64 (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 50653) (+.f64 1369 (-.f64 (pow.f64 (+.f64 d2 d3) 2) (*.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 125 (pow.f64 (+.f64 32 (+.f64 d2 d3)) 3)) (+.f64 25 (-.f64 (*.f64 (+.f64 32 (+.f64 d2 d3)) (+.f64 32 (+.f64 d2 d3))) (*.f64 5 (+.f64 32 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 32 (+.f64 d2 d3)) 3) 125) (+.f64 (*.f64 (+.f64 32 (+.f64 d2 d3)) (+.f64 32 (+.f64 d2 d3))) (-.f64 25 (*.f64 (+.f64 32 (+.f64 d2 d3)) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 3) 35184372088832) 1) (*.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 6) 1073741824) (pow.f64 (*.f64 (+.f64 (+.f64 d2 d3) 5) 32) 3)) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) (neg.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 50653)) (neg.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 2) (*.f64 37 (-.f64 37 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 2)) (cbrt.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768))) (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) 1) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) 1) (neg.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 2))) (cbrt.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) 1) (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 d2 d3) 37) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 37)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 37)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 37)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (+.f64 d2 d3) 37) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 3) 32768) (neg.f64 (+.f64 1024 (*.f64 (+.f64 (+.f64 d2 d3) 5) (+.f64 (+.f64 d2 d3) -27))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 37) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 d2 d3) 37)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 32) (cbrt.f64 1024) (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 32) (sqrt.f64 32) (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (+.f64 d2 d3) 5)) (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 2)) 32)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 32 (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (+.f64 d2 d3) 5) 32)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 d2 d3)) (cbrt.f64 (pow.f64 (+.f64 d2 d3) 2)) 37)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 5) (sqrt.f64 5) (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 5) (cbrt.f64 25) (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 5)) (neg.f64 (sqrt.f64 5)) (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 5 (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 5 1 (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 25) (cbrt.f64 5) (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -5 (+.f64 32 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d3 d3)) (cbrt.f64 d3) (+.f64 d2 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d3) (cbrt.f64 (*.f64 d3 d3)) (+.f64 d2 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 d3 (+.f64 d2 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d3 1 (+.f64 d2 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 d3) (+.f64 d2 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 37 (+.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 37 1 (+.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 37) (pow.f64 (cbrt.f64 37) 2) (+.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 37) (sqrt.f64 37) (+.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 d2 d3)) 37)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 d2 d3) 2)) (cbrt.f64 (+.f64 d2 d3)) 37)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d2 d3) 1 37)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 d2) (+.f64 d3 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d2) (cbrt.f64 (*.f64 d2 d2)) (+.f64 d3 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 d2 (+.f64 d3 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d2 d2)) (cbrt.f64 d2) (+.f64 d3 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d2 1 (+.f64 d3 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 32)) (neg.f64 (sqrt.f64 32)) (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 32 1 (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -32 (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1024) (cbrt.f64 32) (+.f64 (+.f64 d2 d3) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (+.f64 (+.f64 d2 d3) 5)) 32)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 d2 d3) 5) 2)) (cbrt.f64 (+.f64 (+.f64 d2 d3) 5)) 32)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 d2 d3) 5) 1 32)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 d2 d3) 3) 125) (/.f64 1 (+.f64 25 (*.f64 (+.f64 d2 d3) (+.f64 (+.f64 d2 d3) -5)))) 32)))))"]],"rules":[["egg-rr",104],["egg-rr",93]],"time":35.364013671875,"type":"rewrite"},{"count":[[257,211]],"inputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 37 d3) d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 d2))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(+.f64 37 d3)","(+.f64 d2 (+.f64 37 d3))","(+.f64 d2 (+.f64 37 d3))","(+.f64 d2 (+.f64 37 d3))","d2","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","d2","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 d2 37)","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","d3","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","d3","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 (+.f64 37 d3) d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 d2))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 37 d3)","(+.f64 d2 (+.f64 37 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 d2 (+.f64 37 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 d2 (+.f64 37 d3))","(+.f64 37 (+.f64 d2 d3))","d2","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","d2","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 d2 37)","(+.f64 37 d2)","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","d3","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","d3","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))","(+.f64 37 (+.f64 d2 d3))"]],"time":198.203857421875,"type":"simplify"},{"compiler":[[3201,1872]],"time":36.89599609375,"type":"eval"},{"alts":[["(+.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 37)))","fresh",0.015625],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","next",0.01171875],["(fma.f64 (+.f64 (+.f64 d2 d3) 5) d1 (*.f64 d1 32))","fresh",0.015625]],"compiler":[[12,8],[11,7],[13,9],[12,8],[11,7],[13,9]],"count":[[213,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[211,3],"picked":[1,0]}],"min-error":[0],"time":77.68310546875,"type":"prune"},{"compiler":[[21,10]],"locations":[["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))",0.01171875,true]],"time":4.923095703125,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d3","-inf",0.251953125],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d3","inf",0.241943359375],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d3","0",0.31005859375],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d2","-inf",0.2548828125],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d2","inf",0.239990234375],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d2","0",0.319091796875],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d1","-inf",0.597900390625],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d1","inf",0.513916015625],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","d1","0",0.822021484375]],"time":3.669921875,"type":"series"},{"count":[[1,46]],"inputs":[["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 37) (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 37) (*.f64 d1 d3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (+.f64 (*.f64 d1 d2) (*.f64 d1 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (+.f64 (*.f64 d1 d3) (*.f64 d1 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) (*.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 0) (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) (*.f64 0 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 37) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 (+.f64 d2 d3) 37))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 d2 d3) 37) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (+.f64 (*.f64 (pow.f64 d1 2/3) 37) (*.f64 (pow.f64 d1 2/3) (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (+.f64 (*.f64 (pow.f64 d1 2/3) (+.f64 d2 d3)) (*.f64 (pow.f64 d1 2/3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d2 d3) 37)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) (+.f64 d2 d3)) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 (+.f64 d2 d3))) (pow.f64 (+.f64 d2 d3) 2/3) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d2 d3) d1 (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) (cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2)) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 37) (*.f64 d1 (sqrt.f64 37)) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 37)) (pow.f64 (*.f64 d1 37) 2/3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 50653 d1)) (pow.f64 d1 2/3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 d1 37) 2/3) (cbrt.f64 (*.f64 d1 37)) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 37 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 37) (*.f64 (cbrt.f64 1369) d1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (sqrt.f64 37)) (sqrt.f64 37) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) 37) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 37)) (cbrt.f64 1369) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 d1 37)) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (+.f64 d2 d3)) 1 (*.f64 d1 37))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 37) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 37) 1 (*.f64 d1 (+.f64 d2 d3)))))))"]],"rules":[["egg-rr",46]],"time":22.751953125,"type":"rewrite"},{"count":[[82,55]],"inputs":[["(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(+.f64 (*.f64 37 d1) (*.f64 d1 d3))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 d3))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 37))"]],"time":126.037109375,"type":"simplify"},{"compiler":[[603,296]],"time":7.27587890625,"type":"eval"},{"alts":[["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","next",0.01171875],["(+.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 37)))","fresh",0.015625],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","done",0.01171875]],"compiler":[[11,7],[12,8],[11,7],[11,7],[12,8]],"count":[[58,3]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[55,1],"picked":[1,1]}],"min-error":[0],"time":10.926025390625,"type":"prune"},{"compiler":[[23,8]],"locations":[["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))",0.0078125,true],["(*.f64 d1 (+.f64 d2 d3))",0.015625,true]],"time":4.5439453125,"type":"localize"},{"count":[[2,60]],"series":[["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d3","-inf",0.18017578125],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d3","inf",0.166015625],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d3","0",0.178955078125],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d2","-inf",0.171875],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d2","inf",0.1640625],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d2","0",0.18408203125],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d1","-inf",0.30078125],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d1","inf",0.31005859375],["(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","d1","0",0.182861328125],["(*.f64 d1 (+.f64 d2 d3))","d3","-inf",0.14990234375],["(*.f64 d1 (+.f64 d2 d3))","d3","inf",0.14892578125],["(*.f64 d1 (+.f64 d2 d3))","d3","0",0.164794921875],["(*.f64 d1 (+.f64 d2 d3))","d2","-inf",0.152099609375],["(*.f64 d1 (+.f64 d2 d3))","d2","inf",0.158935546875],["(*.f64 d1 (+.f64 d2 d3))","d2","0",0.173095703125],["(*.f64 d1 (+.f64 d2 d3))","d1","-inf",0.22900390625],["(*.f64 d1 (+.f64 d2 d3))","d1","inf",0.3359375],["(*.f64 d1 (+.f64 d2 d3))","d1","0",0.18603515625]],"time":3.718017578125,"type":"series"},{"count":[[2,93]],"inputs":[["(*.f64 d1 (+.f64 d2 d3))","(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 d2 d3)) 0) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 (*.f64 d1 (+.f64 d2 d3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 d1 (+.f64 d2 d3))) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 0 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 d2 d3) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 d2 d3)) (*.f64 (pow.f64 (+.f64 d2 d3) 2/3) d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 d2 d3) (cbrt.f64 d1)) (pow.f64 d1 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 d2 d3) 2/3) d1) (cbrt.f64 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 2/3) (*.f64 (+.f64 d2 d3) (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 d1 2/3) (+.f64 d2 d3)) (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 2/3) (+.f64 (*.f64 d3 (cbrt.f64 d1)) (*.f64 d2 (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 2/3) (+.f64 (*.f64 d2 (cbrt.f64 d1)) (*.f64 d3 (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (cbrt.f64 (+.f64 d2 d3))) (pow.f64 (+.f64 d2 d3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 d2 d3) 2/3) (*.f64 d1 (cbrt.f64 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 d2 d3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 d2 d3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 d2 d3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d2 d1 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d2 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 d2)) (pow.f64 d2 2/3) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d2)) (cbrt.f64 (pow.f64 (*.f64 d1 d2) 2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d2 (cbrt.f64 d1)) (pow.f64 d1 2/3) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d2) (*.f64 (pow.f64 d2 2/3) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d3) (*.f64 (pow.f64 d3 2/3) d1) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d3)) (cbrt.f64 (pow.f64 (*.f64 d1 d3) 2)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d3 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d3 (cbrt.f64 d1)) (pow.f64 d1 2/3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d3 d1 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 d3)) (pow.f64 d3 2/3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d2) 1 (*.f64 d1 d3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 0) (*.f64 d1 (+.f64 37 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) (*.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))) (*.f64 d1 (+.f64 37 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) (*.f64 0 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 37 d1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 37 d1) (*.f64 d1 d3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (+.f64 (*.f64 d1 d3) (*.f64 37 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 37 d2)) 1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 37 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 37 (+.f64 d2 d3)) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 2/3) (+.f64 (cbrt.f64 (*.f64 50653 d1)) (*.f64 (+.f64 d2 d3) (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 2/3) (+.f64 (*.f64 (+.f64 d2 d3) (cbrt.f64 d1)) (cbrt.f64 (*.f64 50653 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))) (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d2 d3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 d2 d3)) (*.f64 (pow.f64 (+.f64 d2 d3) 2/3) d1) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2/3) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d2 d3) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 d2 d3) (cbrt.f64 d1)) (pow.f64 d1 2/3) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 (+.f64 d2 d3))) (pow.f64 (+.f64 d2 d3) 2/3) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) (+.f64 d2 d3)) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d2 d3) d1 (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 37 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 50653 d1)) (pow.f64 d1 2/3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 37) (*.f64 (cbrt.f64 1369) d1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 37) (*.f64 (sqrt.f64 37) d1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 37 d1)) (cbrt.f64 (*.f64 (*.f64 d1 d1) 1369)) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 d1 (+.f64 d2 d3))) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (+.f64 d2 d3)) 1 (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 d2 d3)) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 37 d1) 1 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 37 d1) (*.f64 d1 (+.f64 d2 d3)))))))"]],"rules":[["egg-rr",46],["egg-rr",47]],"time":25.677978515625,"type":"rewrite"},{"count":[[153,102]],"inputs":[["(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(+.f64 (*.f64 37 d1) (*.f64 d1 d3))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 d3))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(*.f64 d1 (+.f64 37 d2))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))"]],"time":188.23095703125,"type":"simplify"},{"compiler":[[1209,518]],"time":13.916015625,"type":"eval"},{"alts":[["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","next",0.0078125],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","done",0.01171875]],"compiler":[[12,7],[11,7],[12,7]],"count":[[105,2]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[102,1],"picked":[1,0]}],"min-error":[0],"time":22.7509765625,"type":"prune"},{"compiler":[[25,8]],"locations":[["(fma.f64 d1 d3 (*.f64 d1 d2))",0.00390625,true],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))",0.0078125,true]],"time":5.064208984375,"type":"localize"},{"count":[[2,72]],"series":[["(fma.f64 d1 d3 (*.f64 d1 d2))","d2","-inf",0.160888671875],["(fma.f64 d1 d3 (*.f64 d1 d2))","d2","inf",0.14306640625],["(fma.f64 d1 d3 (*.f64 d1 d2))","d2","0",0.14208984375],["(fma.f64 d1 d3 (*.f64 d1 d2))","d3","-inf",0.162109375],["(fma.f64 d1 d3 (*.f64 d1 d2))","d3","inf",0.14404296875],["(fma.f64 d1 d3 (*.f64 d1 d2))","d3","0",0.14697265625],["(fma.f64 d1 d3 (*.f64 d1 d2))","d1","-inf",0.182861328125],["(fma.f64 d1 d3 (*.f64 d1 d2))","d1","inf",0.14697265625],["(fma.f64 d1 d3 (*.f64 d1 d2))","d1","0",0.1630859375],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d2","-inf",0.22607421875],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d2","inf",0.27685546875],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d2","0",0.26806640625],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d3","-inf",0.2880859375],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d3","inf",0.243896484375],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d3","0",0.262939453125],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d1","-inf",0.444091796875],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d1","inf",0.40283203125],["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","d1","0",1.136962890625]],"time":5.134033203125,"type":"series"},{"count":[[2,92]],"inputs":[["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","(fma.f64 d1 d3 (*.f64 d1 d2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 37 d1) (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 37 d3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d3 d2)) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 37 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 37 d1) (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (+.f64 (*.f64 37 d1) (*.f64 d1 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (neg.f64 (*.f64 d1 (+.f64 37 d3)))) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 d1 (+.f64 37 d3)) -1)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 37 d1) (neg.f64 (*.f64 d1 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 d1 (+.f64 d3 d2)) (*.f64 -37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 d1 (+.f64 37 d3)) (neg.f64 (*.f64 d1 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 37 d1) (*.f64 d1 d2)) (neg.f64 (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 37 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))) (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))))) (neg.f64 (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 2/3) (-.f64 (cbrt.f64 (*.f64 (*.f64 d1 d1) 1369)) (*.f64 (cbrt.f64 (*.f64 d1 (+.f64 d3 d2))) (cbrt.f64 (*.f64 37 d1))))) (+.f64 (cbrt.f64 (*.f64 d1 (+.f64 d3 d2))) (cbrt.f64 (*.f64 37 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (*.f64 d1 d1) 1369)) (-.f64 (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 2/3) (*.f64 (cbrt.f64 (*.f64 37 d1)) (cbrt.f64 (*.f64 d1 (+.f64 d3 d2)))))) (+.f64 (cbrt.f64 (*.f64 37 d1)) (cbrt.f64 (*.f64 d1 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 37 (+.f64 d3 d2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 37 d1 (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 d3 d2))) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 (+.f64 d3 d2))) (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 2/3) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d3 d2) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 37 d1)) (cbrt.f64 (*.f64 (*.f64 d1 d1) 1369)) (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 37 (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 50653 d1)) (pow.f64 d1 2/3) (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 37) (*.f64 (cbrt.f64 1369) d1) (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 37) (*.f64 (sqrt.f64 37) d1) (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 d1 (+.f64 d3 d2))) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 d3 d2)) (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (+.f64 d3 d2)) 1 (*.f64 37 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 37 d1) (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 37 d1) 1 (*.f64 d1 (+.f64 d3 d2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d3 d2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 d1 d3) (neg.f64 (*.f64 d1 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 d1 d2) (neg.f64 (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 d1 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 d3 d2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 d3 d2) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (+.f64 (*.f64 (pow.f64 d1 2/3) d3) (*.f64 (pow.f64 d1 2/3) d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 d3 d2))) (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 2/3) (cbrt.f64 (*.f64 d1 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 d1 (+.f64 d3 d2)))) (neg.f64 (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 d1 d3) 2)) (-.f64 (pow.f64 (*.f64 d1 d2) 2/3) (*.f64 (cbrt.f64 (*.f64 d1 d3)) (cbrt.f64 (*.f64 d1 d2))))) (+.f64 (cbrt.f64 (*.f64 d1 d3)) (cbrt.f64 (*.f64 d1 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 d1 d2) 2/3) (-.f64 (cbrt.f64 (pow.f64 (*.f64 d1 d3) 2)) (*.f64 (cbrt.f64 (*.f64 d1 d2)) (cbrt.f64 (*.f64 d1 d3))))) (+.f64 (cbrt.f64 (*.f64 d1 d2)) (cbrt.f64 (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 d1 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 d1 (+.f64 d3 d2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 d3 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 d3 d2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 d1 (+.f64 d3 d2)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 d3 d2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 d1 (+.f64 d3 d2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d3 d2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 d3 d2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 d1 (+.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d3 d2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d3 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d2) (*.f64 (pow.f64 d2 2/3) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d2 d1 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d2 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d2 (cbrt.f64 d1)) (pow.f64 d1 2/3) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 d2)) (pow.f64 d2 2/3) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 d1 d2) 2/3) (cbrt.f64 (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d2)) (pow.f64 (*.f64 d1 d2) 2/3) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (cbrt.f64 d3)) (pow.f64 d3 2/3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d3 d1 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 d1) (*.f64 (pow.f64 d1 2/3) d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d3)) (cbrt.f64 (pow.f64 (*.f64 d1 d3) 2)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d3) 1 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d2) 1 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d3) (*.f64 d1 d2))))))"]],"rules":[["egg-rr",45],["egg-rr",47]],"time":44.332763671875,"type":"rewrite"},{"count":[[164,104]],"inputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d1 d3))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2)) 37)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(*.f64 d1 (+.f64 37 d2))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 d3))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 d2))))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))"]],"time":220.065185546875,"type":"simplify"},{"compiler":[[1247,542]],"time":14.623046875,"type":"eval"},{"alts":[["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","done",0.0078125],["(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","done",0.01171875]],"compiler":[[12,7],[11,7]],"count":[[106,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[104,0],"picked":[1,1]}],"min-error":[0],"time":23.8408203125,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["d1",0.0078125,1],["d2",0.0078125,1],["d3",0.0078125,1],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))",0.0078125,1],["(+.f64 d3 5)",0.0078125,1]],"compiler":[[4,3],[4,3],[4,3],[16,11],[6,5],[69,35]],"count":[[7,1]],"inputs":[["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","(fma.f64 37 d1 (*.f64 d1 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 37)))","(fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 37))","(fma.f64 (+.f64 (+.f64 d2 d3) 5) d1 (*.f64 d1 32))","(*.f64 d1 (+.f64 (+.f64 (+.f64 d2 d3) 5) 32))","(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))"]],"link":["."],"name":["FastMath dist3"],"oracle":[0.05078125],"outputs":[["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))"]],"time":19.343994140625,"times":[["d1",4.68603515625],["d2",3.448974609375],["d3",3.488037109375],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))",3.802978515625],["(+.f64 d3 5)",2.43603515625]],"type":"regimes"},{"compiler":[[12,7]],"inputs":[["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 37 d1 (fma.f64 d1 d3 (*.f64 d1 d2)))","(*.f64 d1 (+.f64 37 (+.f64 d3 d2)))"]],"stop":[["done",1]],"time":37.045166015625,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[12,7]],"remove-preprocessing":[[]],"time":8.7099609375,"type":"end"}]