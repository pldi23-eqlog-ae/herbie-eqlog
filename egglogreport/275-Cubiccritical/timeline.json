[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":144.779052734375,"type":"analyze"},{"outcomes":[["body",256,"invalid",85.869140625,1579],["body",4096,"valid",100.85400390625,415],["body",512,"valid",40.223876953125,376],["body",1024,"valid",108.149169921875,743],["body",2048,"valid",223.3134765625,1156],["body",256,"valid",313.116455078125,5566]],"time":881.509033203125,"type":"sample"},{"compiler":[[20,14]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 3 b) c)))) (*.f64 3 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 c) a)))) (*.f64 3 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 3 a) b)))) (*.f64 3 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 c a)))) b) (/.f64 1/3 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 3 b) c)))) (*.f64 3 b))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 -3 (*.f64 b c)))) a) (/.f64 1/3 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 c) a)))) (*.f64 3 c))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 c a)))) b) (/.f64 1/3 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 3 a) b)))) (*.f64 3 a))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 -3 (*.f64 a b)))) c) (/.f64 1/3 a))"]],"symmetry":[[]],"time":77.72509765625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))"]],"time":21.240966796875,"type":"simplify"},{"compiler":[[35,22]],"time":1.60400390625,"type":"eval"},{"alts":[["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","fresh",36.59302226516368],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))","next",36.56801711318677]],"compiler":[[18,12],[20,14],[18,12],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[36.48598586318677],"time":1.52783203125,"type":"prune"},{"compiler":[[69,35]],"locations":[["(*.f64 (*.f64 3 a) c)",0.19140625,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))",0.3931429952546722,true],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))",1.0000000000000002,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))",23.43907569670738,true]],"time":14.22607421875,"type":"localize"},{"count":[[4,92]],"series":[["(*.f64 (*.f64 3 a) c)","c","-inf",0.18603515625],["(*.f64 (*.f64 3 a) c)","c","inf",0.76904296875],["(*.f64 (*.f64 3 a) c)","c","0",0.288818359375],["(*.f64 (*.f64 3 a) c)","a","-inf",0.203125],["(*.f64 (*.f64 3 a) c)","a","inf",0.27197265625],["(*.f64 (*.f64 3 a) c)","a","0",0.281982421875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","-inf",0.539794921875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","inf",0.412109375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","c","0",0.369873046875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","-inf",0.280029296875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","inf",0.2998046875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","a","0",0.38720703125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","-inf",0.22119140625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","inf",0.435791015625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","b","0",0.274169921875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","-inf",0.2060546875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","inf",0.2939453125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","c","0",0.671875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","-inf",0.2041015625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","inf",0.302978515625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","a","0",0.335205078125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","-inf",0.169189453125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","inf",0.281005859375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","b","0",0.333984375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","c","-inf",0.56298828125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","c","inf",0.625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","c","0",0.394775390625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","a","-inf",0.402099609375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","a","inf",0.614013671875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","a","0",0.392822265625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","b","-inf",0.340087890625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","b","inf",0.48291015625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","b","0",0.94189453125]],"time":13.2451171875,"type":"series"},{"count":[[4,207]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))","(-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))","(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))","(*.f64 (*.f64 3 a) c)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 1/2) (*.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (*.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 1/2 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) -1) (*.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) (fabs.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (-.f64 0 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 0))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 0) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -3 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 0) (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (*.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 1/2) (*.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (*.f64 0 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (*.f64 1/2 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -3 (*.f64 a c)) (*.f64 (neg.f64 (*.f64 b b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -3 (*.f64 a c)) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 2)) (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (*.f64 b b)) (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) -1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 b 4)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 a) c) 2)) (cbrt.f64 (*.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c))))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (*.f64 3 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 0) (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 c (*.f64 3 a) (neg.f64 (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (neg.f64 b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (*.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 b)) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (neg.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -3 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 a) c) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -3 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) (*.f64 3 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 3 a) c)) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 a) c) 2))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -3 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 b b)) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 3 a) c) (*.f64 b b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 0) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)) (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (+.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) (cbrt.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 3 a) c) 0) (*.f64 (*.f64 3 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 3 a) c) (*.f64 (*.f64 (*.f64 3 a) c) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 3 a) c) 1/2) (*.f64 (*.f64 (*.f64 3 a) c) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 3 a) c)) (*.f64 (*.f64 3 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 3 a) c) (*.f64 0 (*.f64 (*.f64 3 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (*.f64 3 a) c)) (*.f64 1/2 (*.f64 (*.f64 3 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 a) c)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 3 a) c)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 a) c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 c (*.f64 3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a c) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 3 a) c) 2)) (cbrt.f64 (*.f64 (*.f64 3 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c 3) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 c (cbrt.f64 (*.f64 3 a))) (cbrt.f64 (*.f64 (*.f64 a a) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 a) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 3) (*.f64 (sqrt.f64 3) (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 3) (*.f64 (cbrt.f64 9) (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 3 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 3 a)) (*.f64 (cbrt.f64 (*.f64 (*.f64 a a) 9)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 3 a) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 a) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 3 a) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 3 a) c)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 3 a) c) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 3 a) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 3 a) c)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 3 a) c)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -3 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 3 a) c) 3))))))"]],"rules":[["egg-rr",31],["egg-rr",49],["egg-rr",75],["egg-rr",52]],"time":39.958984375,"type":"rewrite"},{"count":[[299,247]],"inputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(*.f64 -1 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) 27/16 (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b))))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 c a) -3 (*.f64 b b))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (fma.f64 81/16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) 27/16 (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 c 4) (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2)))) (*.f64 -3/2 (*.f64 c a))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))","(*.f64 3 (*.f64 c a))"]],"time":287.0009765625,"type":"simplify"},{"compiler":[[5821,3312]],"time":59.0830078125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))) (*.f64 3 a))","fresh",36.8041279837151],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","fresh",36.59302226516368],["(/.f64 (fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 3 a))","fresh",37.81594462786086],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","next",36.56020461318677],["(/.f64 (*.f64 -2 b) (*.f64 3 a))","fresh",44.600041585978076],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (sqrt.f64 3) (*.f64 (sqrt.f64 3) (*.f64 a c)))))) (*.f64 3 a))","fresh",36.595307274932125],["(/.f64 (/.f64 (*.f64 -3/2 (*.f64 c a)) b) (*.f64 3 a))","fresh",45.87988197012574],["(/.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 3 a))","fresh",45.879881970085506],["(/.f64 (+.f64 (neg.f64 b) b) (*.f64 3 a))","fresh",56.70852389749193]],"compiler":[[34,22],[18,12],[24,16],[19,13],[10,8],[24,18],[14,10],[14,10],[11,8],[34,22],[18,12],[24,16],[19,13],[10,8],[24,18],[14,10],[14,10],[11,8]],"count":[[249,9]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[247,8],"picked":[1,0]}],"min-error":[12.203102210313325],"time":63.81689453125,"type":"prune"},{"compiler":[[64,31]],"locations":[["(fma.f64 c (*.f64 -3 a) (*.f64 b b))",0.0859375,true],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))",0.1796875,true],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))",0.3931429952546722,true],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))",23.43907569670738,true]],"time":14.028076171875,"type":"localize"},{"count":[[4,84]],"series":[["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","b","-inf",0.164794921875],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","b","inf",0.151123046875],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","b","0",0.22705078125],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","a","-inf",0.277099609375],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","a","inf",0.29296875],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","a","0",0.253173828125],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","c","-inf",0.31005859375],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","c","inf",0.248046875],["(fma.f64 c (*.f64 -3 a) (*.f64 b b))","c","0",0.251220703125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","a","-inf",0.471923828125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","a","inf",0.761962890625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","a","0",0.416015625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","c","-inf",0.373046875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","c","inf",0.583984375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","c","0",0.4189453125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","b","-inf",0.344970703125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","b","inf",0.4970703125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","b","0",0.5439453125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","a","-inf",0.263916015625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","a","inf",0.243896484375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","a","0",0.243896484375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","c","-inf",0.25],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","c","inf",0.263916015625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","c","0",0.241943359375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","b","-inf",0.19091796875],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","b","inf",0.25],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","b","0",0.2119140625],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","b","-inf",0.18603515625],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","b","inf",0.23095703125],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","b","0",0.30517578125],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","a","-inf",0.28515625],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","a","inf",0.2958984375],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","a","0",0.22607421875],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","c","-inf",0.30517578125],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","c","inf",0.28076171875],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","c","0",0.320068359375]],"time":11.68505859375,"type":"series"},{"count":[[4,274]],"inputs":[["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))","(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","(fma.f64 c (*.f64 -3 a) (*.f64 b b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1/2) (*.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (*.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 1/2 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (*.f64 0 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (fabs.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (-.f64 0 (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (pow.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 0) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (-.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (+.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (cbrt.f64 (*.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (+.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) 1 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 1/2) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 0) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/3 a) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 (/.f64 1/3 a) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/3 a) (neg.f64 b)) (*.f64 (/.f64 1/3 a) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))) (*.f64 1/2 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) (*.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (/.f64 1/3 a)) (*.f64 (neg.f64 b) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 b) (/.f64 1/3 a)) (*.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 -3 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 3 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (*.f64 3 a)) (/.f64 b (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) a) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 27)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/3 a) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/3 a)) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) (/.f64 1/3 a)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/3 a) (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 -1/3 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) a) (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 27)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)) (cbrt.f64 (/.f64 1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) 1/3) (/.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 1/3) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (/.f64 1 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 1/3) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 1/3)) (*.f64 (cbrt.f64 9) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))) (*.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 (*.f64 a a) 9))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 1) (*.f64 (sqrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 1/3)) 1) (*.f64 (cbrt.f64 9) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 -3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 1/3) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (*.f64 3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) (cbrt.f64 (*.f64 (*.f64 a a) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) a) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 27)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (cbrt.f64 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))) (cbrt.f64 (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/3 a)) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (cbrt.f64 (*.f64 (*.f64 a a) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 1/3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 a) (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))) (cbrt.f64 (*.f64 (*.f64 a a) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2))) (cbrt.f64 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 2))) (cbrt.f64 (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) 1) (cbrt.f64 (*.f64 (*.f64 a a) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) 1) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (/.f64 1 a)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 1/3)) (/.f64 1 a)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 1 a)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)) (cbrt.f64 (*.f64 3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) a) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 a (cbrt.f64 -3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (*.f64 -27 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (*.f64 (*.f64 a a) 9))) (cbrt.f64 (*.f64 -3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (*.f64 3 a))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 a a) 9))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 a)) (cbrt.f64 (*.f64 (*.f64 a a) -27)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/3) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (*.f64 (sqrt.f64 3) a)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 a)) (cbrt.f64 (*.f64 (*.f64 a a) 27)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) -1) (*.f64 -3 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (*.f64 a (cbrt.f64 3))) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (*.f64 27 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 3 a))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 3 a))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a))) 1) (cbrt.f64 (*.f64 (*.f64 a a) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) (cbrt.f64 9)) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) -1) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) (cbrt.f64 3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) (neg.f64 (sqrt.f64 3))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) a) (sqrt.f64 3)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (/.f64 1/3 a)))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 a a) 9))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 -1/3 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (/.f64 -1/3 a)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 c -3) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1/2) (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 0) (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (*.f64 1/2 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (*.f64 0 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 c -3) a) (neg.f64 (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 0) (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 b b)) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (neg.f64 b) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (*.f64 (cbrt.f64 (*.f64 b b)) (neg.f64 b)) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 c) (*.f64 (cbrt.f64 (*.f64 c c)) (*.f64 -3 a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c a) -3 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (cbrt.f64 (*.f64 -3 a))) (cbrt.f64 (*.f64 (*.f64 a a) 9)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 c -3) a)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 c -3) a) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c -3) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 c -3) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 c -3) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 c -3) a) 1 (*.f64 b b))))))"]],"rules":[["egg-rr",61],["egg-rr",109],["egg-rr",52],["egg-rr",52]],"time":47.9580078125,"type":"rewrite"},{"count":[[358,333]],"inputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(*.f64 -1 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -2/3 (/.f64 b a))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (*.f64 1/2 (/.f64 c b)))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(*.f64 -1/2 (/.f64 c b))","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) 27/16 (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (fma.f64 81/16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) 27/16 (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 c 4) (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2)))) (*.f64 -3/2 (*.f64 c a))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 (*.f64 -1/2 c) b)","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) -9/16 (fma.f64 -1/6 (/.f64 (fma.f64 81/16 (pow.f64 (*.f64 c a) 4) (*.f64 (*.f64 -9/8 -9/8) (pow.f64 (*.f64 c a) 4))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 -2/3 (/.f64 b a))","(/.f64 (*.f64 -2/3 b) a)","(+.f64 (*.f64 -2/3 (/.f64 b a)) (*.f64 1/2 (/.f64 c b)))","(fma.f64 -2/3 (/.f64 b a) (/.f64 (*.f64 1/2 c) b))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 (/.f64 b a) -2/3 (fma.f64 1/2 (/.f64 c b) (/.f64 (*.f64 3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -2/3 (/.f64 b a)) (+.f64 (*.f64 9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 1/2 (/.f64 c b)) (*.f64 3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -2/3 (/.f64 b a) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) 9/16 (fma.f64 1/2 (/.f64 c b) (/.f64 (*.f64 3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 (*.f64 -1/2 c) b)","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2))) (*.f64 a b)) (fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(*.f64 -1/2 (/.f64 c b))","(/.f64 (*.f64 -1/2 c) b)","(+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))","(fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))","(+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)))))","(fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (+.f64 (*.f64 -1/2 (/.f64 c b)) (*.f64 -3/8 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))))))","(fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 a 3) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (fma.f64 -9/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 a a)) (pow.f64 b 5)) (fma.f64 -1/2 (/.f64 c b) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 c c) a)) (pow.f64 b 3)))))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 -3 (*.f64 c a) (*.f64 b b))"]],"time":292.85595703125,"type":"simplify"},{"compiler":[[7928,4612]],"time":84.3759765625,"type":"eval"},{"alts":[["(/.f64 (*.f64 -1/2 c) b)","fresh",37.93494537911268],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","fresh",36.81416131601878],["(fma.f64 -2/3 (/.f64 b a) (/.f64 (*.f64 1/2 c) b))","fresh",44.88726103438369],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","done",36.56020461318677],["(/.f64 (*.f64 -2/3 b) a)","fresh",44.623479085978076],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 3) a))","next",36.57649338272334],["(/.f64 (*.f64 -2 b) (*.f64 3 a))","fresh",44.600041585978076],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","fresh",36.59302226516368],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 3 a))","fresh",51.99652914655621],["(*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)) (cbrt.f64 (/.f64 1/3 a)))","fresh",36.72500724994434]],"compiler":[[8,6],[49,28],[13,9],[19,13],[8,6],[22,16],[10,8],[18,12],[14,10],[26,19],[8,6],[49,28],[13,9],[8,6],[22,16],[10,8],[18,12],[14,10],[26,19]],"count":[[342,10]],"kept":[{"done":[0,0],"fresh":[8,2],"new":[333,7],"picked":[1,1]}],"min-error":[4.398730080948119],"time":92.90087890625,"type":"prune"},{"compiler":[[84,48]],"locations":[["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))",0.24609375,true],["(*.f64 (sqrt.f64 3) a)",0.3515625,true],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)",0.3931429952546722,true],["(sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))",23.43907569670738,false]],"time":19.052001953125,"type":"localize"},{"count":[[3,44]],"series":[["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","b","-inf",0.369140625],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","b","inf",0.43798828125],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","b","0",0.468994140625],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","a","-inf",0.394775390625],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","a","inf",0.482177734375],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","a","0",0.476806640625],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","c","-inf",0.7841796875],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","c","inf",1.700927734375],["(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))","c","0",0.5439453125],["(*.f64 (sqrt.f64 3) a)","a","-inf",0.44384765625],["(*.f64 (sqrt.f64 3) a)","a","inf",0.31396484375],["(*.f64 (sqrt.f64 3) a)","a","0",0.468017578125],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","b","-inf",0.195068359375],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","b","inf",0.23779296875],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","b","0",0.2041015625],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","a","-inf",0.263916015625],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","a","inf",0.25],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","a","0",0.23779296875],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","c","-inf",0.257080078125],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","c","inf",0.282958984375],["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","c","0",0.279052734375]],"time":9.4150390625,"type":"series"},{"count":[[3,120]],"inputs":[["(-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)","(*.f64 (sqrt.f64 3) a)","(*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 0) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/2) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (*.f64 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (*.f64 1/2 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 b) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (*.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) 1 (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (neg.f64 (cbrt.f64 (*.f64 b b))) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (*.f64 b b)) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 3) a) 0) (*.f64 (sqrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 3) a) (*.f64 (*.f64 (sqrt.f64 3) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 3) a) 1/2) (*.f64 (*.f64 (sqrt.f64 3) a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sqrt.f64 3) a)) (*.f64 (sqrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 3) a) (*.f64 0 (*.f64 (sqrt.f64 3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sqrt.f64 3) a)) (*.f64 1/2 (*.f64 (sqrt.f64 3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 3) a)) (cbrt.f64 (*.f64 (*.f64 a a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 a a) 3)) (cbrt.f64 (*.f64 (sqrt.f64 3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 3)) (*.f64 (cbrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 3) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (sqrt.f64 3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 3) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (sqrt.f64 (sqrt.f64 3))) (sqrt.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 3) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 3)) (*.f64 (sqrt.f64 (sqrt.f64 3)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (sqrt.f64 3))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 3) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 3) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 3) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 3) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 3) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 27) (pow.f64 a 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (sqrt.f64 3) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (sqrt.f64 3) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (sqrt.f64 3) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (sqrt.f64 27) (pow.f64 a 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (*.f64 1/3 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 (sqrt.f64 1/3) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (sqrt.f64 (*.f64 1/3 (fma.f64 c (*.f64 -3 a) (*.f64 b b))))) (*.f64 1 (*.f64 (sqrt.f64 1/3) (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (sqrt.f64 (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1/3))) (*.f64 1 (*.f64 (neg.f64 b) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 0) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 1/2) (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1/3)) (*.f64 (neg.f64 b) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 1/3 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) 1) (*.f64 (*.f64 (sqrt.f64 1/3) (neg.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1/3)) 1) (*.f64 (*.f64 (neg.f64 b) (sqrt.f64 1/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 0 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))) (*.f64 1/2 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 1/3) (neg.f64 b)) (sqrt.f64 (*.f64 1/3 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 b) (sqrt.f64 1/3)) (sqrt.f64 (*.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 1/3)) (*.f64 (cbrt.f64 1/3) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 1/3)) (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (neg.f64 (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))) (cbrt.f64 (*.f64 1/3 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 1/3) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/3 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2))) (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (cbrt.f64 (sqrt.f64 1/3))) (cbrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 (sqrt.f64 1/3))) (sqrt.f64 (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 1/27) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b))) (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 1/3)) (*.f64 (sqrt.f64 (sqrt.f64 1/3)) (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 1/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (*.f64 (sqrt.f64 1/3) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (sqrt.f64 1/3) (*.f64 (neg.f64 b) (sqrt.f64 1/3)))))))"]],"rules":[["egg-rr",43],["egg-rr",29],["egg-rr",48]],"time":33.076904296875,"type":"rewrite"},{"count":[[164,158]],"inputs":[["(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2)) (sqrt.f64 1/3))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (sqrt.f64 1/3) (+.f64 (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))))))","(*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))))) (pow.f64 b 7))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))))))","(*.f64 -2 (*.f64 b (sqrt.f64 1/3)))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -2 (*.f64 b (sqrt.f64 1/3))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -2 (*.f64 b (sqrt.f64 1/3))) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3)))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -2 (*.f64 b (sqrt.f64 1/3))) (+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 c 4) (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2)))) (*.f64 -3/2 (*.f64 c a))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (+.f64 (/.f64 (+.f64 (*.f64 -3/2 (*.f64 c a)) (*.f64 -1/2 (*.f64 (pow.f64 a 4) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))))) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(*.f64 -3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 -3/2 (*.f64 c a)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -3/2 (/.f64 (*.f64 c a) b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 -3/2 (*.f64 c a)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (fma.f64 81/16 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -9/8 -9/8))) (pow.f64 b 7)) (fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 -27/16 (pow.f64 (*.f64 c a) 3)) (pow.f64 b 5)))))","(*.f64 -2 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (*.f64 -2 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b)))","(fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 b))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (*.f64 -2 b))))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 a (sqrt.f64 3))","(*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b))","(/.f64 (*.f64 -3/2 (*.f64 c (*.f64 a (sqrt.f64 1/3)))) b)","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) -9/8 (/.f64 (*.f64 -3/2 (*.f64 c (*.f64 a (sqrt.f64 1/3)))) b))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(fma.f64 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) -3/2 (fma.f64 -9/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 (*.f64 c a) 3) (sqrt.f64 1/3))) (pow.f64 b 5))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2)) (sqrt.f64 1/3))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))))))","(fma.f64 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) -3/2 (fma.f64 -9/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (*.f64 (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2)) (sqrt.f64 1/3))) b) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 (*.f64 c a) 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b))","(/.f64 (*.f64 -3/2 (*.f64 c (*.f64 a (sqrt.f64 1/3)))) b)","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) -9/8 (/.f64 (*.f64 -3/2 (*.f64 c (*.f64 a (sqrt.f64 1/3)))) b))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(fma.f64 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) -3/2 (fma.f64 -9/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 (*.f64 c a) 3) (sqrt.f64 1/3))) (pow.f64 b 5))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (sqrt.f64 1/3) (+.f64 (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))))) b)) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))))))","(fma.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) (fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) -9/8 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (*.f64 (sqrt.f64 1/3) (fma.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2)))) b) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 (*.f64 c a) 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b))","(/.f64 (*.f64 -3/2 (*.f64 c (*.f64 a (sqrt.f64 1/3)))) b)","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))","(fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) -9/8 (/.f64 (*.f64 -3/2 (*.f64 c (*.f64 a (sqrt.f64 1/3)))) b))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(fma.f64 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) -3/2 (fma.f64 -9/8 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 (*.f64 c a) 3) (sqrt.f64 1/3))) (pow.f64 b 5))))","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4))))) (pow.f64 b 7))) (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))))))","(fma.f64 -3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) (fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) -9/8 (fma.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/3) (fma.f64 81/16 (pow.f64 (*.f64 c a) 4) (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -9/8 -9/8)))) (pow.f64 b 7)) (/.f64 (*.f64 -27/16 (*.f64 (pow.f64 (*.f64 c a) 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))","(*.f64 -2 (*.f64 b (sqrt.f64 1/3)))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (*.f64 -2 (*.f64 b (sqrt.f64 1/3))))","(fma.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) (*.f64 -2 (*.f64 b (sqrt.f64 1/3))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -2 (*.f64 b (sqrt.f64 1/3))) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3)))))","(fma.f64 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) 3/2 (fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) 9/8 (*.f64 -2 (*.f64 b (sqrt.f64 1/3)))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b)) (+.f64 (*.f64 -2 (*.f64 b (sqrt.f64 1/3))) (+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (*.f64 (pow.f64 a 3) (sqrt.f64 1/3))) (pow.f64 b 5))) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (*.f64 (pow.f64 a 2) (sqrt.f64 1/3))) (pow.f64 b 3))))))","(fma.f64 3/2 (/.f64 (*.f64 c (*.f64 a (sqrt.f64 1/3))) b) (fma.f64 -2 (*.f64 b (sqrt.f64 1/3)) (fma.f64 (/.f64 (*.f64 (pow.f64 (*.f64 c a) 2) (sqrt.f64 1/3)) (pow.f64 b 3)) 9/8 (/.f64 (*.f64 27/16 (*.f64 (pow.f64 (*.f64 c a) 3) (sqrt.f64 1/3))) (pow.f64 b 5)))))"]],"time":159.629150390625,"type":"simplify"},{"compiler":[[6459,4350]],"time":71.115966796875,"type":"eval"},{"alts":[["(/.f64 (*.f64 -1/2 c) b)","fresh",37.93494537911268],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","fresh",36.81416131601878],["(fma.f64 -2/3 (/.f64 b a) (/.f64 (*.f64 1/2 c) b))","fresh",44.88726103438369],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","done",36.56020461318677],["(/.f64 (*.f64 -2/3 b) a)","fresh",44.623479085978076],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 3) a))","done",36.57649338272334],["(/.f64 (*.f64 -2 b) (*.f64 3 a))","fresh",44.600041585978076],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","next",36.59302226516368],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 3 a))","fresh",51.99652914655621],["(*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)) (cbrt.f64 (/.f64 1/3 a)))","fresh",36.72500724994434]],"compiler":[[8,6],[49,28],[13,9],[19,13],[8,6],[22,16],[10,8],[18,12],[14,10],[26,19],[8,6],[49,28],[13,9],[8,6],[10,8],[18,12],[14,10],[26,19]],"count":[[235,10]],"kept":[{"done":[1,1],"fresh":[8,8],"new":[225,0],"picked":[1,1]}],"min-error":[4.398730080948119],"time":52.50390625,"type":"prune"},{"compiler":[[60,25]],"locations":[["(/.f64 -1/3 a)",0.375,true],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))",0.3931429952546722,true],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))",1.0664062500000002,true],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))",23.43907569670738,true]],"time":12.18310546875,"type":"localize"},{"count":[[4,68]],"series":[["(/.f64 -1/3 a)","a","-inf",0.254150390625],["(/.f64 -1/3 a)","a","inf",0.243896484375],["(/.f64 -1/3 a)","a","0",0.294921875],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","c","-inf",0.35400390625],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","c","inf",0.4140625],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","c","0",0.309814453125],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","a","-inf",0.35400390625],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","a","inf",0.39892578125],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","a","0",0.327880859375],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","b","-inf",0.260009765625],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","b","inf",0.343994140625],["(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","b","0",0.321044921875],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","b","-inf",0.162109375],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","b","inf",0.153076171875],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","b","0",0.212890625],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","c","-inf",0.251953125],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","c","inf",0.169921875],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","c","0",0.198974609375],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","a","-inf",0.302001953125],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","a","inf",0.154052734375],["(fma.f64 -3 (*.f64 a c) (*.f64 b b))","a","0",0.218994140625],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","b","-inf",0.18505859375],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","b","inf",0.2060546875],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","b","0",0.280029296875],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","c","-inf",0.299072265625],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","c","inf",0.259033203125],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","c","0",0.239013671875],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","a","-inf",0.2919921875],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","a","inf",0.291015625],["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","a","0",0.280029296875]],"time":8.39892578125,"type":"series"},{"count":[[4,210]],"inputs":[["(sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))","(fma.f64 -3 (*.f64 a c) (*.f64 b b))","(-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))","(/.f64 -1/3 a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 0) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 1/2) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 1/2 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 0 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) 1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) -1) (*.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (*.f64 -1 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (fabs.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (pow.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 0) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 2 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 3/2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 1/4 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 c) a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1/2) (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (*.f64 1/2 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 0 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)) (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (sqrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (+.f64 1/3 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (+.f64 1/3 1/2)) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 0) (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2) (+.f64 1/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3/2) (*.f64 2 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) (*.f64 1/3 3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (*.f64 (cbrt.f64 (*.f64 b b)) b) (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (cbrt.f64 (*.f64 b b)) (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 b b)) (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) (neg.f64 b) (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -3) (*.f64 (cbrt.f64 9) (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 c) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -3 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 (cbrt.f64 (*.f64 a c))) (cbrt.f64 (pow.f64 (*.f64 a c) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -3 c) a)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 c) a) 2)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -3 c) a) 1 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 -3 c) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -3 c) a) (*.f64 b b))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 0) (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1/2) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (*.f64 1/2 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (*.f64 0 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 b 0) (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))) (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (+.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (*.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))) (-.f64 (cbrt.f64 b) (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 2)) (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 (sqrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (neg.f64 (cbrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1/3 a) 0) (/.f64 -1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1/3 a) 1/2) (*.f64 (/.f64 -1/3 a) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1/3 a) (*.f64 (/.f64 -1/3 a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -1/3 a)) (/.f64 -1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 -1/3 a)) (*.f64 1/2 (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1/3 a) (*.f64 0 (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 a -1/3)) (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1/3 a) (/.f64 0 (/.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -1/3) (/.f64 (cbrt.f64 1/9) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/27 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/3 a)) (cbrt.f64 (/.f64 1/9 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/9 (*.f64 a a))) (cbrt.f64 (/.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (cbrt.f64 (/.f64 -1/27 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/3 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 1/9) a) (cbrt.f64 -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1/27 (*.f64 a a))) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/3 a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1/27 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 a -1/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (neg.f64 a) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 a 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 a -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1/27 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/3 a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/3 (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/9 (*.f64 a a))) (cbrt.f64 -1/3)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1/9 (*.f64 a a))) (cbrt.f64 1/3)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1/3 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1/3 a)) (cbrt.f64 1/9)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 a -1/3) -1/3) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1/27 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -1/3) (cbrt.f64 (/.f64 1/9 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/3) (cbrt.f64 (/.f64 1/9 (*.f64 a a)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1/27 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 a) 3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 -1/27 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1/3 (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1/3 -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 2 (/.f64 (/.f64 a -1/3) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 3 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 -1/27 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a -1/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1/3 a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1/3 a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -1/3 a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1/3 a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1/3 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1/3 a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1/3 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 a) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -1/3 a) 3))))))"]],"rules":[["egg-rr",61],["egg-rr",48],["egg-rr",60],["egg-rr",41]],"time":38.607177734375,"type":"rewrite"},{"count":[[278,248]],"inputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(*.f64 -1 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(*.f64 3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))))))","(*.f64 2 b)","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(*.f64 3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) b)))))","(*.f64 3/2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","b","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b)","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) b)","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) b))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) b)))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 (/.f64 (*.f64 c a) b) -3/2 (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b)))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (neg.f64 b))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (neg.f64 b))))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(*.f64 -3 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -3 (*.f64 c a)))","(fma.f64 (*.f64 -3 c) a (*.f64 b b))","(*.f64 3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 3/2 (*.f64 c a)) b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -9/8 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 81/16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (/.f64 (*.f64 1/2 (fma.f64 (pow.f64 (*.f64 c a) 4) 81/16 (*.f64 (pow.f64 (*.f64 c a) 4) (*.f64 -9/8 -9/8)))) (pow.f64 b 7)))))","(*.f64 2 b)","(+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 2 b))","(fma.f64 -3/2 (/.f64 (*.f64 c a) b) (*.f64 2 b))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 2 b)))","(fma.f64 -9/8 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (*.f64 2 b)))","(+.f64 (*.f64 -9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 b))))","(fma.f64 (/.f64 (pow.f64 (*.f64 c a) 2) (pow.f64 b 3)) -9/8 (fma.f64 -3/2 (/.f64 (*.f64 c a) b) (fma.f64 -27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (*.f64 2 b))))","(*.f64 3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 3/2 (*.f64 c a)) b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2) (*.f64 81/16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) b)))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 (/.f64 (*.f64 c a) b) 3/2 (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 a 4) (fma.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 81/16 (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 c c)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3)))))","(*.f64 3/2 (/.f64 (*.f64 c a) b))","(/.f64 (*.f64 3/2 (*.f64 c a)) b)","(+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))","(fma.f64 3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3)))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 3/2 (/.f64 (*.f64 c a) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3))))","(+.f64 (*.f64 27/16 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 9/8 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -9/8 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)))))","(fma.f64 27/16 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) (fma.f64 3/2 (/.f64 (*.f64 c a) b) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 c 4) (fma.f64 81/16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (/.f64 (*.f64 -9/8 (*.f64 a a)) (pow.f64 b 3)) 2))) b) (/.f64 (*.f64 9/8 (pow.f64 (*.f64 c a) 2)) (pow.f64 b 3)))))"]],"time":215.6689453125,"type":"simplify"},{"compiler":[[5514,3020]],"time":56.137939453125,"type":"eval"},{"alts":[["(/.f64 (*.f64 -1/2 c) b)","fresh",37.93494537911268],["(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","fresh",36.81416131601878],["(fma.f64 -2/3 (/.f64 b a) (/.f64 (*.f64 1/2 c) b))","fresh",44.88726103438369],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","done",36.56020461318677],["(/.f64 (*.f64 -2/3 b) a)","fresh",44.623479085978076],["(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 3) a))","done",36.57649338272334],["(/.f64 (*.f64 -2 b) (*.f64 3 a))","fresh",44.600041585978076],["(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","done",36.59302226516368],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 3 a))","fresh",51.99652914655621],["(*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)) (cbrt.f64 (/.f64 1/3 a)))","fresh",36.72500724994434]],"compiler":[[8,6],[49,28],[13,9],[19,13],[8,6],[22,16],[10,8],[18,12],[14,10],[26,19]],"count":[[258,10]],"kept":[{"done":[2,2],"fresh":[7,7],"new":[248,0],"picked":[1,1]}],"min-error":[4.398730080948119],"time":56.389892578125,"type":"prune"},{"accuracy":[8.211112970736277],"baseline":[36.56020461318677],"branch":[["a",29.850937867163402,5],["b",8.211112970736277,3],["c",27.112519832579526,10],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))",13.479720514714367,5],["(*.f64 3 a)",29.850937867163402,5],["(*.f64 3 a)",29.850937867163402,5]],"compiler":[[4,3],[4,3],[4,3],[20,14],[6,5],[6,5],[280,159]],"count":[[17,3]],"inputs":[["(/.f64 (*.f64 -1/2 c) b)","(/.f64 (*.f64 (+.f64 (cbrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) (+.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b)))) (-.f64 (cbrt.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (cbrt.f64 b))) (*.f64 3 a))","(fma.f64 -2/3 (/.f64 b a) (/.f64 (*.f64 1/2 c) b))","(/.f64 (*.f64 -2/3 b) a)","(/.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 3) a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 3 a))","(*.f64 (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (pow.f64 (cbrt.f64 (*.f64 3 a)) -2)) (cbrt.f64 (/.f64 1/3 a)))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b) 2)) (cbrt.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c)))) b))) (*.f64 3 a))","(/.f64 (fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 (neg.f64 b)) (sqrt.f64 (fma.f64 b b (*.f64 -3 (*.f64 a c))))) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","(/.f64 (*.f64 -2 b) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (sqrt.f64 3) (*.f64 (sqrt.f64 3) (*.f64 a c)))))) (*.f64 3 a))","(/.f64 (/.f64 (*.f64 -3/2 (*.f64 c a)) b) (*.f64 3 a))","(/.f64 (*.f64 -3/2 (/.f64 (*.f64 c a) b)) (*.f64 3 a))","(/.f64 (+.f64 (neg.f64 b) b) (*.f64 3 a))","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 -3 (*.f64 a c) (*.f64 b b)))) (/.f64 -1/3 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))"]],"link":["."],"name":["Cubic critical"],"oracle":[63.297806230968476],"outputs":[["(/.f64 (*.f64 -2/3 b) a)","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a))","(/.f64 (*.f64 -1/2 c) b)"]],"time":191.4560546875,"times":[["a",31.269775390625],["b",21.1689453125],["c",51.5439453125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 3 a) c)))) (*.f64 3 a))",16.446044921875],["(*.f64 3 a)",34.06494140625],["(*.f64 3 a)",31.802001953125]],"type":"regimes"},{"bstep":[[2.9845788666958835e-158,3.562433016429675e-154,24.802978515625],[-6.131588173919469e+98,-2.8167958962674297e+94,37.528076171875]],"compiler":[[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[20,14],[9,7],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":62.510009765625,"type":"bsearch"},{"compiler":[[37,25]],"inputs":[["(if (<=.f64 b -28999999999999998363139381331051510536143881206408543710211823249733286587361152019470147911680) (/.f64 (*.f64 -2/3 b) a) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a)) (/.f64 (*.f64 -1/2 c) b)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -28999999999999998363139381331051510536143881206408543710211823249733286587361152019470147911680) (/.f64 (*.f64 -2/3 b) a) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b)))) (*.f64 3 a)) (/.f64 (*.f64 -1/2 c) b)))","(if (<=.f64 b -28999999999999998363139381331051510536143881206408543710211823249733286587361152019470147911680) (/.f64 (*.f64 -2/3 b) a) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (*.f64 (-.f64 (sqrt.f64 (fma.f64 c (*.f64 -3 a) (*.f64 b b))) b) (/.f64 1/3 a)) (/.f64 c (*.f64 b -2))))"]],"stop":[["fuel",1]],"time":24.236083984375,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[37,25]],"remove-preprocessing":[[]],"time":13.864990234375,"type":"end"}]