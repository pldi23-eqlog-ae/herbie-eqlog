[{"compiler":[[27,19]],"method":["search"],"sampling":[[12,0.0,0.9965870339676138,0.0034129660323861666],[11,0.0,0.9965870339676138,0.0034129660323861666],[10,0.0,0.9965870339676138,0.0034129660323861666],[9,0.0,0.9965870339676138,0.0034129660323861666],[8,0.0,0.9965870339676138,0.0034129660323861666],[7,0.0,0.9965870339676138,0.0034129660323861666],[6,0.0,0.9965870339676138,0.0034129660323861666],[5,0.0,0.9965870339676138,0.0034129660323861666],[4,0.0,0.9965870339676138,0.0034129660323861666],[3,0.0,0.9965870339676138,0.0034129660323861666],[2,0.0,0.9965870339676138,0.0034129660323861666],[1,0.0,0.9965870339676138,0.0034129660323861666],[0,0.0,0.9965870339676138,0.0034129660323861666]],"time":238.494140625,"type":"analyze"},{"outcomes":[["body",256,"invalid",346.193115234375,4927],["body",256,"valid",586.156982421875,8256]],"time":944.632080078125,"type":"sample"},{"compiler":[[26,18]],"inputs":[["0","1","2","3","4","5","6"],["(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 y 9) x) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 z 9) y) (*.f64 (*.f64 (*.f64 x 4) t) a)) b) (*.f64 x c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 t 9) y) (*.f64 (*.f64 (*.f64 z 4) x) a)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 a 9) y) (*.f64 (*.f64 (*.f64 z 4) t) x)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 b 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) x) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 c 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z x))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) z) (*.f64 (*.f64 (*.f64 y 4) t) a)) b) (*.f64 y c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) t) (*.f64 (*.f64 (*.f64 z 4) y) a)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) a) (*.f64 (*.f64 (*.f64 z 4) t) y)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) b) (*.f64 (*.f64 (*.f64 z 4) t) a)) y) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) c) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z y))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 t 4) z) a)) b) (*.f64 t c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 a 4) t) z)) b) (*.f64 a c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 b 4) t) a)) z) (*.f64 b c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 c 4) t) a)) b) (*.f64 c z))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) a) t)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) b) a)) t) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) c) a)) b) (*.f64 z t))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) b)) a) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) c)) b) (*.f64 z a))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) c) (*.f64 z b))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4","5","6"],["(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 y 9) x) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 z 9) y) (*.f64 (*.f64 (*.f64 x 4) t) a)) b) (*.f64 x c))","(/.f64 (+.f64 (fma.f64 (*.f64 z 9) y (neg.f64 (*.f64 (*.f64 (*.f64 x 4) t) a))) b) (*.f64 x c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 t 9) y) (*.f64 (*.f64 (*.f64 z 4) x) a)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 t 9) y (neg.f64 (*.f64 (*.f64 (*.f64 z 4) x) a))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 a 9) y) (*.f64 (*.f64 (*.f64 z 4) t) x)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 a 9) y (neg.f64 (*.f64 (*.f64 z 4) (*.f64 t x)))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 b 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) x) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 b 9) y (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) x) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 c 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z x))","(/.f64 (+.f64 (fma.f64 (*.f64 c 9) y (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) b) (*.f64 z x))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) z) (*.f64 (*.f64 (*.f64 y 4) t) a)) b) (*.f64 y c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) z (neg.f64 (*.f64 (*.f64 (*.f64 y 4) t) a))) b) (*.f64 y c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) t) (*.f64 (*.f64 (*.f64 z 4) y) a)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) t (neg.f64 (*.f64 (*.f64 (*.f64 z 4) y) a))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) a) (*.f64 (*.f64 (*.f64 z 4) t) y)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) a (neg.f64 (*.f64 (*.f64 z 4) (*.f64 t y)))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) b) (*.f64 (*.f64 (*.f64 z 4) t) a)) y) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) b (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) y) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) c) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z y))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) c (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) b) (*.f64 z y))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 t 4) z) a)) b) (*.f64 t c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) b) (*.f64 t c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 a 4) t) z)) b) (*.f64 a c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 a 4) t) z))) b) (*.f64 a c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 b 4) t) a)) z) (*.f64 b c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 b 4) t) a))) z) (*.f64 b c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 c 4) t) a)) b) (*.f64 c z))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 c 4) t) a))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) a) t)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 z 4) a) t))) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) b) a)) t) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 z 4) b) a))) t) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) c) a)) b) (*.f64 z t))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 z 4) c) a))) b) (*.f64 z t))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) b)) a) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 z 4) (*.f64 t b)))) a) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) c)) b) (*.f64 z a))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 z 4) (*.f64 t c)))) b) (*.f64 z a))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) c) (*.f64 z b))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 (*.f64 (*.f64 t 4) z) a))) c) (*.f64 z b))"]],"symmetry":[[]],"time":137.933837890625,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))"]],"time":21.7861328125,"type":"simplify"},{"compiler":[[44,27]],"time":0.474853515625,"type":"eval"},{"alts":[["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","next",16.49450577230059]],"compiler":[[25,17],[25,17]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[16.49450577230059],"time":1.068115234375,"type":"prune"},{"compiler":[[81,39]],"locations":[["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)",0.01171875,true],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))",0.09765625,true],["(*.f64 (*.f64 -4 (*.f64 z t)) a)",3.6878088414010417,true],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))",13.505623993261695,true]],"time":16.655029296875,"type":"localize"},{"count":[[4,252]],"series":[["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","b","-inf",0.1650390625],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","b","inf",0.1669921875],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","b","0",0.18896484375],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","a","-inf",0.162841796875],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","a","inf",0.180908203125],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","a","0",0.162109375],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","t","-inf",0.18212890625],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","t","inf",0.162109375],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","t","0",0.166015625],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","z","-inf",0.18017578125],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","z","inf",0.169189453125],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","z","0",0.18310546875],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","y","-inf",0.160888671875],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","y","inf",0.197021484375],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","y","0",0.18017578125],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","x","-inf",0.162109375],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","x","inf",0.179931640625],["(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)","x","0",0.180908203125],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","a","-inf",0.1728515625],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","a","inf",0.156982421875],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","a","0",0.156005859375],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","t","-inf",0.173095703125],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","t","inf",0.157958984375],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","t","0",0.173828125],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","z","-inf",0.157958984375],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","z","inf",0.158935546875],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","z","0",0.177001953125],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","y","-inf",0.166015625],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","y","inf",0.177001953125],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","y","0",0.158935546875],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","x","-inf",0.162841796875],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","x","inf",0.176025390625],["(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","x","0",0.1728515625],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","a","-inf",0.2119140625],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","a","inf",0.262939453125],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","a","0",0.330810546875],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","t","-inf",0.212890625],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","t","inf",0.30810546875],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","t","0",0.338134765625],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","z","-inf",0.191162109375],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","z","inf",0.31298828125],["(*.f64 (*.f64 -4 (*.f64 z t)) a)","z","0",0.382080078125],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","c","-inf",0.3701171875],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","c","inf",0.56689453125],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","c","0",0.950927734375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","b","-inf",0.373046875],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","b","inf",0.426025390625],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","b","0",0.614990234375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","a","-inf",0.43798828125],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","a","inf",0.56005859375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","a","0",0.61083984375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","t","-inf",0.443115234375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","t","inf",0.587890625],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","t","0",0.6669921875],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","z","-inf",1.27197265625],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","z","inf",0.76904296875],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","z","0",0.712158203125],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","y","-inf",0.537109375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","y","inf",0.85791015625],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","y","0",1.052001953125],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","x","-inf",0.531005859375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","x","inf",0.661865234375],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","x","0",0.97509765625]],"time":23.02880859375,"type":"series"},{"count":[[4,234]],"inputs":[["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","(*.f64 (*.f64 -4 (*.f64 z t)) a)","(fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a))","(+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 z) c) (*.f64 9 (*.f64 x y))) (*.f64 (/.f64 (/.f64 1 z) c) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 z) c) (+.f64 b (*.f64 9 (*.f64 x y)))) (*.f64 (/.f64 (/.f64 1 z) c) (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 z) c) b) (*.f64 (/.f64 (/.f64 1 z) c) (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (/.f64 1 z) c) (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (*.f64 (/.f64 (/.f64 1 z) c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 0) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 9 (*.f64 x y)) (/.f64 (/.f64 1 z) c)) (*.f64 (fma.f64 (*.f64 (*.f64 z t) a) -4 b) (/.f64 (/.f64 1 z) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (*.f64 9 (*.f64 x y))) (/.f64 (/.f64 1 z) c)) (*.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) (/.f64 (/.f64 1 z) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 (/.f64 1 z) c)) (*.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) (/.f64 (/.f64 1 z) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) (/.f64 (/.f64 1 z) c)) (*.f64 b (/.f64 (/.f64 1 z) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) (*.f64 0 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 z c))) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) (/.f64 1 (cbrt.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (*.f64 z c))) (pow.f64 (cbrt.f64 (*.f64 z c)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2)) (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (/.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2)) c) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (/.f64 (/.f64 -1 z) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) z) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (/.f64 (/.f64 1 z) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 z) c) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (/.f64 1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 z) c)) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (pow.f64 (*.f64 z c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 c) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 z)) (/.f64 -1 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2)) (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 c) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 c) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 c) (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c) (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) z) (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2))) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2)) c)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 z)) (/.f64 1 c)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (/.f64 1 c)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 z)) 1) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) 1) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 z)) (*.f64 (cbrt.f64 (*.f64 z z)) c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z (cbrt.f64 c))) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 c (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 c)) (*.f64 (cbrt.f64 (*.f64 c c)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (cbrt.f64 (neg.f64 (*.f64 z c)))) (pow.f64 (cbrt.f64 (neg.f64 (*.f64 z c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (cbrt.f64 (*.f64 z c))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 z c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (*.f64 z c))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 z c) 2)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 z c) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) -1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) (cbrt.f64 (*.f64 z z))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) -1) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 (*.f64 c c))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) 1) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) (cbrt.f64 (cbrt.f64 (*.f64 c c)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) (cbrt.f64 c)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 z)) (*.f64 c (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z)) (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2))) (*.f64 (cbrt.f64 c) (cbrt.f64 (pow.f64 (*.f64 z c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2))) (*.f64 (cbrt.f64 (neg.f64 (*.f64 z c))) (cbrt.f64 (pow.f64 (*.f64 z c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (*.f64 z c))) 1) (*.f64 (cbrt.f64 (pow.f64 (*.f64 z c) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) 1) (*.f64 (cbrt.f64 (*.f64 c c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 z)) 1) (*.f64 (cbrt.f64 (*.f64 z z)) c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c))) (neg.f64 (cbrt.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (neg.f64 (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (*.f64 z c)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 z c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (*.f64 z c))) (cbrt.f64 (pow.f64 (*.f64 z c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2)) (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) (cbrt.f64 (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2)) (cbrt.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (cbrt.f64 (neg.f64 (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))) (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2))) (cbrt.f64 (pow.f64 (*.f64 z c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 z) c)) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (cbrt.f64 (pow.f64 (*.f64 z c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2))) (cbrt.f64 (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 2))) (cbrt.f64 (neg.f64 (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (pow.f64 (*.f64 z c) 2))) (cbrt.f64 (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (*.f64 z c))) 1) (cbrt.f64 (pow.f64 (*.f64 z c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) -1) (neg.f64 (*.f64 z c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (cbrt.f64 (*.f64 z c))) 1) (cbrt.f64 (pow.f64 (*.f64 z c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 (*.f64 z c))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (neg.f64 (*.f64 z c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) (*.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 0) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) (*.f64 0 (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -4 (*.f64 (*.f64 z t) a))) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -4 (*.f64 z t))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 z t)) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (*.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 -4 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 2)) (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -4 (*.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (*.f64 -4 z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a -4) (*.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (*.f64 -4 (*.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 -4 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z t) (*.f64 -4 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (*.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z t) a) -4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4 z) (*.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 9 (*.f64 x y)) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) (*.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 0) (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) (*.f64 0 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 2)) (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 x 9) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x 9)) (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 81)) y) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 9 (*.f64 x y)) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 9 y) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 9 (*.f64 x y))) (pow.f64 (cbrt.f64 (*.f64 9 (*.f64 x y))) 2) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x 9) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (*.f64 x y)) 1 (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 1 (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 (*.f64 z t))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 z t)) 2)) a) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 2)) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (*.f64 -4 z)) t (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z t) a) -4 (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z t) (*.f64 -4 a) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 -4 (*.f64 z t))) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a -4) (*.f64 z t) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -4 (*.f64 (*.f64 z t) a)) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (*.f64 z t)) a (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 -4 (*.f64 z t)) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (*.f64 (*.f64 z t) a)) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 (*.f64 -4 (*.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 z t)) 2)) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) 2)) (cbrt.f64 (*.f64 -4 (*.f64 (*.f64 z t) a))) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 (*.f64 z t) a) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 z) (*.f64 t a) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -4 (*.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 9 (*.f64 x y) (*.f64 -4 (*.f64 (*.f64 z t) a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 b (*.f64 9 (*.f64 x y))) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 9 (*.f64 x y)) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 z t) a) -4 b) (*.f64 9 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 (*.f64 z t) a)) (+.f64 b (*.f64 9 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 0) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 9 (*.f64 x y)) (*.f64 (fma.f64 (*.f64 (*.f64 z t) a) -4 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 b (*.f64 9 (*.f64 x y))) 1) (*.f64 -4 (*.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) -1) (*.f64 (neg.f64 b) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 b) -1) (*.f64 (neg.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 0 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2)) (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) (neg.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 b b)) (-.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 2)) (*.f64 (cbrt.f64 b) (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (+.f64 (cbrt.f64 b) (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 2)) (-.f64 (cbrt.f64 (*.f64 b b)) (*.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (cbrt.f64 b)))) (+.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) (cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 b b)) (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 x 9) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x 9)) (*.f64 (cbrt.f64 (*.f64 (*.f64 x x) 81)) y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 9) y (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 9 (*.f64 x y)) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 9 y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 9 (*.f64 x y))) (pow.f64 (cbrt.f64 (*.f64 9 (*.f64 x y))) 2) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x 9) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) 2)) (cbrt.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 b b)) (cbrt.f64 b) (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 b) (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))))))"]],"rules":[["egg-rr",54],["egg-rr",47],["egg-rr",33],["egg-rr",100]],"time":46.546142578125,"type":"rewrite"},{"count":[[486,261]],"inputs":[["(/.f64 (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z)))) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 b (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 b (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","b","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","b","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 -4 a) (*.f64 t z) b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 -4 a) (*.f64 t z) b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","(/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) b) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(/.f64 (*.f64 (*.f64 -4 a) t) c)","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(/.f64 (*.f64 (*.f64 -4 a) t) c)","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) b) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(/.f64 (*.f64 (*.f64 -4 a) t) c)","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(/.f64 (*.f64 (*.f64 -4 a) t) c)","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) b) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(/.f64 (*.f64 (*.f64 -4 a) t) c)","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(/.f64 (*.f64 (*.f64 -4 a) t) c)","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z)))) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x))) (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 b (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 b (*.f64 c z))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (*.f64 (*.f64 -4 a) t) c) (/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 c z)))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(/.f64 (+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)) (*.f64 c z))","(/.f64 (fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b)) (*.f64 c z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)","(fma.f64 (*.f64 -4 a) (*.f64 t z) b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b)","(fma.f64 (*.f64 -4 a) (*.f64 t z) b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 9 (*.f64 y x))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) b)","(fma.f64 (*.f64 9 y) x b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) b)","(fma.f64 (*.f64 9 y) x b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) b)","(fma.f64 (*.f64 9 y) x b)","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(*.f64 -4 (*.f64 a (*.f64 t z)))","(*.f64 (*.f64 -4 a) (*.f64 t z))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (*.f64 -4 (*.f64 a (*.f64 t z))))","(fma.f64 (*.f64 -4 a) (*.f64 t z) (*.f64 9 (*.f64 y x)))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","b","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","b","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))","(+.f64 (*.f64 9 (*.f64 y x)) (+.f64 (*.f64 -4 (*.f64 a (*.f64 t z))) b))","(fma.f64 (*.f64 9 y) x (fma.f64 (*.f64 -4 a) (*.f64 t z) b))"]],"time":851.945068359375,"type":"simplify"},{"compiler":[[6175,2576]],"time":53.684814453125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 a (*.f64 -4 z)) t)) b) (*.f64 z c))","fresh",17.264383678016973],["(/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 z c))","fresh",31.077650145592145],["(/.f64 (*.f64 (/.f64 1 z) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c)","fresh",18.997857606938563],["(/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))","fresh",48.039933202994156],["(/.f64 (/.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) (cbrt.f64 c)) (cbrt.f64 c))","fresh",19.27956040230716],["(/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) z)","fresh",15.728629198468948],["(/.f64 b (*.f64 c z))","fresh",43.5832878337885],["(*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) (/.f64 1 z))","fresh",15.755972948468944],["(*.f64 (/.f64 1 c) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z))","fresh",19.021958876475445],["(*.f64 -4 (/.f64 (*.f64 a t) c))","fresh",40.27527487515675],["(+.f64 (*.f64 b (/.f64 (/.f64 1 z) c)) (*.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) (/.f64 (/.f64 1 z) c)))","fresh",16.44103538607426],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","next",11.340263455636432],["(/.f64 (fma.f64 (*.f64 -4 a) (*.f64 t z) b) (*.f64 c z))","fresh",28.862440856435263]],"compiler":[[25,17],[17,12],[26,18],[16,12],[31,19],[24,16],[12,9],[26,18],[26,18],[14,11],[33,23],[30,19],[19,13],[25,17],[17,12],[26,18],[16,12],[31,19],[24,16],[12,9],[26,18],[26,18],[14,11],[33,23],[30,19],[19,13]],"count":[[262,13]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[261,13],"picked":[1,0]}],"min-error":[3.9261999764834123],"time":92.22802734375,"type":"prune"},{"compiler":[[98,30]],"locations":[["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))",0.21219503162065376,true],["(/.f64 b (*.f64 c z))",4.688593434769033,true],["(/.f64 (*.f64 a t) c)",7.442340618794494,true],["(/.f64 (*.f64 y x) (*.f64 c z))",8.56572468585869,true]],"time":15.80712890625,"type":"localize"},{"count":[[4,0]],"series":[["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","z","-inf",0.287109375],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","z","inf",0.248046875],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","z","0",0.251953125],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","c","-inf",0.285888671875],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","c","inf",0.218994140625],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","c","0",0.283935546875],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","x","-inf",0.27783203125],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","x","inf",0.22412109375],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","x","0",0.272216796875],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","y","-inf",0.25],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","y","inf",0.248046875],["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))","y","0",0.2490234375],["(/.f64 b (*.f64 c z))","z","-inf",0.31005859375],["(/.f64 b (*.f64 c z))","z","inf",0.327880859375],["(/.f64 b (*.f64 c z))","z","0",0.3408203125],["(/.f64 b (*.f64 c z))","c","-inf",0.27490234375],["(/.f64 b (*.f64 c z))","c","inf",0.427001953125],["(/.f64 b (*.f64 c z))","c","0",0.337890625],["(/.f64 b (*.f64 c z))","b","-inf",0.364990234375],["(/.f64 b (*.f64 c z))","b","inf",0.452880859375],["(/.f64 b (*.f64 c z))","b","0",0.387939453125],["(/.f64 (*.f64 a t) c)","c","-inf",0.26708984375],["(/.f64 (*.f64 a t) c)","c","inf",0.328857421875],["(/.f64 (*.f64 a t) c)","c","0",0.3330078125],["(/.f64 (*.f64 a t) c)","t","-inf",0.27978515625],["(/.f64 (*.f64 a t) c)","t","inf",0.34912109375],["(/.f64 (*.f64 a t) c)","t","0",0.43505859375],["(/.f64 (*.f64 a t) c)","a","-inf",0.307861328125],["(/.f64 (*.f64 a t) c)","a","inf",0.35302734375],["(/.f64 (*.f64 a t) c)","a","0",0.4580078125],["(/.f64 (*.f64 y x) (*.f64 c z))","z","-inf",0.293212890625],["(/.f64 (*.f64 y x) (*.f64 c z))","z","inf",0.47314453125],["(/.f64 (*.f64 y x) (*.f64 c z))","z","0",0.449951171875],["(/.f64 (*.f64 y x) (*.f64 c z))","c","-inf",0.32421875],["(/.f64 (*.f64 y x) (*.f64 c z))","c","inf",0.4541015625],["(/.f64 (*.f64 y x) (*.f64 c z))","c","0",0.44482421875],["(/.f64 (*.f64 y x) (*.f64 c z))","x","-inf",0.3310546875],["(/.f64 (*.f64 y x) (*.f64 c z))","x","inf",0.5],["(/.f64 (*.f64 y x) (*.f64 c z))","x","0",0.593017578125],["(/.f64 (*.f64 y x) (*.f64 c z))","y","-inf",0.422119140625],["(/.f64 (*.f64 y x) (*.f64 c z))","y","inf",0.514892578125],["(/.f64 (*.f64 y x) (*.f64 c z))","y","0",2.44384765625]],"time":17.057861328125,"type":"series"},{"count":[[4,303]],"inputs":[["(/.f64 (*.f64 y x) (*.f64 c z))","(/.f64 (*.f64 a t) c)","(/.f64 b (*.f64 c z))","(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) (*.f64 c z)) (*.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 0) (/.f64 (*.f64 y x) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y x) (*.f64 c z)) (*.f64 0 (/.f64 (*.f64 y x) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 y x) (*.f64 c z))) (/.f64 (*.f64 y x) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 y x) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 c z))) (neg.f64 (/.f64 (*.f64 y x) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 y x) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 y x) c) (cbrt.f64 z)) (/.f64 1 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y c) (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) (/.f64 y c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y x) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 y x)) (/.f64 -1 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y x)) c) (/.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y x)) z) (/.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 y x) 2) (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x c) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (*.f64 c z))) (/.f64 y (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) (/.f64 x c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (*.f64 c z))) (/.f64 x (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) (/.f64 (/.f64 1 c) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 c) z) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) c) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 c) (/.f64 (*.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 (*.f64 y x) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 c) z)) (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) z) (/.f64 1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 y x) c)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 y x) c) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) (cbrt.f64 (/.f64 (*.f64 y x) c))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y x)) c) (cbrt.f64 (pow.f64 (*.f64 y x) 2))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x c) y) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 c) (*.f64 y x)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y c) (/.f64 x (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y c) (neg.f64 x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) c)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 y x) 2) (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) c)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 y x) c) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y x) c)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 z)) (/.f64 y c)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 c z)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y x)) (neg.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y x) c)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 y x) c) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y x) (*.f64 c z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) c) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) z) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 c z))) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 (*.f64 y x) (cbrt.f64 c))) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 (*.f64 y x))) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (*.f64 y x)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) (cbrt.f64 (*.f64 y x))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) (cbrt.f64 (neg.f64 (*.f64 y x)))) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y z) x) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (*.f64 c z))) y) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y x)) z) (cbrt.f64 (pow.f64 (*.f64 y x) 2))) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x z) y) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x z) (/.f64 y (cbrt.f64 c))) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x z) (neg.f64 y)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))) (cbrt.f64 (pow.f64 (*.f64 y x) 2))) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (*.f64 c z))) x) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 c) z)) (*.f64 y x)) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 c)) (/.f64 1 z)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 y x)) (/.f64 1 z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 c)) (/.f64 (*.f64 y x) z)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 x (cbrt.f64 (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y x)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 y x) 2) (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 y x))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 y x) 2) (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2))) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 y z)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) z) 1) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 c z))) 1) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 y x) 2)) z)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 c)) (/.f64 x z)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 x z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 y (cbrt.f64 (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (*.f64 c z) 2))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 y x) z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 y x) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y x) (*.f64 c z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 y x) (*.f64 c z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (*.f64 y x) c) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 a t) c) (*.f64 (/.f64 (*.f64 a t) c) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 a t) c) 0) (/.f64 (*.f64 a t) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 a t) c) (*.f64 0 (/.f64 (*.f64 a t) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 a t) c)) (/.f64 (*.f64 a t) c))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 a t) c)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 c)) (neg.f64 (/.f64 (*.f64 a t) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a t) c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 t c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 a t) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a t) (cbrt.f64 c)) (pow.f64 (cbrt.f64 c) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a t) c) 2)) (cbrt.f64 (/.f64 (*.f64 a t) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 a t) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a t) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 a t)) (/.f64 -1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 c)) (/.f64 a (cbrt.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 a t) 2) (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a t)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 a t) 2)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 c)) (/.f64 t (cbrt.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a t) (/.f64 1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 c) (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 c)) (/.f64 (*.f64 a t) (cbrt.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a t) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 a t) (cbrt.f64 c))) (neg.f64 (cbrt.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 a t)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a t) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a t) (cbrt.f64 c)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) (cbrt.f64 (pow.f64 (*.f64 a t) 2))) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a t) c) 2)) (cbrt.f64 (*.f64 a t))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 a t) c) 2)) (cbrt.f64 (neg.f64 (*.f64 a t)))) (cbrt.f64 (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 c)) a) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 c)) (*.f64 a t)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a (cbrt.f64 c)) t) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (/.f64 t (cbrt.f64 (*.f64 c c)))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 a t)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 a t) 2) (*.f64 c c)))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 a t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a t) c) 2))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 a t))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 a t) 2) (*.f64 c c)))) (cbrt.f64 (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 a t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 a t) c) 2))) (cbrt.f64 (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a t) (cbrt.f64 (*.f64 c c))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (/.f64 a (cbrt.f64 (*.f64 c c)))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 a t) (cbrt.f64 c)) 1) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 a t) c) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 a t) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 a t) c)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 a t) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 a t) c) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 a t) c) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 b (*.f64 c z)) (*.f64 (/.f64 b (*.f64 c z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 b (*.f64 c z)) 0) (/.f64 b (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 b (*.f64 c z)) (*.f64 0 (/.f64 b (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 b (*.f64 c z))) (/.f64 b (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 b (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 c z))) (neg.f64 (/.f64 b (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 b (*.f64 c z))) (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 b (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 b c) (cbrt.f64 z)) (/.f64 1 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2)) (cbrt.f64 (/.f64 b (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 b (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 b) (/.f64 -1 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 b) c) (/.f64 (cbrt.f64 (*.f64 b b)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 b) (/.f64 (cbrt.f64 (*.f64 b b)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 b) z) (/.f64 (cbrt.f64 (*.f64 b b)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 b (*.f64 c z))) (cbrt.f64 (/.f64 (*.f64 b b) (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (/.f64 (/.f64 1 c) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 c) z) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b c) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 c) (/.f64 b z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 c) z)) (/.f64 b (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b z) (/.f64 1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 b c)) (/.f64 -1 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 b c) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 b) c) (cbrt.f64 (*.f64 b b))) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 c) b) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2)) (cbrt.f64 (/.f64 b c))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 b c) (cbrt.f64 z)) 1) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 b c)) 1) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 b c)) (cbrt.f64 (/.f64 (*.f64 b b) (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 b c)) (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 b (cbrt.f64 (*.f64 c z)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 b) (neg.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 b c)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 b c) (cbrt.f64 z))) (neg.f64 (cbrt.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 b (*.f64 c z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b c) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b z) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 c) z)) b) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 b) z) (cbrt.f64 (*.f64 b b))) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (neg.f64 b)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) b) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 z) (/.f64 b (cbrt.f64 c))) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 b (*.f64 c z))) (cbrt.f64 (*.f64 b b))) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2)) (cbrt.f64 b)) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2)) (cbrt.f64 (neg.f64 b))) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 b z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 c)) (/.f64 b z)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 b z) 1) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) 1) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 b) (/.f64 1 z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 b (cbrt.f64 c)) (/.f64 1 z)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 b) (/.f64 (cbrt.f64 (*.f64 b b)) z)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 b (cbrt.f64 (pow.f64 (*.f64 c z) 2))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 b) (cbrt.f64 (/.f64 (*.f64 b b) (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 b) (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (/.f64 (*.f64 b b) (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 b)) (cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 2))) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 b z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 b (*.f64 c z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 b (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 b (*.f64 c z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 b (*.f64 c z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 b (*.f64 c z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 b (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 b (*.f64 c z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 b (*.f64 c z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 b c) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 b (*.f64 c z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) (*.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 0) (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) (*.f64 0 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))) (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 2)) (cbrt.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 y x) (*.f64 c z)) (cbrt.f64 9)) (cbrt.f64 81))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y x) (*.f64 c z))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 -9 (*.f64 y x)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 9) (*.f64 (cbrt.f64 81) (/.f64 (*.f64 y x) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 729 (*.f64 c z))) (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 9 (*.f64 y x)) (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 9 (*.f64 y x)) z) (/.f64 1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 9 y) c) (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 9 c) (/.f64 (*.f64 y x) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 9 z) (/.f64 (*.f64 y x) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 9 (*.f64 y x)) (/.f64 (/.f64 1 c) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) (/.f64 9 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -9 (*.f64 y x)) (/.f64 -1 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 9 (*.f64 y x)) c) (/.f64 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 9)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 y x) 3) (*.f64 c z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (/.f64 (*.f64 3 (*.f64 y x)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 9 (*.f64 y x)) c) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (/.f64 (/.f64 (*.f64 y x) c) (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (neg.f64 (/.f64 (*.f64 y x) c))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 9 c) (*.f64 y x)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 9 y) c) x) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 9 y) c) (/.f64 x (cbrt.f64 z))) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 9 y) c) (neg.f64 x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y x) c)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) 9)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (/.f64 (*.f64 y x) c) (cbrt.f64 z)) 9) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y x) c)) 9) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 9 (*.f64 y x)) c) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 9 (*.f64 y x)) (cbrt.f64 (*.f64 c z)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 9 (*.f64 y x)) c)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -9 (*.f64 y x)) (neg.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 9 (*.f64 y x)) z) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 9 (*.f64 y x)) (cbrt.f64 (*.f64 c z))) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 9 z) (/.f64 (*.f64 y x) (cbrt.f64 c))) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 9 z) (neg.f64 (*.f64 y x))) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 9 z) (*.f64 y x)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 2)) (cbrt.f64 (*.f64 9 (*.f64 y x)))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (/.f64 (*.f64 y x) z)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 c z)))) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 9 (*.f64 y x)) -1) (neg.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 729 (*.f64 c z))) (*.f64 y x)) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 9 (/.f64 (*.f64 y x) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) 9)) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 y x) (*.f64 c z)) 2)) 9)) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 9 (*.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 2))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) z) 9) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 y x) (cbrt.f64 (*.f64 c z))) 9) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (*.f64 x 9) z)) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 c)) (/.f64 (*.f64 x 9) z)) (cbrt.f64 (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 (*.f64 x 9) z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -9 (*.f64 y x)) 1) (neg.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 9 (*.f64 y x)) (cbrt.f64 (*.f64 c z))) 1) (cbrt.f64 (pow.f64 (*.f64 c z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 9 (*.f64 y x)) z) 1) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y x)) (/.f64 (neg.f64 (*.f64 c z)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y x) (/.f64 (*.f64 c z) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y x) c) (/.f64 z 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 9 (*.f64 y x)) z)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 -9 (*.f64 y x)) (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -9 (*.f64 y x)) (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (/.f64 (*.f64 y x) (*.f64 c z))) 9))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 9 (neg.f64 (/.f64 (*.f64 y x) (*.f64 c z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 9 (*.f64 y x)) (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z)) 3))))))"]],"rules":[["egg-rr",82],["egg-rr",74],["egg-rr",50],["egg-rr",97]],"time":43.4150390625,"type":"rewrite"},{"count":[[303,303]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"time":30.6259765625,"type":"simplify"},{"compiler":[[8652,2927]],"time":54.425048828125,"type":"eval"},{"alts":[["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))","fresh",14.099605453523914],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) 3)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.508238565404621],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 a (*.f64 -4 z)) t)) b) (*.f64 z c))","fresh",17.264383678016973],["(+.f64 (/.f64 (/.f64 b z) c) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",13.215854788919536],["(+.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.485828543552412],["(*.f64 -4 (/.f64 (*.f64 a t) c))","fresh",40.27527487515675],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 (/.f64 1 c) (*.f64 y x)) z))))","fresh",11.953310226945282],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z))))))","fresh",12.895975338030569],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 (*.f64 a t) (/.f64 1 c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.379325955636432],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (/.f64 (*.f64 y x) c) z))))","fresh",11.940563998797494],["(+.f64 (*.f64 (neg.f64 b) (/.f64 -1 (*.f64 c z))) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.60979470563643],["(/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) z)","fresh",15.728629198468948],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","next",8.055077382605559],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 a (/.f64 t c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",10.774163183149675],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (/.f64 (/.f64 (*.f64 y x) c) (/.f64 z 9))))","fresh",11.94711896717684]],"compiler":[[30,20],[33,22],[25,17],[30,20],[38,23],[14,11],[32,22],[30,19],[32,21],[30,20],[33,22],[24,16],[30,19],[30,19],[30,20],[30,20],[33,22],[25,17],[30,20],[38,23],[14,11],[32,22],[30,19],[32,21],[30,20],[33,22],[24,16],[30,19],[30,19],[30,20]],"count":[[316,15]],"kept":[{"done":[0,0],"fresh":[12,3],"new":[303,12],"picked":[1,0]}],"min-error":[0.01171875],"time":138.090087890625,"type":"prune"},{"compiler":[[98,30]],"locations":[["(*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))",0.21219503162065376,false],["(*.f64 t (/.f64 a c))",3.6516851283677862,true],["(/.f64 b (*.f64 c z))",4.688593434769033,false],["(/.f64 (*.f64 y x) (*.f64 c z))",8.56572468585869,false]],"time":16.60400390625,"type":"localize"},{"count":[[1,36]],"series":[["(*.f64 t (/.f64 a c))","c","-inf",0.177978515625],["(*.f64 t (/.f64 a c))","c","inf",0.154052734375],["(*.f64 t (/.f64 a c))","c","0",0.169189453125],["(*.f64 t (/.f64 a c))","a","-inf",0.154052734375],["(*.f64 t (/.f64 a c))","a","inf",0.155029296875],["(*.f64 t (/.f64 a c))","a","0",0.173095703125],["(*.f64 t (/.f64 a c))","t","-inf",0.153076171875],["(*.f64 t (/.f64 a c))","t","inf",0.156005859375],["(*.f64 t (/.f64 a c))","t","0",0.218994140625]],"time":1.60693359375,"type":"series"},{"count":[[1,78]],"inputs":[["(*.f64 t (/.f64 a c))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 t a) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 t a) c) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 t a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 a c) (cbrt.f64 t)) (pow.f64 t 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 t 2/3) (*.f64 (/.f64 a c) (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t a)) (pow.f64 c 2/3)) (/.f64 (pow.f64 (*.f64 t a) 2/3) (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t a)) c) (pow.f64 (*.f64 t a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t a)) -1) (/.f64 (pow.f64 (*.f64 t a) 2/3) (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 t) (pow.f64 c 2/3)) (/.f64 (*.f64 (pow.f64 t 2/3) a) (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 t) c) (*.f64 (pow.f64 t 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 t a) c)) (pow.f64 (/.f64 (*.f64 t a) c) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 t a) c) 2/3) (cbrt.f64 (/.f64 (*.f64 t a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 (/.f64 a c))) (pow.f64 (/.f64 a c) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (pow.f64 t 2/3) (/.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 a c)) (*.f64 (pow.f64 (/.f64 a c) 2/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 t 2/3) (/.f64 a c)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 a c) 2/3) t) (cbrt.f64 (/.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 a c) 2/3) (*.f64 t (cbrt.f64 (/.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (cbrt.f64 a)) (/.f64 (pow.f64 a 2/3) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (cbrt.f64 a)) (pow.f64 c 2/3)) (/.f64 (pow.f64 a 2/3) (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 t c)) (/.f64 (*.f64 (pow.f64 t 2/3) a) (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 t c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t c) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (cbrt.f64 a)) -1) (/.f64 (neg.f64 (pow.f64 a 2/3)) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c -1/3) (/.f64 (*.f64 t a) (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t a)) (/.f64 (pow.f64 (*.f64 t a) 2/3) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 t)) (/.f64 (*.f64 (pow.f64 t 2/3) a) (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 c)) (*.f64 a (pow.f64 c -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 a c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a c) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (pow.f64 c -2/3)) (/.f64 t (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (neg.f64 (/.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 c)) (/.f64 t (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (cbrt.f64 (neg.f64 c))) (/.f64 t (neg.f64 (pow.f64 c 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (neg.f64 c))) (/.f64 a (neg.f64 (pow.f64 c 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t a) (/.f64 1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 c) (*.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 t a)) (/.f64 -1 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t a) (cbrt.f64 c)) (pow.f64 c -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (pow.f64 c 2/3)) (/.f64 a (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a) (neg.f64 (/.f64 t c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c -2/3) (/.f64 (*.f64 t a) (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 t a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 t a) c)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 t a) c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t a) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 t (cbrt.f64 a)) c) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 t a) (cbrt.f64 c)) (cbrt.f64 (pow.f64 c 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 c)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 a)) (*.f64 (pow.f64 (/.f64 a c) 2/3) t)) (cbrt.f64 (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (/.f64 (*.f64 t a) (cbrt.f64 c)) (pow.f64 (/.f64 (*.f64 t a) c) 2))) (cbrt.f64 (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 t a) c) 2) (neg.f64 (*.f64 t a)))) (cbrt.f64 (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 t a) c) 2) (/.f64 (*.f64 t a) (cbrt.f64 c)))) (cbrt.f64 (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 (*.f64 t a)) (pow.f64 (/.f64 (*.f64 t a) c) 2))) (cbrt.f64 (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 c)) a) (pow.f64 c 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 t a) c) 2/3) (cbrt.f64 (*.f64 t a))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t a) (cbrt.f64 c)) (pow.f64 c 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 a) (*.f64 (pow.f64 (/.f64 a c) 2/3) t)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (*.f64 a (pow.f64 c -2/3))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a (cbrt.f64 c)) t) (pow.f64 c 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 t a)) (pow.f64 (/.f64 (*.f64 t a) c) 2/3)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 t a) (cbrt.f64 c)) (cbrt.f64 c)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t a) (pow.f64 c 2/3)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t a) c)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 t a)) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 t a)) (cbrt.f64 c)) (neg.f64 (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 t a) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 t a) c)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) 3) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (cbrt.f64 (neg.f64 a)) (cbrt.f64 t)) 3) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (cbrt.f64 t) (cbrt.f64 (neg.f64 a))) 3) (neg.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 t a) 3) (*.f64 c c))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (*.f64 t a) (pow.f64 (/.f64 (*.f64 t a) c) 2))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 t a) c) 2) (*.f64 t a))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 t a) c) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 t a) c)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 t a) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 t a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 t a) c) 3))))))"]],"rules":[["egg-rr",78]],"time":40.98388671875,"type":"rewrite"},{"count":[[114,79]],"inputs":[["(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)","(/.f64 (*.f64 a t) c)"]],"time":135.37109375,"type":"simplify"},{"compiler":[[9462,3258]],"time":61.087890625,"type":"eval"},{"alts":[["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z))))))","fresh",9.610789264999699],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 (/.f64 1 c) (*.f64 y x)) z))))","fresh",8.65952866738531],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 (/.f64 t c) a)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",10.774163183149675],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (/.f64 (/.f64 (*.f64 y x) c) (/.f64 z 9))))","fresh",8.653337407616867],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (/.f64 (*.f64 y x) c) z))))","fresh",8.646782439237521],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (/.f64 (*.f64 t a) c)) 3)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.508238565404621],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 a (*.f64 -4 z)) t)) b) (*.f64 z c))","fresh",17.264383678016973],["(*.f64 -4 (/.f64 (*.f64 a t) c))","fresh",40.27527487515675],["(+.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","next",8.21302499005842],["(+.f64 (/.f64 (/.f64 b z) c) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",10.928215698070948],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 (*.f64 a t) (/.f64 1 c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.379325955636432],["(+.f64 (*.f64 (neg.f64 b) (/.f64 -1 (*.f64 c z))) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",8.328514882605559],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))","fresh",11.30973014396394],["(/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) z)","fresh",15.728629198468948]],"compiler":[[30,19],[32,22],[30,19],[30,20],[30,20],[33,22],[25,17],[14,11],[38,23],[30,20],[32,21],[33,22],[30,20],[24,16],[30,19],[32,22],[30,19],[30,20],[30,20],[33,22],[25,17],[14,11],[38,23],[30,20],[32,21],[33,22],[30,20],[24,16]],"count":[[347,14]],"kept":[{"done":[0,0],"fresh":[14,4],"new":[332,10],"picked":[1,0]}],"min-error":[0.01171875],"time":156.85302734375,"type":"prune"},{"compiler":[[131,40]],"locations":[["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))",0.6110221715390158,true],["(*.f64 t (/.f64 a c))",3.6516851283677862,false],["(/.f64 (*.f64 y x) (*.f64 c z))",8.56572468585869,false],["(cbrt.f64 (*.f64 c z))",10.11113441221951,true]],"time":21.01806640625,"type":"localize"},{"count":[[2,36]],"series":[["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","z","-inf",1.495849609375],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","z","inf",0.5],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","z","0",0.99609375],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","c","-inf",1.68505859375],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","c","inf",0.248046875],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","c","0",1.02099609375],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","b","-inf",0.30615234375],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","b","inf",0.551025390625],["(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))","b","0",1.35400390625],["(cbrt.f64 (*.f64 c z))","z","-inf",0.3388671875],["(cbrt.f64 (*.f64 c z))","z","inf",0.3330078125],["(cbrt.f64 (*.f64 c z))","z","0",0.306884765625],["(cbrt.f64 (*.f64 c z))","c","-inf",0.575927734375],["(cbrt.f64 (*.f64 c z))","c","inf",0.326171875],["(cbrt.f64 (*.f64 c z))","c","0",0.515869140625]],"time":10.741943359375,"type":"series"},{"count":[[2,103]],"inputs":[["(cbrt.f64 (*.f64 c z))","(*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 c z)) (*.f64 (cbrt.f64 (*.f64 c z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (*.f64 c z)) 0) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (*.f64 c z)) (*.f64 0 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (*.f64 c z))) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 c z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 c)) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (cbrt.f64 z))) (cbrt.f64 (pow.f64 z 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z (cbrt.f64 c))) (cbrt.f64 (pow.f64 c 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 z)) (cbrt.f64 (*.f64 (pow.f64 z 2/3) c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z))) 4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 c)) (cbrt.f64 (*.f64 (cbrt.f64 z) (pow.f64 (*.f64 c z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 c)) (cbrt.f64 (*.f64 (pow.f64 c 2/3) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z))) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (*.f64 c z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c z) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 c z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) (*.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 0) (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) (*.f64 0 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))) (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (/.f64 b (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 b (cbrt.f64 (*.f64 c z)))) (*.f64 (pow.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) 2/3) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (cbrt.f64 c)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 b (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 c z) 2/3) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 (/.f64 b (cbrt.f64 (*.f64 c z))))) (pow.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (pow.f64 (*.f64 c z) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 c z) 2/3) -2)) b) (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 z)) (/.f64 b (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) 2/3) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (/.f64 b (cbrt.f64 (*.f64 c z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 c z) 2/3) -2)) (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3))) (/.f64 b (cbrt.f64 (cbrt.f64 (*.f64 c z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) 2/3) (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 (/.f64 b (cbrt.f64 (*.f64 c z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c z) -1/3) (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 c z) 2/3) -2)) b) (cbrt.f64 (*.f64 c z))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (neg.f64 b)) (neg.f64 (pow.f64 (*.f64 c z) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 c)) (pow.f64 z -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (/.f64 b (cbrt.f64 c))) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 b (cbrt.f64 c)) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 c)) 1) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (/.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 z))) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 c)) (cbrt.f64 (cbrt.f64 z))) (cbrt.f64 (pow.f64 z 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 c)) 1) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 c)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (neg.f64 b)) (cbrt.f64 c)) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 z)) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 c))) (cbrt.f64 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (*.f64 c z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (neg.f64 b)) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 b (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)))) (cbrt.f64 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (/.f64 b (cbrt.f64 (cbrt.f64 (*.f64 c z))))) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) -1) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 b)) (*.f64 (pow.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) 2/3) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))) (neg.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 b) (*.f64 (pow.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) 2/3) (pow.f64 (cbrt.f64 (*.f64 c z)) -2))) (cbrt.f64 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2))) (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b (/.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))) (cbrt.f64 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (neg.f64 b)) 1) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) 1) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (neg.f64 b)) 1) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (neg.f64 b)) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c z))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) (cbrt.f64 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (cbrt.f64 (*.f64 c z)))) 1) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) -1) (cbrt.f64 (neg.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (pow.f64 (*.f64 c z) 2/3))) (cbrt.f64 (cbrt.f64 (*.f64 c z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (cbrt.f64 (*.f64 c z))))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 c z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 b (cbrt.f64 (neg.f64 (*.f64 c z)))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 c z)) -2) (/.f64 b (cbrt.f64 (neg.f64 (*.f64 c z))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (cbrt.f64 (neg.f64 (*.f64 c z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 b (pow.f64 (cbrt.f64 (*.f64 c z)) (+.f64 -1 -2))) 3))))))"]],"rules":[["egg-rr",73],["egg-rr",30]],"time":27.341064453125,"type":"rewrite"},{"count":[[139,104]],"inputs":[["(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))"]],"method":["egg-herbie"],"outputs":[["(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))","(/.f64 b (*.f64 c z))"]],"time":138.612060546875,"type":"simplify"},{"compiler":[[11284,4045]],"time":71.95703125,"type":"eval"},{"alts":[["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z))))))","fresh",9.610789264999699],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 (/.f64 1 c) (*.f64 y x)) z))))","fresh",8.65952866738531],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 (/.f64 t c) a)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",10.774163183149675],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (/.f64 (/.f64 (*.f64 y x) c) (/.f64 z 9))))","fresh",8.653337407616867],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (/.f64 (*.f64 y x) c) z))))","fresh",8.646782439237521],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (/.f64 (*.f64 t a) c)) 3)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.508238565404621],["(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 a (*.f64 -4 z)) t)) b) (*.f64 z c))","fresh",17.264383678016973],["(*.f64 -4 (/.f64 (*.f64 a t) c))","fresh",40.27527487515675],["(+.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","done",8.21302499005842],["(+.f64 (/.f64 (/.f64 b z) c) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",10.928215698070948],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 (*.f64 a t) (/.f64 1 c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",11.379325955636432],["(+.f64 (*.f64 (neg.f64 b) (/.f64 -1 (*.f64 c z))) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","fresh",8.328514882605559],["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))","fresh",11.30973014396394],["(/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) z)","fresh",15.728629198468948]],"compiler":[[30,19],[32,22],[30,19],[30,20],[30,20],[33,22],[25,17],[14,11],[38,23],[30,20],[32,21],[33,22],[30,20],[24,16]],"count":[[324,14]],"kept":[{"done":[0,0],"fresh":[13,13],"new":[310,0],"picked":[1,1]}],"min-error":[0.01171875],"time":116.2998046875,"type":"prune"},{"accuracy":[2.5350111802527673],"baseline":[8.055077382605559],"branch":[["x",8.05507738260556,1],["y",5.521950172725982,5],["z",4.921948689807585,3],["t",6.299588634486398,3],["a",6.449352102317214,3],["b",8.05507738260556,1],["c",4.980733526231812,3],["(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))",2.5350111802527673,5],["(*.f64 (*.f64 x 9) y)",5.176514929056164,4],["(*.f64 (*.f64 x 9) y)",5.176514929056164,4],["(*.f64 x 9)",8.05507738260556,1],["(*.f64 x 9)",8.05507738260556,1]],"compiler":[[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[8,7],[26,18],[12,10],[12,10],[10,9],[10,9],[792,301]],"count":[[37,5]],"inputs":[["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z))))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 (/.f64 1 c) (*.f64 y x)) z))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 (/.f64 t c) a)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (/.f64 (/.f64 (*.f64 y x) c) (/.f64 z 9))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (/.f64 (*.f64 y x) c) z))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (/.f64 (*.f64 t a) c)) 3)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (/.f64 b z) c) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (*.f64 (neg.f64 b) (/.f64 -1 (*.f64 c z))) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (/.f64 (*.f64 a t) c)) 3)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 (/.f64 b z) c) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (*.f64 (/.f64 b (cbrt.f64 (*.f64 c z))) (pow.f64 (cbrt.f64 (*.f64 c z)) -2)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 (/.f64 1 c) (*.f64 y x)) z))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z))))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 (*.f64 a t) (/.f64 1 c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (/.f64 (*.f64 y x) c) z))))","(+.f64 (*.f64 (neg.f64 b) (/.f64 -1 (*.f64 c z))) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 a (/.f64 t c))) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (/.f64 (/.f64 (*.f64 y x) c) (/.f64 z 9))))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 a (*.f64 -4 z)) t)) b) (*.f64 z c))","(/.f64 (fma.f64 (*.f64 9 y) x b) (*.f64 z c))","(/.f64 (*.f64 (/.f64 1 z) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c)","(/.f64 (*.f64 9 (*.f64 y x)) (*.f64 c z))","(/.f64 (/.f64 (/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z) (cbrt.f64 c)) (cbrt.f64 c)) (cbrt.f64 c))","(/.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) z)","(/.f64 b (*.f64 c z))","(*.f64 (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) c) (/.f64 1 z))","(*.f64 (/.f64 1 c) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) z))","(*.f64 -4 (/.f64 (*.f64 a t) c))","(+.f64 (*.f64 b (/.f64 (/.f64 1 z) c)) (*.f64 (fma.f64 (*.f64 x 9) y (*.f64 -4 (*.f64 (*.f64 z t) a))) (/.f64 (/.f64 1 z) c)))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (/.f64 (*.f64 a t) c)) (*.f64 9 (/.f64 (*.f64 y x) (*.f64 c z)))))","(/.f64 (fma.f64 (*.f64 -4 a) (*.f64 t z) b) (*.f64 c z))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))"]],"link":["."],"name":["Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, J"],"oracle":[61.05115857461713],"outputs":[["(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z))))))","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","(/.f64 (*.f64 (/.f64 1 z) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c)","(/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c))","(+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))"]],"time":321.4580078125,"times":[["x",10.281005859375],["y",46.31787109375],["z",27.964111328125],["t",29.1259765625],["a",28.6240234375],["b",10.261962890625],["c",28.64697265625],["(/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c))",38.358154296875],["(*.f64 (*.f64 x 9) y)",32.0],["(*.f64 (*.f64 x 9) y)",35.301025390625],["(*.f64 x 9)",10.30908203125],["(*.f64 x 9)",10.486083984375]],"type":"regimes"},{"bstep":[[5.8834681545817966e+302,{"type":"real","value":"+inf"},0.02783203125],[1.576629086820567e-191,1.7649300634744895e-191,0.033935546875],[-1.2970801436743146e-267,0.0,0.0888671875],[{"type":"real","value":"-inf"},-2.076979839974774e+307,0.030029296875]],"compiler":[[10,9],[26,18]],"method":["left-value","left-value","left-value","left-value"],"time":0.635986328125,"type":"bsearch"},{"compiler":[[196,108]],"inputs":[["(if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) -inf.0) (+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z)))))) (if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) -290432989937067/290432989937067004452746581669902453150636758136600480284330441272644659601641479208040686425030537224570063240272065048916911180770489396052896597871561450348236492274894506629430939420761276732468592926240515079310107169312085954718183386786847281838290059659012482973391669690368) (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c)) (if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) 2568425733177917/160526608323619796973907161953128926560984491052953303817696560762595585763460718448293046151049452246917204860112860647980329353338128780002679894123897731016699941135511614935048332454965903237038978629632) (/.f64 (*.f64 (/.f64 1 z) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c) (if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) 1000000000000000000161765076786456438212668646231659438295495017101117499225738747865260243034213915253779773568180337416027445820567779199643391541606026068611150746122284976177256650044200527276807327067690462112661427500197051226489898260678763391449376088547292320814127957486330655468919122263277568) (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c)) (+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) -inf.0) (+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 9 (*.f64 y (/.f64 x (*.f64 c z)))))) (if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) -290432989937067/290432989937067004452746581669902453150636758136600480284330441272644659601641479208040686425030537224570063240272065048916911180770489396052896597871561450348236492274894506629430939420761276732468592926240515079310107169312085954718183386786847281838290059659012482973391669690368) (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c)) (if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) 2568425733177917/160526608323619796973907161953128926560984491052953303817696560762595585763460718448293046151049452246917204860112860647980329353338128780002679894123897731016699941135511614935048332454965903237038978629632) (/.f64 (*.f64 (/.f64 1 z) (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b))) c) (if (<=.f64 (/.f64 (+.f64 (-.f64 (*.f64 (*.f64 x 9) y) (*.f64 (*.f64 (*.f64 z 4) t) a)) b) (*.f64 z c)) 1000000000000000000161765076786456438212668646231659438295495017101117499225738747865260243034213915253779773568180337416027445820567779199643391541606026068611150746122284976177256650044200527276807327067690462112661427500197051226489898260678763391449376088547292320814127957486330655468919122263277568) (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (*.f64 (*.f64 -4 (*.f64 z t)) a)) b) (*.f64 z c)) (+.f64 (/.f64 b (*.f64 c z)) (+.f64 (*.f64 -4 (*.f64 t (/.f64 a c))) (*.f64 (/.f64 y c) (/.f64 (*.f64 x 9) z))))))))","(if (<=.f64 (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 4 (*.f64 (*.f64 z t) a)))) b) (*.f64 z c)) -inf.0) (+.f64 (/.f64 b (*.f64 z c)) (fma.f64 (*.f64 9 y) (/.f64 x (*.f64 z c)) (/.f64 (*.f64 -4 (*.f64 t a)) c))) (if (<=.f64 (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 4 (*.f64 (*.f64 z t) a)))) b) (*.f64 z c)) -290432989937067/290432989937067004452746581669902453150636758136600480284330441272644659601641479208040686425030537224570063240272065048916911180770489396052896597871561450348236492274894506629430939420761276732468592926240515079310107169312085954718183386786847281838290059659012482973391669690368) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) (if (<=.f64 (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 4 (*.f64 (*.f64 z t) a)))) b) (*.f64 z c)) 2568425733177917/160526608323619796973907161953128926560984491052953303817696560762595585763460718448293046151049452246917204860112860647980329353338128780002679894123897731016699941135511614935048332454965903237038978629632) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) (if (<=.f64 (/.f64 (+.f64 (fma.f64 (*.f64 x 9) y (neg.f64 (*.f64 4 (*.f64 (*.f64 z t) a)))) b) (*.f64 z c)) 1000000000000000000161765076786456438212668646231659438295495017101117499225738747865260243034213915253779773568180337416027445820567779199643391541606026068611150746122284976177256650044200527276807327067690462112661427500197051226489898260678763391449376088547292320814127957486330655468919122263277568) (/.f64 (fma.f64 9 (*.f64 x y) (fma.f64 (*.f64 (*.f64 z t) a) -4 b)) (*.f64 z c)) (+.f64 (/.f64 b (*.f64 z c)) (fma.f64 (*.f64 9 y) (/.f64 x (*.f64 z c)) (/.f64 (*.f64 -4 (*.f64 t a)) c)))))))"]],"stop":[["fuel",1]],"time":19.503173828125,"type":"simplify"},{"time":0.02685546875,"type":"soundness"},{"compiler":[[196,108]],"remove-preprocessing":[[]],"time":39.783203125,"type":"end"}]